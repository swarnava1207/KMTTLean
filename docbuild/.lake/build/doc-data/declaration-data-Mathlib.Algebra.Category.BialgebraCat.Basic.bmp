{"name":"Mathlib.Algebra.Category.BialgebraCat.Basic","instances":[{"typeNames":["BialgebraCat","_builtin_typeu"],"name":"BialgebraCat.instCoeSortType","className":"CoeSort"},{"typeNames":["BialgebraCat"],"name":"BialgebraCat.category","className":"CategoryTheory.Category"},{"typeNames":["BialgebraCat"],"name":"BialgebraCat.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["BialgebraCat"],"name":"BialgebraCat.hasForget","className":"CategoryTheory.HasForget"},{"typeNames":["BialgebraCat","AlgebraCat"],"name":"BialgebraCat.hasForgetToAlgebra","className":"CategoryTheory.HasForget₂"},{"typeNames":["BialgebraCat","CoalgebraCat"],"name":"BialgebraCat.hasForgetToCoalgebra","className":"CategoryTheory.HasForget₂"},{"typeNames":["CategoryTheory.forget"],"name":"BialgebraCat.forget_reflects_isos","className":"CategoryTheory.Functor.ReflectsIsomorphisms"}],"imports":["Init","Mathlib.Algebra.Category.CoalgebraCat.Basic","Mathlib.Algebra.Category.AlgebraCat.Basic","Mathlib.RingTheory.Bialgebra.Equiv"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L202-L207","name":"BialgebraCat.forget_reflects_isos","line":202,"kind":"instance","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.forget_reflects_isos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.forget_reflects_isos\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">forget_reflects_isos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/ReflectsIso/Basic.html#CategoryTheory.Functor.ReflectsIsomorphisms\">ReflectsIsomorphisms</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L196-L198","name":"CategoryTheory.Iso.toBialgEquiv_trans","line":196,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv_trans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Iso</span>.<span class=\"name\">toBialgEquiv_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">e</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.trans\">≪≫</a> <span class=\"fn\">f</span>).<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv\">toBialgEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv\">toBialgEquiv</a></span>.<a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv.trans\">trans</a></span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv\">toBialgEquiv</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L192-L194","name":"CategoryTheory.Iso.toBialgEquiv_symm","line":192,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv_symm\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Iso</span>.<span class=\"name\">toBialgEquiv_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.symm\">symm</a></span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv\">toBialgEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv\">toBialgEquiv</a></span>.<a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv.symm\">symm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L189-L190","name":"CategoryTheory.Iso.toBialgEquiv_refl","line":189,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv_refl\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Iso</span>.<span class=\"name\">toBialgEquiv_refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">refl</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv\">toBialgEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv.refl\">BialgEquiv.refl</a> <span class=\"fn\">R</span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L186-L187","name":"CategoryTheory.Iso.toBialgEquiv_toBialgHom","line":186,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv_toBialgHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv_toBialgHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Iso</span>.<span class=\"name\">toBialgEquiv_toBialgHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv\">toBialgEquiv</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom'\">toBialgHom'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L178-L184","name":"CategoryTheory.Iso.toBialgEquiv","line":178,"kind":"def","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv","doc":"Build a `BialgEquiv` from an isomorphism in the category\n`BialgebraCat R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#CategoryTheory.Iso.toBialgEquiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Iso</span>.<span class=\"name\">toBialgEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L166-L168","name":"BialgEquiv.toBialgebraCatIso_trans","line":166,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso_trans\"><span class=\"name\">BialgEquiv</span>.<span class=\"name\">toBialgebraCatIso_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv.trans\">trans</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso\">toBialgebraCatIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso\">toBialgebraCatIso</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.trans\">≪≫</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso\">toBialgebraCatIso</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L162-L164","name":"BialgEquiv.toBialgebraCatIso_symm","line":162,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso_symm\"><span class=\"name\">BialgEquiv</span>.<span class=\"name\">toBialgebraCatIso_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv.symm\">symm</a></span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso\">toBialgebraCatIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso\">toBialgebraCatIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.symm\">symm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L159-L160","name":"BialgEquiv.toBialgebraCatIso_refl","line":159,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso_refl\"><span class=\"name\">BialgEquiv</span>.<span class=\"name\">toBialgebraCatIso_refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv.refl\">refl</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso\">toBialgebraCatIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">CategoryTheory.Iso.refl</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of\">BialgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L152-L152","name":"BialgEquiv.toBialgebraCatIso_inv","line":152,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso_inv\"><span class=\"name\">BialgEquiv</span>.<span class=\"name\">toBialgebraCatIso_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso\">toBialgebraCatIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.ofHom\">BialgebraCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv.symm\">symm</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L152-L152","name":"BialgEquiv.toBialgebraCatIso_hom","line":152,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso_hom\"><span class=\"name\">BialgEquiv</span>.<span class=\"name\">toBialgebraCatIso_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso\">toBialgebraCatIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.ofHom\">BialgebraCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">e</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L150-L157","name":"BialgEquiv.toBialgebraCatIso","line":150,"kind":"def","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso","doc":"Build an isomorphism in the category `BialgebraCat R` from a\n`BialgEquiv`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgEquiv.toBialgebraCatIso\"><span class=\"name\">BialgEquiv</span>.<span class=\"name\">toBialgebraCatIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">≃ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Equiv.html#BialgEquiv\">]</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of\">BialgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of\">BialgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L135-L138","name":"BialgebraCat.forget₂_coalgebra_map","line":135,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.forget₂_coalgebra_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.forget₂_coalgebra_map\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">forget₂_coalgebra_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/CoalgebraCat/Basic.html#CoalgebraCat\">CoalgebraCat</a> <span class=\"fn\">R</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/CoalgebraCat/Basic.html#CoalgebraCat.ofHom\">CoalgebraCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom\">Hom.toBialgHom</a> <span class=\"fn\">f</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L130-L133","name":"BialgebraCat.forget₂_coalgebra_obj","line":130,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.forget₂_coalgebra_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.forget₂_coalgebra_obj\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">forget₂_coalgebra_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/CoalgebraCat/Basic.html#CoalgebraCat\">CoalgebraCat</a> <span class=\"fn\">R</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/CoalgebraCat/Basic.html#CoalgebraCat.of\">CoalgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L125-L128","name":"BialgebraCat.hasForgetToCoalgebra","line":125,"kind":"instance","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.hasForgetToCoalgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.hasForgetToCoalgebra\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">hasForgetToCoalgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/CoalgebraCat/Basic.html#CoalgebraCat\">CoalgebraCat</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L120-L123","name":"BialgebraCat.forget₂_algebra_map","line":120,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.forget₂_algebra_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.forget₂_algebra_map\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">forget₂_algebra_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/AlgebraCat/Basic.html#AlgebraCat\">AlgebraCat</a> <span class=\"fn\">R</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/AlgebraCat/Basic.html#AlgebraCat.ofHom\">AlgebraCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom\">Hom.toBialgHom</a> <span class=\"fn\">f</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L115-L118","name":"BialgebraCat.forget₂_algebra_obj","line":115,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.forget₂_algebra_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.forget₂_algebra_obj\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">forget₂_algebra_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/AlgebraCat/Basic.html#AlgebraCat\">AlgebraCat</a> <span class=\"fn\">R</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/AlgebraCat/Basic.html#AlgebraCat.of\">AlgebraCat.of</a> <span class=\"fn\">R</span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L110-L113","name":"BialgebraCat.hasForgetToAlgebra","line":110,"kind":"instance","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.hasForgetToAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.hasForgetToAlgebra\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">hasForgetToAlgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/AlgebraCat/Basic.html#AlgebraCat\">AlgebraCat</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L103-L108","name":"BialgebraCat.hasForget","line":103,"kind":"instance","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.hasForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.hasForget\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">hasForget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget\">CategoryTheory.HasForget</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L99-L101","name":"BialgebraCat.toBialgHom_id","line":99,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.toBialgHom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.toBialgHom_id\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">toBialgHom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom\">Hom.toBialgHom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">M</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom.id\">BialgHom.id</a> <span class=\"fn\">R</span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L95-L97","name":"BialgebraCat.toBialgHom_comp","line":95,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.toBialgHom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.toBialgHom_comp\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">toBialgHom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom\">Hom.toBialgHom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom\">Hom.toBialgHom</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom\">Hom.toBialgHom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L90-L90","name":"BialgebraCat.hom_ext_iff","line":90,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.hom_ext_iff\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom\">Hom.toBialgHom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom\">Hom.toBialgHom</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L90-L93","name":"BialgebraCat.hom_ext","line":90,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.hom_ext\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom\">Hom.toBialgHom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom\">Hom.toBialgHom</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L85-L87","name":"BialgebraCat.Hom.toBialgHom_injective","line":85,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom_injective\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">toBialgHom_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V </span><span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom\">toBialgHom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L79-L83","name":"BialgebraCat.ofHom","line":79,"kind":"def","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.ofHom","doc":"Typecheck a `BialgHom` as a morphism in `BialgebraCat R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.ofHom\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">→ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">]</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of\">of</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of\">of</a> <span class=\"fn\">R</span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L75-L77","name":"BialgebraCat.Hom.toBialgHom","line":75,"kind":"def","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom","doc":"Turn a morphism in `BialgebraCat` back into a `BialgHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">toBialgHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span> <a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">→ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">]</a> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L71-L73","name":"BialgebraCat.concreteCategory","line":71,"kind":"instance","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.concreteCategory\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span> <a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">→ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">]</a> <span class=\"fn\"><span class=\"fn\">x2</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L66-L69","name":"BialgebraCat.category","line":66,"kind":"instance","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.category","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.category\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">category</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, max (v + 1) u}</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L64-L64","name":"BialgebraCat.Hom.toBialgHom'","line":64,"kind":"def","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom'","doc":"The underlying `BialgHom` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom'\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">toBialgHom'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V </span><span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom\">Hom</a></span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span> <a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">→ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">]</a> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L62-L62","name":"BialgebraCat.Hom.mk","line":62,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.mk\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V </span><span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toBialgHom'</span> : <span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span> <a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">→ₐc[</a><span class=\"fn\">R</span><a href=\"./Mathlib/RingTheory/Bialgebra/Hom.html#BialgHom\">]</a> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom\">Hom</a></span> <span class=\"fn\">W</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L61-L61","name":"BialgebraCat.Hom.ext","line":61,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.ext\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V </span><span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom\">Hom</a></span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toBialgHom'</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom'\">toBialgHom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom'\">toBialgHom'</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L61-L61","name":"BialgebraCat.Hom.ext_iff","line":61,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.ext_iff\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V </span><span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom\">Hom</a></span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom'\">toBialgHom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom.toBialgHom'\">toBialgHom'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L59-L64","name":"BialgebraCat.Hom","line":59,"kind":"structure","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom","doc":"A type alias for `BialgHom` to avoid confusion between the categorical and\nalgebraic spellings of composition. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.Hom\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V </span><span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L55-L57","name":"BialgebraCat.of_counit","line":55,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of_counit\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">of_counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/RingTheory/Coalgebra/Basic.html#CoalgebraStruct.counit\">CoalgebraStruct.counit</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/RingTheory/Coalgebra/Basic.html#CoalgebraStruct.counit\">CoalgebraStruct.counit</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L51-L53","name":"BialgebraCat.of_comul","line":51,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of_comul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of_comul\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">of_comul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/RingTheory/Coalgebra/Basic.html#CoalgebraStruct.comul\">CoalgebraStruct.comul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/RingTheory/Coalgebra/Basic.html#CoalgebraStruct.comul\">CoalgebraStruct.comul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L46-L46","name":"BialgebraCat.of_instBialgebra","line":46,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of_instBialgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of_instBialgebra\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">of_instBialgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of\">of</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.instBialgebra\">instBialgebra</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst✝</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L46-L46","name":"BialgebraCat.of_instRing","line":46,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of_instRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of_instRing\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">of_instRing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of\">of</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.instRing\">instRing</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst✝</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L46-L46","name":"BialgebraCat.of_carrier","line":46,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of_carrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of_carrier\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">of_carrier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of\">of</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L45-L49","name":"BialgebraCat.of","line":45,"kind":"def","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of","doc":"The object in the category of `R`-bialgebras associated to an `R`-bialgebra. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.of\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L41-L42","name":"BialgebraCat.instCoeSortType","line":41,"kind":"instance","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.instCoeSortType\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span>)</span> <a href=\"./foundational_types.html\">(Type</a> v)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L31-L31","name":"BialgebraCat.instBialgebra","line":31,"kind":"def","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.instBialgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.instBialgebra\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">instBialgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L30-L30","name":"BialgebraCat.instRing","line":30,"kind":"def","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.instRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.instRing\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">instRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L29-L29","name":"BialgebraCat.carrier","line":29,"kind":"def","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier","doc":"The underlying type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.carrier\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">carrier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L27-L27","name":"BialgebraCat.mk","line":27,"kind":"ctor","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat.mk\"><span class=\"name\">BialgebraCat</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">carrier</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">instRing</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">carrier</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">instBialgebra</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Bialgebra/Basic.html#Bialgebra\">Bialgebra</a> <span class=\"fn\">R</span> <span class=\"fn\">carrier</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\">BialgebraCat</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/BialgebraCat/Basic.lean#L26-L31","name":"BialgebraCat","line":26,"kind":"structure","docLink":"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat","doc":"The category of `R`-bialgebras. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/BialgebraCat/Basic.html#BialgebraCat\"><span class=\"name\">BialgebraCat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u (v + 1))</div></div>"}]}