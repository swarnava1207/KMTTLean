{"name":"Mathlib.Topology.Category.Compactum","instances":[{"typeNames":["Compactum"],"name":"instCompactumCategory","className":"CategoryTheory.Category"},{"typeNames":["Compactum"],"name":"instCompactumInhabited","className":"Inhabited"},{"typeNames":["Compactum.forget"],"name":"Compactum.instFaithfulForget","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["Compactum.forget"],"name":"Compactum.instCreatesLimitsForget","className":"CategoryTheory.CreatesLimitsOfSize"},{"typeNames":["Compactum","_builtin_typeu"],"name":"Compactum.instCoeSortType","className":"CoeSort"},{"typeNames":["Quiver.Hom","CategoryTheory.Monad.Algebra.A","CategoryTheory.Monad.Algebra.A"],"name":"Compactum.instFunLikeHomA","className":"DFunLike"},{"typeNames":["Compactum"],"name":"Compactum.instConcreteCategoryHomA","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["Compactum"],"name":"Compactum.instHasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["CategoryTheory.Monad.Algebra.A"],"name":"Compactum.instTopologicalSpaceA","className":"TopologicalSpace"},{"typeNames":["CategoryTheory.Monad.Algebra.A"],"name":"Compactum.instCompactSpaceA","className":"CompactSpace"},{"typeNames":["CategoryTheory.Monad.Algebra.A"],"name":"Compactum.instT2SpaceA","className":"T2Space"},{"typeNames":["compactumToCompHaus"],"name":"compactumToCompHaus.full","className":"CategoryTheory.Functor.Full"},{"typeNames":["compactumToCompHaus"],"name":"compactumToCompHaus.faithful","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["compactumToCompHaus"],"name":"compactumToCompHaus.essSurj","className":"CategoryTheory.Functor.EssSurj"},{"typeNames":["compactumToCompHaus"],"name":"compactumToCompHaus.isEquivalence","className":"CategoryTheory.Functor.IsEquivalence"},{"typeNames":["CategoryTheory.forget"],"name":"CompHaus.forgetCreatesLimits","className":"CategoryTheory.CreatesLimitsOfSize"},{"typeNames":["CategoryTheory.forget"],"name":"Profinite.forgetCreatesLimits","className":"CategoryTheory.CreatesLimitsOfSize"}],"imports":["Init","Mathlib.CategoryTheory.Monad.Types","Mathlib.CategoryTheory.Monad.Limits","Mathlib.CategoryTheory.Equivalence","Mathlib.Topology.Category.CompHaus.Basic","Mathlib.Topology.Category.Profinite.Basic","Mathlib.Data.Set.Constructions"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L477-L479","name":"Profinite.forgetCreatesLimits","line":477,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Profinite.forgetCreatesLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Profinite.forgetCreatesLimits\"><span class=\"name\">Profinite</span>.<span class=\"name\">forgetCreatesLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimits\">CategoryTheory.CreatesLimits</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L469-L475","name":"CompHaus.forgetCreatesLimits","line":469,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#CompHaus.forgetCreatesLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#CompHaus.forgetCreatesLimits\"><span class=\"name\">CompHaus</span>.<span class=\"name\">forgetCreatesLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimits\">CategoryTheory.CreatesLimits</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L456-L460","name":"compactumToCompHausCompForget","line":456,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHausCompForget","doc":"The forgetful functors of `Compactum` and `CompHaus` are compatible via\n`compactumToCompHaus`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHausCompForget\"><span class=\"name\">compactumToCompHausCompForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\">compactumToCompHaus</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.forget\">Compactum.forget</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L451-L452","name":"compactumToCompHaus.isEquivalence","line":451,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.isEquivalence","doc":"The functor `compactumToCompHaus` is an equivalence of categories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.isEquivalence\"><span class=\"name\">compactumToCompHaus</span>.<span class=\"name\">isEquivalence</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\">compactumToCompHaus</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Functor.IsEquivalence\">IsEquivalence</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L447-L449","name":"compactumToCompHaus.essSurj","line":447,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.essSurj","doc":"The functor `compactumToCompHaus` is essentially surjective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.essSurj\"><span class=\"name\">compactumToCompHaus</span>.<span class=\"name\">essSurj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\">compactumToCompHaus</a>.<a href=\"./Mathlib/CategoryTheory/EssentialImage.html#CategoryTheory.Functor.EssSurj\">EssSurj</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L430-L445","name":"compactumToCompHaus.isoOfTopologicalSpace","line":430,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.isoOfTopologicalSpace","doc":"This definition is used to prove essential surjectivity of `compactumToCompHaus`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.isoOfTopologicalSpace\"><span class=\"name\">compactumToCompHaus</span>.<span class=\"name\">isoOfTopologicalSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\">compactumToCompHaus</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.ofTopologicalSpace\">Compactum.ofTopologicalSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">D</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">D</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L421-L428","name":"compactumToCompHaus.faithful","line":421,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.faithful","doc":"The functor `compactumToCompHaus` is faithful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.faithful\"><span class=\"name\">compactumToCompHaus</span>.<span class=\"name\">faithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\">compactumToCompHaus</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L417-L419","name":"compactumToCompHaus.full","line":417,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.full","doc":"The functor `compactumToCompHaus` is full. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus.full\"><span class=\"name\">compactumToCompHaus</span>.<span class=\"name\">full</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\">compactumToCompHaus</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L408-L413","name":"compactumToCompHaus","line":408,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus","doc":"The functor functor from Compactum to CompHaus. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#compactumToCompHaus\"><span class=\"name\">compactumToCompHaus</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L396-L404","name":"Compactum.homOfContinuous","line":396,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.homOfContinuous","doc":"Any continuous map between Compacta is a morphism of compacta. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.homOfContinuous\"><span class=\"name\">Compactum</span>.<span class=\"name\">homOfContinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span> → <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cont</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L366-L394","name":"Compactum.ofTopologicalSpace","line":366,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.ofTopologicalSpace","doc":"Given any compact Hausdorff space, we construct a Compactum. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.ofTopologicalSpace\"><span class=\"name\">Compactum</span>.<span class=\"name\">ofTopologicalSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L357-L364","name":"Compactum.continuous_of_hom","line":357,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.continuous_of_hom","doc":"Any morphism of compacta is continuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.continuous_of_hom\"><span class=\"name\">Compactum</span>.<span class=\"name\">continuous_of_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L348-L355","name":"Compactum.cl_eq_closure","line":348,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.cl_eq_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.cl_eq_closure\"><span class=\"name\">Compactum</span>.<span class=\"name\">cl_eq_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#_private.Mathlib.Topology.Category.Compactum.0.Compactum.cl\">Compactum.cl✝</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L343-L346","name":"Compactum.lim_eq_str","line":343,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.lim_eq_str","doc":"The structure map of a compactum actually computes limits. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.lim_eq_str\"><span class=\"name\">Compactum</span>.<span class=\"name\">lim_eq_str</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Defs/Ultrafilter.html#Ultrafilter.lim\">lim</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">str</a></span> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L338-L341","name":"Compactum.instT2SpaceA","line":338,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instT2SpaceA","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instT2SpaceA\"><span class=\"name\">Compactum</span>.<span class=\"name\">instT2SpaceA</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L334-L335","name":"Compactum.le_nhds_of_str_eq","line":334,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.le_nhds_of_str_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.le_nhds_of_str_eq\"><span class=\"name\">Compactum</span>.<span class=\"name\">le_nhds_of_str_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">str</a></span> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> → <span class=\"fn\">↑<span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L264-L332","name":"Compactum.str_eq_of_le_nhds","line":264,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.str_eq_of_le_nhds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str_eq_of_le_nhds\"><span class=\"name\">Compactum</span>.<span class=\"name\">str_eq_of_le_nhds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">str</a></span> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L259-L262","name":"Compactum.isClosed_cl","line":259,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.isClosed_cl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.isClosed_cl\"><span class=\"name\">Compactum</span>.<span class=\"name\">isClosed_cl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/Compactum.html#_private.Mathlib.Topology.Category.Compactum.0.Compactum.cl\">Compactum.cl✝</a> <span class=\"fn\">A</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L171-L178","name":"Compactum.instCompactSpaceA","line":171,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instCompactSpaceA","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instCompactSpaceA\"><span class=\"name\">Compactum</span>.<span class=\"name\">instCompactSpaceA</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L157-L169","name":"Compactum.isClosed_iff","line":157,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.isClosed_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.isClosed_iff\"><span class=\"name\">Compactum</span>.<span class=\"name\">isClosed_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span>), <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">F</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">str</a></span> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L150-L155","name":"Compactum.instTopologicalSpaceA","line":150,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instTopologicalSpaceA","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instTopologicalSpaceA\"><span class=\"name\">Compactum</span>.<span class=\"name\">instTopologicalSpaceA</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L143-L148","name":"Compactum.join_distrib","line":143,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.join_distrib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.join_distrib\"><span class=\"name\">Compactum</span>.<span class=\"name\">join_distrib</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uux</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">str</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.join\">join</a></span> <span class=\"fn\">uux</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">str</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter.map\">Ultrafilter.map</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">str</a></span> <span class=\"fn\">uux</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L136-L141","name":"Compactum.str_hom_commute","line":136,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.str_hom_commute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str_hom_commute\"><span class=\"name\">Compactum</span>.<span class=\"name\">str_hom_commute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">str</a></span> <span class=\"fn\">xs</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">str</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter.map\">Ultrafilter.map</a> <span class=\"fn\">(⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">xs</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L130-L134","name":"Compactum.str_incl","line":130,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.str_incl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str_incl\"><span class=\"name\">Compactum</span>.<span class=\"name\">str_incl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\">str</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.incl\">incl</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L126-L128","name":"Compactum.incl","line":126,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.incl","doc":"The inclusion of `X` into `Ultrafilter X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.incl\"><span class=\"name\">Compactum</span>.<span class=\"name\">incl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L122-L124","name":"Compactum.join","line":122,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.join","doc":"The monadic join. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.join\"><span class=\"name\">Compactum</span>.<span class=\"name\">join</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L118-L120","name":"Compactum.str","line":118,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.str","doc":"The structure map for a compactum, essentially sending an ultrafilter to its limit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.str\"><span class=\"name\">Compactum</span>.<span class=\"name\">str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter/Defs.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span> → <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L115-L116","name":"Compactum.instHasLimits","line":115,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instHasLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instHasLimits\"><span class=\"name\">Compactum</span>.<span class=\"name\">instHasLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">CategoryTheory.Limits.HasLimits</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L111-L113","name":"Compactum.instConcreteCategoryHomA","line":111,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instConcreteCategoryHomA","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instConcreteCategoryHomA\"><span class=\"name\">Compactum</span>.<span class=\"name\">instConcreteCategoryHomA</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L106-L108","name":"Compactum.instFunLikeHomA","line":106,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instFunLikeHomA","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instFunLikeHomA\"><span class=\"name\">Compactum</span>.<span class=\"name\">instFunLikeHomA</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> (<span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>) <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monad/Algebra.html#CategoryTheory.Monad.Algebra.A\">A</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L103-L104","name":"Compactum.instCoeSortType","line":103,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instCoeSortType\"><span class=\"name\">Compactum</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L99-L101","name":"Compactum.adj","line":99,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.adj","doc":"The adjunction between `free` and `forget`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.adj\"><span class=\"name\">Compactum</span>.<span class=\"name\">adj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.free\">free</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.forget\">forget</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L95-L97","name":"Compactum.free","line":95,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.free","doc":"The \"free\" Compactum functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.free\"><span class=\"name\">Compactum</span>.<span class=\"name\">free</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./foundational_types.html\">(Type</a> u_1) <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L92-L93","name":"Compactum.instCreatesLimitsForget","line":92,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instCreatesLimitsForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instCreatesLimitsForget\"><span class=\"name\">Compactum</span>.<span class=\"name\">instCreatesLimitsForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimits\">CategoryTheory.CreatesLimits</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.forget\">forget</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L89-L90","name":"Compactum.instFaithfulForget","line":89,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.instFaithfulForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.instFaithfulForget\"><span class=\"name\">Compactum</span>.<span class=\"name\">instFaithfulForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.forget\">forget</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L85-L87","name":"Compactum.forget","line":85,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum.forget","doc":"The forgetful functor to Type* "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum.forget\"><span class=\"name\">Compactum</span>.<span class=\"name\">forget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L81-L81","name":"instCompactumInhabited","line":81,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#instCompactumInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#instCompactumInhabited\"><span class=\"name\">instCompactumInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L81-L81","name":"instCompactumCategory","line":81,"kind":"instance","docLink":"./Mathlib/Topology/Category/Compactum.html#instCompactumCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#instCompactumCategory\"><span class=\"name\">instCompactumCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_1, u_1 + 1}</a> <a href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\">Compactum</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/Compactum.lean#L79-L81","name":"Compactum","line":79,"kind":"def","docLink":"./Mathlib/Topology/Category/Compactum.html#Compactum","doc":"The type `Compactum` of Compacta, defined as algebras for the ultrafilter monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Compactum.html#Compactum\"><span class=\"name\">Compactum</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}