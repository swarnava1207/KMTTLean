{"name":"Mathlib.Analysis.SpecialFunctions.Gamma.Basic","instances":[],"imports":["Init","Mathlib.Analysis.SpecialFunctions.ImproperIntegrals","Mathlib.MeasureTheory.Integral.ExpDecay"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L530-L531","name":"Real.Gamma_eq_zero_iff","line":530,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_eq_zero_iff\"><span class=\"name\">Real</span>.<span class=\"name\">Gamma_eq_zero_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Gamma</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L498-L528","name":"Real.Gamma_ne_zero","line":498,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_ne_zero","doc":"The Gamma function does not vanish on `ℝ` (except at non-positive integers, where the function\nis mathematically undefined and we set it to `0` by convention). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_ne_zero\"><span class=\"name\">Real</span>.<span class=\"name\">Gamma_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">∀ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">m</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Gamma</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L483-L496","name":"Mathlib.Meta.Positivity.evalGamma","line":483,"kind":"def","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Mathlib.Meta.Positivity.evalGamma","doc":"The `positivity` extension which identifies expressions of the form `Gamma a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Mathlib.Meta.Positivity.evalGamma\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Positivity</span>.<span class=\"name\">evalGamma</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Positivity/Core.html#Mathlib.Meta.Positivity.PositivityExt\">PositivityExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L472-L480","name":"Real.integral_rpow_mul_exp_neg_mul_Ioi","line":472,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.integral_rpow_mul_exp_neg_mul_Ioi","doc":"Expresses the integral over `Ioi 0` of `t ^ (a - 1) * exp (-(r * t))`, for positive real `r`,\nin terms of the Gamma function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.integral_rpow_mul_exp_neg_mul_Ioi\"><span class=\"name\">Real</span>.<span class=\"name\">integral_rpow_mul_exp_neg_mul_Ioi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a>(<span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">t</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Gamma</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L466-L469","name":"Real.Gamma_nonneg_of_nonneg","line":466,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_nonneg_of_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_nonneg_of_nonneg\"><span class=\"name\">Real</span>.<span class=\"name\">Gamma_nonneg_of_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Gamma</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L452-L464","name":"Real.Gamma_pos_of_pos","line":452,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_pos_of_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_pos_of_pos\"><span class=\"name\">Real</span>.<span class=\"name\">Gamma_pos_of_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Gamma</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L446-L450","name":"Real.Gamma_neg_nat_eq_zero","line":446,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_neg_nat_eq_zero","doc":"At `-n` for `n ∈ ℕ`, the Gamma function is undefined; by convention we assign it the value `0`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_neg_nat_eq_zero\"><span class=\"name\">Real</span>.<span class=\"name\">Gamma_neg_nat_eq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Gamma</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L440-L444","name":"Real.Gamma_zero","line":440,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_zero","doc":"At `0` the Gamma function is undefined; by convention we assign it the value `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_zero\"><span class=\"name\">Real</span>.<span class=\"name\">Gamma_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Gamma</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L435-L438","name":"Real.Gamma_ofNat_eq_factorial","line":435,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_ofNat_eq_factorial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_ofNat_eq_factorial\"><span class=\"name\">Real</span>.<span class=\"name\">Gamma_ofNat_eq_factorial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">AtLeastTwo</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Gamma</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L431-L433","name":"Real.Gamma_nat_eq_factorial","line":431,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_nat_eq_factorial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_nat_eq_factorial\"><span class=\"name\">Real</span>.<span class=\"name\">Gamma_nat_eq_factorial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Gamma</a> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L428-L429","name":"Complex.Gamma_ofReal","line":428,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_ofReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_ofReal\"><span class=\"name\">Complex</span>.<span class=\"name\">Gamma_ofReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Real.Gamma</a> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L424-L426","name":"Real.Gamma_one","line":424,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_one\"><span class=\"name\">Real</span>.<span class=\"name\">Gamma_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Gamma</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L419-L422","name":"Real.Gamma_add_one","line":419,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_add_one\"><span class=\"name\">Real</span>.<span class=\"name\">Gamma_add_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Gamma</a> (<span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Gamma</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L404-L417","name":"Real.Gamma_eq_integral","line":404,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_eq_integral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_eq_integral\"><span class=\"name\">Real</span>.<span class=\"name\">Gamma_eq_integral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\">Gamma</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L399-L402","name":"Real.Gamma","line":399,"kind":"def","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma","doc":"The `Γ` function (of a real variable `s`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma\"><span class=\"name\">Real</span>.<span class=\"name\">Gamma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L368-L391","name":"Complex.integral_cpow_mul_exp_neg_mul_Ioi","line":368,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.integral_cpow_mul_exp_neg_mul_Ioi","doc":"Expresses the integral over `Ioi 0` of `t ^ (a - 1) * exp (-(r * t))` in terms of the Gamma\nfunction, for complex `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.integral_cpow_mul_exp_neg_mul_Ioi\"><span class=\"name\">Complex</span>.<span class=\"name\">integral_cpow_mul_exp_neg_mul_Ioi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Complex.exp\">exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a>(<span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L354-L366","name":"Complex.Gamma_conj","line":354,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_conj\"><span class=\"name\">Complex</span>.<span class=\"name\">Gamma_conj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L341-L352","name":"Complex.Gamma_neg_nat_eq_zero","line":341,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_neg_nat_eq_zero","doc":"At `-n` for `n ∈ ℕ`, the Gamma function is undefined; by convention we assign it the value 0. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_neg_nat_eq_zero\"><span class=\"name\">Complex</span>.<span class=\"name\">Gamma_neg_nat_eq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L336-L339","name":"Complex.Gamma_zero","line":336,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_zero","doc":"At `0` the Gamma function is undefined; by convention we assign it the value `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_zero\"><span class=\"name\">Complex</span>.<span class=\"name\">Gamma_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L331-L334","name":"Complex.Gamma_ofNat_eq_factorial","line":331,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_ofNat_eq_factorial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_ofNat_eq_factorial\"><span class=\"name\">Complex</span>.<span class=\"name\">Gamma_ofNat_eq_factorial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">AtLeastTwo</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L323-L329","name":"Complex.Gamma_nat_eq_factorial","line":323,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_nat_eq_factorial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_nat_eq_factorial\"><span class=\"name\">Complex</span>.<span class=\"name\">Gamma_nat_eq_factorial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L320-L321","name":"Complex.Gamma_one","line":320,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_one\"><span class=\"name\">Complex</span>.<span class=\"name\">Gamma_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L317-L318","name":"Complex.Gamma_eq_integral","line":317,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_eq_integral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_eq_integral\"><span class=\"name\">Complex</span>.<span class=\"name\">Gamma_eq_integral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral\">GammaIntegral</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L309-L315","name":"Complex.Gamma_add_one","line":309,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_add_one","doc":"The recurrence relation for the `Γ` function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_add_one\"><span class=\"name\">Complex</span>.<span class=\"name\">Gamma_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> (<span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L290-L307","name":"Complex.Gamma_eq_GammaAux","line":290,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_eq_GammaAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_eq_GammaAux\"><span class=\"name\">Complex</span>.<span class=\"name\">Gamma_eq_GammaAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaAux\">GammaAux</a> <span class=\"fn\">n</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L285-L288","name":"Complex.Gamma","line":285,"kind":"def","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma","doc":"The `Γ` function (of a complex variable `s`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\"><span class=\"name\">Complex</span>.<span class=\"name\">Gamma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L285-L288","name":"Complex.Gamma_def","line":285,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma_def\"><span class=\"name\">Complex</span>.<span class=\"name\">Gamma_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.Gamma\">Gamma</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaAux\">GammaAux</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">⌊</a><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">⌋₊</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L268-L283","name":"Complex.GammaAux_recurrence2","line":268,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaAux_recurrence2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaAux_recurrence2\"><span class=\"name\">Complex</span>.<span class=\"name\">GammaAux_recurrence2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaAux\">GammaAux</a> <span class=\"fn\">n</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaAux\">GammaAux</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L255-L266","name":"Complex.GammaAux_recurrence1","line":255,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaAux_recurrence1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaAux_recurrence1\"><span class=\"name\">Complex</span>.<span class=\"name\">GammaAux_recurrence1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaAux\">GammaAux</a> <span class=\"fn\">n</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaAux\">GammaAux</a> <span class=\"fn\">n</span> (<span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L250-L253","name":"Complex.GammaAux","line":250,"kind":"def","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaAux","doc":"The `n`th function in this family is `Γ(s)` if `-n < s.re`, and junk otherwise. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaAux\"><span class=\"name\">Complex</span>.<span class=\"name\">GammaAux</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L219-L241","name":"Complex.GammaIntegral_add_one","line":219,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral_add_one","doc":"The recurrence relation for the `Γ` integral. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral_add_one\"><span class=\"name\">Complex</span>.<span class=\"name\">GammaIntegral_add_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral\">GammaIntegral</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral\">GammaIntegral</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L187-L217","name":"Complex.partialGamma_add_one","line":187,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.partialGamma_add_one","doc":"The recurrence relation for the indefinite version of the `Γ` function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.partialGamma_add_one\"><span class=\"name\">Complex</span>.<span class=\"name\">partialGamma_add_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.partialGamma\">partialGamma</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.partialGamma\">partialGamma</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">X</span>))</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L150-L152","name":"Complex.tendsto_partialGamma","line":150,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.tendsto_partialGamma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.tendsto_partialGamma\"><span class=\"name\">Complex</span>.<span class=\"name\">tendsto_partialGamma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">X</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.partialGamma\">partialGamma</a></span> <span class=\"fn\">X</span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral\">GammaIntegral</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L146-L148","name":"Complex.partialGamma","line":146,"kind":"def","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.partialGamma","doc":"The indefinite version of the `Γ` function, `Γ(s, X) = ∫ x ∈ 0..X, exp(-x) x ^ (s - 1)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.partialGamma\"><span class=\"name\">Complex</span>.<span class=\"name\">partialGamma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L132-L135","name":"Complex.GammaIntegral_one","line":132,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral_one\"><span class=\"name\">Complex</span>.<span class=\"name\">GammaIntegral_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral\">GammaIntegral</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L121-L130","name":"Complex.GammaIntegral_ofReal","line":121,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral_ofReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral_ofReal\"><span class=\"name\">Complex</span>.<span class=\"name\">GammaIntegral_ofReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral\">GammaIntegral</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span></span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L113-L119","name":"Complex.GammaIntegral_conj","line":113,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral_conj\"><span class=\"name\">Complex</span>.<span class=\"name\">GammaIntegral_conj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral\">GammaIntegral</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral\">GammaIntegral</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L105-L111","name":"Complex.GammaIntegral","line":105,"kind":"def","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral","doc":"Euler's integral for the `Γ` function (of a complex variable `s`), defined as\n`∫ x in Ioi 0, exp (-x) * x ^ (s - 1)`.\n\nSee `Complex.GammaIntegral_convergent` for a proof of the convergence of the integral for\n`0 < re s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral\"><span class=\"name\">Complex</span>.<span class=\"name\">GammaIntegral</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L84-L103","name":"Complex.GammaIntegral_convergent","line":84,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral_convergent","doc":"The integral defining the `Γ` function converges for complex `s` with `0 < re s`.\n\nThis is proved by reduction to the real case. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Complex.GammaIntegral_convergent\"><span class=\"name\">Complex</span>.<span class=\"name\">GammaIntegral_convergent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">MeasureTheory.IntegrableOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>))</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>))</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L63-L75","name":"Real.GammaIntegral_convergent","line":63,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.GammaIntegral_convergent","doc":"The Euler integral for the `Γ` function converges for positive real `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.GammaIntegral_convergent\"><span class=\"name\">Real</span>.<span class=\"name\">GammaIntegral_convergent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">MeasureTheory.IntegrableOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>))</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/SpecialFunctions/Gamma/Basic.lean#L49-L61","name":"Real.Gamma_integrand_isLittleO","line":49,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_integrand_isLittleO","doc":"Asymptotic bound for the `Γ` function integrand. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/Gamma/Basic.html#Real.Gamma_integrand_isLittleO\"><span class=\"name\">Real</span>.<span class=\"name\">Gamma_integrand_isLittleO</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">s</span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">=o[</a><a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">(<span class=\"fn\">1</span> / <span class=\"fn\">2</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span>)</span></span></div></div>"}]}