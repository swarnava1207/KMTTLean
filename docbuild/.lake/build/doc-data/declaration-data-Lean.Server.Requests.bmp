{"name":"Lean.Server.Requests","instances":[{"typeNames":["Lean.Server.RequestError"],"name":"Lean.Server.instInhabitedRequestError","className":"Inhabited"},{"typeNames":["IO","Lean.Server.RequestM"],"name":"Lean.Server.instMonadLiftIORequestM","className":"MonadLift"},{"typeNames":["EIO","Lean.Server.RequestM"],"name":"Lean.Server.instMonadLiftEIOExceptionRequestM","className":"MonadLift"},{"typeNames":["Lean.Server.CancellableM","Lean.Server.RequestM"],"name":"Lean.Server.instMonadLiftCancellableMRequestM","className":"MonadLift"}],"imports":["Lean.DeclarationRange","Lean.Data.Json","Lean.Data.Lsp","Lean.Elab.Command","Lean.Server.RequestCancellation","Lean.Server.ServerTask","Lean.Server.FileSource","Lean.Server.FileWorker.Utils","Lean.Server.Rpc.Basic","Std.Sync.Mutex"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L632-L640","name":"Lean.Server.routeLspRequest","line":632,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.routeLspRequest","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.routeLspRequest\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">routeLspRequest</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L616-L630","name":"Lean.Server.handleLspRequest","line":616,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.handleLspRequest","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.handleLspRequest\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">handleLspRequest</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse\">LspResponse</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L612-L614","name":"Lean.Server.handleOnDidChange","line":612,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.handleOnDidChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.handleOnDidChange\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">handleOnDidChange</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.DidChangeTextDocumentParams\">Lsp.DidChangeTextDocumentParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L583-L610","name":"Lean.Server.chainStatefulLspRequestHandler","line":583,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.chainStatefulLspRequestHandler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.chainStatefulLspRequestHandler\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">chainStatefulLspRequestHandler</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">paramType</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">paramType</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/FileSource.html#Lean.Lsp.FileSource\">Lsp.FileSource</a> <span class=\"fn\">paramType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">respType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">respType</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">respType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stateType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">stateType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">handler</span> : <span class=\"fn\"><span class=\"fn\">paramType</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse\">LspResponse</a> <span class=\"fn\">respType</span></span> → <span class=\"fn\"><span class=\"fn\">stateType</span> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> (<span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse\">LspResponse</a> <span class=\"fn\">respType</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">stateType</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onDidChange</span> : <span class=\"fn\"><a href=\"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.DidChangeTextDocumentParams\">Lsp.DidChangeTextDocumentParams</a> → <span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> <span class=\"fn\">stateType</span> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L577-L581","name":"Lean.Server.partialLspRequestHandlerMethods","line":577,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.partialLspRequestHandlerMethods","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.partialLspRequestHandlerMethods\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">partialLspRequestHandlerMethods</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L574-L575","name":"Lean.Server.lookupStatefulLspRequestHandler","line":574,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.lookupStatefulLspRequestHandler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.lookupStatefulLspRequestHandler\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">lookupStatefulLspRequestHandler</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler\">StatefulRequestHandler</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L571-L572","name":"Lean.Server.isStatefulLspRequestMethod","line":571,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.isStatefulLspRequestMethod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.isStatefulLspRequestMethod\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">isStatefulLspRequestMethod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L562-L569","name":"Lean.Server.registerPartialStatefulLspRequestHandler","line":562,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.registerPartialStatefulLspRequestHandler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.registerPartialStatefulLspRequestHandler\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">registerPartialStatefulLspRequestHandler</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method </span><span class=\"fn\">refreshMethod</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refreshIntervalMs</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">paramType</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/FileSource.html#Lean.Lsp.FileSource\">Lsp.FileSource</a> <span class=\"fn\">paramType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">respType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">respType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stateType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">stateType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initState</span> : <span class=\"fn\">stateType</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">handler</span> : <span class=\"fn\"><span class=\"fn\">paramType</span> → <span class=\"fn\"><span class=\"fn\">stateType</span> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> (<span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse\">LspResponse</a> <span class=\"fn\">respType</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">stateType</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onDidChange</span> : <span class=\"fn\"><a href=\"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.DidChangeTextDocumentParams\">Lsp.DidChangeTextDocumentParams</a> → <span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> <span class=\"fn\">stateType</span> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L549-L560","name":"Lean.Server.registerCompleteStatefulLspRequestHandler","line":549,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.registerCompleteStatefulLspRequestHandler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.registerCompleteStatefulLspRequestHandler\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">registerCompleteStatefulLspRequestHandler</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">paramType</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/FileSource.html#Lean.Lsp.FileSource\">Lsp.FileSource</a> <span class=\"fn\">paramType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">respType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">respType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stateType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <span class=\"fn\">stateType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initState</span> : <span class=\"fn\">stateType</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">handler</span> : <span class=\"fn\"><span class=\"fn\">paramType</span> → <span class=\"fn\"><span class=\"fn\">stateType</span> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> (<span class=\"fn\">respType</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">stateType</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onDidChange</span> : <span class=\"fn\"><a href=\"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.DidChangeTextDocumentParams\">Lsp.DidChangeTextDocumentParams</a> → <span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> <span class=\"fn\">stateType</span> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L465-L466","name":"Lean.Server.statefulRequestHandlers","line":465,"kind":"opaque","docLink":"./Lean/Server/Requests.html#Lean.Server.statefulRequestHandlers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.statefulRequestHandlers\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">statefulRequestHandlers</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler\">StatefulRequestHandler</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L463-L463","name":"Lean.Server.StatefulRequestHandler.completeness","line":463,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.completeness","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.completeness\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">StatefulRequestHandler</span>.<span class=\"name\">completeness</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler\">StatefulRequestHandler</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandlerCompleteness\">RequestHandlerCompleteness</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L462-L462","name":"Lean.Server.StatefulRequestHandler.stateRef","line":462,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.stateRef","doc":"`stateRef` is synchronized in `registerStatefulLspRequestHandler` by using `lastTaskMutex` to\nensure that stateful request tasks for the same handler are executed sequentially (in order of arrival).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.stateRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">StatefulRequestHandler</span>.<span class=\"name\">stateRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler\">StatefulRequestHandler</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L457-L457","name":"Lean.Server.StatefulRequestHandler.initState","line":457,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.initState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.initState\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">StatefulRequestHandler</span>.<span class=\"name\">initState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler\">StatefulRequestHandler</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L456-L456","name":"Lean.Server.StatefulRequestHandler.lastTaskMutex","line":456,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.lastTaskMutex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.lastTaskMutex\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">StatefulRequestHandler</span>.<span class=\"name\">lastTaskMutex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler\">StatefulRequestHandler</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sync/Mutex.html#Std.Mutex\">Std.Mutex</a> <span class=\"fn\">(<a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">ServerTask</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L455-L455","name":"Lean.Server.StatefulRequestHandler.onDidChange","line":455,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.onDidChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.onDidChange\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">StatefulRequestHandler</span>.<span class=\"name\">onDidChange</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler\">StatefulRequestHandler</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.DidChangeTextDocumentParams\">Lsp.DidChangeTextDocumentParams</a> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L454-L454","name":"Lean.Server.StatefulRequestHandler.pureOnDidChange","line":454,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.pureOnDidChange","doc":"`onDidChange` with explicit state management for chaining request handlers.\nThis function is pure w.r.t. `lastTaskMutex` and `stateRef`, but not `RequestM`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.pureOnDidChange\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">StatefulRequestHandler</span>.<span class=\"name\">pureOnDidChange</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler\">StatefulRequestHandler</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.DidChangeTextDocumentParams\">Lsp.DidChangeTextDocumentParams</a> → <span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L449-L449","name":"Lean.Server.StatefulRequestHandler.handle","line":449,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.handle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.handle\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">StatefulRequestHandler</span>.<span class=\"name\">handle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler\">StatefulRequestHandler</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse\">LspResponse</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L448-L448","name":"Lean.Server.StatefulRequestHandler.pureHandle","line":448,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.pureHandle","doc":"`handle` with explicit state management for chaining request handlers.\nThis function is pure w.r.t. `lastTaskMutex` and `stateRef`, but not `RequestM`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.pureHandle\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">StatefulRequestHandler</span>.<span class=\"name\">pureHandle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler\">StatefulRequestHandler</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> (<span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse\">LspResponse</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L443-L443","name":"Lean.Server.StatefulRequestHandler.fileSource","line":443,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.fileSource","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.fileSource\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">StatefulRequestHandler</span>.<span class=\"name\">fileSource</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler\">StatefulRequestHandler</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L442-L442","name":"Lean.Server.StatefulRequestHandler.mk","line":442,"kind":"ctor","docLink":"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">StatefulRequestHandler</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileSource</span> : <span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pureHandle</span> : <span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> (<span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse\">LspResponse</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">handle</span> : <span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse\">LspResponse</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pureOnDidChange</span> : <span class=\"fn\"><a href=\"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.DidChangeTextDocumentParams\">Lsp.DidChangeTextDocumentParams</a> → <span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">onDidChange</span> : <span class=\"fn\"><a href=\"./Lean/Data/Lsp/TextSync.html#Lean.Lsp.DidChangeTextDocumentParams\">Lsp.DidChangeTextDocumentParams</a> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lastTaskMutex</span> : <span class=\"fn\"><a href=\"./Std/Sync/Mutex.html#Std.Mutex\">Std.Mutex</a> <span class=\"fn\">(<a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">ServerTask</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initState</span> : <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stateRef</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Init/Dynamic.html#Dynamic\">Dynamic</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">completeness</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandlerCompleteness\">RequestHandlerCompleteness</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler\">StatefulRequestHandler</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L442-L463","name":"Lean.Server.StatefulRequestHandler","line":442,"kind":"structure","docLink":"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.StatefulRequestHandler\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">StatefulRequestHandler</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L440-L440","name":"Lean.Server.LspResponse.isComplete","line":440,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.LspResponse.isComplete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse.isComplete\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">LspResponse</span>.<span class=\"name\">isComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse\">LspResponse</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L439-L439","name":"Lean.Server.LspResponse.response","line":439,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.LspResponse.response","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse.response\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">LspResponse</span>.<span class=\"name\">response</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse\">LspResponse</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L438-L438","name":"Lean.Server.LspResponse.mk","line":438,"kind":"ctor","docLink":"./Lean/Server/Requests.html#Lean.Server.LspResponse.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">LspResponse</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">response</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isComplete</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse\">LspResponse</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L438-L440","name":"Lean.Server.LspResponse","line":438,"kind":"structure","docLink":"./Lean/Server/Requests.html#Lean.Server.LspResponse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.LspResponse\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">LspResponse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L425-L436","name":"Lean.Server.RequestHandlerCompleteness.partial","line":425,"kind":"ctor","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestHandlerCompleteness.partial","doc":"A request handler is partial if the LSP spec states that the request method implemented by\nthe handler should be responded to with the full state of the document, but our implementation\nof the handler only returns a partial result for the document\n(e.g. only for the processed regions of the document, to reduce latency after a `didChange`).\nA request handler can only be partial if LSP also specifies a corresponding `refresh`\nserver-to-client request, e.g. `workspace/inlayHint/refresh` for `textDocument/inlayHint`.\nThis is necessary because we use the `refresh` request to prompt the client to re-request the\ndata for a partial request if we returned a partial response for that request in the past,\nso that the client eventually converges to a complete set of information for the full document.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandlerCompleteness.partial\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestHandlerCompleteness</span>.<span class=\"name\">partial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refreshMethod</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">refreshIntervalMs</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandlerCompleteness\">RequestHandlerCompleteness</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L424-L424","name":"Lean.Server.RequestHandlerCompleteness.complete","line":424,"kind":"ctor","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestHandlerCompleteness.complete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandlerCompleteness.complete\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestHandlerCompleteness</span>.<span class=\"name\">complete</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandlerCompleteness\">RequestHandlerCompleteness</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L423-L436","name":"Lean.Server.RequestHandlerCompleteness","line":423,"kind":"inductive","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestHandlerCompleteness","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandlerCompleteness\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestHandlerCompleteness</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L397-L421","name":"Lean.Server.chainLspRequestHandler","line":397,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.chainLspRequestHandler","doc":"NB: This method may only be called in `initialize` blocks (user or builtin).\n\nRegister another handler to invoke after the last one registered for a method.\nAt least one handler for the method must have already been registered to perform\nchaining.\n\nFor more details on the registration of a handler, see `registerLspRequestHandler`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.chainLspRequestHandler\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">chainLspRequestHandler</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">paramType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">respType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">respType</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">respType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">handler</span> : <span class=\"fn\"><span class=\"fn\">paramType</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">respType</span></span> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">respType</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L394-L395","name":"Lean.Server.lookupLspRequestHandler","line":394,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.lookupLspRequestHandler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.lookupLspRequestHandler\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">lookupLspRequestHandler</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandler\">RequestHandler</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L365-L392","name":"Lean.Server.registerLspRequestHandler","line":365,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.registerLspRequestHandler","doc":"NB: This method may only be called in `initialize` blocks (user or builtin).\n\nA registration consists of:\n- a type of JSON-parsable request data `paramType`\n- a `FileSource` instance for it so the system knows where to route requests\n- a type of JSON-serializable response data `respType`\n- an actual `handler` which runs in the `RequestM` monad and is expected\n  to produce an asynchronous `RequestTask` which does any waiting/computation\n\nA handler task may be cancelled at any time, so it should check the cancellation token when possible\nto handle this cooperatively. Any exceptions thrown in a request handler will be reported to the client\nas LSP error responses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.registerLspRequestHandler\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">registerLspRequestHandler</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">paramType</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Server/FileSource.html#Lean.Lsp.FileSource\">Lsp.FileSource</a> <span class=\"fn\">paramType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">respType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">respType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">handler</span> : <span class=\"fn\"><span class=\"fn\">paramType</span> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">respType</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L362-L363","name":"Lean.Server.requestHandlers","line":362,"kind":"opaque","docLink":"./Lean/Server/Requests.html#Lean.Server.requestHandlers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.requestHandlers\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">requestHandlers</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">PersistentHashMap</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandler\">RequestHandler</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L360-L360","name":"Lean.Server.RequestHandler.handle","line":360,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestHandler.handle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandler.handle\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestHandler</span>.<span class=\"name\">handle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandler\">RequestHandler</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L359-L359","name":"Lean.Server.RequestHandler.fileSource","line":359,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestHandler.fileSource","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandler.fileSource\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestHandler</span>.<span class=\"name\">fileSource</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandler\">RequestHandler</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L358-L358","name":"Lean.Server.RequestHandler.mk","line":358,"kind":"ctor","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestHandler.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandler.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestHandler</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileSource</span> : <span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.DocumentUri\">Lsp.DocumentUri</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">handle</span> : <span class=\"fn\"><a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandler\">RequestHandler</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L358-L360","name":"Lean.Server.RequestHandler","line":358,"kind":"structure","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestHandler","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestHandler\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestHandler</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L340-L344","name":"Lean.Server.RequestM.runTermElabM","line":340,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.runTermElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.runTermElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">runTermElabM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snap</span> : <a href=\"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot\">Snapshots.Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestT\">RequestT</a> <a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Elab.TermElabM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L333-L337","name":"Lean.Server.RequestM.runCoreM","line":333,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.runCoreM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.runCoreM\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">runCoreM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snap</span> : <a href=\"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot\">Snapshots.Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestT\">RequestT</a> <a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L327-L331","name":"Lean.Server.RequestM.runCommandElabM","line":327,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.runCommandElabM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.runCommandElabM\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">runCommandElabM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snap</span> : <a href=\"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot\">Snapshots.Snapshot</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestT\">RequestT</a> <a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Elab.Command.CommandElabM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L313-L324","name":"Lean.Server.RequestM.findInfoTreeAtPos","line":313,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.findInfoTreeAtPos","doc":"Finds the info tree of the first snapshot task containing `pos`, asynchronously.\nThe info tree may be from a nested snapshot, such as a single tactic.\n\nSee `SnapshotTree.findInfoTreeAtPos` for details on how the search is done.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.findInfoTreeAtPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">findInfoTreeAtPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">doc</span> : <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument\">FileWorker.EditableDocument</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hoverPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">ServerTask</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L293-L310","name":"Lean.Server.RequestM.findCmdDataAtPos","line":293,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.findCmdDataAtPos","doc":"Finds the command syntax and info tree of the first snapshot task containing `pos`, asynchronously.\nThe info tree may be from a nested snapshot, such as a single tactic.\n\nSee `SnapshotTree.findInfoTreeAtPos` for details on how the search is done.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.findCmdDataAtPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">findCmdDataAtPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">doc</span> : <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument\">FileWorker.EditableDocument</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hoverPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">ServerTask</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L286-L289","name":"Lean.Server.RequestM.findCmdParsedSnap.isAfterHoverPos","line":286,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.findCmdParsedSnap.isAfterHoverPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.findCmdParsedSnap.isAfterHoverPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">findCmdParsedSnap</span>.<span class=\"name\">isAfterHoverPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hoverPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cmdParsed</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L281-L284","name":"Lean.Server.RequestM.findCmdParsedSnap.containsHoverPos","line":281,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.findCmdParsedSnap.containsHoverPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.findCmdParsedSnap.containsHoverPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">findCmdParsedSnap</span>.<span class=\"name\">containsHoverPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">doc</span> : <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument\">FileWorker.EditableDocument</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hoverPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cmdParsed</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L268-L279","name":"Lean.Server.RequestM.findCmdParsedSnap.go","line":268,"kind":"opaque","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.findCmdParsedSnap.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.findCmdParsedSnap.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">findCmdParsedSnap</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">doc</span> : <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument\">FileWorker.EditableDocument</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hoverPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cmdParsed</span> : <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Language.Lean.CommandParsedSnapshot</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">ServerTask</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Language.Lean.CommandParsedSnapshot</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L257-L289","name":"Lean.Server.RequestM.findCmdParsedSnap","line":257,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.findCmdParsedSnap","doc":"Finds the first `CommandParsedSnapshot` containing `hoverPos`, asynchronously. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.findCmdParsedSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">findCmdParsedSnap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">doc</span> : <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument\">FileWorker.EditableDocument</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hoverPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">ServerTask</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Language/Lean/Types.html#Lean.Language.Lean.CommandParsedSnapshot\">Language.Lean.CommandParsedSnapshot</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L244-L254","name":"Lean.Server.RequestM.withWaitFindSnapAtPos","line":244,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.withWaitFindSnapAtPos","doc":"Create a task which waits for the snapshot containing `lspPos` and executes `f` with it.\nIf no such snapshot exists, the request fails with an error. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.withWaitFindSnapAtPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">withWaitFindSnapAtPos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lspPos</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Lsp.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot\">Snapshots.Snapshot</a> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L236-L242","name":"Lean.Server.RequestM.bindWaitFindSnap","line":236,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.bindWaitFindSnap","doc":"See `withWaitFindSnap`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.bindWaitFindSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">bindWaitFindSnap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">doc</span> : <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument\">FileWorker.EditableDocument</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot\">Snapshots.Snapshot</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">notFoundX</span> : <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">β</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot\">Snapshots.Snapshot</a> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">β</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L226-L234","name":"Lean.Server.RequestM.withWaitFindSnap","line":226,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.withWaitFindSnap","doc":"Create a task which waits for the first snapshot matching `p`, handles various errors,\nand if a matching snapshot was found executes `x` with it. If not found, the task executes\n`notFoundX`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.withWaitFindSnap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">withWaitFindSnap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">doc</span> : <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument\">FileWorker.EditableDocument</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot\">Snapshots.Snapshot</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">notFoundX</span> : <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot\">Snapshots.Snapshot</a> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L217-L224","name":"Lean.Server.RequestM.waitFindSnapAux","line":217,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.waitFindSnapAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.waitFindSnapAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">waitFindSnapAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">notFoundX</span> : <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot\">Snapshots.Snapshot</a> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/Snapshots.html#Lean.Server.Snapshots.Snapshot\">Snapshots.Snapshot</a>)</span></span> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L212-L215","name":"Lean.Server.RequestM.checkCancelled","line":212,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.checkCancelled","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.checkCancelled\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">checkCancelled</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L208-L210","name":"Lean.Server.RequestM.bindTaskCostly","line":208,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.bindTaskCostly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.bindTaskCostly\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">bindTaskCostly</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">ServerTask</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">β</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L204-L206","name":"Lean.Server.RequestM.bindTaskCheap","line":204,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.bindTaskCheap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.bindTaskCheap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">bindTaskCheap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">ServerTask</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">β</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L200-L202","name":"Lean.Server.RequestM.mapTaskCostly","line":200,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.mapTaskCostly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.mapTaskCostly\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">mapTaskCostly</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">ServerTask</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L196-L198","name":"Lean.Server.RequestM.mapTaskCheap","line":196,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.mapTaskCheap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.mapTaskCheap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">mapTaskCheap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">ServerTask</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L192-L194","name":"Lean.Server.RequestM.pureTask","line":192,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.pureTask","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.pureTask\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">pureTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L188-L190","name":"Lean.Server.RequestM.asTask","line":188,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.asTask","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.asTask\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">asTask</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L184-L186","name":"Lean.Server.RequestM.readDoc","line":184,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.readDoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.readDoc\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">readDoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadReaderOf\">MonadReaderOf</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext\">RequestContext</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument\">FileWorker.EditableDocument</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L181-L182","name":"Lean.Server.RequestM.runInIO","line":181,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM.runInIO","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM.runInIO\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span>.<span class=\"name\">runInIO</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext\">RequestContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L169-L175","name":"Lean.Server.instMonadLiftCancellableMRequestM","line":169,"kind":"instance","docLink":"./Lean/Server/Requests.html#Lean.Server.instMonadLiftCancellableMRequestM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.instMonadLiftCancellableMRequestM\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instMonadLiftCancellableMRequestM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lean/Server/RequestCancellation.html#Lean.Server.CancellableM\">CancellableM</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L163-L167","name":"Lean.Server.instMonadLiftEIOExceptionRequestM","line":163,"kind":"instance","docLink":"./Lean/Server/Requests.html#Lean.Server.instMonadLiftEIOExceptionRequestM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.instMonadLiftEIOExceptionRequestM\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instMonadLiftEIOExceptionRequestM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#EIO\">EIO</a> <a href=\"./Lean/Exception.html#Lean.Exception\">Exception</a>)</span> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L157-L161","name":"Lean.Server.instMonadLiftIORequestM","line":157,"kind":"instance","docLink":"./Lean/Server/Requests.html#Lean.Server.instMonadLiftIORequestM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.instMonadLiftIORequestM\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instMonadLiftIORequestM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">RequestM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L155-L155","name":"Lean.Server.RequestTask.pure","line":155,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestTask.pure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask.pure\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestTask</span>.<span class=\"name\">pure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">RequestTask</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L152-L153","name":"Lean.Server.RequestM","line":152,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestM","doc":"Workers execute request handlers in this monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L151-L151","name":"Lean.Server.RequestT","line":151,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestT\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L150-L150","name":"Lean.Server.RequestTask","line":150,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestTask","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestTask</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L147-L148","name":"Lean.Server.RequestContext.srcSearchPath","line":147,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestContext.srcSearchPath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext.srcSearchPath\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestContext</span>.<span class=\"name\">srcSearchPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rc</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext\">RequestContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L145-L145","name":"Lean.Server.RequestContext.cancelTk","line":145,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestContext.cancelTk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext.cancelTk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestContext</span>.<span class=\"name\">cancelTk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext\">RequestContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/RequestCancellation.html#Lean.Server.RequestCancellationToken\">RequestCancellationToken</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L144-L144","name":"Lean.Server.RequestContext.initParams","line":144,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestContext.initParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext.initParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestContext</span>.<span class=\"name\">initParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext\">RequestContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.InitializeParams\">Lsp.InitializeParams</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L143-L143","name":"Lean.Server.RequestContext.hLog","line":143,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestContext.hLog","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext.hLog\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestContext</span>.<span class=\"name\">hLog</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext\">RequestContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L142-L142","name":"Lean.Server.RequestContext.doc","line":142,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestContext.doc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext.doc\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestContext</span>.<span class=\"name\">doc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext\">RequestContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument\">FileWorker.EditableDocument</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L141-L141","name":"Lean.Server.RequestContext.srcSearchPathTask","line":141,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestContext.srcSearchPathTask","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext.srcSearchPathTask\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestContext</span>.<span class=\"name\">srcSearchPathTask</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext\">RequestContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">ServerTask</a> <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L140-L140","name":"Lean.Server.RequestContext.rpcSessions","line":140,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestContext.rpcSessions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext.rpcSessions\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestContext</span>.<span class=\"name\">rpcSessions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext\">RequestContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/RBMap.html#Lean.RBMap\">RBMap</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.RpcSession\">FileWorker.RpcSession</a>)</span> <a href=\"./Init/Data/Ord.html#Ord.compare\">compare</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L139-L139","name":"Lean.Server.RequestContext.mk","line":139,"kind":"ctor","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rpcSessions</span> : <span class=\"fn\"><a href=\"./Lean/Data/RBMap.html#Lean.RBMap\">RBMap</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a> <span class=\"fn\">(<a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.RpcSession\">FileWorker.RpcSession</a>)</span> <a href=\"./Init/Data/Ord.html#Ord.compare\">compare</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">srcSearchPathTask</span> : <span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">ServerTask</a> <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">SearchPath</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">doc</span> : <a href=\"./Lean/Server/FileWorker/Utils.html#Lean.Server.FileWorker.EditableDocument\">FileWorker.EditableDocument</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hLog</span> : <a href=\"./Init/System/IO.html#IO.FS.Stream\">IO.FS.Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initParams</span> : <a href=\"./Lean/Data/Lsp/InitShutdown.html#Lean.Lsp.InitializeParams\">Lsp.InitializeParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cancelTk</span> : <a href=\"./Lean/Server/RequestCancellation.html#Lean.Server.RequestCancellationToken\">RequestCancellationToken</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext\">RequestContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L139-L145","name":"Lean.Server.RequestContext","line":139,"kind":"structure","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L133-L137","name":"Lean.Server.parseRequestParams","line":133,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.parseRequestParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.parseRequestParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">parseRequestParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">paramType</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">paramType</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a> <span class=\"fn\">paramType</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L126-L129","name":"Lean.Server.RequestError.toLspResponseError","line":126,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.toLspResponseError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestError.toLspResponseError\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestError</span>.<span class=\"name\">toLspResponseError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">JsonRpc.RequestID</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">JsonRpc.ResponseError</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L123-L124","name":"Lean.Server.RequestError.ofIoError","line":123,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.ofIoError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestError.ofIoError\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestError</span>.<span class=\"name\">ofIoError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/System/IOError.html#IO.Error\">IO.Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L120-L121","name":"Lean.Server.RequestError.ofException","line":120,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.ofException","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestError.ofException\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestError</span>.<span class=\"name\">ofException</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Exception.html#Lean.Exception\">Exception</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L117-L118","name":"Lean.Server.RequestError.requestCancelled","line":117,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.requestCancelled","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestError.requestCancelled\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestError</span>.<span class=\"name\">requestCancelled</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L114-L115","name":"Lean.Server.RequestError.internalError","line":114,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.internalError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestError.internalError\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestError</span>.<span class=\"name\">internalError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">message</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L111-L112","name":"Lean.Server.RequestError.invalidParams","line":111,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.invalidParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestError.invalidParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestError</span>.<span class=\"name\">invalidParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">message</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L107-L109","name":"Lean.Server.RequestError.methodNotFound","line":107,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.methodNotFound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestError.methodNotFound\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestError</span>.<span class=\"name\">methodNotFound</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L103-L105","name":"Lean.Server.RequestError.fileChanged","line":103,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.fileChanged","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestError.fileChanged\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestError</span>.<span class=\"name\">fileChanged</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L98-L98","name":"Lean.Server.instInhabitedRequestError","line":98,"kind":"instance","docLink":"./Lean/Server/Requests.html#Lean.Server.instInhabitedRequestError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.instInhabitedRequestError\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instInhabitedRequestError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L97-L97","name":"Lean.Server.RequestError.message","line":97,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.message","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestError.message\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestError</span>.<span class=\"name\">message</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L96-L96","name":"Lean.Server.RequestError.code","line":96,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.code","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestError.code\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestError</span>.<span class=\"name\">code</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">JsonRpc.ErrorCode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L95-L95","name":"Lean.Server.RequestError.mk","line":95,"kind":"ctor","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestError.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestError</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">JsonRpc.ErrorCode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">message</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\">RequestError</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L95-L98","name":"Lean.Server.RequestError","line":95,"kind":"structure","docLink":"./Lean/Server/Requests.html#Lean.Server.RequestError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Server.RequestError\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RequestError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L66-L89","name":"Lean.Language.SnapshotTree.findInfoTreeAtPos","line":66,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.findInfoTreeAtPos","doc":"Finds the first (in pre-order) snapshot task in `tree` that contains `hoverPos`\n(including whitespace) and which contains an info tree, and then returns that info tree,\nwaiting for any snapshot tasks on the way.\nSubtrees that do not contain the position are skipped without forcing their tasks.\nIf the caller of this function needs the correct snapshot when the cursor is on whitespace,\nthen this function is likely the wrong one to call, as it simply yields the first snapshot\nthat contains `hoverPos` in its whitespace, which is not necessarily the correct one\n(e.g. it may be indentation-sensitive).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.findInfoTreeAtPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">findInfoTreeAtPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tree</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hoverPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">Server.ServerTask</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Elab.InfoTree</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L51-L64","name":"Lean.Language.SnapshotTree.foldSnaps.traverseChildren","line":51,"kind":"opaque","docLink":"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.traverseChildren","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.traverseChildren\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">foldSnaps</span>.<span class=\"name\">traverseChildren</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">Server.ServerTask</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.Control\">Control</a>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a>)</span></span> → <span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">Server.ServerTask</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L48-L49","name":"Lean.Language.SnapshotTree.foldSnaps.traverseTree","line":48,"kind":"opaque","docLink":"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.traverseTree","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.traverseTree\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">foldSnaps</span>.<span class=\"name\">traverseTree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">Server.ServerTask</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.Control\">Control</a>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tree</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">Server.ServerTask</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L43-L64","name":"Lean.Language.SnapshotTree.foldSnaps","line":43,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">foldSnaps</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tree</span> : <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">init</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTask\">SnapshotTask</a> <a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotTree\">SnapshotTree</a></span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">Server.ServerTask</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.Control\">foldSnaps.Control</a>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/ServerTask.html#Lean.Server.ServerTask\">Server.ServerTask</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L41-L41","name":"Lean.Language.SnapshotTree.foldSnaps.Control.proceed","line":41,"kind":"ctor","docLink":"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.Control.proceed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.Control.proceed\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">foldSnaps</span>.<span class=\"name\">Control</span>.<span class=\"name\">proceed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">foldChildren</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.Control\">Control</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L40-L40","name":"Lean.Language.SnapshotTree.foldSnaps.Control.done","line":40,"kind":"ctor","docLink":"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.Control.done","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.Control.done\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">foldSnaps</span>.<span class=\"name\">Control</span>.<span class=\"name\">done</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.Control\">Control</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L39-L41","name":"Lean.Language.SnapshotTree.foldSnaps.Control","line":39,"kind":"inductive","docLink":"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.Control","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.Language.SnapshotTree.foldSnaps.Control\"><span class=\"name\">Lean</span>.<span class=\"name\">Language</span>.<span class=\"name\">SnapshotTree</span>.<span class=\"name\">foldSnaps</span>.<span class=\"name\">Control</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Server/Requests.lean#L24-L33","name":"Lean.FileMap.rangeContainsHoverPos","line":24,"kind":"def","docLink":"./Lean/Server/Requests.html#Lean.FileMap.rangeContainsHoverPos","doc":"Checks whether `r` contains `hoverPos`, taking into account EOF according to `text`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/Requests.html#Lean.FileMap.rangeContainsHoverPos\"><span class=\"name\">Lean</span>.<span class=\"name\">FileMap</span>.<span class=\"name\">rangeContainsHoverPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">text</span> : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Lean/Syntax.html#String.Range\">String.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hoverPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">includeStop</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"}]}