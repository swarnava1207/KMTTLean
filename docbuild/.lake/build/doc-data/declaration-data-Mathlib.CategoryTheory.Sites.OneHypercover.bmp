{"name":"Mathlib.CategoryTheory.Sites.OneHypercover","instances":[],"imports":["Init","Mathlib.CategoryTheory.Sites.Sheaf"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L256-L256","name":"CategoryTheory.GrothendieckTopology.Cover.oneHypercover_toPreOneHypercover","line":256,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.oneHypercover_toPreOneHypercover","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.oneHypercover_toPreOneHypercover\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">Cover</span>.<span class=\"name\">oneHypercover_toPreOneHypercover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover\">Cover</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.oneHypercover\">oneHypercover</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.toPreOneHypercover\">toPreOneHypercover</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover\">preOneHypercover</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L253-L260","name":"CategoryTheory.GrothendieckTopology.Cover.oneHypercover","line":253,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.oneHypercover","doc":"The tautological 1-hypercover induced by `S : J.Cover X`. Its index type `I₀`\nis given by `S.Arrow` (i.e. all the morphisms in the sieve `S`), while `I₁` is given\nby all possible pullback cones. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.oneHypercover\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">Cover</span>.<span class=\"name\">oneHypercover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover\">Cover</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover\">OneHypercover</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L246-L251","name":"CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_sieve₁","line":246,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_sieve₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_sieve₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">Cover</span>.<span class=\"name\">preOneHypercover_sieve₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover\">Cover</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow\">Arrow</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">f₁</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow.Y\">Y</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₂</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">f₂</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow.Y\">Y</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p₁</span> <span class=\"fn\"><span class=\"fn\">f₁</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow.f\">f</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p₂</span> <span class=\"fn\"><span class=\"fn\">f₂</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow.f\">f</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover\">preOneHypercover</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁\">sieve₁</a></span> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L237-L244","name":"CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_sieve₀","line":237,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_sieve₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_sieve₀\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">Cover</span>.<span class=\"name\">preOneHypercover_sieve₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover\">Cover</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover\">preOneHypercover</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₀\">sieve₀</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L226-L226","name":"CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_f","line":226,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">Cover</span>.<span class=\"name\">preOneHypercover_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover\">Cover</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow\">Arrow</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover\">preOneHypercover</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow.f\">f</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L226-L226","name":"CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_X","line":226,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_X\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">Cover</span>.<span class=\"name\">preOneHypercover_X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover\">Cover</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow\">Arrow</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover\">preOneHypercover</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow.Y\">Y</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L226-L226","name":"CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_I₁","line":226,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_I₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_I₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">Cover</span>.<span class=\"name\">preOneHypercover_I₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover\">Cover</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow\">Arrow</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover\">preOneHypercover</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁\">I₁</a></span> <span class=\"fn\">f₁</span> <span class=\"fn\">f₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f₁</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow.Relation\">Relation</a></span> <span class=\"fn\">f₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L226-L226","name":"CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_p₂","line":226,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_p₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_p₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">Cover</span>.<span class=\"name\">preOneHypercover_p₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover\">Cover</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow\">Arrow</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x✝</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow.Relation\">Relation</a></span> <span class=\"fn\">x✝¹</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover\">preOneHypercover</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.p₂\">p₂</a></span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow.Relation.g₂\">g₂</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L226-L226","name":"CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_I₀","line":226,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_I₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_I₀\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">Cover</span>.<span class=\"name\">preOneHypercover_I₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover\">Cover</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover\">preOneHypercover</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow\">Arrow</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L226-L226","name":"CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_Y","line":226,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_Y","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_Y\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">Cover</span>.<span class=\"name\">preOneHypercover_Y</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover\">Cover</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow\">Arrow</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x✝</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow.Relation\">Relation</a></span> <span class=\"fn\">x✝¹</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover\">preOneHypercover</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.Y\">Y</a></span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow.Relation.Z\">Z</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L226-L226","name":"CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_p₁","line":226,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_p₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover_p₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">Cover</span>.<span class=\"name\">preOneHypercover_p₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover\">Cover</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow\">Arrow</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x✝</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow.Relation\">Relation</a></span> <span class=\"fn\">x✝¹</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover\">preOneHypercover</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.p₁\">p₁</a></span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover.Arrow.Relation.g₁\">g₁</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L223-L235","name":"CategoryTheory.GrothendieckTopology.Cover.preOneHypercover","line":223,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover","doc":"The tautological 1-pre-hypercover induced by `S : J.Cover X`. Its index type `I₀`\nis given by `S.Arrow` (i.e. all the morphisms in the sieve `S`), while `I₁` is given\nby all possible pullback cones. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.Cover.preOneHypercover\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">Cover</span>.<span class=\"name\">preOneHypercover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology.Cover\">Cover</a></span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L203-L213","name":"CategoryTheory.GrothendieckTopology.OneHypercover.isLimitMultifork","line":203,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.isLimitMultifork","doc":"If `E : J.OneHypercover S` and `F : Sheaf J A`, then `F.obj (op S)` is\na multiequalizer of suitable maps `F.obj (op (E.X i)) ⟶ F.obj (op (E.Y j))`\ninduced by `E.p₁ j` and `E.p₂ j`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.isLimitMultifork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">OneHypercover</span>.<span class=\"name\">isLimitMultifork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover\">OneHypercover</a></span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">Sheaf</a> <span class=\"fn\">J</span> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multifork\">multifork</a></span> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L197-L197","name":"CategoryTheory.GrothendieckTopology.OneHypercover.multiforkLift_map_assoc","line":197,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.multiforkLift_map_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.multiforkLift_map_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">OneHypercover</span>.<span class=\"name\">multiforkLift_map_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_1}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover\">OneHypercover</a></span> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">Sheaf</a> <span class=\"fn\">J</span> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Limits.Multifork</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex\">multicospanIndex</a></span> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i₀</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">A</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i₀</span>)</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.multiforkLift\">multiforkLift</a> <span class=\"fn\">c</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₀</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">i₀</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L197-L199","name":"CategoryTheory.GrothendieckTopology.OneHypercover.multiforkLift_map","line":197,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.multiforkLift_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.multiforkLift_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">OneHypercover</span>.<span class=\"name\">multiforkLift_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_3, u_1}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover\">OneHypercover</a></span> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">Sheaf</a> <span class=\"fn\">J</span> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Limits.Multifork</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex\">multicospanIndex</a></span> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i₀</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.multiforkLift\">multiforkLift</a> <span class=\"fn\">c</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₀</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork.ι\">ι</a></span> <span class=\"fn\">i₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L187-L195","name":"CategoryTheory.GrothendieckTopology.OneHypercover.multiforkLift","line":187,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.multiforkLift","doc":"Auxiliary definition of `isLimitMultifork`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.multiforkLift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">OneHypercover</span>.<span class=\"name\">multiforkLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover\">OneHypercover</a></span> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf\">Sheaf</a> <span class=\"fn\">J</span> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Limits.Multifork</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex\">multicospanIndex</a></span> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">S</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L168-L168","name":"CategoryTheory.GrothendieckTopology.OneHypercover.mk'_toPreOneHypercover","line":168,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.mk'_toPreOneHypercover","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.mk'_toPreOneHypercover\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">OneHypercover</span>.<span class=\"name\">mk'_toPreOneHypercover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.HasPullbacks\">HasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mem₀</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₀\">sieve₀</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">J</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mem₁'</span> : <span class=\"fn\">∀ (<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁'\">sieve₁'</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">J</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.mk'\">mk'</a> <span class=\"fn\">E</span> <span class=\"fn\">mem₀</span> <span class=\"fn\">mem₁'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.toPreOneHypercover\">toPreOneHypercover</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">E</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L166-L176","name":"CategoryTheory.GrothendieckTopology.OneHypercover.mk'","line":166,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.mk'","doc":"In order to check that a certain data is a `1`-hypercover of `S`, it suffices to\ncheck that the data provides a covering of `S` and of the fibre products. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.mk'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">OneHypercover</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.HasPullbacks\">HasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mem₀</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₀\">sieve₀</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">J</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mem₁'</span> : <span class=\"fn\">∀ (<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁'\">sieve₁'</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">J</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover\">OneHypercover</a></span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L158-L162","name":"CategoryTheory.GrothendieckTopology.OneHypercover.mem_sieve₁'","line":158,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.mem_sieve₁'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.mem_sieve₁'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">OneHypercover</span>.<span class=\"name\">mem_sieve₁'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover\">OneHypercover</a></span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁'\">sieve₁'</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">J</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L153-L153","name":"CategoryTheory.GrothendieckTopology.OneHypercover.mem₁","line":153,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.mem₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.mem₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">OneHypercover</span>.<span class=\"name\">mem₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover\">OneHypercover</a></span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">W</span> : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₂</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁\">sieve₁</a></span> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">J</span> <span class=\"fn\">W</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L152-L152","name":"CategoryTheory.GrothendieckTopology.OneHypercover.mem₀","line":152,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.mem₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.mem₀\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">OneHypercover</span>.<span class=\"name\">mem₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover\">OneHypercover</a></span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₀\">sieve₀</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">J</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L151-L151","name":"CategoryTheory.GrothendieckTopology.OneHypercover.mk","line":151,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">OneHypercover</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toPreOneHypercover</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mem₀</span> : <span class=\"fn\"><span class=\"fn\">toPreOneHypercover</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₀\">sieve₀</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">J</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mem₁</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">toPreOneHypercover</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>) ⦃<span class=\"fn\">W</span> : <span class=\"fn\">C</span>⦄ (<span class=\"fn\">p₁</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toPreOneHypercover</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i₁</span></span>) (<span class=\"fn\">p₂</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toPreOneHypercover</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i₂</span></span>),\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toPreOneHypercover</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toPreOneHypercover</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span></span> →\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toPreOneHypercover</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁\">sieve₁</a></span> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">J</span> <span class=\"fn\">W</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover\">OneHypercover</a></span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L151-L154","name":"CategoryTheory.GrothendieckTopology.OneHypercover.toPreOneHypercover","line":151,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.toPreOneHypercover","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover.toPreOneHypercover\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">OneHypercover</span>.<span class=\"name\">toPreOneHypercover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">J</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover\">OneHypercover</a></span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L148-L154","name":"CategoryTheory.GrothendieckTopology.OneHypercover","line":148,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover","doc":"The type of `1`-hypercovers of an object `S : C` in a category equipped with a\nGrothendieck topology `J`. This can be constructed from a covering of `S` and\na covering of the fibre products of the objects in this covering (see `OneHypercover.mk'`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.GrothendieckTopology.OneHypercover\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">GrothendieckTopology</span>.<span class=\"name\">OneHypercover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Grothendieck.html#CategoryTheory.GrothendieckTopology\">GrothendieckTopology</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">CategoryTheory.PreOneHypercover</a> <span class=\"fn\">S</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max u v) (w + 1))</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L134-L140","name":"CategoryTheory.PreOneHypercover.multifork","line":134,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multifork","doc":"The multifork attached to a presheaf `F : Cᵒᵖ ⥤ A`, `S : C` and `E : PreOneHypercover S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multifork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">multifork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.Multifork\">Limits.Multifork</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex\">multicospanIndex</a></span> <span class=\"fn\">F</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L127-L127","name":"CategoryTheory.PreOneHypercover.multicospanIndex_snd","line":127,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex_snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">multicospanIndex_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape\">multicospanShape</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex\">multicospanIndex</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.snd\">snd</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.p₂\">p₂</a></span> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L127-L127","name":"CategoryTheory.PreOneHypercover.multicospanIndex_right","line":127,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">multicospanIndex_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape\">multicospanShape</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex\">multicospanIndex</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.right\">right</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.Y\">Y</a></span> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L127-L127","name":"CategoryTheory.PreOneHypercover.multicospanIndex_left","line":127,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">multicospanIndex_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape\">multicospanShape</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex\">multicospanIndex</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.left\">left</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L127-L127","name":"CategoryTheory.PreOneHypercover.multicospanIndex_fst","line":127,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex_fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">multicospanIndex_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape\">multicospanShape</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex\">multicospanIndex</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex.fst\">fst</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.p₁\">p₁</a></span> <span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L125-L132","name":"CategoryTheory.PreOneHypercover.multicospanIndex","line":125,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex","doc":"The diagram of the multifork attached to a presheaf\n`F : Cᵒᵖ ⥤ A`, `S : C` and `E : PreOneHypercover S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanIndex\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">multicospanIndex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanIndex\">Limits.MulticospanIndex</a> <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape\">multicospanShape</a></span> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L118-L118","name":"CategoryTheory.PreOneHypercover.multicospanShape_snd","line":118,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape_snd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">multicospanShape_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁'\">I₁'</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape\">multicospanShape</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.snd\">snd</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L118-L118","name":"CategoryTheory.PreOneHypercover.multicospanShape_L","line":118,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape_L","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape_L\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">multicospanShape_L</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape\">multicospanShape</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.L\">L</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L118-L118","name":"CategoryTheory.PreOneHypercover.multicospanShape_fst","line":118,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape_fst\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">multicospanShape_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁'\">I₁'</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape\">multicospanShape</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.fst\">fst</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">j</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L118-L118","name":"CategoryTheory.PreOneHypercover.multicospanShape_R","line":118,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape_R","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape_R\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">multicospanShape_R</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape\">multicospanShape</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape.R\">R</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁'\">I₁'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L117-L123","name":"CategoryTheory.PreOneHypercover.multicospanShape","line":117,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape","doc":"The shape of the multiforks attached to `E : PreOneHypercover S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.multicospanShape\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">multicospanShape</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Multiequalizer.html#CategoryTheory.Limits.MulticospanShape\">Limits.MulticospanShape</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L114-L115","name":"CategoryTheory.PreOneHypercover.I₁'","line":114,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁'","doc":"The sigma type of all `E.I₁ i₁ i₂` for `⟨i₁, i₂⟩ : E.I₀ × E.I₀`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">I₁'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L106-L110","name":"CategoryTheory.PreOneHypercover.sieve₁'_eq_sieve₁","line":106,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁'_eq_sieve₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁'_eq_sieve₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">sieve₁'_eq_sieve₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁'\">sieve₁'</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁\">sieve₁</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">Limits.pullback.fst</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.snd\">Limits.pullback.snd</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L94-L103","name":"CategoryTheory.PreOneHypercover.sieve₁_eq_pullback_sieve₁'","line":94,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁_eq_pullback_sieve₁'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁_eq_pullback_sieve₁'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">sieve₁_eq_pullback_sieve₁'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₂</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁\">sieve₁</a></span> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.pullback\">Sieve.pullback</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.lift\">Limits.pullback.lift</a> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span> <span class=\"fn\">w</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁'\">sieve₁'</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L90-L92","name":"CategoryTheory.PreOneHypercover.sieve₁'","line":90,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁'","doc":"The sieve of `pullback (E.f i₁) (E.f i₂)` given by `E : PreOneHypercover S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">sieve₁'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L84-L87","name":"CategoryTheory.PreOneHypercover.toPullback","line":84,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.toPullback","doc":"The obvious morphism `E.Y j ⟶ pullback (E.f i₁) (E.f i₂)` given by `E : PreOneHypercover S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.toPullback\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">toPullback</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁\">I₁</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.Y\">Y</a></span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L73-L73","name":"CategoryTheory.PreOneHypercover.sieve₁_apply","line":73,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁_apply\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">sieve₁_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₂</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Z</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">W</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁\">sieve₁</a></span> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">∃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁\">I₁</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span>) (<span class=\"fn\">h</span> : <span class=\"fn\">Z</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.Y\">Y</a></span> <span class=\"fn\">j</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">h</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.p₁\">p₁</a></span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">p₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">h</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.p₂\">p₂</a></span> <span class=\"fn\">j</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L68-L78","name":"CategoryTheory.PreOneHypercover.sieve₁","line":68,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁","doc":"Given an object `W` equipped with morphisms `p₁ : W ⟶ E.X i₁`, `p₂ : W ⟶ E.X i₂`,\nthis is the sieve of `W` which consists of morphisms `g : Z ⟶ W` such that there exists `j`\nand `h : Z ⟶ E.Y j` such that `g ≫ p₁ = h ≫ E.p₁ j` and `g ≫ p₂ = h ≫ E.p₂ j`.\nSee lemmas `sieve₁_eq_pullback_sieve₁'` and `sieve₁'_eq_sieve₁` for equational lemmas\nregarding this sieve. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">sieve₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₂</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">E</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">W</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L65-L66","name":"CategoryTheory.PreOneHypercover.sieve₀","line":65,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₀","doc":"The sieve of `S` that is generated by the morphisms `f i : X i ⟶ S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.sieve₀\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">sieve₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L61-L63","name":"CategoryTheory.PreOneHypercover.HasPullbacks","line":61,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.HasPullbacks","doc":"The assumption that the pullback of `X i₁` and `X i₂` over `S` exists\nfor any `i₁` and `i₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.HasPullbacks\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">HasPullbacks</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L55-L55","name":"CategoryTheory.PreOneHypercover.w","line":55,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.w","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.w\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">w</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁\">I₁</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.p₁\">p₁</a></span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₁</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.p₂\">p₂</a></span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\">f</a></span> <span class=\"fn\">i₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L54-L54","name":"CategoryTheory.PreOneHypercover.p₂","line":54,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.p₂","doc":"the second projection `Y j ⟶ X i₂` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.p₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">p₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁\">I₁</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.Y\">Y</a></span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L52-L52","name":"CategoryTheory.PreOneHypercover.p₁","line":52,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.p₁","doc":"the first projection `Y j ⟶ X i₁` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.p₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">p₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁\">I₁</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.Y\">Y</a></span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L50-L50","name":"CategoryTheory.PreOneHypercover.Y","line":50,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.Y","doc":"the objects in the coverings of the fibre products "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.Y\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">Y</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁\">I₁</a></span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L48-L48","name":"CategoryTheory.PreOneHypercover.I₁","line":48,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁","doc":"the index type of the coverings of the fibre products "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">I₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L46-L46","name":"CategoryTheory.PreOneHypercover.f","line":46,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f","doc":"the morphisms in the covering of `S` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\">X</a></span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L44-L44","name":"CategoryTheory.PreOneHypercover.X","line":44,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X","doc":"the objects in the covering of `S` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.X\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\">I₀</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L42-L42","name":"CategoryTheory.PreOneHypercover.I₀","line":42,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀","doc":"the index type of the covering of `S` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.I₀\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">I₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L40-L40","name":"CategoryTheory.PreOneHypercover.mk","line":40,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I₀</span> : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I₀</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I₀</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I₁</span> : <span class=\"fn\"><span class=\"fn\">I₀</span> → <span class=\"fn\">I₀</span> → <a href=\"./foundational_types.html\">Type</a> w</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\">⦃<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\">I₀</span>⦄ → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I₁</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span> → <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁</span> : <span class=\"fn\">⦃<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\">I₀</span>⦄ → <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">I₁</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i₁</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₂</span> : <span class=\"fn\">⦃<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\">I₀</span>⦄ → <span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">I₁</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">j</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">i₁ </span><span class=\"fn\">i₂</span> : <span class=\"fn\">I₀</span>⦄ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">I₁</span> <span class=\"fn\">i₁</span> <span class=\"fn\">i₂</span></span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">p₁</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i₁</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\">p₂</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i₂</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\">PreOneHypercover</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/OneHypercover.lean#L33-L55","name":"CategoryTheory.PreOneHypercover","line":33,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover","doc":"The categorical data that is involved in a `1`-hypercover of an object `S`. This\nconsists of a family of morphisms `f i : X i ⟶ S` for `i : I₀`, and for each\ntuple `(i₁, i₂)` of elements in `I₀`, a family of objects `Y j` indexed by\na type `I₁ i₁ i₂`, which are equipped with a map to the fibre product of `X i₁`\nand `X i₂`, which is phrased here as the data of the two projections\n`p₁ : Y j ⟶ X i₁`, `p₂ : Y j ⟶ X i₂` and the relation `p₁ j ≫ f i₁ = p₂ j ≫ f i₂`.\n(See `GrothendieckTopology.OneHypercover` for the topological conditions.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/OneHypercover.html#CategoryTheory.PreOneHypercover\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">PreOneHypercover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max u v) (w + 1))</div></div>"}]}