{"name":"Mathlib.NumberTheory.Modular","instances":[],"imports":["Init","Mathlib.Analysis.Complex.UpperHalfPlane.Basic","Mathlib.LinearAlgebra.GeneralLinearGroup","Mathlib.LinearAlgebra.Matrix.GeneralLinearGroup.Basic","Mathlib.Topology.Instances.Matrix","Mathlib.Topology.Algebra.Module.FiniteDimension","Mathlib.Topology.Instances.ZMultiples"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L514-L524","name":"ModularGroup.exists_one_half_le_im_smul_and_norm_denom_le","line":514,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.exists_one_half_le_im_smul_and_norm_denom_le","doc":"For every `œÑ : ‚Ñç` there is some `Œ≥ ‚àà SL(2, ‚Ñ§)` that sends it to an element whose\nimaginary part is at least `1/2` and such that `denom Œ≥ œÑ` has norm at most 1. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.exists_one_half_le_im_smul_and_norm_denom_le\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">exists_one_half_le_im_smul_and_norm_denom_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">Œ≥</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>), <span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">(<span class=\"fn\">Œ≥</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">œÑ</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.denom\">UpperHalfPlane.denom</a> <span class=\"fn\">(‚Üë<span class=\"fn\">Œ≥</span>)</span> <span class=\"fn\">œÑ</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L509-L512","name":"ModularGroup.exists_one_half_le_im_smul","line":509,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.exists_one_half_le_im_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.exists_one_half_le_im_smul\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">exists_one_half_le_im_smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÑ</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">Œ≥</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>), <span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">(<span class=\"fn\">Œ≥</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">œÑ</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L498-L503","name":"ModularGroup.eq_smul_self_of_mem_fdo_mem_fdo","line":498,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.eq_smul_self_of_mem_fdo_mem_fdo","doc":"Second Fundamental Domain Lemma: if both `z` and `g ‚Ä¢ z` are in the open domain `ùíü·µí`,\nwhere `z : ‚Ñç` and `g : SL(2,‚Ñ§)`, then `z = g ‚Ä¢ z`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.eq_smul_self_of_mem_fdo_mem_fdo\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">eq_smul_self_of_mem_fdo_mem_fdo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fdo\">fdo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fdo\">fdo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L474-L496","name":"ModularGroup.c_eq_zero","line":474,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.c_eq_zero","doc":"An auxiliary result en route to `ModularGroup.eq_smul_self_of_mem_fdo_mem_fdo`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.c_eq_zero\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">c_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fdo\">fdo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fdo\">fdo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L445-L472","name":"ModularGroup.abs_c_le_one","line":445,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.abs_c_le_one","doc":"An auxiliary result en route to `ModularGroup.c_eq_zero`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.abs_c_le_one\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">abs_c_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fdo\">fdo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fdo\">fdo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L410-L441","name":"ModularGroup.exists_smul_mem_fd","line":410,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.exists_smul_mem_fd","doc":"First Fundamental Domain Lemma: Any `z : ‚Ñç` can be moved to `ùíü` by an element of\n`SL(2,‚Ñ§)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.exists_smul_mem_fd\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">exists_smul_mem_fd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>), <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fd\">fd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L398-L408","name":"ModularGroup.eq_zero_of_mem_fdo_of_T_zpow_mem_fdo","line":398,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.eq_zero_of_mem_fdo_of_T_zpow_mem_fdo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.eq_zero_of_mem_fdo_of_T_zpow_mem_fdo\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">eq_zero_of_mem_fdo_of_T_zpow_mem_fdo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fdo\">fdo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">T</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fdo\">fdo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L391-L396","name":"ModularGroup.one_lt_normSq_T_zpow_smul","line":391,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.one_lt_normSq_T_zpow_smul","doc":"If `z ‚àà ùíü·µí`, and `n : ‚Ñ§`, then `|z + n| > 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.one_lt_normSq_T_zpow_smul\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">one_lt_normSq_T_zpow_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fdo\">fdo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq\">Complex.normSq</a> <span class=\"fn\">‚Üë(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">T</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L386-L389","name":"ModularGroup.three_le_four_mul_im_sq_of_mem_fd","line":386,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.three_le_four_mul_im_sq_of_mem_fd","doc":"non-strict variant of `ModularGroup.three_le_four_mul_im_sq_of_mem_fdo` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.three_le_four_mul_im_sq_of_mem_fd\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">three_le_four_mul_im_sq_of_mem_fd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œÑ</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">œÑ</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fd\">fd</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">œÑ</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L381-L384","name":"ModularGroup.three_lt_four_mul_im_sq_of_mem_fdo","line":381,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.three_lt_four_mul_im_sq_of_mem_fdo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.three_lt_four_mul_im_sq_of_mem_fdo\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">three_lt_four_mul_im_sq_of_mem_fdo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fdo\">fdo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L377-L379","name":"ModularGroup.abs_two_mul_re_lt_one_of_mem_fdo","line":377,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.abs_two_mul_re_lt_one_of_mem_fdo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.abs_two_mul_re_lt_one_of_mem_fdo\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">abs_two_mul_re_lt_one_of_mem_fdo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fdo\">fdo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.re\">re</a></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L372-L373","name":"Modular.¬´termùíü·µí¬ª","line":372,"kind":"def","docLink":"./Mathlib/NumberTheory/Modular.html#Modular.¬´termùíü·µí¬ª","doc":"The standard open fundamental domain of the action of `SL(2,‚Ñ§)` on `‚Ñç`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#Modular.¬´termùíü·µí¬ª\"><span class=\"name\">Modular</span>.<span class=\"name\">¬´termùíü·µí¬ª</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L369-L370","name":"Modular.termùíü","line":369,"kind":"def","docLink":"./Mathlib/NumberTheory/Modular.html#Modular.termùíü","doc":"The standard (closed) fundamental domain of the action of `SL(2,‚Ñ§)` on `‚Ñç`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#Modular.termùíü\"><span class=\"name\">Modular</span>.<span class=\"name\">termùíü</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L365-L367","name":"ModularGroup.fdo","line":365,"kind":"def","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.fdo","doc":"The standard open fundamental domain of the action of `SL(2,‚Ñ§)` on `‚Ñç`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fdo\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">fdo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L361-L363","name":"ModularGroup.fd","line":361,"kind":"def","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.fd","doc":"The standard (closed) fundamental domain of the action of `SL(2,‚Ñ§)` on `‚Ñç`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.fd\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">fd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L351-L359","name":"ModularGroup.im_lt_im_S_smul","line":351,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.im_lt_im_S_smul","doc":"If `|z| < 1`, then applying `S` strictly decreases `im`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.im_lt_im_S_smul\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">im_lt_im_S_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq\">Complex.normSq</a> <span class=\"fn\">‚Üë<span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.S\">S</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L347-L349","name":"ModularGroup.normSq_S_smul_lt_one","line":347,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.normSq_S_smul_lt_one","doc":"If `1 < |z|`, then `|S ‚Ä¢ z| < 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.normSq_S_smul_lt_one\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">normSq_S_smul_lt_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq\">Complex.normSq</a> <span class=\"fn\">‚Üë<span class=\"fn\">z</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq\">Complex.normSq</a> <span class=\"fn\">‚Üë(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.S\">S</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L339-L345","name":"ModularGroup.g_eq_of_c_eq_one","line":339,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.g_eq_of_c_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.g_eq_of_c_eq_one\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">g_eq_of_c_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">T</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.S\">S</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">T</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">1</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L324-L336","name":"ModularGroup.exists_eq_T_zpow_of_c_eq_zero","line":324,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.exists_eq_T_zpow_of_c_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.exists_eq_T_zpow_of_c_eq_zero\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">exists_eq_T_zpow_of_c_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a>), <span class=\"fn\">‚àÄ (<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>), <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">T</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L319-L319","name":"ModularGroup.im_T_inv_smul","line":319,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.im_T_inv_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.im_T_inv_smul\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">im_T_inv_smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">T</a><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">‚Åª¬π</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L317-L317","name":"ModularGroup.re_T_inv_smul","line":317,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.re_T_inv_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.re_T_inv_smul\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">re_T_inv_smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">T</a><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">‚Åª¬π</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.re\">re</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L315-L315","name":"ModularGroup.im_T_smul","line":315,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.im_T_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.im_T_smul\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">im_T_smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">T</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L313-L313","name":"ModularGroup.re_T_smul","line":313,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.re_T_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.re_T_smul\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">re_T_smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">T</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.re\">re</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L310-L311","name":"ModularGroup.im_T_zpow_smul","line":310,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.im_T_zpow_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.im_T_zpow_smul\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">im_T_zpow_smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">T</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L307-L308","name":"ModularGroup.re_T_zpow_smul","line":307,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.re_T_zpow_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.re_T_zpow_smul\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">re_T_zpow_smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">T</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.re\">re</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">‚Üë<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L303-L305","name":"ModularGroup.coe_T_zpow_smul_eq","line":303,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.coe_T_zpow_smul_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.coe_T_zpow_smul_eq\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">coe_T_zpow_smul_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚Üë(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#ModularGroup.T\">T</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚Üë<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">‚Üë<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L287-L301","name":"ModularGroup.exists_row_one_eq_and_min_re","line":287,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.exists_row_one_eq_and_min_re","doc":"Given `z : ‚Ñç` and a bottom row `(c,d)`, among the `g : SL(2,‚Ñ§)` with this bottom row, minimize\n`|(g‚Ä¢z).re|`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.exists_row_one_eq_and_min_re\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">exists_row_one_eq_and_min_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">cd</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hcd</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">1</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>),\n  <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">cd</span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">g'</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">g'</span></span> <span class=\"fn\">1</span></span> ‚Üí <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\">(<span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.re\">re</a></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\">(<span class=\"fn\">g'</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.re\">re</a></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L271-L285","name":"ModularGroup.exists_max_im","line":271,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.exists_max_im","doc":"For `z : ‚Ñç`, there is a `g : SL(2,‚Ñ§)` maximizing `(g‚Ä¢z).im` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.exists_max_im\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">exists_max_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>), <span class=\"fn\">‚àÄ (<span class=\"fn\">g'</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>), <span class=\"fn\">(<span class=\"fn\">g'</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">(<span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.im\">im</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L244-L262","name":"ModularGroup.tendsto_abs_re_smul","line":244,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.tendsto_abs_re_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.tendsto_abs_re_smul\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">tendsto_abs_re_smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">1</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">g</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) =&gt; <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\">(<span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>).<a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.re\">re</a></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a>)</span> <a href=\"./Mathlib/Order/Filter/Cofinite.html#Filter.cofinite\">Filter.cofinite</a>\n  <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L226-L242","name":"ModularGroup.smul_eq_lcRow0_add","line":226,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.smul_eq_lcRow0_add","doc":"This replaces `(g‚Ä¢z).re = a/c + *` in the standard theory with the following novel identity:\n`g ‚Ä¢ z = (a c + b d) / (c^2 + d^2) + (d z - c) / ((c^2 + d^2) (c z + d))`\nwhich does not need to be decomposed depending on whether `c = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.smul_eq_lcRow0_add\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">smul_eq_lcRow0_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">1</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚Üë(<span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">z</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0\">lcRow0</a> <span class=\"fn\">p</span>)</span> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup.map\">Matrix.SpecialLinearGroup.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castRingHom\">Int.castRingHom</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span>)</span> <span class=\"fn\">g</span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> (<span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     (<span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">‚Üë<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">0</span>)</span></span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> ((<span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">‚Üë<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">1</span>)</span></span>))</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L183-L224","name":"ModularGroup.tendsto_lcRow0","line":183,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.tendsto_lcRow0","doc":"The map `lcRow0` is proper, that is, preimages of cocompact sets are finite in\n`[[* , *], [c, d]]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.tendsto_lcRow0\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">tendsto_lcRow0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">cd</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hcd</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">1</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a>\n  <span class=\"fn\">(fun (<span class=\"fn\">g</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">cd</span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) =&gt;\n    <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0\">lcRow0</a> <span class=\"fn\">cd</span>)</span> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup.map\">Matrix.SpecialLinearGroup.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Int/Cast/Lemmas.html#Int.castRingHom\">Int.castRingHom</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span>)</span> <span class=\"fn\">‚Üë<span class=\"fn\">g</span></span>)</span></span></span>)</span>\n  <a href=\"./Mathlib/Order/Filter/Cofinite.html#Filter.cofinite\">Filter.cofinite</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#Filter.cocompact\">Filter.cocompact</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L171-L171","name":"ModularGroup.lcRow0Extend_apply","line":171,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0Extend_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0Extend_apply\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">lcRow0Extend_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">cd</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hcd</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">1</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>) ‚Üí <span class=\"fn\"><span class=\"fn\">(fun (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">a‚úù</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0Extend\">lcRow0Extend</a> <span class=\"fn\">hcd</span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">a‚úù</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/GeneralLinearGroup.html#LinearMap.GeneralLinearGroup.generalLinearEquiv\">LinearMap.GeneralLinearGroup.generalLinearEquiv</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span>)</span>\n          <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/GeneralLinearGroup/Defs.html#Matrix.GeneralLinearGroup.toLin\">Matrix.GeneralLinearGroup.toLin</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/GeneralLinearGroup/Basic.html#Matrix.planeConformalMatrix\">Matrix.planeConformalMatrix</a> <span class=\"fn\">(‚Üë<span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">0</span>)</span>)</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">1</span>)</span></span>) <span class=\"fn\">‚ãØ</span>)</span>)</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a>         <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.refl\">LinearEquiv.refl</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a>\n      <span class=\"fn\">i</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">a‚úù</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L171-L171","name":"ModularGroup.lcRow0Extend_symm_apply","line":171,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0Extend_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0Extend_symm_apply\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">lcRow0Extend_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">cd</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hcd</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">1</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>) ‚Üí <span class=\"fn\"><span class=\"fn\">(fun (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">a‚úù</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0Extend\">lcRow0Extend</a> <span class=\"fn\">hcd</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span> <span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">a‚úù</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/GeneralLinearGroup.html#LinearMap.GeneralLinearGroup.generalLinearEquiv\">LinearMap.GeneralLinearGroup.generalLinearEquiv</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span>)</span>\n            <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/GeneralLinearGroup/Defs.html#Matrix.GeneralLinearGroup.toLin\">Matrix.GeneralLinearGroup.toLin</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/GeneralLinearGroup/Basic.html#Matrix.planeConformalMatrix\">Matrix.planeConformalMatrix</a> <span class=\"fn\">(‚Üë<span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">0</span>)</span>)</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">1</span>)</span></span>) <span class=\"fn\">‚ãØ</span>)</span>)</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a>           <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.refl\">LinearEquiv.refl</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a>\n        <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span>\n    <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">a‚úù</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L169-L181","name":"ModularGroup.lcRow0Extend","line":169,"kind":"def","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0Extend","doc":"Linear map sending the matrix [a, b; c, d] to the matrix [ac‚ÇÄ + bd‚ÇÄ, - ad‚ÇÄ + bc‚ÇÄ; c, d], for\nsome fixed `(c‚ÇÄ, d‚ÇÄ)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0Extend\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">lcRow0Extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">cd</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hcd</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">1</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">‚âÉ‚Çó[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L164-L167","name":"ModularGroup.lcRow0_apply","line":164,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0_apply\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">lcRow0_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0\">lcRow0</a> <span class=\"fn\">p</span>)</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L156-L162","name":"ModularGroup.lcRow0","line":156,"kind":"def","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0","doc":"Given `coprime_pair` `p=(c,d)`, the matrix `[[a,b],[*,*]]` is sent to `a*c+b*d`.\nThis is the linear map version of this operation.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.lcRow0\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">lcRow0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">‚Üí‚Çó[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L108-L154","name":"ModularGroup.tendsto_normSq_coprime_pair","line":108,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.tendsto_normSq_coprime_pair","doc":"The function `(c,d) ‚Üí |cz+d|^2` is proper, that is, preimages of bounded-above sets are finite.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.tendsto_normSq_coprime_pair\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">tendsto_normSq_coprime_pair</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq\">Complex.normSq</a> (<span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">‚Üë<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\">p</span> <span class=\"fn\">1</span>)</span></span>)</span>)</span> <a href=\"./Mathlib/Order/Filter/Cofinite.html#Filter.cofinite\">Filter.cofinite</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L86-L98","name":"ModularGroup.bottom_row_surj","line":86,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.bottom_row_surj","doc":"Every pair `![c, d]` of coprime integers is the \"bottom_row\" of some element `g=[[*,*],[c,d]]`\nof `SL(2,‚Ñ§)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.bottom_row_surj\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">bottom_row_surj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.SurjOn\">Set.SurjOn</a> <span class=\"fn\">(fun (<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <span class=\"fn\">R</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">1</span></span>)</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">cd</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span></span> ‚Üí <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<span class=\"fn\">cd</span> <span class=\"fn\">1</span>)</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Modular.lean#L79-L84","name":"ModularGroup.bottom_row_coprime","line":79,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Modular.html#ModularGroup.bottom_row_coprime","doc":"The two numbers `c`, `d` in the \"bottom_row\" of `g=[[*,*],[c,d]]` in `SL(2, ‚Ñ§)` are coprime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Modular.html#ModularGroup.bottom_row_coprime\"><span class=\"name\">ModularGroup</span>.<span class=\"name\">bottom_row_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<span class=\"fn\">‚Üë<span class=\"fn\">g</span></span> <span class=\"fn\">1</span> <span class=\"fn\">1</span>)</span></span></div></div>"}]}