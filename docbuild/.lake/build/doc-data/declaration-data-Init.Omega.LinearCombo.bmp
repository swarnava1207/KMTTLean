{"name":"Init.Omega.LinearCombo","instances":[{"typeNames":["Eq"],"name":"Lean.Omega.instDecidableEqLinearCombo","className":"Decidable"},{"typeNames":["Lean.Omega.LinearCombo"],"name":"Lean.Omega.instReprLinearCombo","className":"Repr"},{"typeNames":["Lean.Omega.LinearCombo"],"name":"Lean.Omega.LinearCombo.instToString","className":"ToString"},{"typeNames":["Lean.Omega.LinearCombo"],"name":"Lean.Omega.LinearCombo.instInhabited","className":"Inhabited"},{"typeNames":["Lean.Omega.LinearCombo"],"name":"Lean.Omega.LinearCombo.instAdd","className":"Add"},{"typeNames":["Lean.Omega.LinearCombo"],"name":"Lean.Omega.LinearCombo.instSub","className":"Sub"},{"typeNames":["Lean.Omega.LinearCombo"],"name":"Lean.Omega.LinearCombo.instNeg","className":"Neg"},{"typeNames":["Int","Lean.Omega.LinearCombo","Lean.Omega.LinearCombo"],"name":"Lean.Omega.LinearCombo.instHMulInt","className":"HMul"}],"imports":["Init.Omega.Coeffs","Init.Data.ToString.Macro"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L175-L179","name":"Lean.Omega.LinearCombo.mul_eval","line":175,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.mul_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.mul_eval\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">mul_eval</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs\">Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span>.<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.isZero\">isZero</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span>.<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.isZero\">isZero</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.mul\">mul</a></span> <span class=\"fn\">l₂</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L169-L173","name":"Lean.Omega.LinearCombo.mul_eval_of_const_right","line":169,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.mul_eval_of_const_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.mul_eval_of_const_right\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">mul_eval_of_const_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs\">Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span>.<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.isZero\">isZero</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.mul\">mul</a></span> <span class=\"fn\">l₂</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L163-L167","name":"Lean.Omega.LinearCombo.mul_eval_of_const_left","line":163,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.mul_eval_of_const_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.mul_eval_of_const_left\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">mul_eval_of_const_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs\">Coeffs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span>.<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.isZero\">isZero</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.mul\">mul</a></span> <span class=\"fn\">l₂</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L155-L161","name":"Lean.Omega.LinearCombo.mul","line":155,"kind":"def","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.mul","doc":"Multiplication of two linear combinations.\nThis is useful only if at least one of the linear combinations is constant,\nand otherwise should be considered as a junk value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.mul\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L151-L153","name":"Lean.Omega.LinearCombo.smul_eval_comm","line":151,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.smul_eval_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.smul_eval_comm\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">smul_eval_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lc</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs\">Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">lc</span>).<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">lc</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">i</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L146-L149","name":"Lean.Omega.LinearCombo.smul_eval","line":146,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.smul_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.smul_eval\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">smul_eval</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lc</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs\">Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">lc</span>).<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">lc</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L142-L144","name":"Lean.Omega.LinearCombo.sub_eval","line":142,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.sub_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.sub_eval\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">sub_eval</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs\">Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">l₂</span>).<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L138-L140","name":"Lean.Omega.LinearCombo.neg_eval","line":138,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.neg_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.neg_eval\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">neg_eval</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lc</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs\">Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">lc</span>).<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">lc</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L131-L136","name":"Lean.Omega.LinearCombo.add_eval","line":131,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.add_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.add_eval\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">add_eval</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs\">Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">l₂</span>).<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L129-L129","name":"Lean.Omega.LinearCombo.smul_coeffs","line":129,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.smul_coeffs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.smul_coeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">smul_coeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">lc</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">lc</span>).<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">lc</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L128-L128","name":"Lean.Omega.LinearCombo.smul_const","line":128,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.smul_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.smul_const\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">smul_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">lc</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">lc</span>).<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\">const</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">lc</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\">const</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L126-L126","name":"Lean.Omega.LinearCombo.instHMulInt","line":126,"kind":"instance","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.instHMulInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.instHMulInt\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">instHMulInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HMul\">HMul</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a> <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L121-L124","name":"Lean.Omega.LinearCombo.smul","line":121,"kind":"def","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.smul","doc":"Implementation of scalar multiplication of a `LinearCombo` by an `Int`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.smul\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">smul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lc</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L115-L119","name":"Lean.Omega.LinearCombo.sub_eq_add_neg","line":115,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.sub_eq_add_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.sub_eq_add_neg\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">sub_eq_add_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">l₂</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">l₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L113-L113","name":"Lean.Omega.LinearCombo.neg_coeffs","line":113,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.neg_coeffs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.neg_coeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">neg_coeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">l</span>).<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L112-L112","name":"Lean.Omega.LinearCombo.neg_const","line":112,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.neg_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.neg_const\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">neg_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">l</span>).<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\">const</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\">const</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L110-L110","name":"Lean.Omega.LinearCombo.instNeg","line":110,"kind":"instance","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.instNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.instNeg\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">instNeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L105-L108","name":"Lean.Omega.LinearCombo.neg","line":105,"kind":"def","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.neg","doc":"Implementation of negation on `LinearCombo`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.neg\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lc</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L103-L103","name":"Lean.Omega.LinearCombo.sub_coeffs","line":103,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.sub_coeffs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.sub_coeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">sub_coeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">l₂</span>).<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L102-L102","name":"Lean.Omega.LinearCombo.sub_const","line":102,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.sub_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.sub_const\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">sub_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">l₂</span>).<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\">const</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\">const</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\">const</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L100-L100","name":"Lean.Omega.LinearCombo.instSub","line":100,"kind":"instance","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.instSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.instSub\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">instSub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L95-L98","name":"Lean.Omega.LinearCombo.sub","line":95,"kind":"def","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.sub","doc":"Implementation of subtraction on `LinearCombo`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.sub\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L93-L93","name":"Lean.Omega.LinearCombo.add_coeffs","line":93,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.add_coeffs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.add_coeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">add_coeffs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">l₂</span>).<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L92-L92","name":"Lean.Omega.LinearCombo.add_const","line":92,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.add_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.add_const\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">add_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">l₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">l₂</span>).<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\">const</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">l₁</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\">const</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">l₂</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\">const</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L90-L90","name":"Lean.Omega.LinearCombo.instAdd","line":90,"kind":"instance","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.instAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.instAdd\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">instAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L85-L88","name":"Lean.Omega.LinearCombo.add","line":85,"kind":"def","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.add","doc":"Implementation of addition on `LinearCombo`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.add\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l₁ </span><span class=\"fn\">l₂</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L81-L83","name":"Lean.Omega.LinearCombo.coordinate_eval_9","line":81,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_9","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_9\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">coordinate_eval_9</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a0 </span><span class=\"fn\">a1 </span><span class=\"fn\">a2 </span><span class=\"fn\">a3 </span><span class=\"fn\">a4 </span><span class=\"fn\">a5 </span><span class=\"fn\">a6 </span><span class=\"fn\">a7 </span><span class=\"fn\">a8 </span><span class=\"fn\">a9</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate\">coordinate</a> <span class=\"fn\">9</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.ofList\">Coeffs.ofList</a> (<span class=\"fn\">a0</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a1</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a2</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a3</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a4</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a5</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a6</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a7</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a8</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a9</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">t</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a9</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L78-L80","name":"Lean.Omega.LinearCombo.coordinate_eval_8","line":78,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_8\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">coordinate_eval_8</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a0 </span><span class=\"fn\">a1 </span><span class=\"fn\">a2 </span><span class=\"fn\">a3 </span><span class=\"fn\">a4 </span><span class=\"fn\">a5 </span><span class=\"fn\">a6 </span><span class=\"fn\">a7 </span><span class=\"fn\">a8</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate\">coordinate</a> <span class=\"fn\">8</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.ofList\">Coeffs.ofList</a> (<span class=\"fn\">a0</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a1</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a2</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a3</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a4</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a5</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a6</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a7</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a8</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">t</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a8</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L75-L77","name":"Lean.Omega.LinearCombo.coordinate_eval_7","line":75,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_7","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_7\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">coordinate_eval_7</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a0 </span><span class=\"fn\">a1 </span><span class=\"fn\">a2 </span><span class=\"fn\">a3 </span><span class=\"fn\">a4 </span><span class=\"fn\">a5 </span><span class=\"fn\">a6 </span><span class=\"fn\">a7</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate\">coordinate</a> <span class=\"fn\">7</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.ofList\">Coeffs.ofList</a> (<span class=\"fn\">a0</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a1</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a2</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a3</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a4</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a5</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a6</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a7</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">t</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a7</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L73-L74","name":"Lean.Omega.LinearCombo.coordinate_eval_6","line":73,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_6\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">coordinate_eval_6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a0 </span><span class=\"fn\">a1 </span><span class=\"fn\">a2 </span><span class=\"fn\">a3 </span><span class=\"fn\">a4 </span><span class=\"fn\">a5 </span><span class=\"fn\">a6</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate\">coordinate</a> <span class=\"fn\">6</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.ofList\">Coeffs.ofList</a> (<span class=\"fn\">a0</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a1</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a2</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a3</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a4</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a5</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a6</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">t</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a6</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L71-L72","name":"Lean.Omega.LinearCombo.coordinate_eval_5","line":71,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_5\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">coordinate_eval_5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a0 </span><span class=\"fn\">a1 </span><span class=\"fn\">a2 </span><span class=\"fn\">a3 </span><span class=\"fn\">a4 </span><span class=\"fn\">a5</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate\">coordinate</a> <span class=\"fn\">5</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.ofList\">Coeffs.ofList</a> (<span class=\"fn\">a0</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a1</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a2</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a3</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a4</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a5</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">t</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a5</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L69-L70","name":"Lean.Omega.LinearCombo.coordinate_eval_4","line":69,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_4\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">coordinate_eval_4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a0 </span><span class=\"fn\">a1 </span><span class=\"fn\">a2 </span><span class=\"fn\">a3 </span><span class=\"fn\">a4</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate\">coordinate</a> <span class=\"fn\">4</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.ofList\">Coeffs.ofList</a> (<span class=\"fn\">a0</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a1</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a2</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a3</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a4</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">t</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a4</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L67-L68","name":"Lean.Omega.LinearCombo.coordinate_eval_3","line":67,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_3\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">coordinate_eval_3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a0 </span><span class=\"fn\">a1 </span><span class=\"fn\">a2 </span><span class=\"fn\">a3</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate\">coordinate</a> <span class=\"fn\">3</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.ofList\">Coeffs.ofList</a> (<span class=\"fn\">a0</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a1</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a2</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a3</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">t</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a3</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L66-L66","name":"Lean.Omega.LinearCombo.coordinate_eval_2","line":66,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_2\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">coordinate_eval_2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a0 </span><span class=\"fn\">a1 </span><span class=\"fn\">a2</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate\">coordinate</a> <span class=\"fn\">2</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.ofList\">Coeffs.ofList</a> (<span class=\"fn\">a0</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a1</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a2</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">t</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L65-L65","name":"Lean.Omega.LinearCombo.coordinate_eval_1","line":65,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_1\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">coordinate_eval_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a0 </span><span class=\"fn\">a1</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate\">coordinate</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.ofList\">Coeffs.ofList</a> (<span class=\"fn\">a0</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">a1</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">t</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L64-L64","name":"Lean.Omega.LinearCombo.coordinate_eval_0","line":64,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval_0\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">coordinate_eval_0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a0</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate\">coordinate</a> <span class=\"fn\">0</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">(<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.ofList\">Coeffs.ofList</a> (<span class=\"fn\">a0</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">t</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L60-L62","name":"Lean.Omega.LinearCombo.coordinate_eval","line":60,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate_eval\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">coordinate_eval</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs\">Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate\">coordinate</a> <span class=\"fn\">i</span>)</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs.get\">get</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L55-L58","name":"Lean.Omega.LinearCombo.coordinate","line":55,"kind":"def","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate","doc":"The `i`-th coordinate function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coordinate\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">coordinate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L52-L53","name":"Lean.Omega.LinearCombo.eval_nil","line":52,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval_nil\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">eval_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">lc</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">lc</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\">eval</a></span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">lc</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\">const</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L45-L50","name":"Lean.Omega.LinearCombo.eval","line":45,"kind":"def","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval","doc":"Evaluate a linear combination `⟨r, [c_1, …, c_k]⟩` at values `[v_1, …, v_k]` to obtain\n`r + (c_1 * x_1 + (c_2 * x_2 + ... (c_k * x_k + 0))))`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.eval\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">eval</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lc</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">values</span> : <a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs\">Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L41-L43","name":"Lean.Omega.LinearCombo.isAtom","line":41,"kind":"def","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.isAtom","doc":"Check if a linear combination is an atom, i.e. the constant term is zero and there is exactly one nonzero coefficient, which is one. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.isAtom\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">isAtom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L35-L39","name":"Lean.Omega.LinearCombo.ext","line":35,"kind":"theorem","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w₁</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\">const</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\">const</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w₂</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\">coeffs</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L33-L33","name":"Lean.Omega.LinearCombo.instInhabited","line":33,"kind":"instance","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.instInhabited\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L29-L31","name":"Lean.Omega.LinearCombo.instToString","line":29,"kind":"instance","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.instToString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.instToString\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">instToString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L25-L25","name":"Lean.Omega.instReprLinearCombo","line":25,"kind":"instance","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.instReprLinearCombo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.instReprLinearCombo\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">instReprLinearCombo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L25-L25","name":"Lean.Omega.instDecidableEqLinearCombo","line":25,"kind":"instance","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.instDecidableEqLinearCombo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.instDecidableEqLinearCombo\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">instDecidableEqLinearCombo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L24-L24","name":"Lean.Omega.LinearCombo.coeffs","line":24,"kind":"def","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs","doc":"Coefficients of the atoms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.coeffs\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">coeffs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs\">Coeffs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L22-L22","name":"Lean.Omega.LinearCombo.const","line":22,"kind":"def","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const","doc":"Constant term. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.const\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L20-L20","name":"Lean.Omega.LinearCombo.mk","line":20,"kind":"ctor","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">const</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">coeffs</span> : <a href=\"./Init/Omega/Coeffs.html#Lean.Omega.Coeffs\">Coeffs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\">LinearCombo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Omega/LinearCombo.lean#L19-L25","name":"Lean.Omega.LinearCombo","line":19,"kind":"structure","docLink":"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo","doc":"Internal representation of a linear combination of atoms, and a constant term. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Omega/LinearCombo.html#Lean.Omega.LinearCombo\"><span class=\"name\">Lean</span>.<span class=\"name\">Omega</span>.<span class=\"name\">LinearCombo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}