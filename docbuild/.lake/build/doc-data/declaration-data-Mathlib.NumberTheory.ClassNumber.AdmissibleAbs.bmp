{"name":"Mathlib.NumberTheory.ClassNumber.AdmissibleAbs","instances":[{"typeNames":["AbsoluteValue.IsAdmissible"],"name":"AbsoluteValue.instInhabitedIsAdmissibleIntAbs","className":"Inhabited"}],"imports":["Init","Mathlib.Algebra.Algebra.Basic","Mathlib.NumberTheory.ClassNumber.AdmissibleAbsoluteValue","Mathlib.Data.Real.Archimedean"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ClassNumber/AdmissibleAbs.lean#L58-L59","name":"AbsoluteValue.instInhabitedIsAdmissibleIntAbs","line":58,"kind":"instance","docLink":"./Mathlib/NumberTheory/ClassNumber/AdmissibleAbs.html#AbsoluteValue.instInhabitedIsAdmissibleIntAbs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ClassNumber/AdmissibleAbs.html#AbsoluteValue.instInhabitedIsAdmissibleIntAbs\"><span class=\"name\">AbsoluteValue</span>.<span class=\"name\">instInhabitedIsAdmissibleIntAbs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/AbsoluteValue/Basic.html#AbsoluteValue.abs\">AbsoluteValue.abs</a>.<a href=\"./Mathlib/NumberTheory/ClassNumber/AdmissibleAbsoluteValue.html#AbsoluteValue.IsAdmissible\">IsAdmissible</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ClassNumber/AdmissibleAbs.lean#L52-L56","name":"AbsoluteValue.absIsAdmissible","line":52,"kind":"def","docLink":"./Mathlib/NumberTheory/ClassNumber/AdmissibleAbs.html#AbsoluteValue.absIsAdmissible","doc":"`abs : ℤ → ℤ` is an admissible absolute value. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ClassNumber/AdmissibleAbs.html#AbsoluteValue.absIsAdmissible\"><span class=\"name\">AbsoluteValue</span>.<span class=\"name\">absIsAdmissible</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/AbsoluteValue/Basic.html#AbsoluteValue.abs\">AbsoluteValue.abs</a>.<a href=\"./Mathlib/NumberTheory/ClassNumber/AdmissibleAbsoluteValue.html#AbsoluteValue.IsAdmissible\">IsAdmissible</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ClassNumber/AdmissibleAbs.lean#L27-L50","name":"AbsoluteValue.exists_partition_int","line":27,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ClassNumber/AdmissibleAbs.html#AbsoluteValue.exists_partition_int","doc":"We can partition a finite family into `partition_card ε` sets, such that the remainders\nin each set are close together. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ClassNumber/AdmissibleAbs.html#AbsoluteValue.exists_partition_int\"><span class=\"name\">AbsoluteValue</span>.<span class=\"name\">exists_partition_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ε</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hε</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">ε</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.ceil\">⌈</a><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">ε</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.ceil\">⌉₊</a></span></span>), <span class=\"fn\">∀ (<span class=\"fn\">i₀ </span><span class=\"fn\">i₁</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i₁</span></span> → <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i₁</span></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">i₀</span></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\">b</span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">ε</span></span></span></span></div></div>"}]}