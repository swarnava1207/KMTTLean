{"name":"Mathlib.NumberTheory.BernoulliPolynomials","instances":[],"imports":["Init","Mathlib.Algebra.Polynomial.AlgebraMap","Mathlib.Algebra.Polynomial.Derivative","Mathlib.Data.Nat.Choose.Cast","Mathlib.NumberTheory.Bernoulli"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/BernoulliPolynomials.lean#L205-L243","name":"Polynomial.bernoulli_generating_function","line":205,"kind":"theorem","docLink":"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_generating_function","doc":"The theorem that $(e^X - 1) * ∑ Bₙ(t)* X^n/n! = Xe^{tX}$ "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_generating_function\"><span class=\"name\">Polynomial</span>.<span class=\"name\">bernoulli_generating_function</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.mk\">PowerSeries.mk</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/AlgebraMap.html#Polynomial.aeval\">aeval</a> <span class=\"fn\">t</span>)</span> ((<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span></span>) <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\">n</span></span>)</span></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/WellKnown.html#PowerSeries.exp\">PowerSeries.exp</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.X\">PowerSeries.X</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.rescale\">PowerSeries.rescale</a> <span class=\"fn\">t</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/WellKnown.html#PowerSeries.exp\">PowerSeries.exp</a> <span class=\"fn\">A</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/BernoulliPolynomials.lean#L175-L197","name":"Polynomial.bernoulli_eval_one_add","line":175,"kind":"theorem","docLink":"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_eval_one_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_eval_one_add\"><span class=\"name\">Polynomial</span>.<span class=\"name\">bernoulli_eval_one_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">eval</a> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span>) <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">eval</a> <span class=\"fn\">x</span> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/BernoulliPolynomials.lean#L169-L173","name":"Polynomial.bernoulli_succ_eval","line":169,"kind":"theorem","docLink":"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_succ_eval","doc":"Rearrangement of `Polynomial.sum_range_pow_eq_bernoulli_sub`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_succ_eval\"><span class=\"name\">Polynomial</span>.<span class=\"name\">bernoulli_succ_eval</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">eval</a> <span class=\"fn\">(↑<span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli\">_root_.bernoulli</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/BernoulliPolynomials.lean#L152-L167","name":"Polynomial.sum_range_pow_eq_bernoulli_sub","line":152,"kind":"theorem","docLink":"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.sum_range_pow_eq_bernoulli_sub","doc":"Another version of `sum_range_pow`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.sum_range_pow_eq_bernoulli_sub\"><span class=\"name\">Polynomial</span>.<span class=\"name\">sum_range_pow_eq_bernoulli_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">eval</a> <span class=\"fn\">(↑<span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli\">_root_.bernoulli</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/BernoulliPolynomials.lean#L145-L150","name":"Polynomial.bernoulli_eq_sub_sum","line":145,"kind":"theorem","docLink":"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_eq_sub_sum","doc":"Another version of `Polynomial.sum_bernoulli`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_eq_sub_sum\"><span class=\"name\">Polynomial</span>.<span class=\"name\">bernoulli_eq_sub_sum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.monomial\">monomial</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/BernoulliPolynomials.lean#L109-L143","name":"Polynomial.sum_bernoulli","line":109,"kind":"theorem","docLink":"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.sum_bernoulli","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.sum_bernoulli\"><span class=\"name\">Polynomial</span>.<span class=\"name\">sum_bernoulli</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">k</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.monomial\">monomial</a> <span class=\"fn\">n</span>)</span> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/BernoulliPolynomials.lean#L103-L107","name":"Polynomial.derivative_bernoulli","line":103,"kind":"theorem","docLink":"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.derivative_bernoulli","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.derivative_bernoulli\"><span class=\"name\">Polynomial</span>.<span class=\"name\">derivative_bernoulli</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">derivative</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\">k</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/BernoulliPolynomials.lean#L90-L101","name":"Polynomial.derivative_bernoulli_add_one","line":90,"kind":"theorem","docLink":"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.derivative_bernoulli_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.derivative_bernoulli_add_one\"><span class=\"name\">Polynomial</span>.<span class=\"name\">derivative_bernoulli_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Derivative.html#Polynomial.derivative\">derivative</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/BernoulliPolynomials.lean#L79-L86","name":"Polynomial.bernoulli_eval_one","line":79,"kind":"theorem","docLink":"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_eval_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_eval_one\"><span class=\"name\">Polynomial</span>.<span class=\"name\">bernoulli_eval_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">eval</a> <span class=\"fn\">1</span> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli'\">bernoulli'</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/BernoulliPolynomials.lean#L70-L77","name":"Polynomial.bernoulli_eval_zero","line":70,"kind":"theorem","docLink":"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_eval_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_eval_zero\"><span class=\"name\">Polynomial</span>.<span class=\"name\">bernoulli_eval_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">eval</a> <span class=\"fn\">0</span> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli\">_root_.bernoulli</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/BernoulliPolynomials.lean#L67-L68","name":"Polynomial.bernoulli_zero","line":67,"kind":"theorem","docLink":"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_zero\"><span class=\"name\">Polynomial</span>.<span class=\"name\">bernoulli_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/BernoulliPolynomials.lean#L54-L60","name":"Polynomial.bernoulli_def","line":54,"kind":"theorem","docLink":"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli_def\"><span class=\"name\">Polynomial</span>.<span class=\"name\">bernoulli_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\">bernoulli</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial.monomial\">monomial</a> <span class=\"fn\">i</span>)</span> (<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Bernoulli.html#bernoulli\">_root_.bernoulli</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\">i</span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/BernoulliPolynomials.lean#L50-L52","name":"Polynomial.bernoulli","line":50,"kind":"def","docLink":"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli","doc":"The Bernoulli polynomials are defined in terms of the negative Bernoulli numbers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/BernoulliPolynomials.html#Polynomial.bernoulli\"><span class=\"name\">Polynomial</span>.<span class=\"name\">bernoulli</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span></div></div>"}]}