{"name":"Mathlib.Geometry.Manifold.VectorBundle.MDifferentiable","instances":[],"imports":["Init","Mathlib.Geometry.Manifold.VectorBundle.Basic","Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/MDifferentiable.lean#L126-L146","name":"MDifferentiableAt.clm_apply_of_inCoordinates","line":126,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/MDifferentiable.html#MDifferentiableAt.clm_apply_of_inCoordinates","doc":"Consider a differentiable map `v : M ‚Üí E‚ÇÅ` to a vector bundle, over a basemap `b‚ÇÅ : M ‚Üí B‚ÇÅ`, and\nanother basemap `b‚ÇÇ : M ‚Üí B‚ÇÇ`. Given linear maps `œï m : E‚ÇÅ (b‚ÇÅ m) ‚Üí E‚ÇÇ (b‚ÇÇ m)` depending\ndifferentiably on `m`, one can apply `œï m` to `g m`, and the resulting map is differentiable.\n\nNote that the differentiability of `œï` can not be always be stated as differentiability of a map\ninto a manifold, as the pullback bundles `b‚ÇÅ *·µñ E‚ÇÅ` and `b‚ÇÇ *·µñ E‚ÇÇ` only make sense when `b‚ÇÅ`\nand `b‚ÇÇ` are globally smooth, but we want to apply this lemma with only local information.\nTherefore, we formulate it using differentiability of `œï` read in coordinates.\n\nVersion for `MDifferentiableAt`. We also give a version for `MDifferentiableWithinAt`,\nbut no version for `MDifferentiableOn` or `MDifferentiable` as our assumption, written\nin coordinates, only makes sense around a point.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/MDifferentiable.html#MDifferentiableAt.clm_apply_of_inCoordinates\"><span class=\"name\">MDifferentiableAt</span>.<span class=\"name\">clm_apply_of_inCoordinates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùïú</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F‚ÇÅ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F‚ÇÇ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B‚ÇÅ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B‚ÇÇ</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E‚ÇÅ</span> : <span class=\"fn\"><span class=\"fn\">B‚ÇÅ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E‚ÇÇ</span> : <span class=\"fn\"><span class=\"fn\">B‚ÇÇ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B‚ÇÅ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\">E‚ÇÅ</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B‚ÇÅ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">(<span class=\"fn\">E‚ÇÅ</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Bundle.html#Bundle.TotalSpace\">Bundle.TotalSpace</a> <span class=\"fn\">F‚ÇÅ</span> <span class=\"fn\">E‚ÇÅ</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B‚ÇÅ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">E‚ÇÅ</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B‚ÇÇ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\">E‚ÇÇ</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B‚ÇÇ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">(<span class=\"fn\">E‚ÇÇ</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Bundle.html#Bundle.TotalSpace\">Bundle.TotalSpace</a> <span class=\"fn\">F‚ÇÇ</span> <span class=\"fn\">E‚ÇÇ</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B‚ÇÇ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">E‚ÇÇ</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EB‚ÇÅ</span> : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EB‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EB‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HB‚ÇÅ</span> : <a href=\"./foundational_types.html\">Type</a> u_10}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HB‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">IB‚ÇÅ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EB‚ÇÅ</span> <span class=\"fn\">HB‚ÇÅ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HB‚ÇÅ</span> <span class=\"fn\">B‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EB‚ÇÇ</span> : <a href=\"./foundational_types.html\">Type</a> u_11}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EB‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EB‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HB‚ÇÇ</span> : <a href=\"./foundational_types.html\">Type</a> u_12}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HB‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">IB‚ÇÇ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EB‚ÇÇ</span> <span class=\"fn\">HB‚ÇÇ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HB‚ÇÇ</span> <span class=\"fn\">B‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EM</span> : <a href=\"./foundational_types.html\">Type</a> u_13}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EM</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EM</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HM</span> : <a href=\"./foundational_types.html\">Type</a> u_14}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HM</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">IM</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EM</span> <span class=\"fn\">HM</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HM</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/FiberBundle/Basic.html#FiberBundle\">FiberBundle</a> <span class=\"fn\">F‚ÇÅ</span> <span class=\"fn\">E‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundle\">VectorBundle</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F‚ÇÅ</span> <span class=\"fn\">E‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/FiberBundle/Basic.html#FiberBundle\">FiberBundle</a> <span class=\"fn\">F‚ÇÇ</span> <span class=\"fn\">E‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundle\">VectorBundle</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F‚ÇÇ</span> <span class=\"fn\">E‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b‚ÇÅ</span> : <span class=\"fn\"><span class=\"fn\">M</span> ‚Üí <span class=\"fn\">B‚ÇÅ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b‚ÇÇ</span> : <span class=\"fn\"><span class=\"fn\">M</span> ‚Üí <span class=\"fn\">B‚ÇÇ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m‚ÇÄ</span> : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œï</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\">M</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">E‚ÇÅ</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÅ</span> <span class=\"fn\">m</span>)</span></span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">‚ÜíL[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">E‚ÇÇ</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÇ</span> <span class=\"fn\">m</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\">M</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">E‚ÇÅ</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÅ</span> <span class=\"fn\">m</span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hœï</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/MFDeriv/Defs.html#MDifferentiableAt\">MDifferentiableAt</a> <span class=\"fn\">IM</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">ùïú</span> (<span class=\"fn\">F‚ÇÅ</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">‚ÜíL[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F‚ÇÇ</span>))</span>\n    <span class=\"fn\">(fun (<span class=\"fn\">m</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/VectorBundle/Basic.html#ContinuousLinearMap.inCoordinates\">ContinuousLinearMap.inCoordinates</a> <span class=\"fn\">F‚ÇÅ</span> <span class=\"fn\">E‚ÇÅ</span> <span class=\"fn\">F‚ÇÇ</span> <span class=\"fn\">E‚ÇÇ</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÅ</span> <span class=\"fn\">m‚ÇÄ</span>)</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÅ</span> <span class=\"fn\">m</span>)</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÇ</span> <span class=\"fn\">m‚ÇÄ</span>)</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÇ</span> <span class=\"fn\">m</span>)</span> <span class=\"fn\">(<span class=\"fn\">œï</span> <span class=\"fn\">m</span>)</span></span>)</span> <span class=\"fn\">m‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/MFDeriv/Defs.html#MDifferentiableAt\">MDifferentiableAt</a> <span class=\"fn\">IM</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">IB‚ÇÅ</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.prod\">prod</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F‚ÇÅ</span>)</span>)</span> <span class=\"fn\">(fun (<span class=\"fn\">m</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\"><span class=\"fn\">b‚ÇÅ</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">m</span></span> }</span>)</span> <span class=\"fn\">m‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb‚ÇÇ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/MFDeriv/Defs.html#MDifferentiableAt\">MDifferentiableAt</a> <span class=\"fn\">IM</span> <span class=\"fn\">IB‚ÇÇ</span> <span class=\"fn\">b‚ÇÇ</span> <span class=\"fn\">m‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/MFDeriv/Defs.html#MDifferentiableAt\">MDifferentiableAt</a> <span class=\"fn\">IM</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">IB‚ÇÇ</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.prod\">prod</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F‚ÇÇ</span>)</span>)</span> <span class=\"fn\">(fun (<span class=\"fn\">m</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\"><span class=\"fn\">b‚ÇÇ</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">œï</span> <span class=\"fn\">m</span>)</span> <span class=\"fn\">(<span class=\"fn\">v</span> <span class=\"fn\">m</span>)</span></span> }</span>)</span> <span class=\"fn\">m‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/MDifferentiable.lean#L88-L124","name":"MDifferentiableWithinAt.clm_apply_of_inCoordinates","line":88,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/MDifferentiable.html#MDifferentiableWithinAt.clm_apply_of_inCoordinates","doc":"Consider a differentiable map `v : M ‚Üí E‚ÇÅ` to a vector bundle, over a basemap `b‚ÇÅ : M ‚Üí B‚ÇÅ`, and\nanother basemap `b‚ÇÇ : M ‚Üí B‚ÇÇ`. Given linear maps `œï m : E‚ÇÅ (b‚ÇÅ m) ‚Üí E‚ÇÇ (b‚ÇÇ m)` depending\ndifferentiably on `m`, one can apply `œï m` to `g m`, and the resulting map is differentiable.\n\nNote that the differentiability of `œï` can not be always be stated as differentiability of a map\ninto a manifold, as the pullback bundles `b‚ÇÅ *·µñ E‚ÇÅ` and `b‚ÇÇ *·µñ E‚ÇÇ` only make sense when `b‚ÇÅ`\nand `b‚ÇÇ` are globally smooth, but we want to apply this lemma with only local information.\nTherefore, we formulate it using differentiability of `œï` read in coordinates.\n\nVersion for `MDifferentiableWithinAt`. We also give a version for `MDifferentiableAt`, but no\nversion for `MDifferentiableOn` or `MDifferentiable` as our assumption, written in coordinates,\nonly makes sense around a point.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/MDifferentiable.html#MDifferentiableWithinAt.clm_apply_of_inCoordinates\"><span class=\"name\">MDifferentiableWithinAt</span>.<span class=\"name\">clm_apply_of_inCoordinates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùïú</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F‚ÇÅ</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F‚ÇÇ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B‚ÇÅ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B‚ÇÇ</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E‚ÇÅ</span> : <span class=\"fn\"><span class=\"fn\">B‚ÇÅ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E‚ÇÇ</span> : <span class=\"fn\"><span class=\"fn\">B‚ÇÇ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B‚ÇÅ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\">E‚ÇÅ</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B‚ÇÅ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">(<span class=\"fn\">E‚ÇÅ</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Bundle.html#Bundle.TotalSpace\">Bundle.TotalSpace</a> <span class=\"fn\">F‚ÇÅ</span> <span class=\"fn\">E‚ÇÅ</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B‚ÇÅ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">E‚ÇÅ</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B‚ÇÇ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<span class=\"fn\">E‚ÇÇ</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B‚ÇÇ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">(<span class=\"fn\">E‚ÇÇ</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Bundle.html#Bundle.TotalSpace\">Bundle.TotalSpace</a> <span class=\"fn\">F‚ÇÇ</span> <span class=\"fn\">E‚ÇÇ</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B‚ÇÇ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">E‚ÇÇ</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EB‚ÇÅ</span> : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EB‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EB‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HB‚ÇÅ</span> : <a href=\"./foundational_types.html\">Type</a> u_10}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HB‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">IB‚ÇÅ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EB‚ÇÅ</span> <span class=\"fn\">HB‚ÇÅ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HB‚ÇÅ</span> <span class=\"fn\">B‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EB‚ÇÇ</span> : <a href=\"./foundational_types.html\">Type</a> u_11}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EB‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EB‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HB‚ÇÇ</span> : <a href=\"./foundational_types.html\">Type</a> u_12}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HB‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">IB‚ÇÇ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EB‚ÇÇ</span> <span class=\"fn\">HB‚ÇÇ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HB‚ÇÇ</span> <span class=\"fn\">B‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EM</span> : <a href=\"./foundational_types.html\">Type</a> u_13}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EM</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EM</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HM</span> : <a href=\"./foundational_types.html\">Type</a> u_14}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HM</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">IM</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EM</span> <span class=\"fn\">HM</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HM</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/FiberBundle/Basic.html#FiberBundle\">FiberBundle</a> <span class=\"fn\">F‚ÇÅ</span> <span class=\"fn\">E‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundle\">VectorBundle</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F‚ÇÅ</span> <span class=\"fn\">E‚ÇÅ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/FiberBundle/Basic.html#FiberBundle\">FiberBundle</a> <span class=\"fn\">F‚ÇÇ</span> <span class=\"fn\">E‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/VectorBundle/Basic.html#VectorBundle\">VectorBundle</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F‚ÇÇ</span> <span class=\"fn\">E‚ÇÇ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b‚ÇÅ</span> : <span class=\"fn\"><span class=\"fn\">M</span> ‚Üí <span class=\"fn\">B‚ÇÅ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b‚ÇÇ</span> : <span class=\"fn\"><span class=\"fn\">M</span> ‚Üí <span class=\"fn\">B‚ÇÇ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m‚ÇÄ</span> : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">œï</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\">M</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">E‚ÇÅ</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÅ</span> <span class=\"fn\">m</span>)</span></span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">‚ÜíL[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">E‚ÇÇ</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÇ</span> <span class=\"fn\">m</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\">M</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">E‚ÇÅ</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÅ</span> <span class=\"fn\">m</span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hœï</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/MFDeriv/Defs.html#MDifferentiableWithinAt\">MDifferentiableWithinAt</a> <span class=\"fn\">IM</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">ùïú</span> (<span class=\"fn\">F‚ÇÅ</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">‚ÜíL[</a><span class=\"fn\">ùïú</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F‚ÇÇ</span>))</span>\n    <span class=\"fn\">(fun (<span class=\"fn\">m</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/VectorBundle/Basic.html#ContinuousLinearMap.inCoordinates\">ContinuousLinearMap.inCoordinates</a> <span class=\"fn\">F‚ÇÅ</span> <span class=\"fn\">E‚ÇÅ</span> <span class=\"fn\">F‚ÇÇ</span> <span class=\"fn\">E‚ÇÇ</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÅ</span> <span class=\"fn\">m‚ÇÄ</span>)</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÅ</span> <span class=\"fn\">m</span>)</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÇ</span> <span class=\"fn\">m‚ÇÄ</span>)</span> <span class=\"fn\">(<span class=\"fn\">b‚ÇÇ</span> <span class=\"fn\">m</span>)</span> <span class=\"fn\">(<span class=\"fn\">œï</span> <span class=\"fn\">m</span>)</span></span>)</span> <span class=\"fn\">s</span> <span class=\"fn\">m‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/MFDeriv/Defs.html#MDifferentiableWithinAt\">MDifferentiableWithinAt</a> <span class=\"fn\">IM</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">IB‚ÇÅ</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.prod\">prod</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F‚ÇÅ</span>)</span>)</span> <span class=\"fn\">(fun (<span class=\"fn\">m</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\"><span class=\"fn\">b‚ÇÅ</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">m</span></span> }</span>)</span> <span class=\"fn\">s</span> <span class=\"fn\">m‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb‚ÇÇ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/MFDeriv/Defs.html#MDifferentiableWithinAt\">MDifferentiableWithinAt</a> <span class=\"fn\">IM</span> <span class=\"fn\">IB‚ÇÇ</span> <span class=\"fn\">b‚ÇÇ</span> <span class=\"fn\">s</span> <span class=\"fn\">m‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/MFDeriv/Defs.html#MDifferentiableWithinAt\">MDifferentiableWithinAt</a> <span class=\"fn\">IM</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">IB‚ÇÇ</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.prod\">prod</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F‚ÇÇ</span>)</span>)</span> <span class=\"fn\">(fun (<span class=\"fn\">m</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\"><span class=\"fn\">b‚ÇÇ</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">œï</span> <span class=\"fn\">m</span>)</span> <span class=\"fn\">(<span class=\"fn\">v</span> <span class=\"fn\">m</span>)</span></span> }</span>)</span>\n  <span class=\"fn\">s</span> <span class=\"fn\">m‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/MDifferentiable.lean#L36-L56","name":"mdifferentiableWithinAt_totalSpace","line":36,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/MDifferentiable.html#mdifferentiableWithinAt_totalSpace","doc":"Characterization of differentiable functions into a vector bundle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/MDifferentiable.html#mdifferentiableWithinAt_totalSpace\"><span class=\"name\">mdifferentiableWithinAt_totalSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùïú</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <span class=\"fn\"><span class=\"fn\">B</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_6</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Bundle.html#Bundle.TotalSpace\">Bundle.TotalSpace</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">E</span> <span class=\"fn\">x</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EB</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HB</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HB</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">IB</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EB</span> <span class=\"fn\">HB</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EM</span> : <a href=\"./foundational_types.html\">Type</a> u_10}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EM</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EM</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HM</span> : <a href=\"./foundational_types.html\">Type</a> u_11}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HM</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">IM</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">EM</span> <span class=\"fn\">HM</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HM</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HB</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/FiberBundle/Basic.html#FiberBundle\">FiberBundle</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Data/Bundle.html#Bundle.TotalSpace\">Bundle.TotalSpace</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x‚ÇÄ</span> : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/MFDeriv/Defs.html#MDifferentiableWithinAt\">MDifferentiableWithinAt</a> <span class=\"fn\">IM</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">IB</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.prod\">prod</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F</span>)</span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/MFDeriv/Defs.html#MDifferentiableWithinAt\">MDifferentiableWithinAt</a> <span class=\"fn\">IM</span> <span class=\"fn\">IB</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Data/Bundle.html#Bundle.TotalSpace.proj\">proj</a></span>)</span> <span class=\"fn\">s</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a>     <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/MFDeriv/Defs.html#MDifferentiableWithinAt\">MDifferentiableWithinAt</a> <span class=\"fn\">IM</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">ùïú</span> <span class=\"fn\">F</span>)</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">‚Üë<span class=\"fn\">(<a href=\"./Mathlib/Topology/FiberBundle/Basic.html#FiberBundle.trivializationAt\">trivializationAt</a> <span class=\"fn\">F</span> <span class=\"fn\">E</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x‚ÇÄ</span>)</span>.<a href=\"./Mathlib/Data/Bundle.html#Bundle.TotalSpace.proj\">proj</a></span>)</span></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span>)</span>.2</span>)</span>\n      <span class=\"fn\">s</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"}]}