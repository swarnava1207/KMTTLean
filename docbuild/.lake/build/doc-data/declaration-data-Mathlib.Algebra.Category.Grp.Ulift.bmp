{"name":"Mathlib.Algebra.Category.Grp.Ulift","instances":[{"typeNames":["Grp.uliftFunctor"],"name":"Grp.instFaithfulUliftFunctor","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["AddGrp.uliftFunctor"],"name":"AddGrp.instFaithfulUliftFunctor","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["Grp.uliftFunctor"],"name":"Grp.instFullUliftFunctor","className":"CategoryTheory.Functor.Full"},{"typeNames":["AddGrp.uliftFunctor"],"name":"AddGrp.instFullUliftFunctor","className":"CategoryTheory.Functor.Full"},{"typeNames":["Grp.uliftFunctor"],"name":"Grp.uliftFunctor_preservesLimit","className":"CategoryTheory.Limits.PreservesLimit"},{"typeNames":["AddGrp.uliftFunctor"],"name":"AddGrp.uliftFunctor_preservesLimit","className":"CategoryTheory.Limits.PreservesLimit"},{"typeNames":["Grp.uliftFunctor"],"name":"Grp.uliftFunctor_preservesLimitsOfShape","className":"CategoryTheory.Limits.PreservesLimitsOfShape"},{"typeNames":["AddGrp.uliftFunctor"],"name":"AddGrp.uliftFunctor_preservesLimitsOfShape","className":"CategoryTheory.Limits.PreservesLimitsOfShape"},{"typeNames":["Grp.uliftFunctor"],"name":"Grp.uliftFunctor_preservesLimitsOfSize","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["AddGrp.uliftFunctor"],"name":"AddGrp.uliftFunctor_preservesLimitsOfSize","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["Grp.uliftFunctor"],"name":"Grp.instCreatesLimitsOfSizeUliftFunctor","className":"CategoryTheory.CreatesLimitsOfSize"},{"typeNames":["AddGrp.uliftFunctor"],"name":"AddGrp.instCreatesLimitsOfSizeUliftFunctor","className":"CategoryTheory.CreatesLimitsOfSize"},{"typeNames":["CommGrp.uliftFunctor"],"name":"CommGrp.instFaithfulUliftFunctor","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["AddCommGrp.uliftFunctor"],"name":"AddCommGrp.instFaithfulUliftFunctor","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["CommGrp.uliftFunctor"],"name":"CommGrp.instFullUliftFunctor","className":"CategoryTheory.Functor.Full"},{"typeNames":["AddCommGrp.uliftFunctor"],"name":"AddCommGrp.instFullUliftFunctor","className":"CategoryTheory.Functor.Full"},{"typeNames":["CommGrp.uliftFunctor"],"name":"CommGrp.uliftFunctor_preservesLimit","className":"CategoryTheory.Limits.PreservesLimit"},{"typeNames":["AddCommGrp.uliftFunctor"],"name":"AddCommGrp.uliftFunctor_preservesLimit","className":"CategoryTheory.Limits.PreservesLimit"},{"typeNames":["CommGrp.uliftFunctor"],"name":"CommGrp.uliftFunctor_preservesLimitsOfShape","className":"CategoryTheory.Limits.PreservesLimitsOfShape"},{"typeNames":["AddCommGrp.uliftFunctor"],"name":"AddCommGrp.uliftFunctor_preservesLimitsOfShape","className":"CategoryTheory.Limits.PreservesLimitsOfShape"},{"typeNames":["CommGrp.uliftFunctor"],"name":"CommGrp.uliftFunctor_preservesLimitsOfSize","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["AddCommGrp.uliftFunctor"],"name":"AddCommGrp.uliftFunctor_preservesLimitsOfSize","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["CommGrp.uliftFunctor"],"name":"CommGrp.instCreatesLimitsOfSizeUliftFunctor","className":"CategoryTheory.CreatesLimitsOfSize"},{"typeNames":["AddCommGrp.uliftFunctor"],"name":"AddCommGrp.instCreatesLimitsOfSizeUliftFunctor","className":"CategoryTheory.CreatesLimitsOfSize"},{"typeNames":["AddCommGrp.uliftFunctor"],"name":"AddCommGrp.uliftFunctor_additive","className":"CategoryTheory.Functor.Additive"},{"typeNames":["AddCommGrp.uliftFunctor"],"name":"AddCommGrp.instPreservesColimitsOfSizeUliftFunctor","className":"CategoryTheory.Limits.PreservesColimitsOfSize"},{"typeNames":["AddCommGrp.uliftFunctor"],"name":"AddCommGrp.instCreatesColimitsOfSizeUliftFunctor","className":"CategoryTheory.CreatesColimitsOfSize"}],"imports":["Init","Mathlib.Algebra.Category.Grp.LargeColimits","Mathlib.Algebra.Category.Grp.Limits","Mathlib.Algebra.Module.CharacterModule","Mathlib.CategoryTheory.Limits.Preserves.Ulift"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L199-L204","name":"AddCommGrp.instCreatesColimitsOfSizeUliftFunctor","line":199,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.instCreatesColimitsOfSizeUliftFunctor","doc":"The functor `uliftFunctor : AddCommGrp.{u} тед AddCommGrp.{max u v}` creates `u`-small colimits.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.instCreatesColimitsOfSizeUliftFunctor\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">instCreatesColimitsOfSizeUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesColimitsOfSize\">CategoryTheory.CreatesColimitsOfSize.{w, u, u, max u v, u + 1, max (u + 1) (v + 1)}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L185-L197","name":"AddCommGrp.instPreservesColimitsOfSizeUliftFunctor","line":185,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.instPreservesColimitsOfSizeUliftFunctor","doc":"The functor `uliftFunctor : AddCommGrp.{u} тед AddCommGrp.{max u v}` preserves colimits\nof arbitrary size.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.instPreservesColimitsOfSizeUliftFunctor\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">instPreservesColimitsOfSizeUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesColimitsOfSize\">CategoryTheory.Limits.PreservesColimitsOfSize.{w', w, u, max u v, u + 1, max (u + 1) (v + 1)}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L179-L182","name":"AddCommGrp.uliftFunctor_additive","line":179,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.uliftFunctor_additive","doc":"The universe lift for commutative additive groups is additive.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.uliftFunctor_additive\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">uliftFunctor_additive</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.uliftFunctor\">uliftFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">Additive</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L170-L171","name":"AddCommGrp.instCreatesLimitsOfSizeUliftFunctor","line":170,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.instCreatesLimitsOfSizeUliftFunctor","doc":"The universe lift functor on `AddCommGrp.{u}` creates `u`-small limits."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.instCreatesLimitsOfSizeUliftFunctor\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">instCreatesLimitsOfSizeUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimitsOfSize\">CategoryTheory.CreatesLimitsOfSize.{w, u, u, max u v, u + 1, max (u + 1) (v + 1)}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L167-L173","name":"CommGrp.instCreatesLimitsOfSizeUliftFunctor","line":167,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.instCreatesLimitsOfSizeUliftFunctor","doc":"The universe lift functor on `CommGrp.{u}` creates `u`-small limits.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.instCreatesLimitsOfSizeUliftFunctor\"><span class=\"name\">CommGrp</span>.<span class=\"name\">instCreatesLimitsOfSizeUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimitsOfSize\">CategoryTheory.CreatesLimitsOfSize.{w, u, u, max u v, u + 1, max (u + 1) (v + 1)}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L162-L163","name":"AddCommGrp.uliftFunctor_preservesLimitsOfSize","line":162,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.uliftFunctor_preservesLimitsOfSize","doc":"The universe lift functor for commutative additive groups preserves limits of arbitrary size."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.uliftFunctor_preservesLimitsOfSize\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">uliftFunctor_preservesLimitsOfSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimitsOfSize\">CategoryTheory.Limits.PreservesLimitsOfSize.{w', w, u, max u v, u + 1, max (u + 1) (v + 1)}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L159-L165","name":"CommGrp.uliftFunctor_preservesLimitsOfSize","line":159,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.uliftFunctor_preservesLimitsOfSize","doc":"The universe lift for commutative groups preserves limits of arbitrary size.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.uliftFunctor_preservesLimitsOfSize\"><span class=\"name\">CommGrp</span>.<span class=\"name\">uliftFunctor_preservesLimitsOfSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimitsOfSize\">CategoryTheory.Limits.PreservesLimitsOfSize.{w', w, u, max u v, u + 1, max (u + 1) (v + 1)}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L155-L155","name":"AddCommGrp.uliftFunctor_preservesLimitsOfShape","line":155,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.uliftFunctor_preservesLimitsOfShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.uliftFunctor_preservesLimitsOfShape\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">uliftFunctor_preservesLimitsOfShape</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{w', w}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimitsOfShape\">CategoryTheory.Limits.PreservesLimitsOfShape</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L155-L157","name":"CommGrp.uliftFunctor_preservesLimitsOfShape","line":155,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.uliftFunctor_preservesLimitsOfShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.uliftFunctor_preservesLimitsOfShape\"><span class=\"name\">CommGrp</span>.<span class=\"name\">uliftFunctor_preservesLimitsOfShape</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{w', w}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimitsOfShape\">CategoryTheory.Limits.PreservesLimitsOfShape</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L149-L149","name":"AddCommGrp.uliftFunctor_preservesLimit","line":149,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.uliftFunctor_preservesLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.uliftFunctor_preservesLimit\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">uliftFunctor_preservesLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{w', w}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">CategoryTheory.Limits.PreservesLimit</a> <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L149-L153","name":"CommGrp.uliftFunctor_preservesLimit","line":149,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.uliftFunctor_preservesLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.uliftFunctor_preservesLimit\"><span class=\"name\">CommGrp</span>.<span class=\"name\">uliftFunctor_preservesLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{w', w}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp\">CommGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">CategoryTheory.Limits.PreservesLimit</a> <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L145-L146","name":"AddCommGrp.instFullUliftFunctor","line":145,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.instFullUliftFunctor","doc":"The universe lift functor for commutative additive groups is full."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.instFullUliftFunctor\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">instFullUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.uliftFunctor\">uliftFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L145-L147","name":"CommGrp.instFullUliftFunctor","line":145,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.instFullUliftFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.instFullUliftFunctor\"><span class=\"name\">CommGrp</span>.<span class=\"name\">instFullUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp.uliftFunctor\">uliftFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L140-L141","name":"AddCommGrp.instFaithfulUliftFunctor","line":140,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.instFaithfulUliftFunctor","doc":"The universe lift functor for commutative additive groups is faithful."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.instFaithfulUliftFunctor\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">instFaithfulUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.uliftFunctor\">uliftFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L140-L142","name":"CommGrp.instFaithfulUliftFunctor","line":140,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.instFaithfulUliftFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.instFaithfulUliftFunctor\"><span class=\"name\">CommGrp</span>.<span class=\"name\">instFaithfulUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp.uliftFunctor\">uliftFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L131-L132","name":"AddCommGrp.uliftFunctorFullyFaithful","line":131,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.uliftFunctorFullyFaithful","doc":"The universe lift functor for commutative additive groups is fully faithful."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddCommGrp.uliftFunctorFullyFaithful\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">uliftFunctorFullyFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.uliftFunctor\">uliftFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.FullyFaithful\">FullyFaithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L129-L137","name":"CommGrp.uliftFunctorFullyFaithful","line":129,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.uliftFunctorFullyFaithful","doc":"The universe lift functor for commutative groups is fully faithful.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#CommGrp.uliftFunctorFullyFaithful\"><span class=\"name\">CommGrp</span>.<span class=\"name\">uliftFunctorFullyFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp.uliftFunctor\">uliftFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.FullyFaithful\">FullyFaithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L120-L121","name":"AddGrp.instCreatesLimitsOfSizeUliftFunctor","line":120,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.instCreatesLimitsOfSizeUliftFunctor","doc":"The universe lift functor on `AddGrp.{u}` creates `u`-small limits."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.instCreatesLimitsOfSizeUliftFunctor\"><span class=\"name\">AddGrp</span>.<span class=\"name\">instCreatesLimitsOfSizeUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimitsOfSize\">CategoryTheory.CreatesLimitsOfSize.{w, u, u, max u v, u + 1, max (u + 1) (v + 1)}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L117-L123","name":"Grp.instCreatesLimitsOfSizeUliftFunctor","line":117,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.instCreatesLimitsOfSizeUliftFunctor","doc":"The universe lift functor on `Grp.{u}` creates `u`-small limits.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.instCreatesLimitsOfSizeUliftFunctor\"><span class=\"name\">Grp</span>.<span class=\"name\">instCreatesLimitsOfSizeUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimitsOfSize\">CategoryTheory.CreatesLimitsOfSize.{w, u, u, max u v, u + 1, max (u + 1) (v + 1)}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L112-L113","name":"AddGrp.uliftFunctor_preservesLimitsOfSize","line":112,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.uliftFunctor_preservesLimitsOfSize","doc":"The universe lift functor for additive groups preserves limits of arbitrary size."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.uliftFunctor_preservesLimitsOfSize\"><span class=\"name\">AddGrp</span>.<span class=\"name\">uliftFunctor_preservesLimitsOfSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimitsOfSize\">CategoryTheory.Limits.PreservesLimitsOfSize.{w', w, u, max u v, u + 1, max (u + 1) (v + 1)}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L109-L115","name":"Grp.uliftFunctor_preservesLimitsOfSize","line":109,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.uliftFunctor_preservesLimitsOfSize","doc":"The universe lift for groups preserves limits of arbitrary size.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.uliftFunctor_preservesLimitsOfSize\"><span class=\"name\">Grp</span>.<span class=\"name\">uliftFunctor_preservesLimitsOfSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimitsOfSize\">CategoryTheory.Limits.PreservesLimitsOfSize.{w', w, u, max u v, u + 1, max (u + 1) (v + 1)}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L105-L105","name":"AddGrp.uliftFunctor_preservesLimitsOfShape","line":105,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.uliftFunctor_preservesLimitsOfShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.uliftFunctor_preservesLimitsOfShape\"><span class=\"name\">AddGrp</span>.<span class=\"name\">uliftFunctor_preservesLimitsOfShape</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{w', w}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimitsOfShape\">CategoryTheory.Limits.PreservesLimitsOfShape</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L105-L107","name":"Grp.uliftFunctor_preservesLimitsOfShape","line":105,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.uliftFunctor_preservesLimitsOfShape","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.uliftFunctor_preservesLimitsOfShape\"><span class=\"name\">Grp</span>.<span class=\"name\">uliftFunctor_preservesLimitsOfShape</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{w', w}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimitsOfShape\">CategoryTheory.Limits.PreservesLimitsOfShape</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L99-L99","name":"AddGrp.uliftFunctor_preservesLimit","line":99,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.uliftFunctor_preservesLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.uliftFunctor_preservesLimit\"><span class=\"name\">AddGrp</span>.<span class=\"name\">uliftFunctor_preservesLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{w', w}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">CategoryTheory.Limits.PreservesLimit</a> <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L99-L103","name":"Grp.uliftFunctor_preservesLimit","line":99,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.uliftFunctor_preservesLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.uliftFunctor_preservesLimit\"><span class=\"name\">Grp</span>.<span class=\"name\">uliftFunctor_preservesLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{w', w}</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">CategoryTheory.Limits.PreservesLimit</a> <span class=\"fn\">K</span> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp.uliftFunctor\">uliftFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L95-L96","name":"AddGrp.instFullUliftFunctor","line":95,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.instFullUliftFunctor","doc":"The universe lift functor for additive groups is full."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.instFullUliftFunctor\"><span class=\"name\">AddGrp</span>.<span class=\"name\">instFullUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp.uliftFunctor\">uliftFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L93-L97","name":"Grp.instFullUliftFunctor","line":93,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.instFullUliftFunctor","doc":"The universe lift functor for groups is full.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.instFullUliftFunctor\"><span class=\"name\">Grp</span>.<span class=\"name\">instFullUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp.uliftFunctor\">uliftFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L88-L89","name":"AddGrp.instFaithfulUliftFunctor","line":88,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.instFaithfulUliftFunctor","doc":"The universe lift functor for additive groups is faithful."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.instFaithfulUliftFunctor\"><span class=\"name\">AddGrp</span>.<span class=\"name\">instFaithfulUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp.uliftFunctor\">uliftFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L86-L90","name":"Grp.instFaithfulUliftFunctor","line":86,"kind":"instance","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.instFaithfulUliftFunctor","doc":"The universe lift functor for groups is faithful.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.instFaithfulUliftFunctor\"><span class=\"name\">Grp</span>.<span class=\"name\">instFaithfulUliftFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp.uliftFunctor\">uliftFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L78-L79","name":"AddGrp.uliftFunctorFullyFaithful","line":78,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.uliftFunctorFullyFaithful","doc":"The universe lift functor for additive groups is fully faithful."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#AddGrp.uliftFunctorFullyFaithful\"><span class=\"name\">AddGrp</span>.<span class=\"name\">uliftFunctorFullyFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp.uliftFunctor\">uliftFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.FullyFaithful\">FullyFaithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/Ulift.lean#L76-L84","name":"Grp.uliftFunctorFullyFaithful","line":76,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.uliftFunctorFullyFaithful","doc":"The universe lift functor for groups is fully faithful.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/Ulift.html#Grp.uliftFunctorFullyFaithful\"><span class=\"name\">Grp</span>.<span class=\"name\">uliftFunctorFullyFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp.uliftFunctor\">uliftFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.FullyFaithful\">FullyFaithful</a></span></div></div>"}]}