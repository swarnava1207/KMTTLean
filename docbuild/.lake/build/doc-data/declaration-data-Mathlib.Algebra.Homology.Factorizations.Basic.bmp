{"name":"Mathlib.Algebra.Homology.Factorizations.Basic","instances":[{"typeNames":["CochainComplex.degreewiseEpiWithInjectiveKernel"],"name":"CochainComplex.instIsMultiplicativeIntDegreewiseEpiWithInjectiveKernel","className":"CategoryTheory.MorphismProperty.IsMultiplicative"}],"imports":["Init","Mathlib.Algebra.Homology.HomologicalComplex","Mathlib.CategoryTheory.Abelian.EpiWithInjectiveKernel"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/Factorizations/Basic.lean#L48-L50","name":"CochainComplex.instIsMultiplicativeIntDegreewiseEpiWithInjectiveKernel","line":48,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/Factorizations/Basic.html#CochainComplex.instIsMultiplicativeIntDegreewiseEpiWithInjectiveKernel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Factorizations/Basic.html#CochainComplex.instIsMultiplicativeIntDegreewiseEpiWithInjectiveKernel\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">instIsMultiplicativeIntDegreewiseEpiWithInjectiveKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Factorizations/Basic.html#CochainComplex.degreewiseEpiWithInjectiveKernel\">degreewiseEpiWithInjectiveKernel</a>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Composition.html#CategoryTheory.MorphismProperty.IsMultiplicative\">IsMultiplicative</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/Factorizations/Basic.lean#L42-L46","name":"CochainComplex.degreewiseEpiWithInjectiveKernel","line":42,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Factorizations/Basic.html#CochainComplex.degreewiseEpiWithInjectiveKernel","doc":"A morphism of cochain complexes `φ` in an abelian category satisfies\n`degreewiseEpiWithInjectiveKernel φ` if for any `i : ℤ`, the morphism\n`φ.f i` is an epimorphism with an injective kernel. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Factorizations/Basic.html#CochainComplex.degreewiseEpiWithInjectiveKernel\"><span class=\"name\">CochainComplex</span>.<span class=\"name\">degreewiseEpiWithInjectiveKernel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#CochainComplex\">CochainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span></div></div>"}]}