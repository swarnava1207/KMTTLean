{"name":"Mathlib.CategoryTheory.Subobject.HasCardinalLT","instances":[],"imports":["Init","Mathlib.CategoryTheory.Subobject.Basic","Mathlib.SetTheory.Cardinal.HasCardinalLT"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Subobject/HasCardinalLT.lean#L23-L26","name":"CategoryTheory.Subobject.hasCardinalLT_of_mono","line":23,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Subobject/HasCardinalLT.html#CategoryTheory.Subobject.hasCardinalLT_of_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Subobject/HasCardinalLT.html#CategoryTheory.Subobject.hasCardinalLT_of_mono\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Subobject</span>.<span class=\"name\">hasCardinalLT_of_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Subobject/Basic.html#CategoryTheory.Subobject\">Subobject</a> <span class=\"fn\">Y</span>)</span> <span class=\"fn\">κ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Subobject/Basic.html#CategoryTheory.Subobject\">Subobject</a> <span class=\"fn\">X</span>)</span> <span class=\"fn\">κ</span></span></div></div>"}]}