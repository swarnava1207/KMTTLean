{"name":"Mathlib.GroupTheory.SpecificGroups.Dihedral","instances":[{"typeNames":["Eq"],"name":"instDecidableEqDihedralGroup","className":"Decidable"},{"typeNames":["DihedralGroup"],"name":"DihedralGroup.instInhabited","className":"Inhabited"},{"typeNames":["DihedralGroup"],"name":"DihedralGroup.instGroup","className":"Group"},{"typeNames":["DihedralGroup"],"name":"DihedralGroup.instFintypeOfNeZeroNat","className":"Fintype"},{"typeNames":["DihedralGroup"],"name":"DihedralGroup.instInfiniteOfNatNat","className":"Infinite"},{"typeNames":["DihedralGroup"],"name":"DihedralGroup.instNontrivial","className":"Nontrivial"}],"imports":["Init","Mathlib.Data.Finite.Sum","Mathlib.Data.ZMod.Basic","Mathlib.GroupTheory.Exponent","Mathlib.GroupTheory.GroupAction.CardCommute","Mathlib.GroupTheory.SpecificGroups.Cyclic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L281-L284","name":"DihedralGroup.card_conjClasses_odd","line":281,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.card_conjClasses_odd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.card_conjClasses_odd\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">card_conjClasses_odd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Conj.html#ConjClasses\">ConjClasses</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L274-L279","name":"DihedralGroup.card_commute_odd","line":274,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.card_commute_odd","doc":"If n is odd, then the Dihedral group of order $2n$ has $n(n+3)$ pairs of commuting elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.card_commute_odd\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">card_commute_odd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L239-L239","name":"DihedralGroup.OddCommuteEquiv_symm_apply","line":239,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv_symm_apply\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">OddCommuteEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv\">OddCommuteEquiv</a> <span class=\"fn\">hn</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">x✝</span> with\n  | <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">i</span></span> =&gt; <span class=\"fn\">⟨<a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">i</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">0</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>, <span class=\"fn\">⋯</span>⟩</span>\n  | <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">j</span>)</span></span> =&gt; <span class=\"fn\">⟨<a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">0</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">j</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>, <span class=\"fn\">⋯</span>⟩</span>\n  | <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">k</span>)</span>)</span></span> =&gt; <span class=\"fn\">⟨<a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> (<span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.unitOfCoprime\">ZMod.unitOfCoprime</a> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>)</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> (<span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.unitOfCoprime\">ZMod.unitOfCoprime</a> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>)</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>, <span class=\"fn\">⋯</span>⟩</span>\n  | <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span>)</span></span> =&gt; <span class=\"fn\">⟨<a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">i</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">j</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>, <span class=\"fn\">⋯</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L239-L239","name":"DihedralGroup.OddCommuteEquiv_apply","line":239,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv_apply\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">OddCommuteEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv\">OddCommuteEquiv</a> <span class=\"fn\">hn</span>)</span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\">x✝</span> with\n  | <span class=\"fn\">⟨<a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">i</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>, <span class=\"fn\">property</span>⟩</span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">i</span></span>\n  | <span class=\"fn\">⟨<a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">j</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>, <span class=\"fn\">property</span>⟩</span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\">j</span>)</span></span>\n  | <span class=\"fn\">⟨<a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">i</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">j</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>, <span class=\"fn\">property</span>⟩</span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> (<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span>))</span>)</span></span>\n  | <span class=\"fn\">⟨<a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">i</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">j</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>, <span class=\"fn\">property</span>⟩</span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L237-L272","name":"DihedralGroup.OddCommuteEquiv","line":237,"kind":"def","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv","doc":"If n is odd, then the Dihedral group of order $2n$ has $n(n+3)$ pairs (represented as\n$n + n + n + n*n$) of commuting elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.OddCommuteEquiv\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">OddCommuteEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L233-L235","name":"DihedralGroup.isCyclic_iff","line":233,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.isCyclic_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.isCyclic_iff\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">isCyclic_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsCyclic\">IsCyclic</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L228-L231","name":"DihedralGroup.not_isCyclic","line":228,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.not_isCyclic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.not_isCyclic\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">not_isCyclic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsCyclic\">IsCyclic</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L224-L226","name":"DihedralGroup.commutative_iff","line":224,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.commutative_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.commutative_iff\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">commutative_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> <span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L214-L222","name":"DihedralGroup.not_commutative","line":214,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.not_commutative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.not_commutative\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">not_commutative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span> → <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">2</span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Init/Core.html#Std.Commutative\">Std.Commutative</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> <span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L197-L212","name":"DihedralGroup.exponent","line":197,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.exponent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.exponent\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">exponent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#GCDMonoid.lcm\">lcm</a> <span class=\"fn\">n</span> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L191-L195","name":"DihedralGroup.orderOf_r","line":191,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.orderOf_r","doc":"If `0 < n`, then `i : ZMod n` has order `n / gcd n i`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.orderOf_r\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">orderOf_r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">gcd</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.val\">val</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L172-L189","name":"DihedralGroup.orderOf_r_one","line":172,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.orderOf_r_one","doc":"If `0 < n`, then `r 1` has order `n`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.orderOf_r_one\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">orderOf_r_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L164-L170","name":"DihedralGroup.orderOf_sr","line":164,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.orderOf_sr","doc":"If `0 < n`, then `sr i` has order 2.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.orderOf_sr\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">orderOf_sr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L161-L162","name":"DihedralGroup.sr_mul_self","line":161,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr_mul_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr_mul_self\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">sr_mul_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L158-L159","name":"DihedralGroup.r_one_pow_n","line":158,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_one_pow_n","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_one_pow_n\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r_one_pow_n</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L155-L156","name":"DihedralGroup.r_one_zpow","line":155,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_one_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_one_zpow\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r_one_zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L152-L153","name":"DihedralGroup.r_one_pow","line":152,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_one_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_one_pow\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r_one_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L147-L150","name":"DihedralGroup.nat_card","line":147,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.nat_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.nat_card\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">nat_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L142-L145","name":"DihedralGroup.card","line":142,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.card","doc":"If `0 < n`, then `DihedralGroup n` has `2n` elements.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.card\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L139-L140","name":"DihedralGroup.instNontrivial","line":139,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instNontrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instNontrivial\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">instNontrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L136-L137","name":"DihedralGroup.instInfiniteOfNatNat","line":136,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instInfiniteOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instInfiniteOfNatNat\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">instInfiniteOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Infinite\">Infinite</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L131-L134","name":"DihedralGroup.instFintypeOfNeZeroNat","line":131,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instFintypeOfNeZeroNat","doc":"If `0 < n`, then `DihedralGroup n` is a finite group.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instFintypeOfNeZeroNat\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">instFintypeOfNeZeroNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L117-L119","name":"DihedralGroup.r_zpow","line":117,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_zpow\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r_zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> (<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L110-L115","name":"DihedralGroup.r_pow","line":110,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_pow\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> (<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L107-L108","name":"DihedralGroup.one_def","line":107,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.one_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.one_def\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">one_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L103-L105","name":"DihedralGroup.r_zero","line":103,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_zero\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L99-L101","name":"DihedralGroup.inv_sr","line":99,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.inv_sr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.inv_sr\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">inv_sr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">i</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L95-L97","name":"DihedralGroup.inv_r","line":95,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.inv_r","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.inv_r\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">inv_r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">i</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">i</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L91-L93","name":"DihedralGroup.sr_mul_sr","line":91,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr_mul_sr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr_mul_sr\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">sr_mul_sr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> (<span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L87-L89","name":"DihedralGroup.sr_mul_r","line":87,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr_mul_r","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr_mul_r\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">sr_mul_r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> (<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L83-L85","name":"DihedralGroup.r_mul_sr","line":83,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_mul_sr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_mul_sr\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r_mul_sr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\">sr</a> (<span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L79-L81","name":"DihedralGroup.r_mul_r","line":79,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_mul_r","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r_mul_r\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r_mul_r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\">r</a> (<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L59-L77","name":"DihedralGroup.instGroup","line":59,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instGroup","doc":"The group structure on `DihedralGroup n`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instGroup\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">instGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L50-L51","name":"DihedralGroup.instInhabited","line":50,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.instInhabited\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L31-L31","name":"instDecidableEqDihedralGroup","line":31,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#instDecidableEqDihedralGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#instDecidableEqDihedralGroup\"><span class=\"name\">instDecidableEqDihedralGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n✝</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L30-L30","name":"DihedralGroup.sr","line":30,"kind":"ctor","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.sr\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">sr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L29-L29","name":"DihedralGroup.r","line":29,"kind":"ctor","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup.r\"><span class=\"name\">DihedralGroup</span>.<span class=\"name\">r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\">DihedralGroup</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/SpecificGroups/Dihedral.lean#L24-L31","name":"DihedralGroup","line":24,"kind":"inductive","docLink":"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup","doc":"For `n ≠ 0`, `DihedralGroup n` represents the symmetry group of the regular `n`-gon.\n`r i` represents the rotations of the `n`-gon by `2πi/n`, and `sr i` represents the reflections of\nthe `n`-gon. `DihedralGroup 0` corresponds to the infinite dihedral group.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Dihedral.html#DihedralGroup\"><span class=\"name\">DihedralGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}