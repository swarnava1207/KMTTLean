{"name":"Mathlib.Tactic.Simproc.ExistsAndEq","instances":[],"imports":["Init","Mathlib.Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Simproc/ExistsAndEq.lean#L67-L75","name":"existsAndEq","line":67,"kind":"def","docLink":"./Mathlib/Tactic/Simproc/ExistsAndEq.html#existsAndEq","doc":"Triggers on goals of the form `∃ a, body` and checks whether `body` has the\nform `... ∧ a = a' ∧ ...` or `... ∧ a' = a ∧ ...` for some `a'` that is independent of `a`.\nIf so, it replaces all occurancies of `a` with `a'` and removes the quantifier. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Simproc/ExistsAndEq.html#existsAndEq\"><span class=\"name\">existsAndEq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simproc\">Lean.Meta.Simp.Simproc</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Simproc/ExistsAndEq.lean#L46-L63","name":"existsAndEq.findImpEqProof.go","line":46,"kind":"opaque","docLink":"./Mathlib/Tactic/Simproc/ExistsAndEq.html#existsAndEq.findImpEqProof.go","doc":"Traverses the expression `h`, branching at each `And`, to find a proof of `x = a`\nfor some `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Simproc/ExistsAndEq.html#existsAndEq.findImpEqProof.go\"><span class=\"name\">existsAndEq</span>.<span class=\"name\">findImpEqProof</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">h</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Simproc/ExistsAndEq.lean#L32-L63","name":"existsAndEq.findImpEqProof","line":32,"kind":"def","docLink":"./Mathlib/Tactic/Simproc/ExistsAndEq.html#existsAndEq.findImpEqProof","doc":"For an expression `p` of the form `fun (x : α) ↦ (body : Prop)`, checks whether\n`body` implies `x = a` for some `a`, and constructs a proof of `(∃ x, p x) = p a` using\n`exists_of_imp_eq`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Simproc/ExistsAndEq.html#existsAndEq.findImpEqProof\"><span class=\"name\">existsAndEq</span>.<span class=\"name\">findImpEqProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>))</span></span></div></div>"}]}