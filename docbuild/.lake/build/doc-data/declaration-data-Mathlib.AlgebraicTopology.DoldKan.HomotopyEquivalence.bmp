{"name":"Mathlib.AlgebraicTopology.DoldKan.HomotopyEquivalence","instances":[],"imports":["Init","Mathlib.AlgebraicTopology.DoldKan.Normalized"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.lean#L73-L73","name":"AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_homotopyInvHomId","line":73,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_homotopyInvHomId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_homotopyInvHomId\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_homotopyInvHomId</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex\">homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex</a>.<a href=\"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.homotopyInvHomId\">homotopyInvHomId</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.ofEq\">Homotopy.ofEq</a> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyPInftyToId\">homotopyPInftyToId</a> <span class=\"fn\">Y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.lean#L73-L73","name":"AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_homotopyHomInvId","line":73,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_homotopyHomInvId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_homotopyHomInvId\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_homotopyHomInvId</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex\">homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex</a>.<a href=\"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.homotopyHomInvId\">homotopyHomInvId</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.ofEq\">Homotopy.ofEq</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.lean#L73-L73","name":"AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_hom","line":73,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_hom\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex\">homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex</a>.<a href=\"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.inclusionOfMooreComplexMap\">inclusionOfMooreComplexMap</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.lean#L73-L73","name":"AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_inv","line":73,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_inv\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex\">homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex</a>.<a href=\"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Normalized.html#AlgebraicTopology.DoldKan.PInftyToNormalizedMooreComplex\">PInftyToNormalizedMooreComplex</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.lean#L71-L82","name":"AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex","line":71,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex","doc":"The inclusion of the Moore complex in the alternating face map complex\nis a homotopy equivalence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">homotopyEquivNormalizedMooreComplexAlternatingFaceMapComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#HomotopyEquiv\">HomotopyEquiv</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/MooreComplex.html#AlgebraicTopology.normalizedMooreComplex\">normalizedMooreComplex</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Y</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.alternatingFaceMapComplex\">alternatingFaceMapComplex</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.lean#L56-L56","name":"AlgebraicTopology.DoldKan.homotopyPInftyToId_hom","line":56,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyPInftyToId_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyPInftyToId_hom\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">homotopyPInftyToId_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyPInftyToId\">homotopyPInftyToId</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.hom\">hom</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyPToId\">homotopyPToId</a> <span class=\"fn\">X</span> (<span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.hom\">hom</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.lean#L54-L68","name":"AlgebraicTopology.DoldKan.homotopyPInftyToId","line":54,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyPInftyToId","doc":"Construction of the homotopy from `PInfty` to the identity using eventually\n(termwise) constant homotopies from `P q` to the identity for all `q` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyPInftyToId\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">homotopyPInftyToId</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a> <a href=\"./Mathlib/AlgebraicTopology/DoldKan/PInfty.html#AlgebraicTopology.DoldKan.PInfty\">PInfty</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.lean#L46-L52","name":"AlgebraicTopology.DoldKan.homotopyPToId_eventually_constant","line":46,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyPToId_eventually_constant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyPToId_eventually_constant\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">homotopyPToId_eventually_constant</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hqn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyPToId\">homotopyPToId</a> <span class=\"fn\">X</span> (<span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.hom\">hom</a></span> <span class=\"fn\">n</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyPToId\">homotopyPToId</a> <span class=\"fn\">X</span> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy.hom\">hom</a></span> <span class=\"fn\">n</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.lean#L42-L44","name":"AlgebraicTopology.DoldKan.homotopyQToZero","line":42,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyQToZero","doc":"The complement projection `Q q` to `P q` is homotopic to zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyQToZero\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">homotopyQToZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.lean#L30-L40","name":"AlgebraicTopology.DoldKan.homotopyPToId","line":30,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyPToId","doc":"Inductive construction of homotopies from `P q` to `𝟙 _` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/HomotopyEquivalence.html#AlgebraicTopology.DoldKan.homotopyPToId\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">homotopyPToId</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/Homotopy.html#Homotopy\">Homotopy</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span>)</span>)</span></span></div></div>"}]}