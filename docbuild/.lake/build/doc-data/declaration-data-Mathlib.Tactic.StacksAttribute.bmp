{"name":"Mathlib.Tactic.StacksAttribute","instances":[{"typeNames":["Mathlib.StacksTag.Database"],"name":"Mathlib.StacksTag.instBEqDatabase","className":"BEq"},{"typeNames":["Mathlib.StacksTag.Database"],"name":"Mathlib.StacksTag.instHashableDatabase","className":"Hashable"},{"typeNames":["Mathlib.StacksTag.Tag"],"name":"Mathlib.StacksTag.instBEqTag","className":"BEq"},{"typeNames":["Mathlib.StacksTag.Tag"],"name":"Mathlib.StacksTag.instHashableTag","className":"Hashable"}],"imports":["Init","Lean.Elab.Command","Mathlib.Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L222-L231","name":"Mathlib.StacksTag.kerodonTags","line":222,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.kerodonTags","doc":"The `#kerodon_tags` command retrieves all declarations that have the `kerodon` attribute.\n\nFor each found declaration, it prints a line\n```\n'declaration_name' corresponds to tag 'declaration_tag'.\n```\nThe variant `#kerodon_tags!` also adds the theorem statement after each summary line.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.kerodonTags\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">kerodonTags</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L210-L220","name":"Mathlib.StacksTag.stacksTags","line":210,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTags","doc":"`#stacks_tags` retrieves all declarations that have the `stacks` attribute.\n\nFor each found declaration, it prints a line\n```\n'declaration_name' corresponds to tag 'declaration_tag'.\n```\nThe variant `#stacks_tags!` also adds the theorem statement after each summary line.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTags\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">stacksTags</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L188-L208","name":"Mathlib.StacksTag.traceStacksTags","line":188,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.traceStacksTags","doc":"`traceStacksTags db verbose` prints the tags of the database `db` to the user and\ninlines the theorem statements if `verbose` is `true`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.traceStacksTags\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">traceStacksTags</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">db</span> : <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database\">Database</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">verbose</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L132-L141","name":"Mathlib.StacksTag.stacksTag","line":132,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTag","doc":"The `stacksTag` attribute.\nUse it as `@[kerodon TAG \"Optional comment\"]` or `@[stacks TAG \"Optional comment\"]`\ndepending on the database you are referencing.\n\nThe `TAG` is mandatory and should be a sequence of 4 digits or uppercase letters.\n\nSee the [Tags page](https://stacks.math.columbia.edu/tags) in the Stacks project or\n[Tags page](https://kerodon.net/tag/) in the Kerodon project for more details.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTag\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">stacksTag</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L129-L130","name":"Mathlib.StacksTag.stacksTagDBStacks","line":129,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagDBStacks","doc":"The syntax for a \"stacks\" database identifier in a `@[stacks]` attribute. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagDBStacks\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">stacksTagDBStacks</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L127-L128","name":"Mathlib.StacksTag.stacksTagDBKerodon","line":127,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagDBKerodon","doc":"The syntax for a \"kerodon\" database identifier in a `@[kerodon]` attribute. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagDBKerodon\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">stacksTagDBKerodon</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L124-L125","name":"Lean.Parser.Category.stacksTagDB","line":124,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Lean.Parser.Category.stacksTagDB","doc":"The syntax category for the database name. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Lean.Parser.Category.stacksTagDB\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Category</span>.<span class=\"name\">stacksTagDB</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Notation.html#Lean.Parser.Category\">Category</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L124-L125","name":"Mathlib.StacksTag.stacksTagDB.quot","line":124,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagDB.quot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagDB.quot\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">stacksTagDB</span>.<span class=\"name\">quot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L117-L118","name":"Lean.PrettyPrinter.Parenthesizer.stacksTagAntiquot.parenthesizer","line":117,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Lean.PrettyPrinter.Parenthesizer.stacksTagAntiquot.parenthesizer","doc":"The parenthesizer for Stacks Project Tags syntax. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Lean.PrettyPrinter.Parenthesizer.stacksTagAntiquot.parenthesizer\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Parenthesizer</span>.<span class=\"name\">stacksTagAntiquot</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Parenthesizer</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L109-L111","name":"Lean.PrettyPrinter.Formatter.stacksTagNoAntiquot.formatter","line":109,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Lean.PrettyPrinter.Formatter.stacksTagNoAntiquot.formatter","doc":"The formatter for Stacks Project Tags syntax. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Lean.PrettyPrinter.Formatter.stacksTagNoAntiquot.formatter\"><span class=\"name\">Lean</span>.<span class=\"name\">PrettyPrinter</span>.<span class=\"name\">Formatter</span>.<span class=\"name\">stacksTagNoAntiquot</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Formatter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L100-L103","name":"Lean.TSyntax.getStacksTag","line":100,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Lean.TSyntax.getStacksTag","doc":"Extract the underlying tag as a string from a `stacksTag` node. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Lean.TSyntax.getStacksTag\"><span class=\"name\">Lean</span>.<span class=\"name\">TSyntax</span>.<span class=\"name\">getStacksTag</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagKind\">Mathlib.StacksTag.stacksTagKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L92-L94","name":"Mathlib.StacksTag.stacksTagParser","line":92,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagParser","doc":"The main parser for Stacks Project Tags: it accepts any sequence of 4 digits or\nuppercase letters. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagParser\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">stacksTagParser</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L86-L90","name":"Mathlib.StacksTag.stacksTagNoAntiquot","line":86,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagNoAntiquot","doc":"The main parser for Stacks Project Tags: it accepts any sequence of 4 digits or\nuppercase letters. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagNoAntiquot\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">stacksTagNoAntiquot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L67-L84","name":"Mathlib.StacksTag.stacksTagFn","line":67,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagFn","doc":"The main parser for Stacks Project Tags: it accepts any sequence of 4 digits or\nuppercase letters. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagFn\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">stacksTagFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L63-L65","name":"Mathlib.StacksTag.stacksTagKind","line":63,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagKind","doc":"`stacksTag` is the node kind of Stacks Project Tags: a sequence of digits and\nuppercase letters. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.stacksTagKind\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">stacksTagKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L51-L59","name":"Mathlib.StacksTag.addTagEntry","line":51,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.addTagEntry","doc":"`addTagEntry declName tag comment` takes as input the `Name` `declName` of a declaration and\nthe `String`s `tag` and `comment` of the `stacks` attribute.\nIt extends the `Tag` environment extension with the data `declName, tag, comment`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.addTagEntry\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">addTagEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">db</span> : <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database\">Database</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tag </span><span class=\"fn\">comment</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L43-L49","name":"Mathlib.StacksTag.tagExt","line":43,"kind":"opaque","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.tagExt","doc":"Defines the `tagExt` extension for adding a `HashSet` of `Tag`s\nto the environment. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.tagExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">tagExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag\">Tag</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag\">Tag</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L41-L41","name":"Mathlib.StacksTag.instHashableTag","line":41,"kind":"instance","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.instHashableTag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.instHashableTag\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">instHashableTag</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag\">Tag</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L41-L41","name":"Mathlib.StacksTag.instBEqTag","line":41,"kind":"instance","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.instBEqTag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.instBEqTag\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">instBEqTag</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag\">Tag</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L40-L40","name":"Mathlib.StacksTag.Tag.comment","line":40,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag.comment","doc":"The (optional) comment that comes with the given tag. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag.comment\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">Tag</span>.<span class=\"name\">comment</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag\">Tag</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L38-L38","name":"Mathlib.StacksTag.Tag.tag","line":38,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag.tag","doc":"The database tag. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag.tag\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">Tag</span>.<span class=\"name\">tag</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag\">Tag</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L36-L36","name":"Mathlib.StacksTag.Tag.database","line":36,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag.database","doc":"The online database where the tag is found. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag.database\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">Tag</span>.<span class=\"name\">database</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag\">Tag</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database\">Database</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L34-L34","name":"Mathlib.StacksTag.Tag.declName","line":34,"kind":"def","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag.declName","doc":"The name of the declaration with the given tag. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag.declName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">Tag</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag\">Tag</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L32-L32","name":"Mathlib.StacksTag.Tag.mk","line":32,"kind":"ctor","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">Tag</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">database</span> : <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database\">Database</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tag </span><span class=\"fn\">comment</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag\">Tag</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L30-L41","name":"Mathlib.StacksTag.Tag","line":30,"kind":"structure","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag","doc":"`Tag` is the structure that carries the data of a project tag and a corresponding\nMathlib declaration. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Tag\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">Tag</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L28-L28","name":"Mathlib.StacksTag.instHashableDatabase","line":28,"kind":"instance","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.instHashableDatabase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.instHashableDatabase\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">instHashableDatabase</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database\">Database</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L28-L28","name":"Mathlib.StacksTag.instBEqDatabase","line":28,"kind":"instance","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.instBEqDatabase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.instBEqDatabase\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">instBEqDatabase</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database\">Database</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L27-L27","name":"Mathlib.StacksTag.Database.stacks","line":27,"kind":"ctor","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database.stacks","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database.stacks\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">Database</span>.<span class=\"name\">stacks</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database\">Database</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L26-L26","name":"Mathlib.StacksTag.Database.kerodon","line":26,"kind":"ctor","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database.kerodon","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database.kerodon\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">Database</span>.<span class=\"name\">kerodon</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database\">Database</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/StacksAttribute.lean#L24-L28","name":"Mathlib.StacksTag.Database","line":24,"kind":"inductive","docLink":"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database","doc":"Web database users of projects tags "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/StacksAttribute.html#Mathlib.StacksTag.Database\"><span class=\"name\">Mathlib</span>.<span class=\"name\">StacksTag</span>.<span class=\"name\">Database</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}