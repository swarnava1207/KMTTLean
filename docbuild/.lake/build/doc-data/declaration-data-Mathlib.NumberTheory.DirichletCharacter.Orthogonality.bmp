{"name":"Mathlib.NumberTheory.DirichletCharacter.Orthogonality","instances":[{"typeNames":["DirichletCharacter"],"name":"DirichletCharacter.fintype","className":"Fintype"}],"imports":["Init","Mathlib.FieldTheory.Finite.Basic","Mathlib.NumberTheory.DirichletCharacter.Basic","Mathlib.NumberTheory.MulChar.Duality"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/DirichletCharacter/Orthogonality.lean#L73-L78","name":"DirichletCharacter.sum_char_inv_mul_char_eq","line":73,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.sum_char_inv_mul_char_eq","doc":"If `R` is an integral domain that has enough roots of unity and `n ≠ 0`, then for `a` and `b`\nin `ZMod n` with `a` a unit, the sum of `χ a⁻¹ * χ b` over all Dirichlet characters\nmod `n` with values in `R` vanishes if `a ≠ b` and has the value `n.totient` if `a = b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.sum_char_inv_mul_char_eq\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">sum_char_inv_mul_char_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/EnoughRootsOfUnity.html#HasEnoughRootsOfUnity\">HasEnoughRootsOfUnity</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">a</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Totient.html#Nat.totient\">totient</a></span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/DirichletCharacter/Orthogonality.lean#L62-L71","name":"DirichletCharacter.sum_characters_eq","line":62,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.sum_characters_eq","doc":"If `R` is an integral domain that has enough roots of unity and `n ≠ 0`, then\nfor `a` in `ZMod n`, the sum of `χ a` over all Dirichlet characters mod `n`\nwith values in `R` vanishes if `a ≠ 1` and has the value `n.totient` if `a = 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.sum_characters_eq\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">sum_characters_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/EnoughRootsOfUnity.html#HasEnoughRootsOfUnity\">HasEnoughRootsOfUnity</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Totient.html#Nat.totient\">totient</a></span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/DirichletCharacter/Orthogonality.lean#L52-L60","name":"DirichletCharacter.sum_characters_eq_zero","line":52,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.sum_characters_eq_zero","doc":"If `R` is an integral domain that has enough roots of unity and `n ≠ 0`, then\nfor each `a ≠ 1` in `ZMod n`, the sum of `χ a` over all Dirichlet characters mod `n`\nwith values in `R` vanishes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.sum_characters_eq_zero\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">sum_characters_eq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/EnoughRootsOfUnity.html#HasEnoughRootsOfUnity\">HasEnoughRootsOfUnity</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/DirichletCharacter/Orthogonality.lean#L43-L48","name":"DirichletCharacter.exists_apply_ne_one_of_hasEnoughRootsOfUnity","line":43,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.exists_apply_ne_one_of_hasEnoughRootsOfUnity","doc":"If `R` is a ring that has enough roots of unity and `n ≠ 0`, then for each\n`a ≠ 1` in `ZMod n`, there exists a Dirichlet character `χ` mod `n` with values in `R`\nsuch that `χ a ≠ 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.exists_apply_ne_one_of_hasEnoughRootsOfUnity\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">exists_apply_ne_one_of_hasEnoughRootsOfUnity</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/EnoughRootsOfUnity.html#HasEnoughRootsOfUnity\">HasEnoughRootsOfUnity</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/DirichletCharacter/Orthogonality.lean#L34-L39","name":"DirichletCharacter.card_eq_totient_of_hasEnoughRootsOfUnity","line":34,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.card_eq_totient_of_hasEnoughRootsOfUnity","doc":"There are `n.totient` Dirichlet characters mod `n` with values in a ring that has enough\nroots of unity. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.card_eq_totient_of_hasEnoughRootsOfUnity\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">card_eq_totient_of_hasEnoughRootsOfUnity</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/EnoughRootsOfUnity.html#HasEnoughRootsOfUnity\">HasEnoughRootsOfUnity</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Totient.html#Nat.totient\">totient</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/DirichletCharacter/Orthogonality.lean#L29-L32","name":"DirichletCharacter.mulEquiv_units","line":29,"kind":"theorem","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.mulEquiv_units","doc":"The group of Dirichlet characters mod `n` with values in a ring `R` that has enough\nroots of unity is (noncanonically) isomorphic to `(ZMod n)ˣ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.mulEquiv_units\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">mulEquiv_units</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/EnoughRootsOfUnity.html#HasEnoughRootsOfUnity\">HasEnoughRootsOfUnity</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> (<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/DirichletCharacter/Orthogonality.lean#L23-L24","name":"DirichletCharacter.fintype","line":23,"kind":"instance","docLink":"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.fintype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/DirichletCharacter/Orthogonality.html#DirichletCharacter.fintype\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">fintype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span>)</span></span></div></div>"}]}