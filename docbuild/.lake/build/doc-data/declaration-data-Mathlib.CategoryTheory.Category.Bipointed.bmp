{"name":"Mathlib.CategoryTheory.Category.Bipointed","instances":[{"typeNames":["Bipointed","_builtin_typeu"],"name":"Bipointed.instCoeSortType","className":"CoeSort"},{"typeNames":["Bipointed"],"name":"Bipointed.instInhabited","className":"Inhabited"},{"typeNames":["Bipointed.Hom"],"name":"Bipointed.Hom.instInhabited","className":"Inhabited"},{"typeNames":["Bipointed"],"name":"Bipointed.largeCategory","className":"CategoryTheory.Category"},{"typeNames":["Bipointed.HomSubtype","Bipointed.X","Bipointed.X"],"name":"Bipointed.instFunLikeHomSubtypeX","className":"DFunLike"},{"typeNames":["Bipointed","Bipointed.HomSubtype"],"name":"Bipointed.hasForget","className":"CategoryTheory.ConcreteCategory"}],"imports":["Init","Mathlib.CategoryTheory.Category.Pointed"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L205-L223","name":"pointedToBipointedSndBipointedToPointedSndAdjunction","line":205,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSndBipointedToPointedSndAdjunction","doc":"The free/forgetful adjunction between `PointedToBipointed_snd` and `BipointedToPointed_snd`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSndBipointedToPointedSndAdjunction\"><span class=\"name\">pointedToBipointedSndBipointedToPointedSndAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\">pointedToBipointedSnd</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L185-L203","name":"pointedToBipointedFstBipointedToPointedFstAdjunction","line":185,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFstBipointedToPointedFstAdjunction","doc":"The free/forgetful adjunction between `PointedToBipointed_fst` and `BipointedToPointed_fst`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFstBipointedToPointedFstAdjunction\"><span class=\"name\">pointedToBipointedFstBipointedToPointedFstAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\">pointedToBipointedFst</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L178-L178","name":"pointedToBipointedCompBipointedToPointedSnd_inv_app_toFun","line":178,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd_inv_app_toFun\"><span class=\"name\">pointedToBipointedCompBipointedToPointedSnd_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd\">pointedToBipointedCompBipointedToPointedSnd</a>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L178-L178","name":"pointedToBipointedCompBipointedToPointedSnd_hom_app_toFun","line":178,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd_hom_app_toFun\"><span class=\"name\">pointedToBipointedCompBipointedToPointedSnd_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\">pointedToBipointed</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd\">pointedToBipointedCompBipointedToPointedSnd</a>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L177-L183","name":"pointedToBipointedCompBipointedToPointedSnd","line":177,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd","doc":"`BipointedToPointed_snd` is inverse to `PointedToBipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedSnd\"><span class=\"name\">pointedToBipointedCompBipointedToPointedSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\">pointedToBipointed</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L170-L170","name":"pointedToBipointedCompBipointedToPointedFst_hom_app_toFun","line":170,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst_hom_app_toFun\"><span class=\"name\">pointedToBipointedCompBipointedToPointedFst_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\">pointedToBipointed</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst\">pointedToBipointedCompBipointedToPointedFst</a>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L170-L170","name":"pointedToBipointedCompBipointedToPointedFst_inv_app_toFun","line":170,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst_inv_app_toFun\"><span class=\"name\">pointedToBipointedCompBipointedToPointedFst_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst\">pointedToBipointedCompBipointedToPointedFst</a>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L169-L175","name":"pointedToBipointedCompBipointedToPointedFst","line":169,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst","doc":"`BipointedToPointed_fst` is inverse to `PointedToBipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedCompBipointedToPointedFst\"><span class=\"name\">pointedToBipointedCompBipointedToPointedFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\">pointedToBipointed</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L164-L167","name":"pointedToBipointedSnd_comp_swap","line":164,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd_comp_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd_comp_swap\"><span class=\"name\">pointedToBipointedSnd_comp_swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\">pointedToBipointedSnd</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\">pointedToBipointedFst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L159-L162","name":"pointedToBipointedFst_comp_swap","line":159,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst_comp_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst_comp_swap\"><span class=\"name\">pointedToBipointedFst_comp_swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\">pointedToBipointedFst</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\">pointedToBipointedSnd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L152-L157","name":"pointedToBipointedSnd","line":152,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd","doc":"The functor from `Pointed` to `Bipointed` which adds a first point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedSnd\"><span class=\"name\">pointedToBipointedSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L145-L150","name":"pointedToBipointedFst","line":145,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst","doc":"The functor from `Pointed` to `Bipointed` which adds a second point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointedFst\"><span class=\"name\">pointedToBipointedFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L140-L143","name":"pointedToBipointed","line":140,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed","doc":"The functor from `Pointed` to `Bipointed` which bipoints the point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#pointedToBipointed\"><span class=\"name\">pointedToBipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L135-L138","name":"swap_comp_bipointedToPointedSnd","line":135,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#swap_comp_bipointedToPointedSnd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#swap_comp_bipointedToPointedSnd\"><span class=\"name\">swap_comp_bipointedToPointedSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L130-L133","name":"swap_comp_bipointedToPointedFst","line":130,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#swap_comp_bipointedToPointedFst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#swap_comp_bipointedToPointedFst\"><span class=\"name\">swap_comp_bipointedToPointedFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">Bipointed.swap</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L125-L128","name":"bipointedToPointedSnd_comp_forget","line":125,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd_comp_forget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd_comp_forget\"><span class=\"name\">bipointedToPointedSnd_comp_forget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\">bipointedToPointedSnd</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L120-L123","name":"bipointedToPointedFst_comp_forget","line":120,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst_comp_forget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst_comp_forget\"><span class=\"name\">bipointedToPointedFst_comp_forget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\">bipointedToPointedFst</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L115-L118","name":"bipointedToPointedSnd","line":115,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd","doc":"The forgetful functor from `Bipointed` to `Pointed` which forgets about the first point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedSnd\"><span class=\"name\">bipointedToPointedSnd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L110-L113","name":"bipointedToPointedFst","line":110,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst","doc":"The forgetful functor from `Bipointed` to `Pointed` which forgets about the second point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#bipointedToPointedFst\"><span class=\"name\">bipointedToPointedFst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Pointed.html#Pointed\">Pointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L104-L106","name":"Bipointed.swapEquiv_symm","line":104,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_symm\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_symm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.symm\">symm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">swapEquiv</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L97-L97","name":"Bipointed.swapEquiv_functor_obj_X","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_obj_X\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_functor_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L97-L97","name":"Bipointed.swapEquiv_counitIso_inv_app_toFun","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_counitIso_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_counitIso_inv_app_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_counitIso_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">swap</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">swap</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L97-L97","name":"Bipointed.swapEquiv_inverse_obj_X","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_obj_X\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_inverse_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L97-L97","name":"Bipointed.swapEquiv_functor_map_toFun","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_map_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_functor_map_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L97-L97","name":"Bipointed.swapEquiv_unitIso_hom_app_toFun","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_unitIso_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_unitIso_hom_app_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_unitIso_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L97-L97","name":"Bipointed.swapEquiv_functor_obj_toProd","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_obj_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_functor_obj_toProd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_functor_obj_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L97-L97","name":"Bipointed.swapEquiv_inverse_obj_toProd","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_obj_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_obj_toProd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_inverse_obj_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L97-L97","name":"Bipointed.swapEquiv_counitIso_hom_app_toFun","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_counitIso_hom_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_counitIso_hom_app_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_counitIso_hom_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">swap</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">swap</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L97-L97","name":"Bipointed.swapEquiv_unitIso_inv_app_toFun","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_unitIso_inv_app_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_unitIso_inv_app_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_unitIso_inv_app_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L97-L97","name":"Bipointed.swapEquiv_inverse_map_toFun","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv_inverse_map_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv_inverse_map_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\">swapEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L96-L102","name":"Bipointed.swapEquiv","line":96,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv","doc":"The equivalence between `Bipointed` and itself induced by `Prod.swap` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swapEquiv\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swapEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L91-L91","name":"Bipointed.swap_map_toFun","line":91,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_map_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swap_map_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">swap</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L91-L91","name":"Bipointed.swap_obj_toProd","line":91,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_obj_toProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_obj_toProd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swap_obj_toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">swap</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L91-L91","name":"Bipointed.swap_obj_X","line":91,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap_obj_X\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swap_obj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\">swap</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L90-L94","name":"Bipointed.swap","line":90,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap","doc":"Swaps the pointed elements of a bipointed type. `Prod.swap` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.swap\"><span class=\"name\">Bipointed</span>.<span class=\"name\">swap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L86-L88","name":"Bipointed.hasForget","line":86,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.hasForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.hasForget\"><span class=\"name\">Bipointed</span>.<span class=\"name\">hasForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.HomSubtype\">HomSubtype</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L82-L84","name":"Bipointed.instFunLikeHomSubtypeX","line":82,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instFunLikeHomSubtypeX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instFunLikeHomSubtypeX\"><span class=\"name\">Bipointed</span>.<span class=\"name\">instFunLikeHomSubtypeX</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.HomSubtype\">HomSubtype</a></span> <span class=\"fn\">Y</span>)</span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L78-L80","name":"Bipointed.HomSubtype","line":78,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.HomSubtype","doc":"The subtype of functions corresponding to the morphisms in `Bipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.HomSubtype\"><span class=\"name\">Bipointed</span>.<span class=\"name\">HomSubtype</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max 0 u_1 u_2)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L73-L76","name":"Bipointed.largeCategory","line":73,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.largeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.largeCategory\"><span class=\"name\">Bipointed</span>.<span class=\"name\">largeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L65-L65","name":"Bipointed.Hom.comp_toFun","line":65,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Hom</a></span> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp\">comp</a></span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span>) <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L64-L69","name":"Bipointed.Hom.comp","line":64,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp","doc":"Composition of morphisms of `Bipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.comp\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Hom</a></span> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Hom</a></span> <span class=\"fn\">Z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L61-L62","name":"Bipointed.Hom.instInhabited","line":61,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.instInhabited\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Hom</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L57-L57","name":"Bipointed.Hom.id_toFun","line":57,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id_toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id_toFun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id\">id</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">_root_.id</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L56-L59","name":"Bipointed.Hom.id","line":56,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id","doc":"The identity morphism of `X : Bipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.id\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Hom</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L52-L52","name":"Bipointed.Hom.map_snd","line":52,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.map_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.map_snd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">map_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L51-L51","name":"Bipointed.Hom.map_fst","line":51,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.map_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.map_fst\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">map_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span>.1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L50-L50","name":"Bipointed.Hom.toFun","line":50,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun","doc":"The underlying function of a morphism of bipointed types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span> → <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L48-L48","name":"Bipointed.Hom.mk","line":48,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.mk\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toFun</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span> → <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map_fst</span> : <span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span>.1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map_snd</span> : <span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\">toProd</a></span>.2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L47-L47","name":"Bipointed.Hom.ext_iff","line":47,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.ext_iff\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L47-L47","name":"Bipointed.Hom.ext","line":47,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.ext\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toFun</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom.toFun\">toFun</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L46-L52","name":"Bipointed.Hom","line":46,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom","doc":"Morphisms in `Bipointed`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.Hom\"><span class=\"name\">Bipointed</span>.<span class=\"name\">Hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L43-L44","name":"Bipointed.instInhabited","line":43,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instInhabited\"><span class=\"name\">Bipointed</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L41-L41","name":"Prod.Bipointed","line":41,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Prod.Bipointed","doc":"**Alias** of `Bipointed.of`.\n\n---\n\nTurns a bipointing into a bipointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Prod.Bipointed\"><span class=\"name\">Prod</span>.<span class=\"name\">Bipointed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">to_prod</span> : <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">_root_.Bipointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L38-L39","name":"Bipointed.coe_of","line":38,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.coe_of\"><span class=\"name\">Bipointed</span>.<span class=\"name\">coe_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">to_prod</span> : <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.of\">of</a> <span class=\"fn\">to_prod</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L34-L36","name":"Bipointed.of","line":34,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.of","doc":"Turns a bipointing into a bipointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.of\"><span class=\"name\">Bipointed</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">to_prod</span> : <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L32-L32","name":"Bipointed.instCoeSortType","line":32,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.instCoeSortType\"><span class=\"name\">Bipointed</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L28-L28","name":"Bipointed.toProd","line":28,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd","doc":"The two points of a bipointed type, bundled together as a pair. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.toProd\"><span class=\"name\">Bipointed</span>.<span class=\"name\">toProd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\">X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L26-L26","name":"Bipointed.X","line":26,"kind":"def","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X","doc":"The underlying type of a bipointed type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.X\"><span class=\"name\">Bipointed</span>.<span class=\"name\">X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L24-L24","name":"Bipointed.mk","line":24,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed.mk\"><span class=\"name\">Bipointed</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toProd</span> : <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\">Bipointed</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Category/Bipointed.lean#L23-L28","name":"Bipointed","line":23,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed","doc":"The category of bipointed types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Category/Bipointed.html#Bipointed\"><span class=\"name\">Bipointed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}