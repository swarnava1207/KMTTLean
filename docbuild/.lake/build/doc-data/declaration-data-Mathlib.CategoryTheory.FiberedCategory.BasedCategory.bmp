{"name":"Mathlib.CategoryTheory.FiberedCategory.BasedCategory","instances":[{"typeNames":["CategoryTheory.BasedCategory.obj"],"name":"CategoryTheory.instCategoryObj","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.BasedCategory.p","CategoryTheory.CategoryStruct.id","CategoryTheory.CategoryStruct.id"],"name":"CategoryTheory.BasedFunctor.instIsHomLiftObjPIdObj","className":"CategoryTheory.Functor.IsHomLift"},{"typeNames":["CategoryTheory.BasedCategory.p","Prefunctor.map"],"name":"CategoryTheory.BasedFunctor.preserves_isHomLift","className":"CategoryTheory.Functor.IsHomLift"},{"typeNames":["CategoryTheory.BasedCategory.p","CategoryTheory.CategoryStruct.id","CategoryTheory.NatTrans.app"],"name":"CategoryTheory.BasedNatTrans.app_isHomLift","className":"CategoryTheory.Functor.IsHomLift"},{"typeNames":["CategoryTheory.BasedFunctor"],"name":"CategoryTheory.BasedNatTrans.homCategory","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.BasedNatTrans.forgetful"],"name":"CategoryTheory.BasedNatTrans.instReflectsIsomorphismsBasedFunctorFunctorObjForgetful","className":"CategoryTheory.Functor.ReflectsIsomorphisms"},{"typeNames":["CategoryTheory.BasedNatTrans.toNatTrans"],"name":"CategoryTheory.BasedNatTrans.instIsIsoFunctorObjOfBasedFunctor","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.BasedCategory"],"name":"CategoryTheory.BasedCategory.instCategory","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.BasedCategory"],"name":"CategoryTheory.BasedCategory.bicategory","className":"CategoryTheory.Bicategory"},{"typeNames":["CategoryTheory.BasedCategory"],"name":"CategoryTheory.BasedCategory.instStrict","className":"CategoryTheory.Bicategory.Strict"}],"imports":["Init","Mathlib.CategoryTheory.FiberedCategory.HomLift","Mathlib.CategoryTheory.Bicategory.Strict","Mathlib.CategoryTheory.Functor.Category","Mathlib.CategoryTheory.Functor.ReflectsIso.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L288-L289","name":"CategoryTheory.BasedCategory.instStrict","line":288,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.instStrict","doc":"The bicategory structure on `BasedCategory.{v₂, u₂} 𝒮` is strict. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.instStrict\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">instStrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Strict.html#CategoryTheory.Bicategory.Strict\">Bicategory.Strict</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L276-L286","name":"CategoryTheory.BasedCategory.bicategory","line":276,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.bicategory","doc":"The bicategory of based categories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.bicategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">bicategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">Bicategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L270-L270","name":"CategoryTheory.BasedCategory.instCategory_comp","line":270,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.instCategory_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.instCategory_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">instCategory_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝ </span><span class=\"fn\">Z✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">X✝</span> <span class=\"fn\">Y✝</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">Y✝</span> <span class=\"fn\">Z✝</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp\">comp</a></span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L270-L270","name":"CategoryTheory.BasedCategory.instCategory_id","line":270,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.instCategory_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.instCategory_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">instCategory_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">𝒳</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.id\">BasedFunctor.id</a> <span class=\"fn\">𝒳</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L269-L274","name":"CategoryTheory.BasedCategory.instCategory","line":269,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.instCategory","doc":"The category of based categories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.instCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">instCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{max u₂ v₂, max (max (max (u₂ + 1) (v₂ + 1)) u₁) v₁}</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L261-L261","name":"CategoryTheory.BasedCategory.whiskerRight_toNatTrans","line":261,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.whiskerRight_toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.whiskerRight_toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">whiskerRight_toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒵</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒴</span> <span class=\"fn\">𝒵</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.whiskerRight\">whiskerRight</a> <span class=\"fn\">α</span> <span class=\"fn\">H</span>)</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerRight\">CategoryTheory.whiskerRight</a> <span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span> <span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L259-L265","name":"CategoryTheory.BasedCategory.whiskerRight","line":259,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.whiskerRight","doc":"Right-whiskering in the bicategory `BasedCategory` is given by whiskering the underlying\nfunctors and natural transformations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.whiskerRight\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">whiskerRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒵</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒴</span> <span class=\"fn\">𝒵</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp\">comp</a></span> <span class=\"fn\">H</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp\">comp</a></span> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L253-L253","name":"CategoryTheory.BasedCategory.whiskerLeft_toNatTrans","line":253,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.whiskerLeft_toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.whiskerLeft_toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">whiskerLeft_toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒵</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒴</span> <span class=\"fn\">𝒵</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.whiskerLeft\">whiskerLeft</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Whiskering.html#CategoryTheory.whiskerLeft\">CategoryTheory.whiskerLeft</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span> <span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L251-L257","name":"CategoryTheory.BasedCategory.whiskerLeft","line":251,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.whiskerLeft","doc":"Left-whiskering in the bicategory `BasedCategory` is given by whiskering the underlying functors\nand natural transformations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.whiskerLeft\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">whiskerLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒵</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒴</span> <span class=\"fn\">𝒵</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp\">comp</a></span> <span class=\"fn\">G</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp\">comp</a></span> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L237-L239","name":"CategoryTheory.BasedNatIso.isIso_of_toNatTrans_isIso","line":237,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatIso.isIso_of_toNatTrans_isIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatIso.isIso_of_toNatTrans_isIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatIso</span>.<span class=\"name\">isIso_of_toNatTrans_isIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L225-L235","name":"CategoryTheory.BasedNatIso.mkNatIso","line":225,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatIso.mkNatIso","doc":"The inverse of a based natural transformation whose underlying natural transformation is an\nisomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatIso.mkNatIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatIso</span>.<span class=\"name\">mkNatIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isHomLift'</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/HomLift.html#CategoryTheory.Functor.IsHomLift\">IsHomLift</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">F</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">G</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L218-L218","name":"CategoryTheory.BasedNatIso.id_inv","line":218,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatIso.id_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatIso.id_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatIso</span>.<span class=\"name\">id_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatIso.id\">id</a> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L218-L218","name":"CategoryTheory.BasedNatIso.id_hom","line":218,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatIso.id_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatIso.id_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatIso</span>.<span class=\"name\">id_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatIso.id\">id</a> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L217-L221","name":"CategoryTheory.BasedNatIso.id","line":217,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatIso.id","doc":"The identity natural transformation is a based natural isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatIso.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatIso</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">F</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">F</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L206-L207","name":"CategoryTheory.BasedNatTrans.instIsIsoFunctorObjOfBasedFunctor","line":206,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.instIsIsoFunctorObjOfBasedFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.instIsIsoFunctorObjOfBasedFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">instIsIsoFunctorObjOfBasedFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L198-L204","name":"CategoryTheory.BasedNatTrans.instReflectsIsomorphismsBasedFunctorFunctorObjForgetful","line":198,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.instReflectsIsomorphismsBasedFunctorFunctorObjForgetful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.instReflectsIsomorphismsBasedFunctorFunctorObjForgetful\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">instReflectsIsomorphismsBasedFunctorFunctorObjForgetful</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.forgetful\">forgetful</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/ReflectsIso/Basic.html#CategoryTheory.Functor.ReflectsIsomorphisms\">ReflectsIsomorphisms</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L192-L192","name":"CategoryTheory.BasedNatTrans.forgetful_obj","line":192,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.forgetful_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.forgetful_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">forgetful_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.forgetful\">forgetful</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L192-L192","name":"CategoryTheory.BasedNatTrans.forgetful_map","line":192,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.forgetful_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.forgetful_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">forgetful_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.forgetful\">forgetful</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L190-L196","name":"CategoryTheory.BasedNatTrans.forgetful","line":190,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.forgetful","doc":"The forgetful functor from the category of based functors `𝒳 ⥤ᵇ 𝒴` to the category of\nfunctors of underlying categories, `𝒳.obj ⥤ 𝒴.obj`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.forgetful\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">forgetful</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L186-L186","name":"CategoryTheory.BasedNatTrans.homCategory.ext_iff","line":186,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.homCategory.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.homCategory.ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">homCategory</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">β</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L186-L188","name":"CategoryTheory.BasedNatTrans.homCategory.ext","line":186,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.homCategory.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.homCategory.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">homCategory</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">β</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L179-L179","name":"CategoryTheory.BasedNatTrans.homCategory_comp","line":179,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.homCategory_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.homCategory_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">homCategory_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝ </span><span class=\"fn\">Z✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">X✝</span> <span class=\"fn\">Y✝</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">Y✝</span> <span class=\"fn\">Z✝</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.comp\">comp</a></span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L179-L179","name":"CategoryTheory.BasedNatTrans.homCategory_id","line":179,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.homCategory_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.homCategory_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">homCategory_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.id\">id</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L179-L184","name":"CategoryTheory.BasedNatTrans.homCategory","line":179,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.homCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.homCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">homCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{max u₂ v₃, max (max (max u₂ v₂) u₃) v₃}</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L171-L171","name":"CategoryTheory.BasedNatTrans.comp_toNatTrans","line":171,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.comp_toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.comp_toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">comp_toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G </span><span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">G</span> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.comp\">comp</a></span> <span class=\"fn\">β</span>)</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.vcomp\">vcomp</a></span> <span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L169-L177","name":"CategoryTheory.BasedNatTrans.comp","line":169,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.comp","doc":"Composition of `BasedNatTrans`, given by composition of the underlying natural\ntransformations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G </span><span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">G</span> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">F</span> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L164-L164","name":"CategoryTheory.BasedNatTrans.id_toNatTrans","line":164,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.id_toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.id_toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">id_toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.id\">id</a> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.id\">NatTrans.id</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L163-L167","name":"CategoryTheory.BasedNatTrans.id","line":163,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.id","doc":"The identity natural transformation is a `BasedNatTrans`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">F</span> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L157-L159","name":"CategoryTheory.BasedNatTrans.isHomLift","line":157,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.isHomLift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.isHomLift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">isHomLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\">𝒮</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/HomLift.html#CategoryTheory.Functor.IsHomLift\">IsHomLift</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">S</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L154-L155","name":"CategoryTheory.BasedNatTrans.app_isHomLift","line":154,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.app_isHomLift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.app_isHomLift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">app_isHomLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/HomLift.html#CategoryTheory.Functor.IsHomLift\">IsHomLift</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L150-L150","name":"CategoryTheory.BasedNatTrans.ext_iff","line":150,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">β</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L150-L152","name":"CategoryTheory.BasedNatTrans.ext","line":150,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α </span><span class=\"fn\">β</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\">toNatTrans</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L136-L136","name":"CategoryTheory.BasedNatTrans.isHomLift'","line":136,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.isHomLift'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.isHomLift'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">isHomLift'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/HomLift.html#CategoryTheory.Functor.IsHomLift\">IsHomLift</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L134-L134","name":"CategoryTheory.BasedNatTrans.mk","line":134,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toNatTrans</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans\">NatTrans</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isHomLift'</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/HomLift.html#CategoryTheory.Functor.IsHomLift\">IsHomLift</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">toNatTrans</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">a</span>)</span></span></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L134-L136","name":"CategoryTheory.BasedNatTrans.toNatTrans","line":134,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans.toNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span>.<span class=\"name\">toNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\">BasedNatTrans</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans\">NatTrans</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L132-L136","name":"CategoryTheory.BasedNatTrans","line":132,"kind":"structure","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans","doc":"A `BasedNatTrans` between two `BasedFunctor`s is a natural transformation `α` between the\nunderlying functors, such that for all `a : 𝒳`, `α.app a` lifts `𝟙 S` whenever `𝒳.p.obj a = S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedNatTrans\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedNatTrans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F </span><span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans\">CategoryTheory.NatTrans</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u₂ v₃)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L124-L125","name":"CategoryTheory.BasedFunctor.isHomLift_iff","line":124,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.isHomLift_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.isHomLift_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">isHomLift_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <span class=\"fn\">𝒮</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/HomLift.html#CategoryTheory.Functor.IsHomLift\">IsHomLift</a></span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">φ</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/HomLift.html#CategoryTheory.Functor.IsHomLift\">IsHomLift</a></span> <span class=\"fn\">f</span> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L117-L122","name":"CategoryTheory.BasedFunctor.isHomLift_map","line":117,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.isHomLift_map","doc":"For a based functor `F : 𝒳 ⟶ 𝒴`, and an arrow `φ` in `𝒳`, then `φ` lifts an arrow `f` in `𝒮`\nif `F(φ)` does. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.isHomLift_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">isHomLift_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <span class=\"fn\">𝒮</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/HomLift.html#CategoryTheory.Functor.IsHomLift\">IsHomLift</a></span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">φ</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/HomLift.html#CategoryTheory.Functor.IsHomLift\">IsHomLift</a></span> <span class=\"fn\">f</span> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L109-L115","name":"CategoryTheory.BasedFunctor.preserves_isHomLift","line":109,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.preserves_isHomLift","doc":"For a based functor `F : 𝒳 ⟶ 𝒴`, then whenever an arrow `φ` in `𝒳` lifts some `f` in `𝒮`,\nthen `F(φ)` also lifts `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.preserves_isHomLift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">preserves_isHomLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">S</span> : <span class=\"fn\">𝒮</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/HomLift.html#CategoryTheory.Functor.IsHomLift\">IsHomLift</a></span> <span class=\"fn\">f</span> <span class=\"fn\">φ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/HomLift.html#CategoryTheory.Functor.IsHomLift\">IsHomLift</a></span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">φ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L102-L103","name":"CategoryTheory.BasedFunctor.instIsHomLiftObjPIdObj","line":102,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.instIsHomLiftObjPIdObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.instIsHomLiftObjPIdObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">instIsHomLiftObjPIdObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/HomLift.html#CategoryTheory.Functor.IsHomLift\">IsHomLift</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L98-L100","name":"CategoryTheory.BasedFunctor.w_obj","line":98,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.w_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.w_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">w_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L93-L96","name":"CategoryTheory.BasedFunctor.comp_assoc","line":93,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">comp_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒵</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒜</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒴</span> <span class=\"fn\">𝒵</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒵</span> <span class=\"fn\">𝒜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp\">comp</a></span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp\">comp</a></span> <span class=\"fn\">H</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp\">comp</a></span> <span class=\"fn\">H</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L89-L91","name":"CategoryTheory.BasedFunctor.id_comp","line":89,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.id_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.id_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">id_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.id\">id</a> <span class=\"fn\">𝒳</span>)</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp\">comp</a></span> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">F</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L85-L87","name":"CategoryTheory.BasedFunctor.comp_id","line":85,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">comp_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.id\">id</a> <span class=\"fn\">𝒴</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">F</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L82-L83","name":"CategoryTheory.BasedFunctor.«term_⋙_»","line":82,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.«term_⋙_»","doc":"Notation for composition of based functors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.«term_⋙_»\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">«term_⋙_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L77-L77","name":"CategoryTheory.BasedFunctor.comp_toFunctor","line":77,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp_toFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp_toFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">comp_toFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒵</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒴</span> <span class=\"fn\">𝒵</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp\">comp</a></span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L76-L80","name":"CategoryTheory.BasedFunctor.comp","line":76,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp","doc":"The composition of two based functors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒵</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒴</span> <span class=\"fn\">𝒵</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒵</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L73-L74","name":"CategoryTheory.BasedFunctor.«term𝟭»","line":73,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.«term𝟭»","doc":"Notation for the identity functor on a based category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.«term𝟭»\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">«term𝟭»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L67-L67","name":"CategoryTheory.BasedFunctor.id_toFunctor","line":67,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.id_toFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.id_toFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">id_toFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.id\">id</a> <span class=\"fn\">𝒳</span>)</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\">toFunctor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L66-L69","name":"CategoryTheory.BasedFunctor.id","line":66,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.id","doc":"The identity based functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒳</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L59-L60","name":"CategoryTheory.«term_⥤ᵇ_»","line":59,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.«term_⥤ᵇ_»","doc":"Notation for `BasedFunctor`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.«term_⥤ᵇ_»\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">«term_⥤ᵇ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L57-L57","name":"CategoryTheory.BasedFunctor.w","line":57,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.w","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.w\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">w</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L55-L55","name":"CategoryTheory.BasedFunctor.mk","line":55,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toFunctor</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toFunctor</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\">p</a></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L55-L57","name":"CategoryTheory.BasedFunctor.toFunctor","line":55,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor.toFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span>.<span class=\"name\">toFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\">BasedFunctor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒴</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L53-L57","name":"CategoryTheory.BasedFunctor","line":53,"kind":"structure","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor","doc":"A functor between based categories is a functor between the underlying categories that commutes\nwith the projections. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒴</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">𝒴</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max u₂ u₃) v₂) v₃)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L48-L51","name":"CategoryTheory.BasedCategory.ofFunctor","line":48,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.ofFunctor","doc":"The based category associated to a functor `p : 𝒳 ⥤ 𝒮`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.ofFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">ofFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒳</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">𝒳</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">𝒳</span> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L46-L46","name":"CategoryTheory.instCategoryObj","line":46,"kind":"instance","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.instCategoryObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.instCategoryObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instCategoryObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒳</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\"><span class=\"fn\">𝒳</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L44-L44","name":"CategoryTheory.BasedCategory.p","line":44,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p","doc":"The functor to the base. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.p\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">p</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span> <span class=\"fn\">𝒮</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L42-L42","name":"CategoryTheory.BasedCategory.category","line":42,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.category","doc":"The underlying category of a `BasedCategory`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.category\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">category</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\">obj</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L40-L40","name":"CategoryTheory.BasedCategory.obj","line":40,"kind":"def","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj","doc":"The type of objects in a `BasedCategory` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u₂</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L38-L38","name":"CategoryTheory.BasedCategory.mk","line":38,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">obj</span> : <a href=\"./foundational_types.html\">Type</a> u₂)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">category</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">obj</span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">obj</span> <span class=\"fn\">𝒮</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\">BasedCategory</a> <span class=\"fn\">𝒮</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/FiberedCategory/BasedCategory.lean#L36-L44","name":"CategoryTheory.BasedCategory","line":36,"kind":"structure","docLink":"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory","doc":"A based category over `𝒮` is a category `𝒳` together with a functor `p : 𝒳 ⥤ 𝒮`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/FiberedCategory/BasedCategory.html#CategoryTheory.BasedCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">BasedCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒮</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">𝒮</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max (max u₁ (u₂ + 1)) v₁) (v₂ + 1))</div></div>"}]}