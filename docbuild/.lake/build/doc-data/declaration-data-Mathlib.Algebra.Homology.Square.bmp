{"name":"Mathlib.Algebra.Homology.Square","instances":[],"imports":["Init","Mathlib.Algebra.Homology.CommSq","Mathlib.CategoryTheory.Limits.Shapes.Pullback.Square"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/Square.lean#L65-L68","name":"CategoryTheory.Square.IsPullback.isLimitKernelFork","line":65,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.IsPullback.isLimitKernelFork","doc":"The limit kernel fork attached to a pullback square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.IsPullback.isLimitKernelFork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">isLimitKernelFork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.X₂\">X₂</a></span> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.X₃\">X₃</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.kernelFork\">kernelFork</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/Square.lean#L53-L62","name":"CategoryTheory.Square.isPullbackEquivIsLimitKernelFork","line":53,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.isPullbackEquivIsLimitKernelFork","doc":"A commutative square in a preadditive category is a pullback square iff\nthe corresponding diagram `0 ⟶ X₁ ⟶ X₂ ⊞ X₃ ⟶ X₄ ⟶ 0` makes `X₁` a kernel. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.isPullbackEquivIsLimitKernelFork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">isPullbackEquivIsLimitKernelFork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.X₂\">X₂</a></span> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.X₃\">X₃</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.kernelFork\">kernelFork</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/Square.lean#L48-L51","name":"CategoryTheory.Square.kernelFork","line":48,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.kernelFork","doc":"The kernel fork attached to a commutative square in a preadditive category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.kernelFork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">kernelFork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.X₂\">X₂</a></span> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.X₃\">X₃</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.KernelFork\">Limits.KernelFork</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.biprod.desc\">Limits.biprod.desc</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₂₄\">f₂₄</a></span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₃₄\">f₃₄</a></span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/Square.lean#L43-L46","name":"CategoryTheory.Square.IsPushout.isColimitCokernelCofork","line":43,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.IsPushout.isColimitCokernelCofork","doc":"The colimit cokernel cofork attached to a pushout square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.IsPushout.isColimitCokernelCofork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">isColimitCokernelCofork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.X₂\">X₂</a></span> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.X₃\">X₃</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.cokernelCofork\">cokernelCofork</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/Square.lean#L31-L40","name":"CategoryTheory.Square.isPushoutEquivIsColimitCokernelCofork","line":31,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.isPushoutEquivIsColimitCokernelCofork","doc":"A commutative square in a preadditive category is a pushout square iff\nthe corresponding diagram `X₁ ⟶ X₂ ⊞ X₃ ⟶ X₄ ⟶ 0` makes `X₄` a cokernel. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.isPushoutEquivIsColimitCokernelCofork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">isPushoutEquivIsColimitCokernelCofork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.X₂\">X₂</a></span> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.X₃\">X₃</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.cokernelCofork\">cokernelCofork</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/Square.lean#L26-L29","name":"CategoryTheory.Square.cokernelCofork","line":26,"kind":"def","docLink":"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.cokernelCofork","doc":"The cokernel cofork attached to a commutative square in a preadditive category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/Square.html#CategoryTheory.Square.cokernelCofork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">cokernelCofork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.X₂\">X₂</a></span> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.X₃\">X₃</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.CokernelCofork\">Limits.CokernelCofork</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.biprod.lift\">Limits.biprod.lift</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₁₂\">f₁₂</a></span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₁₃\">f₁₃</a></span>))</span></span></div></div>"}]}