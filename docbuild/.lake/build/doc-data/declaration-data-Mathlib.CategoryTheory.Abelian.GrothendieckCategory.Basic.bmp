{"name":"Mathlib.CategoryTheory.Abelian.GrothendieckCategory.Basic","instances":[{"typeNames":["CategoryTheory.ShrinkHoms"],"name":"CategoryTheory.ShrinkHoms.isGrothendieckAbelian","className":"CategoryTheory.IsGrothendieckAbelian"},{"typeNames":[],"name":"CategoryTheory.IsGrothendieckAbelian.hasColimits","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":[],"name":"CategoryTheory.IsGrothendieckAbelian.hasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":[],"name":"CategoryTheory.IsGrothendieckAbelian.wellPowered","className":"CategoryTheory.WellPowered"},{"typeNames":[],"name":"CategoryTheory.IsGrothendieckAbelian.ab4OfSize","className":"CategoryTheory.AB4OfSize"}],"imports":["Init","Mathlib.CategoryTheory.Abelian.GrothendieckAxioms.Basic","Mathlib.CategoryTheory.Abelian.Subobject","Mathlib.CategoryTheory.Abelian.Transfer","Mathlib.CategoryTheory.Adjunction.AdjointFunctorTheorems","Mathlib.CategoryTheory.Limits.HasLimits"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.lean#L106-L108","name":"CategoryTheory.IsGrothendieckAbelian.ab4OfSize","line":106,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.ab4OfSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.ab4OfSize\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsGrothendieckAbelian</span>.<span class=\"name\">ab4OfSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\">IsGrothendieckAbelian.{w, v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckAxioms/Basic.html#CategoryTheory.AB4OfSize\">AB4OfSize.{w, v, u}</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.lean#L103-L104","name":"CategoryTheory.IsGrothendieckAbelian.wellPowered","line":103,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.wellPowered","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.wellPowered\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsGrothendieckAbelian</span>.<span class=\"name\">wellPowered</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\">IsGrothendieckAbelian.{w, v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/WellPowered.html#CategoryTheory.WellPowered\">WellPowered.{w, v, u}</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.lean#L99-L101","name":"CategoryTheory.IsGrothendieckAbelian.hasLimits","line":99,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.hasLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.hasLimits\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsGrothendieckAbelian</span>.<span class=\"name\">hasLimits</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\">IsGrothendieckAbelian.{w, v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimitsOfSize\">Limits.HasLimitsOfSize.{w, w, v, u}</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.lean#L96-L97","name":"CategoryTheory.IsGrothendieckAbelian.hasColimits","line":96,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.hasColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.hasColimits\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsGrothendieckAbelian</span>.<span class=\"name\">hasColimits</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\">IsGrothendieckAbelian.{w, v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimitsOfSize\">Limits.HasColimitsOfSize.{w, w, v, u}</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.lean#L88-L90","name":"CategoryTheory.ShrinkHoms.isGrothendieckAbelian","line":88,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.ShrinkHoms.isGrothendieckAbelian","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.ShrinkHoms.isGrothendieckAbelian\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ShrinkHoms</span>.<span class=\"name\">isGrothendieckAbelian</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\">IsGrothendieckAbelian.{w, v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\">IsGrothendieckAbelian.{w, w, u}</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.ShrinkHoms\">ShrinkHoms.{u}</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.lean#L78-L86","name":"CategoryTheory.IsGrothendieckAbelian.of_equivalence","line":78,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.of_equivalence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.of_equivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsGrothendieckAbelian</span>.<span class=\"name\">of_equivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\">IsGrothendieckAbelian.{w, v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">D</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\">IsGrothendieckAbelian.{w, v₂, u₂}</a> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.lean#L71-L71","name":"CategoryTheory.IsGrothendieckAbelian.hasSeparator","line":71,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.hasSeparator","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.hasSeparator\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsGrothendieckAbelian</span>.<span class=\"name\">hasSeparator</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\">IsGrothendieckAbelian.{w, v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Generator/Basic.html#CategoryTheory.HasSeparator\">HasSeparator</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.lean#L70-L70","name":"CategoryTheory.IsGrothendieckAbelian.ab5OfSize","line":70,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.ab5OfSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.ab5OfSize\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsGrothendieckAbelian</span>.<span class=\"name\">ab5OfSize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\">IsGrothendieckAbelian.{w, v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckAxioms/Basic.html#CategoryTheory.AB5OfSize\">AB5OfSize.{w, w, v, u}</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.lean#L69-L69","name":"CategoryTheory.IsGrothendieckAbelian.hasFilteredColimitsOfSize","line":69,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.hasFilteredColimitsOfSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.hasFilteredColimitsOfSize\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsGrothendieckAbelian</span>.<span class=\"name\">hasFilteredColimitsOfSize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\">IsGrothendieckAbelian.{w, v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Filtered.html#CategoryTheory.Limits.HasFilteredColimitsOfSize\">Limits.HasFilteredColimitsOfSize.{w, w, v, u}</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.lean#L68-L68","name":"CategoryTheory.IsGrothendieckAbelian.locallySmall","line":68,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.locallySmall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.locallySmall\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsGrothendieckAbelian</span>.<span class=\"name\">locallySmall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\">IsGrothendieckAbelian.{w, v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall\">LocallySmall.{w, v, u}</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.lean#L67-L67","name":"CategoryTheory.IsGrothendieckAbelian.mk","line":67,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsGrothendieckAbelian</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">locallySmall</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.LocallySmall\">LocallySmall.{w, v, u}</a> <span class=\"fn\">C</span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hasFilteredColimitsOfSize</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Filtered.html#CategoryTheory.Limits.HasFilteredColimitsOfSize\">Limits.HasFilteredColimitsOfSize.{w, w, v, u}</a> <span class=\"fn\">C</span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ab5OfSize</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckAxioms/Basic.html#CategoryTheory.AB5OfSize\">AB5OfSize.{w, w, v, u}</a> <span class=\"fn\">C</span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hasSeparator</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Generator/Basic.html#CategoryTheory.HasSeparator\">HasSeparator</a> <span class=\"fn\">C</span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\">IsGrothendieckAbelian.{w, v, u}</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.lean#L52-L71","name":"CategoryTheory.IsGrothendieckAbelian","line":52,"kind":"class","docLink":"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian","doc":"If `C` is an abelian category, we shall say that it satisfies `IsGrothendieckAbelian.{w} C`\nif it is locally small (relative to `w`), has exact filtered colimits of size `w` (AB5) and has a\nseparator.\nIf `[Category.{v} C]` and `w = v`, this means that `C` satisfies `AB5` and has a separator;\ngeneral results about Grothendieck abelian categories can be\nreduced to this case using the instance `ShrinkHoms.isGrothendieckAbelian` below.\n\nThe introduction of the auxiliary universe `w` shall be needed for certain\napplications to categories of sheaves. That the present definition still preserves essential\nproperties of Grothendieck categories is ensured by `IsGrothendieckAbelian.of_equivalence`,\nwhich shows that every instance for `C` implies an instance for `ShrinkHoms C` with hom sets in\n`Type w`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/GrothendieckCategory/Basic.html#CategoryTheory.IsGrothendieckAbelian\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsGrothendieckAbelian</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}