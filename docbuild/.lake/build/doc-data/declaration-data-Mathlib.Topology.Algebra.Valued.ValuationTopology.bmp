{"name":"Mathlib.Topology.Algebra.Valued.ValuationTopology","instances":[{"typeNames":[],"name":"Valued.instIsTopologicalRing","className":"IsTopologicalRing"}],"imports":["Init","Mathlib.Topology.Algebra.Nonarchimedean.Bases","Mathlib.Topology.Algebra.UniformFilterBasis","Mathlib.RingTheory.Valuation.ValuationSubring"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L190-L193","name":"Valued.valuationSubring_isOpen","line":190,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.valuationSubring_isOpen","doc":"The valuation subring of a valued field is open. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.valuationSubring_isOpen\"><span class=\"name\">Valued</span>.<span class=\"name\">valuationSubring_isOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">K</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">↑<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a>.<a href=\"./Mathlib/RingTheory/Valuation/ValuationSubring.html#Valuation.valuationSubring\">valuationSubring</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L186-L188","name":"Valued.integer_isOpen","line":186,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.integer_isOpen","doc":"The closed unit ball in a valued ring is open. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.integer_isOpen\"><span class=\"name\">Valued</span>.<span class=\"name\">integer_isOpen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">↑<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a>.<a href=\"./Mathlib/RingTheory/Valuation/Integers.html#Valuation.integer\">integer</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L176-L184","name":"Valued.isOpen_sphere","line":176,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.isOpen_sphere","doc":"A sphere centred at the origin in a valued ring is open. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.isOpen_sphere\"><span class=\"name\">Valued</span>.<span class=\"name\">isOpen_sphere</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\">Γ₀</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L167-L174","name":"Valued.isOpen_closedball","line":167,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.isOpen_closedball","doc":"A closed ball centred at the origin in a valued ring is open. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.isOpen_closedball\"><span class=\"name\">Valued</span>.<span class=\"name\">isOpen_closedball</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\">Γ₀</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">r</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">r</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L156-L165","name":"Valued.isOpen_ball","line":156,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.isOpen_ball","doc":"An open ball centred at the origin in a valued ring is open. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.isOpen_ball\"><span class=\"name\">Valued</span>.<span class=\"name\">isOpen_ball</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">Γ₀</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L143-L152","name":"Valued.cauchy_iff","line":143,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.cauchy_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.cauchy_iff\"><span class=\"name\">Valued</span>.<span class=\"name\">cauchy_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">γ</span> : <span class=\"fn\">Γ₀</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>), <span class=\"fn\">∃ <span class=\"fn\">M</span> ∈ <span class=\"fn\">F</span>, <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">M</span>, <span class=\"fn\">∀ <span class=\"fn\">y</span> ∈ <span class=\"fn\">M</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">γ</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L140-L141","name":"Valued.instIsTopologicalRing","line":140,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.instIsTopologicalRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.instIsTopologicalRing\"><span class=\"name\">Valued</span>.<span class=\"name\">instIsTopologicalRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Ring/Basic.html#IsTopologicalRing\">IsTopologicalRing</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L133-L138","name":"Valued.loc_const","line":133,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.loc_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.loc_const\"><span class=\"name\">Valued</span>.<span class=\"name\">loc_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">y</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L130-L131","name":"Valued.mem_nhds_zero","line":130,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.mem_nhds_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.mem_nhds_zero\"><span class=\"name\">Valued</span>.<span class=\"name\">mem_nhds_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">γ</span> : <span class=\"fn\">Γ₀</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>), <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">γ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L126-L128","name":"Valued.mem_nhds","line":126,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.mem_nhds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.mem_nhds\"><span class=\"name\">Valued</span>.<span class=\"name\">mem_nhds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">γ</span> : <span class=\"fn\">Γ₀</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>), <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">y</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">γ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L119-L122","name":"Valued.toUniformSpace_eq","line":119,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.toUniformSpace_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.toUniformSpace_eq\"><span class=\"name\">Valued</span>.<span class=\"name\">toUniformSpace_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.toUniformSpace\">toUniformSpace</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/IsUniformGroup/Defs.html#IsTopologicalAddGroup.toUniformSpace\">IsTopologicalAddGroup.toUniformSpace</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L114-L117","name":"Valued.hasBasis_uniformity","line":114,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.hasBasis_uniformity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.hasBasis_uniformity\"><span class=\"name\">Valued</span>.<span class=\"name\">hasBasis_uniformity</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Defs.html#uniformity\">uniformity</a> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Γ₀</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>) =&gt; <a href=\"./Init/Prelude.html#True\">True</a>)</span> <span class=\"fn\">fun (<span class=\"fn\">γ</span> : <span class=\"fn\">Γ₀</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>) =&gt; <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">p</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a> (<span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">γ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L109-L111","name":"Valued.hasBasis_nhds_zero","line":109,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.hasBasis_nhds_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.hasBasis_nhds_zero\"><span class=\"name\">Valued</span>.<span class=\"name\">hasBasis_nhds_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">_i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/Order/Filter/Bases/Basic.html#Filter.HasBasis\">HasBasis</a></span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Γ₀</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>) =&gt; <a href=\"./Init/Prelude.html#True\">True</a>)</span> <span class=\"fn\">fun (<span class=\"fn\">γ</span> : <span class=\"fn\">Γ₀</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>) =&gt; <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">γ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L95-L104","name":"Valued.mk'","line":95,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.mk'","doc":"Alternative `Valued` constructor for use when there is no preferred `UniformSpace` structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.mk'\"><span class=\"name\">Valued</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Valuation/Basic.html#Valuation\">Valuation</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L91-L91","name":"Valued.is_topological_valuation","line":91,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.is_topological_valuation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.is_topological_valuation\"><span class=\"name\">Valued</span>.<span class=\"name\">is_topological_valuation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(Type</a> v)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">γ</span> : <span class=\"fn\">Γ₀</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>), <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">v</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">γ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L90-L90","name":"Valued.v","line":90,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\"><span class=\"name\">Valued</span>.<span class=\"name\">v</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(Type</a> v)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Valuation/Basic.html#Valuation\">Valuation</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L88-L88","name":"Valued.mk","line":88,"kind":"ctor","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.mk\"><span class=\"name\">Valued</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(Type</a> v)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toUniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toIsUniformAddGroup</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/IsUniformGroup/Defs.html#IsUniformAddGroup\">IsUniformAddGroup</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Valuation/Basic.html#Valuation\">Valuation</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">is_topological_valuation</span> : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>), <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">γ</span> : <span class=\"fn\">Γ₀</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>), <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">γ</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L88-L91","name":"Valued.toIsUniformAddGroup","line":88,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.toIsUniformAddGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.toIsUniformAddGroup\"><span class=\"name\">Valued</span>.<span class=\"name\">toIsUniformAddGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(Type</a> v)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/IsUniformGroup/Defs.html#IsUniformAddGroup\">IsUniformAddGroup</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L88-L91","name":"Valued.toUniformSpace","line":88,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.toUniformSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.toUniformSpace\"><span class=\"name\">Valued</span>.<span class=\"name\">toUniformSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(Type</a> v)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L81-L91","name":"Valued","line":81,"kind":"class","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued","doc":"A valued ring is a ring that comes equipped with a distinguished valuation. The class `Valued`\nis designed for the situation that there is a canonical valuation on the ring.\n\nTODO: show that there always exists an equivalent valuation taking values in a type belonging to\nthe same universe as the ring.\n\nSee Note [forgetful inheritance] for why we extend `UniformSpace`, `IsUniformAddGroup`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\"><span class=\"name\">Valued</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ₀</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">(Type</a> v)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">R</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/IsUniformGroup/Defs.html#IsUniformAddGroup\">IsUniformAddGroup</a> <span class=\"fn\">R</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Valued/ValuationTopology.lean#L31-L77","name":"Valuation.subgroups_basis","line":31,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valuation.subgroups_basis","doc":"The basis of open subgroups for the topology on a ring determined by a valuation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valuation.subgroups_basis\"><span class=\"name\">Valuation</span>.<span class=\"name\">subgroups_basis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ₀</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/GroupWithZero/Canonical.html#LinearOrderedCommGroupWithZero\">LinearOrderedCommGroupWithZero</a> <span class=\"fn\">Γ₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Valuation/Basic.html#Valuation\">Valuation</a> <span class=\"fn\">R</span> <span class=\"fn\">Γ₀</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/Bases.html#RingSubgroupsBasis\">RingSubgroupsBasis</a> <span class=\"fn\">fun (<span class=\"fn\">γ</span> : <span class=\"fn\">Γ₀</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/RingTheory/Valuation/Basic.html#Valuation.ltAddSubgroup\">ltAddSubgroup</a></span> <span class=\"fn\">γ</span></span></span></span></div></div>"}]}