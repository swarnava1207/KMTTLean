{"name":"Mathlib.Tactic.FunProp.Theorems","instances":[{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremArgs"],"name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheoremArgs","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremArgs"],"name":"Mathlib.Meta.FunProp.instBEqLambdaTheoremArgs","className":"BEq"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremArgs"],"name":"Mathlib.Meta.FunProp.instReprLambdaTheoremArgs","className":"Repr"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremArgs"],"name":"Mathlib.Meta.FunProp.instHashableLambdaTheoremArgs","className":"Hashable"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremType"],"name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheoremType","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremType"],"name":"Mathlib.Meta.FunProp.instBEqLambdaTheoremType","className":"BEq"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremType"],"name":"Mathlib.Meta.FunProp.instReprLambdaTheoremType","className":"Repr"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremType"],"name":"Mathlib.Meta.FunProp.instHashableLambdaTheoremType","className":"Hashable"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheorem"],"name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheorem","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheorem"],"name":"Mathlib.Meta.FunProp.instBEqLambdaTheorem","className":"BEq"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheorems"],"name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheorems","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.TheoremForm"],"name":"Mathlib.Meta.FunProp.instInhabitedTheoremForm","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.TheoremForm"],"name":"Mathlib.Meta.FunProp.instBEqTheoremForm","className":"BEq"},{"typeNames":["Mathlib.Meta.FunProp.TheoremForm"],"name":"Mathlib.Meta.FunProp.instReprTheoremForm","className":"Repr"},{"typeNames":["Mathlib.Meta.FunProp.TheoremForm"],"name":"Mathlib.Meta.FunProp.instToStringTheoremForm","className":"ToString"},{"typeNames":["Mathlib.Meta.FunProp.FunctionTheorem"],"name":"Mathlib.Meta.FunProp.instInhabitedFunctionTheorem","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.FunctionTheorem"],"name":"Mathlib.Meta.FunProp.instBEqFunctionTheorem","className":"BEq"},{"typeNames":["Mathlib.Meta.FunProp.FunctionTheorems"],"name":"Mathlib.Meta.FunProp.instInhabitedFunctionTheorems","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.GeneralTheorem"],"name":"Mathlib.Meta.FunProp.instInhabitedGeneralTheorem","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.GeneralTheorem"],"name":"Mathlib.Meta.FunProp.instBEqGeneralTheorem","className":"BEq"},{"typeNames":["Mathlib.Meta.FunProp.GeneralTheorems"],"name":"Mathlib.Meta.FunProp.instInhabitedGeneralTheorems","className":"Inhabited"}],"imports":["Init","Mathlib.Tactic.FunProp.Decl","Mathlib.Tactic.FunProp.Types","Mathlib.Tactic.FunProp.FunctionData","Mathlib.Lean.Meta.RefinedDiscrTree","Mathlib.Lean.Meta.RefinedDiscrTree.Lookup"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L385-L413","name":"Mathlib.Meta.FunProp.addTheorem","line":385,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.addTheorem","doc":"Register theorem `declName` with `fun_prop`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.addTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">addTheorem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrKind</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a> := <a href=\"./Lean/Attributes.html#Lean.AttributeKind.global\">Lean.AttributeKind.global</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> := <span class=\"fn\">1000</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L323-L382","name":"Mathlib.Meta.FunProp.getTheoremFromConst","line":323,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getTheoremFromConst","doc":"For a theorem declaration `declName` return `fun_prop` theorem. It correctly detects which\ntype of theorem it is. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getTheoremFromConst\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">getTheoremFromConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> := <span class=\"fn\">1000</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem\">Theorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L320-L320","name":"Mathlib.Meta.FunProp.Theorem.transition","line":320,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.transition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.transition\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">Theorem</span>.<span class=\"name\">transition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thm</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem\">Theorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L319-L319","name":"Mathlib.Meta.FunProp.Theorem.mor","line":319,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.mor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.mor\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">Theorem</span>.<span class=\"name\">mor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thm</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem\">Theorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L318-L318","name":"Mathlib.Meta.FunProp.Theorem.function","line":318,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.function","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.function\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">Theorem</span>.<span class=\"name\">function</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thm</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem\">Theorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L317-L317","name":"Mathlib.Meta.FunProp.Theorem.lam","line":317,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.lam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.lam\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">Theorem</span>.<span class=\"name\">lam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thm</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">LambdaTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem\">Theorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L285-L320","name":"Mathlib.Meta.FunProp.Theorem","line":285,"kind":"inductive","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem","doc":"There are four types of theorems:\n- lam - theorem about basic lambda calculus terms\n- function - theorem about a specific function(declared or free variable) in specific arguments\n- mor - special theorems talking about bundled morphisms/DFunLike.coe\n- transition - theorems inferring one function property from another\n\nExamples:\n- lam\n```\n  theorem Continuous_id : Continuous fun x => x\n  theorem Continuous_comp (hf : Continuous f) (hg : Continuous g) : Continuous fun x => f (g x)\n```\n- function\n```\n  theorem Continuous_add : Continuous (fun x => x.1 + x.2)\n  theorem Continuous_add (hf : Continuous f) (hg : Continuous g) :\n      Continuous (fun x => (f x) + (g x))\n```\n- mor - the head of function body has to be ``DFunLike.code\n```\n  theorem ContDiff.clm_apply {f : E → F →L[𝕜] G} {g : E → F}\n      (hf : ContDiff 𝕜 n f) (hg : ContDiff 𝕜 n g) :\n      ContDiff 𝕜 n fun x => (f x) (g x)\n  theorem clm_linear {f : E →L[𝕜] F} : IsLinearMap 𝕜 f\n```\n- transition - the conclusion has to be in the form `P f` where `f` is a free variable\n```\n  theorem linear_is_continuous [FiniteDimensional ℝ E] {f : E → F} (hf : IsLinearMap 𝕜 f) :\n      Continuous f\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">Theorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L270-L279","name":"Mathlib.Meta.FunProp.getMorphismTheorems","line":270,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getMorphismTheorems","doc":"Get morphism theorems applicable to `e`.\n\nFor example calling on `e` equal to `Continuous f` for `f : X→L[ℝ] Y` would return theorem\ninferring continuity from the bundled morphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getMorphismTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">getMorphismTheorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/Types.html#Mathlib.Meta.FunProp.FunPropM\">FunPropM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L260-L267","name":"Mathlib.Meta.FunProp.morTheoremsExt","line":260,"kind":"opaque","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.morTheoremsExt","doc":"Environment extension for morphism theorems. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.morTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">morTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheoremsExt\">GeneralTheoremsExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L249-L258","name":"Mathlib.Meta.FunProp.getTransitionTheorems","line":249,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getTransitionTheorems","doc":"Get transition theorems applicable to `e`.\n\nFor example calling on `e` equal to `Continuous f` might return theorems implying continuity\nfrom linearity over finite dimensional spaces or differentiability. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getTransitionTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">getTransitionTheorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/Types.html#Mathlib.Meta.FunProp.FunPropM\">FunPropM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L240-L247","name":"Mathlib.Meta.FunProp.transitionTheoremsExt","line":240,"kind":"opaque","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.transitionTheoremsExt","doc":"Environment extension for transition theorems. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.transitionTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">transitionTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheoremsExt\">GeneralTheoremsExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L237-L238","name":"Mathlib.Meta.FunProp.GeneralTheoremsExt","line":237,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheoremsExt","doc":"Extendions for transition or morphism theorems "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L235-L235","name":"Mathlib.Meta.FunProp.instInhabitedGeneralTheorems","line":235,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedGeneralTheorems","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedGeneralTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedGeneralTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems\">GeneralTheorems</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L234-L234","name":"Mathlib.Meta.FunProp.GeneralTheorems.theorems","line":234,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems.theorems","doc":"Discrimination tree indexing theorems. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems.theorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorems</span>.<span class=\"name\">theorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems\">GeneralTheorems</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Lean/Meta/RefinedDiscrTree/Basic.html#Lean.Meta.RefinedDiscrTree\">Lean.Meta.RefinedDiscrTree</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L232-L232","name":"Mathlib.Meta.FunProp.GeneralTheorems.mk","line":232,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorems</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">theorems</span> : <span class=\"fn\"><a href=\"./Mathlib/Lean/Meta/RefinedDiscrTree/Basic.html#Lean.Meta.RefinedDiscrTree\">Lean.Meta.RefinedDiscrTree</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems\">GeneralTheorems</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L231-L235","name":"Mathlib.Meta.FunProp.GeneralTheorems","line":231,"kind":"structure","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems","doc":"Structure holding transition or morphism theorems for `fun_prop` tactic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L227-L229","name":"Mathlib.Meta.FunProp.GeneralTheorem.getProof","line":227,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.getProof","doc":"Get proof of a theorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.getProof\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span>.<span class=\"name\">getProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thm</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L225-L225","name":"Mathlib.Meta.FunProp.instBEqGeneralTheorem","line":225,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqGeneralTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqGeneralTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqGeneralTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L225-L225","name":"Mathlib.Meta.FunProp.instInhabitedGeneralTheorem","line":225,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedGeneralTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedGeneralTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedGeneralTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L224-L224","name":"Mathlib.Meta.FunProp.GeneralTheorem.priority","line":224,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.priority","doc":"priority "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.priority\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span>.<span class=\"name\">priority</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L222-L222","name":"Mathlib.Meta.FunProp.GeneralTheorem.keys","line":222,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.keys","doc":"discrimination tree keys used to index this theorem "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.keys\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span>.<span class=\"name\">keys</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/Lean/Meta/RefinedDiscrTree/Encode.html#Lean.Meta.RefinedDiscrTree.DTExpr\">Lean.Meta.RefinedDiscrTree.DTExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L220-L220","name":"Mathlib.Meta.FunProp.GeneralTheorem.thmName","line":220,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.thmName","doc":"theorem name "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.thmName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span>.<span class=\"name\">thmName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L218-L218","name":"Mathlib.Meta.FunProp.GeneralTheorem.funPropName","line":218,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.funPropName","doc":"function property name "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.funPropName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span>.<span class=\"name\">funPropName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L216-L216","name":"Mathlib.Meta.FunProp.GeneralTheorem.mk","line":216,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funPropName </span><span class=\"fn\">thmName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">keys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/Lean/Meta/RefinedDiscrTree/Encode.html#Lean.Meta.RefinedDiscrTree.DTExpr\">Lean.Meta.RefinedDiscrTree.DTExpr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">priority</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">GeneralTheorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L215-L225","name":"Mathlib.Meta.FunProp.GeneralTheorem","line":215,"kind":"structure","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem","doc":"General theorem about a function property used for transition and morphism theorems "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L206-L210","name":"Mathlib.Meta.FunProp.getTheoremsForFunction","line":206,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getTheoremsForFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getTheoremsForFunction\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">getTheoremsForFunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funName </span><span class=\"fn\">funPropName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L190-L203","name":"Mathlib.Meta.FunProp.functionTheoremsExt","line":190,"kind":"opaque","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.functionTheoremsExt","doc":"Extension storing all function theorems. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.functionTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">functionTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheoremsExt\">FunctionTheoremsExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L187-L188","name":"Mathlib.Meta.FunProp.FunctionTheoremsExt","line":187,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheoremsExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L180-L184","name":"Mathlib.Meta.FunProp.FunctionTheorem.getProof","line":180,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.getProof","doc":"return proof of function theorem "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.getProof\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">getProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thm</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L177-L177","name":"Mathlib.Meta.FunProp.instInhabitedFunctionTheorems","line":177,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedFunctionTheorems","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedFunctionTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedFunctionTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems\">FunctionTheorems</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L175-L175","name":"Mathlib.Meta.FunProp.FunctionTheorems.theorems","line":175,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems.theorems","doc":"map: function name → function property → function theorem "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems.theorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorems</span>.<span class=\"name\">theorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems\">FunctionTheorems</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/TreeMap/Basic.html#Std.TreeMap\">Std.TreeMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Std/Data/TreeMap/Basic.html#Std.TreeMap\">Std.TreeMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a>)</span> <a href=\"./Init/Data/Ord.html#Ord.compare\">compare</a>)</span> <a href=\"./Init/Data/Ord.html#Ord.compare\">compare</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L173-L173","name":"Mathlib.Meta.FunProp.FunctionTheorems.mk","line":173,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorems</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">theorems</span> : <span class=\"fn\"><a href=\"./Std/Data/TreeMap/Basic.html#Std.TreeMap\">Std.TreeMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Std/Data/TreeMap/Basic.html#Std.TreeMap\">Std.TreeMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a>)</span> <a href=\"./Init/Data/Ord.html#Ord.compare\">compare</a>)</span> <a href=\"./Init/Data/Ord.html#Ord.compare\">compare</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems\">FunctionTheorems</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L172-L177","name":"Mathlib.Meta.FunProp.FunctionTheorems","line":172,"kind":"structure","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L167-L167","name":"Mathlib.Meta.FunProp.instBEqFunctionTheorem","line":167,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqFunctionTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqFunctionTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqFunctionTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L167-L167","name":"Mathlib.Meta.FunProp.instInhabitedFunctionTheorem","line":167,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedFunctionTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedFunctionTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedFunctionTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L166-L166","name":"Mathlib.Meta.FunProp.FunctionTheorem.form","line":166,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.form","doc":"form of the theorem, see documentation of TheoremForm "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.form\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">form</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">TheoremForm</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L164-L164","name":"Mathlib.Meta.FunProp.FunctionTheorem.priority","line":164,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.priority","doc":"priority "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.priority\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">priority</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L162-L162","name":"Mathlib.Meta.FunProp.FunctionTheorem.appliedArgs","line":162,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.appliedArgs","doc":"total number of arguments applied to the function "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.appliedArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">appliedArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L160-L160","name":"Mathlib.Meta.FunProp.FunctionTheorem.mainArgs","line":160,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.mainArgs","doc":"array of argument indices about which this theorem is about "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.mainArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">mainArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L158-L158","name":"Mathlib.Meta.FunProp.FunctionTheorem.funOrigin","line":158,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.funOrigin","doc":"function name "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.funOrigin\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">funOrigin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Types.html#Mathlib.Meta.FunProp.Origin\">Origin</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L156-L156","name":"Mathlib.Meta.FunProp.FunctionTheorem.thmOrigin","line":156,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.thmOrigin","doc":"theorem name "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.thmOrigin\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">thmOrigin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Types.html#Mathlib.Meta.FunProp.Origin\">Origin</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L154-L154","name":"Mathlib.Meta.FunProp.FunctionTheorem.funPropName","line":154,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.funPropName","doc":"function property name "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.funPropName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">funPropName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L152-L152","name":"Mathlib.Meta.FunProp.FunctionTheorem.mk","line":152,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funPropName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thmOrigin </span><span class=\"fn\">funOrigin</span> : <a href=\"./Mathlib/Tactic/FunProp/Types.html#Mathlib.Meta.FunProp.Origin\">Origin</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">appliedArgs </span><span class=\"fn\">priority</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">form</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">TheoremForm</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">FunctionTheorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L151-L167","name":"Mathlib.Meta.FunProp.FunctionTheorem","line":151,"kind":"structure","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem","doc":"theorem about specific function (either declared constant or free variable) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L147-L149","name":"Mathlib.Meta.FunProp.instToStringTheoremForm","line":147,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instToStringTheoremForm","doc":"TheoremForm to string "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instToStringTheoremForm\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instToStringTheoremForm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">TheoremForm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L145-L145","name":"Mathlib.Meta.FunProp.instReprTheoremForm","line":145,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instReprTheoremForm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instReprTheoremForm\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instReprTheoremForm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">TheoremForm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L145-L145","name":"Mathlib.Meta.FunProp.instBEqTheoremForm","line":145,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqTheoremForm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqTheoremForm\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqTheoremForm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">TheoremForm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L145-L145","name":"Mathlib.Meta.FunProp.instInhabitedTheoremForm","line":145,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedTheoremForm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedTheoremForm\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedTheoremForm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">TheoremForm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L144-L144","name":"Mathlib.Meta.FunProp.TheoremForm.comp","line":144,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm.comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm.comp\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">TheoremForm</span>.<span class=\"name\">comp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">TheoremForm</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L144-L144","name":"Mathlib.Meta.FunProp.TheoremForm.uncurried","line":144,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm.uncurried","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm.uncurried\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">TheoremForm</span>.<span class=\"name\">uncurried</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">TheoremForm</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L131-L145","name":"Mathlib.Meta.FunProp.TheoremForm","line":131,"kind":"inductive","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm","doc":"Function theorems are stated in uncurried or compositional form.\n\nuncurried\n```\ntheorem Continuous_add : Continuous (fun x => x.1 + x.2)\n```\n\ncompositional\n```\ntheorem Continuous_add (hf : Continuous f) (hg : Continuous g) : Continuous (fun x => (f x) + (g x))\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">TheoremForm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L123-L126","name":"Mathlib.Meta.FunProp.getLambdaTheorems","line":123,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getLambdaTheorems","doc":"Get lambda theorems for particular function property `funPropName`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getLambdaTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">getLambdaTheorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funPropName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">LambdaTheoremType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">LambdaTheorem</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L112-L121","name":"Mathlib.Meta.FunProp.lambdaTheoremsExt","line":112,"kind":"opaque","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.lambdaTheoremsExt","doc":"Environment extension storing all lambda theorems. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.lambdaTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">lambdaTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremsExt\">LambdaTheoremsExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L109-L110","name":"Mathlib.Meta.FunProp.LambdaTheoremsExt","line":109,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremsExt","doc":"Environment extension storing lambda theorems. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L105-L107","name":"Mathlib.Meta.FunProp.LambdaTheorem.getProof","line":105,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.getProof","doc":"Return proof of lambda theorem "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.getProof\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorem</span>.<span class=\"name\">getProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thm</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">LambdaTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L102-L102","name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheorems","line":102,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheorems","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedLambdaTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems\">LambdaTheorems</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L101-L101","name":"Mathlib.Meta.FunProp.LambdaTheorems.theorems","line":101,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems.theorems","doc":"map: function property name × theorem type → lambda theorem "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems.theorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorems</span>.<span class=\"name\">theorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems\">LambdaTheorems</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">LambdaTheoremType</a>) <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">LambdaTheorem</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L99-L99","name":"Mathlib.Meta.FunProp.LambdaTheorems.mk","line":99,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorems</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">theorems</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">LambdaTheoremType</a>) <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">LambdaTheorem</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems\">LambdaTheorems</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L98-L102","name":"Mathlib.Meta.FunProp.LambdaTheorems","line":98,"kind":"structure","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems","doc":"Collection of lambda theorems "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L96-L96","name":"Mathlib.Meta.FunProp.instBEqLambdaTheorem","line":96,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqLambdaTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqLambdaTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqLambdaTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">LambdaTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L96-L96","name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheorem","line":96,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedLambdaTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">LambdaTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L95-L95","name":"Mathlib.Meta.FunProp.LambdaTheorem.thmArgs","line":95,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.thmArgs","doc":"Type and important argument of the theorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.thmArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorem</span>.<span class=\"name\">thmArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">LambdaTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">LambdaTheoremArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L93-L93","name":"Mathlib.Meta.FunProp.LambdaTheorem.thmName","line":93,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.thmName","doc":"Name of lambda theorem "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.thmName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorem</span>.<span class=\"name\">thmName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">LambdaTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L91-L91","name":"Mathlib.Meta.FunProp.LambdaTheorem.funPropName","line":91,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.funPropName","doc":"Name of function property "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.funPropName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorem</span>.<span class=\"name\">funPropName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">LambdaTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L89-L89","name":"Mathlib.Meta.FunProp.LambdaTheorem.mk","line":89,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorem</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funPropName </span><span class=\"fn\">thmName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thmArgs</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">LambdaTheoremArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">LambdaTheorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L88-L96","name":"Mathlib.Meta.FunProp.LambdaTheorem","line":88,"kind":"structure","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem","doc":"Structure holding information about lambda theorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L63-L85","name":"Mathlib.Meta.FunProp.detectLambdaTheoremArgs","line":63,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.detectLambdaTheoremArgs","doc":"Decides whether `f` is a function corresponding to one of the lambda theorems. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.detectLambdaTheoremArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">detectLambdaTheoremArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctxVars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">LambdaTheoremArgs</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L54-L61","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs.type","line":54,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.type","doc":"Convert `LambdaTheoremArgs` to `LambdaTheoremType`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.type\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">LambdaTheoremArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">LambdaTheoremType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L52-L52","name":"Mathlib.Meta.FunProp.instHashableLambdaTheoremType","line":52,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instHashableLambdaTheoremType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instHashableLambdaTheoremType\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instHashableLambdaTheoremType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">LambdaTheoremType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L52-L52","name":"Mathlib.Meta.FunProp.instReprLambdaTheoremType","line":52,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instReprLambdaTheoremType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instReprLambdaTheoremType\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instReprLambdaTheoremType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">LambdaTheoremType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L52-L52","name":"Mathlib.Meta.FunProp.instBEqLambdaTheoremType","line":52,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqLambdaTheoremType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqLambdaTheoremType\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqLambdaTheoremType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">LambdaTheoremType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L52-L52","name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheoremType","line":52,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheoremType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheoremType\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedLambdaTheoremType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">LambdaTheoremType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L50-L51","name":"Mathlib.Meta.FunProp.LambdaTheoremType.pi","line":50,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.pi","doc":"Pi theorem e.g. `∀ y, Continuous (f · y) → Continuous fun x y => f x y` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.pi\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremType</span>.<span class=\"name\">pi</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">LambdaTheoremType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L48-L49","name":"Mathlib.Meta.FunProp.LambdaTheoremType.comp","line":48,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.comp","doc":"Composition theorem e.g. `Continuous f → Continuous g → Continuous fun x => f (g x)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.comp\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremType</span>.<span class=\"name\">comp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">LambdaTheoremType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L46-L47","name":"Mathlib.Meta.FunProp.LambdaTheoremType.apply","line":46,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.apply","doc":"Apply theorem e.g. `Continuous fun (f : (x : X) → Y x => f x)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.apply\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremType</span>.<span class=\"name\">apply</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">LambdaTheoremType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L44-L45","name":"Mathlib.Meta.FunProp.LambdaTheoremType.const","line":44,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.const","doc":"Constant theorem e.g. `Continuous fun x => y` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.const\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremType</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">LambdaTheoremType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L42-L43","name":"Mathlib.Meta.FunProp.LambdaTheoremType.id","line":42,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.id","doc":"Identity theorem e.g. `Continuous fun x => x` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.id\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremType</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">LambdaTheoremType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L40-L52","name":"Mathlib.Meta.FunProp.LambdaTheoremType","line":40,"kind":"inductive","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType","doc":"Tag for one of the 5 basic lambda theorems "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L38-L38","name":"Mathlib.Meta.FunProp.instHashableLambdaTheoremArgs","line":38,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instHashableLambdaTheoremArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instHashableLambdaTheoremArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instHashableLambdaTheoremArgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">LambdaTheoremArgs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L38-L38","name":"Mathlib.Meta.FunProp.instReprLambdaTheoremArgs","line":38,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instReprLambdaTheoremArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instReprLambdaTheoremArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instReprLambdaTheoremArgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">LambdaTheoremArgs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L38-L38","name":"Mathlib.Meta.FunProp.instBEqLambdaTheoremArgs","line":38,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqLambdaTheoremArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqLambdaTheoremArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqLambdaTheoremArgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">LambdaTheoremArgs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L38-L38","name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheoremArgs","line":38,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheoremArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheoremArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedLambdaTheoremArgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">LambdaTheoremArgs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L36-L37","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs.pi","line":36,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.pi","doc":"Pi theorem e.g. `∀ y, Continuous (f · y) → Continuous fun x y => f x y` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.pi\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span>.<span class=\"name\">pi</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">LambdaTheoremArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L31-L35","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs.comp","line":31,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.comp","doc":"Composition theorem e.g. `Continuous f → Continuous g → Continuous fun x => f (g x)`\n\nThe numbers `fArgId` and `gArgId` store the argument index for `f` and `g` in the composition\ntheorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.comp\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span>.<span class=\"name\">comp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fArgId </span><span class=\"fn\">gArgId</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">LambdaTheoremArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L29-L30","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs.apply","line":29,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.apply","doc":"Apply theorem e.g. `Continuous fun (f : (x : X) → Y x => f x)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.apply\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span>.<span class=\"name\">apply</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">LambdaTheoremArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L27-L28","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs.const","line":27,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.const","doc":"Constant theorem e.g. `Continuous fun x => y` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.const\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">LambdaTheoremArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L25-L26","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs.id","line":25,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.id","doc":"Identity theorem e.g. `Continuous fun x => x` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.id\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">LambdaTheoremArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/FunProp/Theorems.lean#L22-L38","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs","line":22,"kind":"inductive","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs","doc":"Tag for one of the 5 basic lambda theorems, that also hold extra data for composition theorem\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}