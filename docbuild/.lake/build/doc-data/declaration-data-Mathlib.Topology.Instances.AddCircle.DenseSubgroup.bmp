{"name":"Mathlib.Topology.Instances.AddCircle.DenseSubgroup","instances":[],"imports":["Init","Mathlib.Data.Real.Irrational","Mathlib.Topology.Instances.AddCircle","Mathlib.Topology.Algebra.Order.Archimedean"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Instances/AddCircle/DenseSubgroup.lean#L66-L84","name":"AddCircle.dense_addSubgroup_iff_ne_zmultiples","line":66,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/AddCircle/DenseSubgroup.html#AddCircle.dense_addSubgroup_iff_ne_zmultiples","doc":"A subgroup of the circle `ℝ⧸pℤ`, `p > 0`, is dense\niff it is not generated by a single element of finite additive order. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/AddCircle/DenseSubgroup.html#AddCircle.dense_addSubgroup_iff_ne_zmultiples\"><span class=\"name\">AddCircle</span>.<span class=\"name\">dense_addSubgroup_iff_ne_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span>)</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">p</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Dense\">Dense</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">p</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#addOrderOf\">addOrderOf</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Instances/AddCircle/DenseSubgroup.lean#L59-L64","name":"AddCircle.denseRange_zsmul_iff","line":59,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/AddCircle/DenseSubgroup.html#AddCircle.denseRange_zsmul_iff","doc":"The multiples of a number `a` are dense on a circle of length `p > 0`\niff `a` has infinite additive order. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/AddCircle/DenseSubgroup.html#AddCircle.denseRange_zsmul_iff\"><span class=\"name\">AddCircle</span>.<span class=\"name\">denseRange_zsmul_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span>)</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">p</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Basic.html#DenseRange\">DenseRange</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#addOrderOf\">addOrderOf</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Instances/AddCircle/DenseSubgroup.lean#L50-L57","name":"AddCircle.denseRange_zsmul_coe_iff","line":50,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/AddCircle/DenseSubgroup.html#AddCircle.denseRange_zsmul_coe_iff","doc":"The multiples of a number `a` are dense on a circle of length `p` iff `a / p` is irrational. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/AddCircle/DenseSubgroup.html#AddCircle.denseRange_zsmul_coe_iff\"><span class=\"name\">AddCircle</span>.<span class=\"name\">denseRange_zsmul_coe_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">p</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Basic.html#DenseRange\">DenseRange</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Irrational.html#Irrational\">Irrational</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">p</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Instances/AddCircle/DenseSubgroup.lean#L21-L46","name":"dense_addSubgroupClosure_pair_iff","line":21,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/AddCircle/DenseSubgroup.html#dense_addSubgroupClosure_pair_iff","doc":"The additive subgroup of real numbers generated by `a` and `b` is dense\niff `a / b` is an irrational number.\n\nHere we rely on the fact that `a / 0 = 0` in Mathlib,\nso we don't need to add `b ≠ 0` as an assumption. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/AddCircle/DenseSubgroup.html#dense_addSubgroupClosure_pair_iff\"><span class=\"name\">dense_addSubgroupClosure_pair_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Dense\">Dense</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Lattice.html#AddSubgroup.closure\">AddSubgroup.closure</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">a</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Core.html#Insert.insert\">}</a>)</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Irrational.html#Irrational\">Irrational</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span>)</span></div></div>"}]}