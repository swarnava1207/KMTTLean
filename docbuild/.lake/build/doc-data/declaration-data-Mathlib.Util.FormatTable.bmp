{"name":"Mathlib.Util.FormatTable","instances":[{"typeNames":["Alignment"],"name":"instInhabitedAlignment","className":"Inhabited"},{"typeNames":["Alignment"],"name":"instBEqAlignment","className":"BEq"}],"imports":["Init","Mathlib.Data.String.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/FormatTable.lean#L31-L71","name":"formatTable","line":31,"kind":"def","docLink":"./Mathlib/Util/FormatTable.html#formatTable","doc":"Render a two-dimensional array of `String`s` into a markdown-compliant table.\n`headers` is a list of column headers,\n`table` is a 2D array of cell contents,\n`alignments` describes how to align each table column (default: left-aligned) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/FormatTable.html#formatTable\"><span class=\"name\">formatTable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">headers</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">table</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alignments</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Util/FormatTable.html#Alignment\">Alignment</a>)</span></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/FormatTable.lean#L22-L29","name":"String.justify","line":22,"kind":"def","docLink":"./Mathlib/Util/FormatTable.html#String.justify","doc":"Align a `String` `s` to the left, right, or center within a field of width `width`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/FormatTable.html#String.justify\"><span class=\"name\">String</span>.<span class=\"name\">justify</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Util/FormatTable.html#Alignment\">Alignment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">width</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/FormatTable.lean#L20-L20","name":"instBEqAlignment","line":20,"kind":"instance","docLink":"./Mathlib/Util/FormatTable.html#instBEqAlignment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/FormatTable.html#instBEqAlignment\"><span class=\"name\">instBEqAlignment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Util/FormatTable.html#Alignment\">Alignment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/FormatTable.lean#L20-L20","name":"instInhabitedAlignment","line":20,"kind":"instance","docLink":"./Mathlib/Util/FormatTable.html#instInhabitedAlignment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/FormatTable.html#instInhabitedAlignment\"><span class=\"name\">instInhabitedAlignment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Util/FormatTable.html#Alignment\">Alignment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/FormatTable.lean#L19-L19","name":"Alignment.center","line":19,"kind":"ctor","docLink":"./Mathlib/Util/FormatTable.html#Alignment.center","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/FormatTable.html#Alignment.center\"><span class=\"name\">Alignment</span>.<span class=\"name\">center</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Util/FormatTable.html#Alignment\">Alignment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/FormatTable.lean#L18-L18","name":"Alignment.right","line":18,"kind":"ctor","docLink":"./Mathlib/Util/FormatTable.html#Alignment.right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/FormatTable.html#Alignment.right\"><span class=\"name\">Alignment</span>.<span class=\"name\">right</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Util/FormatTable.html#Alignment\">Alignment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/FormatTable.lean#L17-L17","name":"Alignment.left","line":17,"kind":"ctor","docLink":"./Mathlib/Util/FormatTable.html#Alignment.left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/FormatTable.html#Alignment.left\"><span class=\"name\">Alignment</span>.<span class=\"name\">left</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Util/FormatTable.html#Alignment\">Alignment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/FormatTable.lean#L15-L20","name":"Alignment","line":15,"kind":"inductive","docLink":"./Mathlib/Util/FormatTable.html#Alignment","doc":"Possible alignment modes for each table item: left-aligned, right-aligned and centered. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/FormatTable.html#Alignment\"><span class=\"name\">Alignment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}