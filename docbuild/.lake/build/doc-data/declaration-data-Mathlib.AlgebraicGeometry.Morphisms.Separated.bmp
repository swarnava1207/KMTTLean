{"name":"Mathlib.AlgebraicGeometry.Morphisms.Separated","instances":[{"typeNames":[],"name":"AlgebraicGeometry.IsSeparated.isSeparated_of_mono","className":"AlgebraicGeometry.IsSeparated"},{"typeNames":["AlgebraicGeometry.IsSeparated"],"name":"AlgebraicGeometry.IsSeparated.instRespectsIsoScheme","className":"CategoryTheory.MorphismProperty.Respects"},{"typeNames":[],"name":"AlgebraicGeometry.IsSeparated.instQuasiSeparated","className":"AlgebraicGeometry.QuasiSeparated"},{"typeNames":["AlgebraicGeometry.IsSeparated"],"name":"AlgebraicGeometry.IsSeparated.stableUnderComposition","className":"CategoryTheory.MorphismProperty.IsStableUnderComposition"},{"typeNames":["CategoryTheory.CategoryStruct.comp"],"name":"AlgebraicGeometry.IsSeparated.instCompScheme","className":"AlgebraicGeometry.IsSeparated"},{"typeNames":["AlgebraicGeometry.IsSeparated"],"name":"AlgebraicGeometry.IsSeparated.instIsMultiplicativeScheme","className":"CategoryTheory.MorphismProperty.IsMultiplicative"},{"typeNames":["AlgebraicGeometry.IsSeparated"],"name":"AlgebraicGeometry.IsSeparated.isStableUnderBaseChange","className":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange"},{"typeNames":["AlgebraicGeometry.IsSeparated"],"name":"AlgebraicGeometry.IsSeparated.instIsLocalAtTarget","className":"AlgebraicGeometry.IsLocalAtTarget"},{"typeNames":["AlgebraicGeometry.Spec.map"],"name":"AlgebraicGeometry.IsSeparated.instMap","className":"AlgebraicGeometry.IsSeparated"},{"typeNames":[],"name":"AlgebraicGeometry.IsSeparated.of_isAffineHom","className":"AlgebraicGeometry.IsSeparated"},{"typeNames":["CategoryTheory.Limits.pullback.mapDesc"],"name":"AlgebraicGeometry.IsSeparated.instIsClosedImmersionMapDescScheme","className":"AlgebraicGeometry.IsClosedImmersion"},{"typeNames":["CategoryTheory.Limits.pullback.lift"],"name":"AlgebraicGeometry.IsSeparated.instIsClosedImmersionLiftSchemeId","className":"AlgebraicGeometry.IsClosedImmersion"},{"typeNames":["CategoryTheory.CommaMorphism.left"],"name":"AlgebraicGeometry.isClosedImmersion_equalizer_ι_left","className":"AlgebraicGeometry.IsClosedImmersion"},{"typeNames":["CategoryTheory.Limits.prod.lift"],"name":"AlgebraicGeometry.Scheme.instIsClosedImmersionLiftIdOfIsSeparated","className":"AlgebraicGeometry.IsClosedImmersion"},{"typeNames":[],"name":"AlgebraicGeometry.Scheme.instIsSeparatedOfIsAffine","className":"AlgebraicGeometry.Scheme.IsSeparated"},{"typeNames":[],"name":"AlgebraicGeometry.Scheme.instIsSeparatedOfIsSeparated","className":"AlgebraicGeometry.IsSeparated"},{"typeNames":["CategoryTheory.Limits.equalizer.ι"],"name":"AlgebraicGeometry.Scheme.instIsClosedImmersionιOfIsSeparated","className":"AlgebraicGeometry.IsClosedImmersion"},{"typeNames":["AlgebraicGeometry.IsSeparated"],"name":"AlgebraicGeometry.IsSeparated.hasAffineProperty","className":"AlgebraicGeometry.HasAffineProperty"}],"imports":["Init","Mathlib.AlgebraicGeometry.Morphisms.ClosedImmersion","Mathlib.AlgebraicGeometry.PullbackCarrier","Mathlib.CategoryTheory.Limits.Constructions.Over.Basic","Mathlib.CategoryTheory.Limits.Constructions.Over.Products","Mathlib.CategoryTheory.Limits.Shapes.Pullback.Equalizer"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L290-L298","name":"AlgebraicGeometry.ext_of_isDominant","line":290,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.ext_of_isDominant","doc":"Suppose `f g : X ⟶ Y` where `X` is a reduced scheme and `Y` is a separated scheme.\nThen `f = g` if `ι ≫ f = ι ≫ g` for some dominant `ι`.\n\nAlso see `ext_of_isDominant_of_isSeparated` for the general version over arbitrary bases.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.ext_of_isDominant\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">ext_of_isDominant</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W </span><span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Properties.html#AlgebraicGeometry.IsReduced\">IsReduced</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated\">IsSeparated</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/UnderlyingMap.html#AlgebraicGeometry.IsDominant\">IsDominant</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">ι</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">ι</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L284-L288","name":"AlgebraicGeometry.IsSeparated.hasAffineProperty","line":284,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.hasAffineProperty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.hasAffineProperty\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">hasAffineProperty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Basic.html#AlgebraicGeometry.HasAffineProperty\">HasAffineProperty</a> @<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> <span class=\"fn\">x</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>) (<span class=\"fn\">x_1</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x</span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">IsAffine</a> <span class=\"fn\">x</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated\">IsSeparated</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L279-L280","name":"AlgebraicGeometry.Scheme.instIsClosedImmersionιOfIsSeparated","line":279,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.instIsClosedImmersionιOfIsSeparated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.instIsClosedImmersionιOfIsSeparated\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">instIsClosedImmersionιOfIsSeparated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated\">IsSeparated</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">IsClosedImmersion</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.equalizer.ι\">CategoryTheory.Limits.equalizer.ι</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L274-L277","name":"AlgebraicGeometry.Scheme.instIsSeparatedOfIsSeparated","line":274,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.instIsSeparatedOfIsSeparated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.instIsSeparatedOfIsSeparated\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">instIsSeparatedOfIsSeparated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated\">IsSeparated</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L272-L272","name":"AlgebraicGeometry.Scheme.instIsSeparatedOfIsAffine","line":272,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.instIsSeparatedOfIsAffine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.instIsSeparatedOfIsAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">instIsSeparatedOfIsAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">IsAffine</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated\">IsSeparated</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L269-L270","name":"AlgebraicGeometry.Scheme.instIsClosedImmersionLiftIdOfIsSeparated","line":269,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.instIsClosedImmersionLiftIdOfIsSeparated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.instIsClosedImmersionLiftIdOfIsSeparated\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">instIsClosedImmersionLiftIdOfIsSeparated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated\">IsSeparated</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">IsClosedImmersion</a>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.lift\">CategoryTheory.Limits.prod.lift</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L262-L267","name":"AlgebraicGeometry.Scheme.isSeparated_iff_isClosedImmersion_prod_lift","line":262,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.isSeparated_iff_isClosedImmersion_prod_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.isSeparated_iff_isClosedImmersion_prod_lift\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">isSeparated_iff_isClosedImmersion_prod_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated\">IsSeparated</a></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">IsClosedImmersion</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryProducts.html#CategoryTheory.Limits.prod.lift\">CategoryTheory.Limits.prod.lift</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L258-L258","name":"AlgebraicGeometry.Scheme.IsSeparated.isSeparated_terminal_from","line":258,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated.isSeparated_terminal_from","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated.isSeparated_terminal_from\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">isSeparated_terminal_from</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated\">IsSeparated</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal.from\">CategoryTheory.Limits.terminal.from</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L257-L257","name":"AlgebraicGeometry.Scheme.IsSeparated.mk","line":257,"kind":"ctor","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated.mk\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isSeparated_terminal_from</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal.from\">CategoryTheory.Limits.terminal.from</a> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated\">IsSeparated</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L256-L256","name":"AlgebraicGeometry.Scheme.isSeparated_iff","line":256,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.isSeparated_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.isSeparated_iff\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">isSeparated_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated\">IsSeparated</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.terminal.from\">CategoryTheory.Limits.terminal.from</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L255-L258","name":"AlgebraicGeometry.Scheme.IsSeparated","line":255,"kind":"class","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated","doc":"A scheme `X` is separated if it is separated over `⊤_ Scheme`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.IsSeparated\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">IsSeparated</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L244-L251","name":"AlgebraicGeometry.ext_of_isDominant_of_isSeparated'","line":244,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.ext_of_isDominant_of_isSeparated'","doc":"Suppose `X` is a reduced `S`-scheme and `Y` is a separated `S`-scheme.\nFor any `S`-morphisms `f g : X ⟶ Y`, `f = g` if `ι ≫ f = ι ≫ g` for some dominant `ι`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.ext_of_isDominant_of_isSeparated'\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">ext_of_isDominant_of_isSeparated'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Over.html#AlgebraicGeometry.Scheme.Over\">Over</a></span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/AlgebraicGeometry/Over.html#AlgebraicGeometry.Scheme.Over\">Over</a></span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Properties.html#AlgebraicGeometry.IsReduced\">IsReduced</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> (<span class=\"fn\">Y</span> <a href=\"./Mathlib/CategoryTheory/Comma/Over/OverClass.html#CategoryTheory.over\">↘</a> <span class=\"fn\">S</span>)</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Over.html#AlgebraicGeometry.Scheme.Hom.IsOver\">Scheme.Hom.IsOver</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Over.html#AlgebraicGeometry.Scheme.Hom.IsOver\">Scheme.Hom.IsOver</a> <span class=\"fn\">g</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/UnderlyingMap.html#AlgebraicGeometry.IsDominant\">IsDominant</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">ι</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">ι</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L219-L241","name":"AlgebraicGeometry.ext_of_isDominant_of_isSeparated","line":219,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.ext_of_isDominant_of_isSeparated","doc":"Suppose `X` is a reduced scheme and that `f g : X ⟶ Y` agree over some separated `Y ⟶ Z`.\nThen `f = g` if `ι ≫ f = ι ≫ g` for some dominant `ι`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.ext_of_isDominant_of_isSeparated\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">ext_of_isDominant_of_isSeparated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W </span><span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Properties.html#AlgebraicGeometry.IsReduced\">IsReduced</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">s</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ι</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/UnderlyingMap.html#AlgebraicGeometry.IsDominant\">IsDominant</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">ι</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">ι</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L209-L217","name":"AlgebraicGeometry.isClosedImmersion_equalizer_ι_left","line":209,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.isClosedImmersion_equalizer_ι_left","doc":"[Stacks Tag 01KM](https://stacks.math.columbia.edu/tag/01KM)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.isClosedImmersion_equalizer_ι_left\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isClosedImmersion_equalizer_ι_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Over/Basic.html#CategoryTheory.Over\">CategoryTheory.Over</a> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.Comma.hom\">hom</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">IsClosedImmersion</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.equalizer.ι\">CategoryTheory.Limits.equalizer.ι</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L206-L207","name":"AlgebraicGeometry.IsSeparated.comp_iff","line":206,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.comp_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.comp_iff\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">comp_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L201-L204","name":"AlgebraicGeometry.IsSeparated.of_comp","line":201,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.of_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.of_comp\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">of_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L195-L199","name":"AlgebraicGeometry.IsClosedImmersion.of_comp","line":195,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsClosedImmersion.of_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsClosedImmersion.of_comp\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsClosedImmersion</span>.<span class=\"name\">of_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">IsClosedImmersion</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">IsClosedImmersion</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L183-L191","name":"AlgebraicGeometry.isSeparated_of_injective","line":183,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.isSeparated_of_injective","doc":"[Stacks Tag 0DVA](https://stacks.math.columbia.edu/tag/0DVA)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.isSeparated_of_injective\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isSeparated_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Geometry/RingedSpace/PresheafedSpace.html#AlgebraicGeometry.PresheafedSpace.Hom.base\">base</a></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L164-L181","name":"AlgebraicGeometry.isClosedImmersion_diagonal_restrict_diagonalCoverDiagonalRange","line":164,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.isClosedImmersion_diagonal_restrict_diagonalCoverDiagonalRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.isClosedImmersion_diagonal_restrict_diagonalCoverDiagonalRange\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isClosedImmersion_diagonal_restrict_diagonalCoverDiagonalRange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒱</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>) → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">CategoryTheory.Limits.pullback</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">IsAffine</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">𝒱</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/AffineScheme.html#AlgebraicGeometry.IsAffine\">IsAffine</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">𝒱</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\">j</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">IsClosedImmersion</a> (<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Diagonal.html#CategoryTheory.Limits.pullback.diagonal\">CategoryTheory.Limits.pullback.diagonal</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/AlgebraicGeometry/Restrict.html#AlgebraicGeometry.morphismRestrict\">∣_</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Pullbacks.html#AlgebraicGeometry.Scheme.Pullback.diagonalCoverDiagonalRange\">Scheme.Pullback.diagonalCoverDiagonalRange</a> <span class=\"fn\">f</span> <span class=\"fn\">𝒰</span> <span class=\"fn\">𝒱</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L146-L162","name":"AlgebraicGeometry.Scheme.Pullback.range_diagonal_subset_diagonalCoverDiagonalRange","line":146,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.Pullback.range_diagonal_subset_diagonalCoverDiagonalRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.Pullback.range_diagonal_subset_diagonalCoverDiagonalRange\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">Pullback</span>.<span class=\"name\">range_diagonal_subset_diagonalCoverDiagonalRange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒱</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>) → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">CategoryTheory.Limits.pullback</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Diagonal.html#CategoryTheory.Limits.pullback.diagonal\">CategoryTheory.Limits.pullback.diagonal</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Geometry/RingedSpace/PresheafedSpace.html#AlgebraicGeometry.PresheafedSpace.Hom.base\">base</a></span>)</span></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a>   <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Pullbacks.html#AlgebraicGeometry.Scheme.Pullback.diagonalCoverDiagonalRange\">diagonalCoverDiagonalRange</a> <span class=\"fn\">f</span> <span class=\"fn\">𝒰</span> <span class=\"fn\">𝒱</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L123-L144","name":"AlgebraicGeometry.Scheme.Pullback.diagonalCoverDiagonalRange_eq_top_of_injective","line":123,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.Pullback.diagonalCoverDiagonalRange_eq_top_of_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.Scheme.Pullback.diagonalCoverDiagonalRange_eq_top_of_injective\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">Pullback</span>.<span class=\"name\">diagonalCoverDiagonalRange_eq_top_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒱</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>) → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">CategoryTheory.Limits.pullback</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Geometry/RingedSpace/PresheafedSpace.html#AlgebraicGeometry.PresheafedSpace.Hom.base\">base</a></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Pullbacks.html#AlgebraicGeometry.Scheme.Pullback.diagonalCoverDiagonalRange\">diagonalCoverDiagonalRange</a> <span class=\"fn\">f</span> <span class=\"fn\">𝒰</span> <span class=\"fn\">𝒱</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L105-L113","name":"AlgebraicGeometry.IsSeparated.instIsClosedImmersionLiftSchemeId","line":105,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instIsClosedImmersionLiftSchemeId","doc":"Given `f : X ⟶ Y` and `g : Y ⟶ Z` such that `g` is separated, the induced map\n`X ⟶ X ×[Z] Y` is a closed immersion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instIsClosedImmersionLiftSchemeId\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">instIsClosedImmersionLiftSchemeId</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">IsClosedImmersion</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.lift\">CategoryTheory.Limits.pullback.lift</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">⋯</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L100-L103","name":"AlgebraicGeometry.IsSeparated.instIsClosedImmersionMapDescScheme","line":100,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instIsClosedImmersionMapDescScheme","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instIsClosedImmersionMapDescScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">instIsClosedImmersionMapDescScheme</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">S </span><span class=\"fn\">T</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">S</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">IsClosedImmersion</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.mapDesc\">CategoryTheory.Limits.pullback.mapDesc</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L88-L98","name":"AlgebraicGeometry.IsSeparated.of_isAffineHom","line":88,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.of_isAffineHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.of_isAffineHom\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">of_isAffineHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Affine.html#AlgebraicGeometry.IsAffineHom\">IsAffineHom</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L80-L86","name":"AlgebraicGeometry.IsSeparated.instMap","line":80,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instMap\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">instMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R </span><span class=\"fn\">S</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec.map\">Spec.map</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L76-L78","name":"AlgebraicGeometry.IsSeparated.instIsLocalAtTarget","line":76,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instIsLocalAtTarget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instIsLocalAtTarget\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">instIsLocalAtTarget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Basic.html#AlgebraicGeometry.IsLocalAtTarget\">IsLocalAtTarget</a> @<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L72-L74","name":"AlgebraicGeometry.IsSeparated.isStableUnderBaseChange","line":72,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.isStableUnderBaseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.isStableUnderBaseChange\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">isStableUnderBaseChange</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Limits.html#CategoryTheory.MorphismProperty.IsStableUnderBaseChange\">CategoryTheory.MorphismProperty.IsStableUnderBaseChange</a> @<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L69-L70","name":"AlgebraicGeometry.IsSeparated.instIsMultiplicativeScheme","line":69,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instIsMultiplicativeScheme","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instIsMultiplicativeScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">instIsMultiplicativeScheme</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Composition.html#CategoryTheory.MorphismProperty.IsMultiplicative\">CategoryTheory.MorphismProperty.IsMultiplicative</a> @<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L66-L67","name":"AlgebraicGeometry.IsSeparated.instCompScheme","line":66,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instCompScheme","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instCompScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">instCompScheme</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L62-L64","name":"AlgebraicGeometry.IsSeparated.stableUnderComposition","line":62,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.stableUnderComposition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.stableUnderComposition\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">stableUnderComposition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Composition.html#CategoryTheory.MorphismProperty.IsStableUnderComposition\">CategoryTheory.MorphismProperty.IsStableUnderComposition</a> @<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L60-L60","name":"AlgebraicGeometry.IsSeparated.instQuasiSeparated","line":60,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instQuasiSeparated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instQuasiSeparated\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">instQuasiSeparated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/QuasiSeparated.html#AlgebraicGeometry.QuasiSeparated\">QuasiSeparated</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L56-L58","name":"AlgebraicGeometry.IsSeparated.instRespectsIsoScheme","line":56,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instRespectsIsoScheme","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.instRespectsIsoScheme\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">instRespectsIsoScheme</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty.RespectsIso\">CategoryTheory.MorphismProperty.RespectsIso</a> @<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L53-L54","name":"AlgebraicGeometry.IsSeparated.isSeparated_of_mono","line":53,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.isSeparated_of_mono","doc":"Monomorphisms are separated. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.isSeparated_of_mono\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">isSeparated_of_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L48-L51","name":"AlgebraicGeometry.IsSeparated.isSeparated_eq_diagonal_isClosedImmersion","line":48,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.isSeparated_eq_diagonal_isClosedImmersion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.isSeparated_eq_diagonal_isClosedImmersion\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">isSeparated_eq_diagonal_isClosedImmersion</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\">@<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Limits.html#CategoryTheory.MorphismProperty.diagonal\">CategoryTheory.MorphismProperty.diagonal</a> @<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">IsClosedImmersion</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L42-L42","name":"AlgebraicGeometry.IsSeparated.diagonal_isClosedImmersion","line":42,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.diagonal_isClosedImmersion","doc":"A morphism is separated if the diagonal map is a closed immersion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.diagonal_isClosedImmersion\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">diagonal_isClosedImmersion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">IsClosedImmersion</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Diagonal.html#CategoryTheory.Limits.pullback.diagonal\">CategoryTheory.Limits.pullback.diagonal</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L40-L40","name":"AlgebraicGeometry.IsSeparated.mk","line":40,"kind":"ctor","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.mk\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diagonal_isClosedImmersion</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">IsClosedImmersion</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Diagonal.html#CategoryTheory.Limits.pullback.diagonal\">CategoryTheory.Limits.pullback.diagonal</a> <span class=\"fn\">f</span>)</span></span> := by infer_instance)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L39-L39","name":"AlgebraicGeometry.isSeparated_iff","line":39,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.isSeparated_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.isSeparated_iff\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">isSeparated_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\">IsSeparated</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Init/Tactics.html#autoParam\">autoParam</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.html#AlgebraicGeometry.IsClosedImmersion\">IsClosedImmersion</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Diagonal.html#CategoryTheory.Limits.pullback.diagonal\">CategoryTheory.Limits.pullback.diagonal</a> <span class=\"fn\">f</span>)</span>)</span>\n    <a href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated.diagonal_isClosedImmersion._autoParam\">IsSeparated.diagonal_isClosedImmersion._autoParam</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Morphisms/Separated.lean#L38-L42","name":"AlgebraicGeometry.IsSeparated","line":38,"kind":"class","docLink":"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated","doc":"A morphism is separated if the diagonal map is a closed immersion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Morphisms/Separated.html#AlgebraicGeometry.IsSeparated\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">IsSeparated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}