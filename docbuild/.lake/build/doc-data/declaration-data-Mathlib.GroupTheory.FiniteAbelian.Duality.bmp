{"name":"Mathlib.GroupTheory.FiniteAbelian.Duality","instances":[],"imports":["Init","Mathlib.GroupTheory.FiniteAbelian.Basic","Mathlib.RingTheory.RootsOfUnity.EnoughRootsOfUnity"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/FiniteAbelian/Duality.lean#L64-L80","name":"CommGroup.monoidHom_mulEquiv_of_hasEnoughRootsOfUnity","line":64,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FiniteAbelian/Duality.html#CommGroup.monoidHom_mulEquiv_of_hasEnoughRootsOfUnity","doc":"A finite commutative group `G` is (noncanonically) isomorphic to the group `G →* Mˣ`\nwhen `M` is a commutative monoid with enough `n`th roots of unity, where `n` is the exponent\nof `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FiniteAbelian/Duality.html#CommGroup.monoidHom_mulEquiv_of_hasEnoughRootsOfUnity\"><span class=\"name\">CommGroup</span>.<span class=\"name\">monoidHom_mulEquiv_of_hasEnoughRootsOfUnity</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/EnoughRootsOfUnity.html#HasEnoughRootsOfUnity\">HasEnoughRootsOfUnity</a> <span class=\"fn\">M</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">G</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> ((<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>) <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">G</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/FiniteAbelian/Duality.lean#L54-L62","name":"CommGroup.exists_apply_ne_one_of_hasEnoughRootsOfUnity","line":54,"kind":"theorem","docLink":"./Mathlib/GroupTheory/FiniteAbelian/Duality.html#CommGroup.exists_apply_ne_one_of_hasEnoughRootsOfUnity","doc":"If `G` is a finite commutative group of exponent `n` and `M` is a commutative monoid\nwith enough `n`th roots of unity, then for each `a ≠ 1` in `G`, there exists a\ngroup homomorphism `φ : G → Mˣ` such that `φ a ≠ 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/FiniteAbelian/Duality.html#CommGroup.exists_apply_ne_one_of_hasEnoughRootsOfUnity\"><span class=\"name\">CommGroup</span>.<span class=\"name\">exists_apply_ne_one_of_hasEnoughRootsOfUnity</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/EnoughRootsOfUnity.html#HasEnoughRootsOfUnity\">HasEnoughRootsOfUnity</a> <span class=\"fn\">M</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Exponent.html#Monoid.exponent\">Monoid.exponent</a> <span class=\"fn\">G</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">φ</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>), <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></div></div>"}]}