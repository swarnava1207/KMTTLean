{"name":"Mathlib.CategoryTheory.Limits.Shapes.Pullback.Square","instances":[],"imports":["Init","Mathlib.CategoryTheory.MorphismProperty.Limits","Mathlib.CategoryTheory.Square","Mathlib.CategoryTheory.Limits.Shapes.Pullback.CommSq"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L139-L141","name":"CategoryTheory.Square.IsPushout.epi_f₃₄","line":139,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.epi_f₃₄","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.epi_f₃₄\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">epi_f₃₄</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">Epi</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₁₂\">f₁₂</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">Epi</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₃₄\">f₃₄</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L136-L137","name":"CategoryTheory.Square.IsPushout.epi_f₂₄","line":136,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.epi_f₂₄","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.epi_f₂₄\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">epi_f₂₄</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">Epi</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₁₃\">f₁₃</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">Epi</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₂₄\">f₂₄</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L134-L134","name":"CategoryTheory.Square.IsPushout.flip","line":134,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.flip","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.flip\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">flip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.flip\">flip</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L122-L124","name":"CategoryTheory.Square.IsPullback.mono_f₁₂","line":122,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.mono_f₁₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.mono_f₁₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">mono_f₁₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₃₄\">f₃₄</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₁₂\">f₁₂</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L119-L120","name":"CategoryTheory.Square.IsPullback.mono_f₁₃","line":119,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.mono_f₁₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.mono_f₁₃\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">mono_f₁₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₂₄\">f₂₄</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₁₃\">f₁₃</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L117-L117","name":"CategoryTheory.Square.IsPullback.flip","line":117,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.flip","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.flip\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">flip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.flip\">flip</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L108-L109","name":"CategoryTheory.Square.IsPullback.unop","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.unop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.unop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">unop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.unop\">unop</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L105-L106","name":"CategoryTheory.Square.IsPullback.op","line":105,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.op","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.op\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">op</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.op\">op</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L102-L103","name":"CategoryTheory.Square.IsPushout.unop","line":102,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.unop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.unop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">unop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.unop\">unop</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L99-L100","name":"CategoryTheory.Square.IsPushout.op","line":99,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.op","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.op\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">op</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.op\">op</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L95-L97","name":"CategoryTheory.Square.IsPushout.iff_of_iso","line":95,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.iff_of_iso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.iff_of_iso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">iff_of_iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq₁ </span><span class=\"fn\">sq₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">sq₁</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">sq₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq₁</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">sq₂</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L88-L93","name":"CategoryTheory.Square.IsPushout.of_iso","line":88,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.of_iso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.of_iso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">of_iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq₁ </span><span class=\"fn\">sq₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq₁</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">sq₁</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">sq₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq₂</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L84-L86","name":"CategoryTheory.Square.IsPullback.iff_of_iso","line":84,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.iff_of_iso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.iff_of_iso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">iff_of_iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq₁ </span><span class=\"fn\">sq₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">sq₁</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">sq₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq₁</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">sq₂</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L77-L82","name":"CategoryTheory.Square.IsPullback.of_iso","line":77,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.of_iso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.of_iso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">of_iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq₁ </span><span class=\"fn\">sq₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq₁</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">sq₁</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">sq₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq₂</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L71-L75","name":"CategoryTheory.Square.IsPushout.isColimit","line":71,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.isColimit","doc":"If a commutative square `sq` is a pushout square,\nthen `sq.pushoutCocone` is colimit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.isColimit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">isColimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pushoutCocone\">pushoutCocone</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L65-L69","name":"CategoryTheory.Square.IsPullback.isLimit","line":65,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.isLimit","doc":"If a commutative square `sq` is a pullback square,\nthen `sq.pullbackCone` is limit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.isLimit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">isLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pullbackCone\">pullbackCone</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L60-L61","name":"CategoryTheory.Square.IsPushout.mk","line":60,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pushoutCocone\">pushoutCocone</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L57-L58","name":"CategoryTheory.Square.IsPullback.mk","line":57,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pullbackCone\">pullbackCone</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L53-L55","name":"CategoryTheory.Square.isPushout_iff","line":53,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.isPushout_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.isPushout_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">isPushout_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\">IsPushout</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pushoutCocone\">pushoutCocone</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L49-L51","name":"CategoryTheory.Square.isPullback_iff","line":49,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.isPullback_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.isPullback_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">isPullback_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\">IsPullback</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pullbackCone\">pullbackCone</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L45-L47","name":"CategoryTheory.Square.IsPushout","line":45,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout","doc":"The condition that a commutative square is a pushout square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPushout\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPushout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L41-L43","name":"CategoryTheory.Square.IsPullback","line":41,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback","doc":"The condition that a commutative square is a pullback square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.IsPullback\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">IsPullback</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L37-L39","name":"CategoryTheory.Square.pushoutCocone","line":37,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pushoutCocone","doc":"The pushout cocone attached to a commutative square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pushoutCocone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">pushoutCocone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PushoutCocone\">Limits.PushoutCocone</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₁₂\">f₁₂</a></span> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₁₃\">f₁₃</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.lean#L33-L35","name":"CategoryTheory.Square.pullbackCone","line":33,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pullbackCone","doc":"The pullback cone attached to a commutative square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Square.html#CategoryTheory.Square.pullbackCone\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Square</span>.<span class=\"name\">pullbackCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square\">Square</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PullbackCone\">Limits.PullbackCone</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₂₄\">f₂₄</a></span> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/CategoryTheory/Square.html#CategoryTheory.Square.f₃₄\">f₃₄</a></span></span></div></div>"}]}