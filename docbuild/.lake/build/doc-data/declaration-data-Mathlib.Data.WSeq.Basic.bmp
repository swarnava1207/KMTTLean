{"name":"Mathlib.Data.WSeq.Basic","instances":[{"typeNames":["Stream'.Seq","Stream'.WSeq"],"name":"Stream'.WSeq.coeSeq","className":"Coe"},{"typeNames":["List","Stream'.WSeq"],"name":"Stream'.WSeq.coeList","className":"Coe"},{"typeNames":["Stream'","Stream'.WSeq"],"name":"Stream'.WSeq.coeStream","className":"Coe"},{"typeNames":["Stream'.WSeq"],"name":"Stream'.WSeq.inhabited","className":"Inhabited"},{"typeNames":["Stream'.WSeq"],"name":"Stream'.WSeq.membership","className":"Membership"},{"typeNames":["Stream'.WSeq"],"name":"Stream'.WSeq.monad","className":"Monad"}],"imports":["Init","Mathlib.Data.Seq.Seq"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L771-L786","name":"Stream'.WSeq.map_join","line":771,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_join","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_join\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">map_join</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join\">join</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">S</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join\">join</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L756-L769","name":"Stream'.WSeq.destruct_join","line":756,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_join","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_join\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_join</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join\">join</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.bind\">bind</a></span> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_join.aux\">destruct_join.aux</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L750-L754","name":"Stream'.WSeq.destruct_join.aux","line":750,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_join.aux","doc":"auxiliary definition of `destruct_join` over weak sequences "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_join.aux\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_join</span>.<span class=\"name\">aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>))</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L737-L748","name":"Stream'.WSeq.destruct_append","line":737,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_append\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">t</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.bind\">bind</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_append.aux\">destruct_append.aux</a> <span class=\"fn\">t</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L731-L735","name":"Stream'.WSeq.destruct_append.aux","line":731,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_append.aux","doc":"auxiliary definition of `destruct_append` over weak sequences "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_append.aux\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_append</span>.<span class=\"name\">aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>))</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L717-L729","name":"Stream'.WSeq.destruct_map","line":717,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_map\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.map\">Computation.map</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span>)</span>)</span>)</span> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L711-L715","name":"Stream'.WSeq.exists_of_mem_bind","line":711,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.exists_of_mem_bind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.exists_of_mem_bind\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">exists_of_mem_bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.bind\">bind</a></span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\">α</span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L680-L709","name":"Stream'.WSeq.exists_of_mem_join","line":680,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.exists_of_mem_join","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.exists_of_mem_join\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">exists_of_mem_join</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join\">join</a></span> → <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">s</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">S</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L676-L677","name":"Stream'.WSeq.mem_map","line":676,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_map\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">mem_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L671-L674","name":"Stream'.WSeq.map_comp","line":671,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_comp\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">map_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> (<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>) <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">g</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L667-L669","name":"Stream'.WSeq.map_append","line":667,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_append\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">map_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">t</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">t</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L664-L665","name":"Stream'.WSeq.map_ret","line":664,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_ret","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_ret\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">map_ret</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ret\">ret</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ret\">ret</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L661-L662","name":"Stream'.WSeq.map_id","line":661,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_id\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L657-L659","name":"Stream'.WSeq.map_think","line":657,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_think","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_think\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">map_think</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L653-L655","name":"Stream'.WSeq.map_cons","line":653,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_cons\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">map_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L649-L651","name":"Stream'.WSeq.map_nil","line":649,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map_nil\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">map_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L646-L647","name":"Stream'.WSeq.get?_ofSeq","line":646,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?_ofSeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?_ofSeq\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">get?_ofSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Seq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?\">get?</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.pure\">Computation.pure</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.get?\">get?</a></span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L639-L644","name":"Stream'.WSeq.dropn_ofSeq","line":639,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.dropn_ofSeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.dropn_ofSeq\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">dropn_ofSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Seq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.drop\">drop</a></span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L632-L637","name":"Stream'.WSeq.tail_ofSeq","line":632,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail_ofSeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail_ofSeq\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">tail_ofSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Seq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail\">tail</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.tail\">tail</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L627-L630","name":"Stream'.WSeq.head_ofSeq","line":627,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_ofSeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_ofSeq\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">head_ofSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Seq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.pure\">Computation.pure</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.head\">head</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L615-L625","name":"Stream'.WSeq.destruct_ofSeq","line":615,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_ofSeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_ofSeq\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_ofSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Seq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.pure\">Computation.pure</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <span class=\"fn\">(fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.tail\">tail</a></span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.head\">head</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L610-L613","name":"Stream'.WSeq.toList_ofList","line":610,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList_ofList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList_ofList\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">toList_ofList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList\">toList</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L606-L608","name":"Stream'.WSeq.toList_nil","line":606,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList_nil\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">toList_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.pure\">Computation.pure</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L597-L604","name":"Stream'.WSeq.toList_cons","line":597,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList_cons\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">toList_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#List.cons\">List.cons</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList\">toList</a></span>).<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.think\">think</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L571-L595","name":"Stream'.WSeq.toList'_map","line":571,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList'_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList'_map\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">toList'_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.corec\">Computation.corec</a>\n    <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>) =&gt;\n      <span class=\"fn\">match <span class=\"fn\">x</span> with\n      | <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> =&gt;\n        <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.destruct\">Seq.destruct</a> <span class=\"fn\">s</span></span> with\n        | <a href=\"./Init/Prelude.html#Option.none\">none</a> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span>\n        | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><a href=\"./Init/Prelude.html#Option.none\">none</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>\n        | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></span>)</span>\n    <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList\">toList</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L557-L569","name":"Stream'.WSeq.toList'_think","line":557,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList'_think","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList'_think\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">toList'_think</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.corec\">Computation.corec</a>\n    <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>) =&gt;\n      <span class=\"fn\">match <span class=\"fn\">x</span> with\n      | <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> =&gt;\n        <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.destruct\">Seq.destruct</a> <span class=\"fn\">s</span></span> with\n        | <a href=\"./Init/Prelude.html#Option.none\">none</a> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span>\n        | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><a href=\"./Init/Prelude.html#Option.none\">none</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>\n        | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></span>)</span>\n    <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.corec\">Computation.corec</a>\n      <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>) =&gt;\n        <span class=\"fn\">match <span class=\"fn\">x</span> with\n        | <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> =&gt;\n          <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.destruct\">Seq.destruct</a> <span class=\"fn\">s</span></span> with\n          | <a href=\"./Init/Prelude.html#Option.none\">none</a> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span>\n          | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><a href=\"./Init/Prelude.html#Option.none\">none</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>\n          | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></span>)</span>\n      <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.think\">think</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L543-L555","name":"Stream'.WSeq.toList'_cons","line":543,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList'_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList'_cons\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">toList'_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.corec\">Computation.corec</a>\n    <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>) =&gt;\n      <span class=\"fn\">match <span class=\"fn\">x</span> with\n      | <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> =&gt;\n        <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.destruct\">Seq.destruct</a> <span class=\"fn\">s</span></span> with\n        | <a href=\"./Init/Prelude.html#Option.none\">none</a> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span>\n        | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><a href=\"./Init/Prelude.html#Option.none\">none</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>\n        | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></span>)</span>\n    <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.corec\">Computation.corec</a>\n      <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>) =&gt;\n        <span class=\"fn\">match <span class=\"fn\">x</span> with\n        | <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> =&gt;\n          <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.destruct\">Seq.destruct</a> <span class=\"fn\">s</span></span> with\n          | <a href=\"./Init/Prelude.html#Option.none\">none</a> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span>\n          | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><a href=\"./Init/Prelude.html#Option.none\">none</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>\n          | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></span>)</span>\n      <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.think\">think</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L534-L541","name":"Stream'.WSeq.toList'_nil","line":534,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList'_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList'_nil\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">toList'_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.corec\">Computation.corec</a>\n    <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>) =&gt;\n      <span class=\"fn\">match <span class=\"fn\">x</span> with\n      | <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> =&gt;\n        <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.destruct\">Seq.destruct</a> <span class=\"fn\">s</span></span> with\n        | <a href=\"./Init/Prelude.html#Option.none\">none</a> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inl\">Sum.inl</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span>\n        | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><a href=\"./Init/Prelude.html#Option.none\">none</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>\n        | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> =&gt; <span class=\"fn\"><a href=\"./Init/Core.html#Sum.inr\">Sum.inr</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></span>)</span>\n    <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">l</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.pure\">Computation.pure</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L530-L532","name":"Stream'.WSeq.ofList_cons","line":530,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ofList_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ofList_cons\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">ofList_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">l</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">l</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L526-L528","name":"Stream'.WSeq.ofList_nil","line":526,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ofList_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ofList_nil\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">ofList_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L518-L524","name":"Stream'.WSeq.exists_of_mem_map","line":518,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.exists_of_mem_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.exists_of_mem_map\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">exists_of_mem_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span> → <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\">α</span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L515-L516","name":"Stream'.WSeq.mem_append_left","line":515,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_append_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_append_left\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">mem_append_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">s₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L512-L513","name":"Stream'.WSeq.of_mem_append","line":512,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.of_mem_append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.of_mem_append\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">of_mem_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">s₂</span></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L508-L510","name":"Stream'.WSeq.head_terminates_of_mem","line":508,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_terminates_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_terminates_of_mem\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">head_terminates_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L494-L506","name":"Stream'.WSeq.exists_dropn_of_mem","line":494,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.exists_dropn_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.exists_dropn_of_mem\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">exists_dropn_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">s'</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L477-L492","name":"Stream'.WSeq.exists_get?_of_mem","line":477,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.exists_get?_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.exists_get?_of_mem\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">exists_get?_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?\">get?</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L465-L475","name":"Stream'.WSeq.get?_mem","line":465,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?_mem\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">get?_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?\">get?</a></span> <span class=\"fn\">n</span></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L461-L463","name":"Stream'.WSeq.mem_of_mem_dropn","line":461,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_of_mem_dropn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_of_mem_dropn\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">mem_of_mem_dropn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> <span class=\"fn\">n</span></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L449-L459","name":"Stream'.WSeq.mem_of_mem_tail","line":449,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_of_mem_tail","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_of_mem_tail\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">mem_of_mem_tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail\">tail</a></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L446-L447","name":"Stream'.WSeq.mem_cons","line":446,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_cons\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">mem_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L443-L444","name":"Stream'.WSeq.mem_cons_of_mem","line":443,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_cons_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_cons_of_mem\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">mem_cons_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">b</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L439-L441","name":"Stream'.WSeq.mem_cons_iff","line":439,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_cons_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_cons_iff\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">mem_cons_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">b</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L417-L437","name":"Stream'.WSeq.eq_or_mem_iff_mem","line":417,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.eq_or_mem_iff_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.eq_or_mem_iff_mem\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">eq_or_mem_iff_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">a'</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a'</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s'</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span> → (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a'</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s'</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L407-L415","name":"Stream'.WSeq.mem_think","line":407,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_think","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_think\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">mem_think</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L394-L405","name":"Stream'.WSeq.mem_rec_on","line":394,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_rec_on","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.mem_rec_on\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">mem_rec_on</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">s'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">s'</span></span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">b</span> <span class=\"fn\">s'</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L390-L392","name":"Stream'.WSeq.destruct_terminates_of_get?_terminates","line":390,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_terminates_of_get?_terminates","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_terminates_of_get?_terminates\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_terminates_of_get?_terminates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?\">get?</a></span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L386-L388","name":"Stream'.WSeq.head_terminates_of_get?_terminates","line":386,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_terminates_of_get?_terminates","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_terminates_of_get?_terminates\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">head_terminates_of_get?_terminates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?\">get?</a></span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L381-L384","name":"Stream'.WSeq.get?_terminates_le","line":381,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?_terminates_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?_terminates_le\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">get?_terminates_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?\">get?</a></span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?\">get?</a></span> <span class=\"fn\">m</span>)</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L373-L379","name":"Stream'.WSeq.head_some_of_get?_some","line":373,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_some_of_get?_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_some_of_get?_some\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">head_some_of_get?_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?\">get?</a></span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">a'</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\">α</span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a'</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L365-L371","name":"Stream'.WSeq.head_some_of_head_tail_some","line":365,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_some_of_head_tail_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_some_of_head_tail_some\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">head_some_of_head_tail_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail\">tail</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">a'</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\">α</span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a'</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L355-L363","name":"Stream'.WSeq.destruct_some_of_destruct_tail_some","line":355,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_some_of_destruct_tail_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_some_of_destruct_tail_some\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_some_of_destruct_tail_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail\">tail</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">a'</span> <a href=\"./Init/Core.html#Exists\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a'</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L347-L353","name":"Stream'.WSeq.head_terminates_of_head_tail_terminates","line":347,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_terminates_of_head_tail_terminates","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_terminates_of_head_tail_terminates\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">head_terminates_of_head_tail_terminates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail\">tail</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L341-L345","name":"Stream'.WSeq.destruct_dropn","line":341,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_dropn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_dropn\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_dropn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span> <a href=\"./Init/Prelude.html#Bind.bind\">&gt;&gt;=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop.aux\">drop.aux</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L335-L339","name":"Stream'.WSeq.drop.aux_none","line":335,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop.aux_none","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop.aux_none\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">drop</span>.<span class=\"name\">aux_none</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop.aux\">aux</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Option.none\">none</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.pure\">Computation.pure</a> <a href=\"./Init/Prelude.html#Option.none\">none</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L329-L333","name":"Stream'.WSeq.drop.aux","line":329,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop.aux","doc":"auxiliary definition of drop over weak sequences "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop.aux\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">drop</span>.<span class=\"name\">aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>))</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L325-L327","name":"Stream'.WSeq.destruct_tail","line":325,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_tail","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_tail\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail\">tail</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span> <a href=\"./Init/Prelude.html#Bind.bind\">&gt;&gt;=</a> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail.aux\">tail.aux</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L319-L323","name":"Stream'.WSeq.tail.aux","line":319,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail.aux","doc":"auxiliary definition of tail over weak sequences "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail.aux\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">tail</span>.<span class=\"name\">aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>))</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L315-L317","name":"Stream'.WSeq.append_assoc","line":315,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append_assoc\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">append_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">t </span><span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">t</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">u</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L311-L313","name":"Stream'.WSeq.append_nil","line":311,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append_nil\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">append_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L307-L309","name":"Stream'.WSeq.think_append","line":307,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think_append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think_append\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">think_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">t</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L303-L305","name":"Stream'.WSeq.cons_append","line":303,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons_append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons_append\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">cons_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">t</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L299-L301","name":"Stream'.WSeq.nil_append","line":299,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil_append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil_append\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">nil_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L293-L297","name":"Stream'.WSeq.join_cons","line":293,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join_cons\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">join_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">s</span> <span class=\"fn\">S</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join\">join</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\">append</a></span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join\">join</a></span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L287-L291","name":"Stream'.WSeq.join_think","line":287,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join_think","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join_think\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">join_think</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join\">join</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join\">join</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L283-L285","name":"Stream'.WSeq.join_nil","line":283,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join_nil\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">join_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join\">join</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L280-L281","name":"Stream'.WSeq.get?_tail","line":280,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?_tail","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?_tail\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">get?_tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail\">tail</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?\">get?</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?\">get?</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L277-L278","name":"Stream'.WSeq.get?_add","line":277,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?_add\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">get?_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?\">get?</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> <span class=\"fn\">m</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?\">get?</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L272-L275","name":"Stream'.WSeq.dropn_tail","line":272,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.dropn_tail","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.dropn_tail\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">dropn_tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail\">tail</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L268-L270","name":"Stream'.WSeq.dropn_add","line":268,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.dropn_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.dropn_add\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">dropn_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> <span class=\"fn\">m</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L264-L266","name":"Stream'.WSeq.dropn_think","line":264,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.dropn_think","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.dropn_think\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">dropn_think</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L257-L262","name":"Stream'.WSeq.dropn_cons","line":257,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.dropn_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.dropn_cons\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">dropn_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L254-L255","name":"Stream'.WSeq.dropn_nil","line":254,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.dropn_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.dropn_nil\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">dropn_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\">drop</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L251-L252","name":"Stream'.WSeq.tail_think","line":251,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail_think","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail_think\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">tail_think</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail\">tail</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail\">tail</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L248-L249","name":"Stream'.WSeq.tail_cons","line":248,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail_cons\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">tail_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail\">tail</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L245-L246","name":"Stream'.WSeq.tail_nil","line":245,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail_nil\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">tail_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail\">tail</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L242-L243","name":"Stream'.WSeq.head_terminates_iff","line":242,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_terminates_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_terminates_iff\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">head_terminates_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.Terminates\">Terminates</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L227-L240","name":"Stream'.WSeq.destruct_flatten","line":227,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_flatten","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_flatten\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_flatten</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.flatten\">flatten</a> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Bind.bind\">&gt;&gt;=</a> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L223-L225","name":"Stream'.WSeq.flatten_think","line":223,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.flatten_think","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.flatten_think\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">flatten_think</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.flatten\">flatten</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.think\">think</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.flatten\">flatten</a> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L211-L221","name":"Stream'.WSeq.flatten_pure","line":211,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.flatten_pure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.flatten_pure\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">flatten_pure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.flatten\">flatten</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.pure\">Computation.pure</a> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L208-L209","name":"Stream'.WSeq.head_think","line":208,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_think","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_think\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">head_think</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.think\">think</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L205-L206","name":"Stream'.WSeq.head_cons","line":205,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_cons\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">head_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.pure\">Computation.pure</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L202-L203","name":"Stream'.WSeq.head_nil","line":202,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head_nil\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">head_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.pure\">Computation.pure</a> <a href=\"./Init/Prelude.html#Option.none\">none</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L198-L200","name":"Stream'.WSeq.seq_destruct_think","line":198,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.seq_destruct_think","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.seq_destruct_think\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">seq_destruct_think</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.destruct\">Seq.destruct</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><a href=\"./Init/Prelude.html#Option.none\">none</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L194-L196","name":"Stream'.WSeq.seq_destruct_cons","line":194,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.seq_destruct_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.seq_destruct_cons\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">seq_destruct_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.destruct\">Seq.destruct</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L190-L192","name":"Stream'.WSeq.seq_destruct_nil","line":190,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.seq_destruct_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.seq_destruct_nil\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">seq_destruct_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq.destruct\">Seq.destruct</a> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Option.none\">none</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L186-L188","name":"Stream'.WSeq.destruct_think","line":186,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_think","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_think\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_think</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span>.<a href=\"./Mathlib/Data/Seq/Computation.html#Computation.think\">think</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L182-L184","name":"Stream'.WSeq.destruct_cons","line":182,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_cons\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.pure\">Computation.pure</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">s</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L178-L180","name":"Stream'.WSeq.destruct_nil","line":178,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct_nil\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\">destruct</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation.pure\">Computation.pure</a> <a href=\"./Init/Prelude.html#Option.none\">none</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L167-L174","name":"Stream'.WSeq.monad","line":167,"kind":"instance","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.monad","doc":"Unfortunately, `WSeq` is not a lawful monad, because it does not satisfy the monad laws exactly,\nonly up to sequence equivalence. Furthermore, even quotienting by the equivalence is not sufficient,\nbecause the join operation involves lists of quotient elements, with a lifted equivalence relation,\nand pure quotients cannot handle this type of construction. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.monad\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">monad</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L163-L165","name":"Stream'.WSeq.bind","line":163,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.bind","doc":"Monadic bind operator for weak sequences "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.bind\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">bind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L159-L161","name":"Stream'.WSeq.ret","line":159,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ret","doc":"The monadic `return a` is a singleton list containing `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ret\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">ret</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L155-L157","name":"Stream'.WSeq.map","line":155,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map","doc":"Map a function over a weak sequence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.map\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">β</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L145-L153","name":"Stream'.WSeq.join","line":145,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join","doc":"Flatten a sequence of weak sequences. (Note that this allows\nempty sequences, unlike `Seq.join`.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.join\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">join</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L140-L143","name":"Stream'.WSeq.append","line":140,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append","doc":"Append two weak sequences. As with `Seq.append`, this may not use\nthe second sequence if the first one takes forever to compute "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.append\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L130-L138","name":"Stream'.WSeq.toList","line":130,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList","doc":"Convert `s` to a list (if it is finite and completes in finite time). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.toList\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">toList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L126-L128","name":"Stream'.WSeq.get?","line":126,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?","doc":"Get the nth element of `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.get?\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">get?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L121-L124","name":"Stream'.WSeq.drop","line":121,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop","doc":"drop the first `n` elements from `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.drop\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">drop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L115-L119","name":"Stream'.WSeq.tail","line":115,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail","doc":"Get the tail of a weak sequence. This doesn't need a `Computation`\nwrapper, unlike `head`, because `flatten` allows us to hide this\nin the construction of the weak sequence itself. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.tail\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L107-L113","name":"Stream'.WSeq.flatten","line":107,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.flatten","doc":"Encode a computation yielding a weak sequence into additional\n`think` constructors in a weak sequence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.flatten\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">flatten</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L102-L105","name":"Stream'.WSeq.head","line":102,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head","doc":"Get the head of a weak sequence. This involves a possibly\ninfinite computation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.head\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L99-L100","name":"Stream'.WSeq.not_mem_nil","line":99,"kind":"theorem","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.not_mem_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.not_mem_nil\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">not_mem_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L96-L97","name":"Stream'.WSeq.membership","line":96,"kind":"instance","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.membership","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.membership\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">membership</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Membership\">Membership</a> <span class=\"fn\">α</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L92-L94","name":"Stream'.WSeq.Mem","line":92,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.Mem","doc":"membership for weak sequences "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.Mem\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">Mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L87-L90","name":"Stream'.WSeq.recOn","line":87,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.recOn","doc":"Recursion principle for weak sequences, compare with `List.recOn`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.recOn\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">recOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Sort</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\">nil</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) → <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\">cons</a> <span class=\"fn\">x</span> <span class=\"fn\">s</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h3</span> : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\">think</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L78-L85","name":"Stream'.WSeq.destruct","line":78,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct","doc":"Destruct a weak sequence, to (eventually possibly) produce either\n`none` for `nil` or `some (a, s)` if an element is produced. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.destruct\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">destruct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Computation.html#Computation\">Computation</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span>))</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L74-L76","name":"Stream'.WSeq.think","line":74,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think","doc":"Compute for one tick, without producing any elements "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.think\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">think</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L70-L72","name":"Stream'.WSeq.cons","line":70,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons","doc":"Prepend an element to a weak sequence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.cons\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L67-L68","name":"Stream'.WSeq.inhabited","line":67,"kind":"instance","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.inhabited\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">inhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L63-L65","name":"Stream'.WSeq.nil","line":63,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil","doc":"The empty weak sequence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.nil\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L60-L61","name":"Stream'.WSeq.coeStream","line":60,"kind":"instance","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.coeStream","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.coeStream\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">coeStream</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Stream/Defs.html#Stream'\">Stream'</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L57-L58","name":"Stream'.WSeq.coeList","line":57,"kind":"instance","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.coeList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.coeList\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">coeList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L54-L55","name":"Stream'.WSeq.coeSeq","line":54,"kind":"instance","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.coeSeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.coeSeq\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">coeSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Seq</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L49-L52","name":"Stream'.WSeq.ofStream","line":49,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ofStream","doc":"Turn a stream into a weak sequence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ofStream\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">ofStream</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Stream/Defs.html#Stream'\">Stream'</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L44-L47","name":"Stream'.WSeq.ofList","line":44,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ofList","doc":"Turn a list into a weak sequence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ofList\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">ofList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L39-L42","name":"Stream'.WSeq.ofSeq","line":39,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ofSeq","doc":"Turn a sequence into a weak sequence "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq.ofSeq\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span>.<span class=\"name\">ofSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Seq/Seq.html#Stream'.Seq\">Seq</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\">WSeq</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/WSeq/Basic.lean#L21-L33","name":"Stream'.WSeq","line":21,"kind":"def","docLink":"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq","doc":"Weak sequences.\n\nWhile the `Seq` structure allows for lists which may not be finite,\na weak sequence also allows the computation of each element to\ninvolve an indeterminate amount of computation, including possibly\nan infinite loop. This is represented as a regular `Seq` interspersed\nwith `none` elements to indicate that computation is ongoing.\n\nThis model is appropriate for Haskell style lazy lists, and is closed\nunder most interesting computation patterns on infinite lists,\nbut conversely it is difficult to extract elements from it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/WSeq/Basic.html#Stream'.WSeq\"><span class=\"name\">Stream'</span>.<span class=\"name\">WSeq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}