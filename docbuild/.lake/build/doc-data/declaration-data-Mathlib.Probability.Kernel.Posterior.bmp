{"name":"Mathlib.Probability.Kernel.Posterior","instances":[{"typeNames":["ProbabilityTheory.posterior"],"name":"ProbabilityTheory.instIsMarkovKernelPosterior","className":"ProbabilityTheory.IsMarkovKernel"}],"imports":["Init","Mathlib.Probability.Kernel.CompProdEqIff","Mathlib.Probability.Kernel.Composition.Lemmas","Mathlib.Probability.Kernel.Disintegration.StandardBorel"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L275-L287","name":"ProbabilityTheory.posterior_eq_withDensity","line":275,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior_eq_withDensity","doc":"If `κ ω ≪ κ ∘ₘ μ` for `μ`-almost every `ω`, then for `κ ∘ₘ μ`-almost every `x`,\n`κ†μ x = μ.withDensity (fun ω ↦ κ.rnDeriv (Kernel.const _ (κ ∘ₘ μ)) ω x)`.\nThis is a form of **Bayes' theorem**.\nThe condition is true for example for countable `Ω`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior_eq_withDensity\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">posterior_eq_withDensity</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ac</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">ω</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AbsolutelyContinuous.html#MeasureTheory.Measure.AbsolutelyContinuous\">AbsolutelyContinuous</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">x</span> : <span class=\"fn\">𝓧</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/WithDensity.html#MeasureTheory.Measure.withDensity\">withDensity</a></span> <span class=\"fn\">fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/RadonNikodym.html#ProbabilityTheory.Kernel.rnDeriv\">rnDeriv</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.const\">Kernel.const</a> <span class=\"fn\">Ω</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>)</span> <span class=\"fn\">ω</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L268-L273","name":"ProbabilityTheory.rnDeriv_posterior_symm","line":268,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.rnDeriv_posterior_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.rnDeriv_posterior_symm\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">rnDeriv_posterior_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ac</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">ω</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AbsolutelyContinuous.html#MeasureTheory.Measure.AbsolutelyContinuous\">AbsolutelyContinuous</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">x</span> : <span class=\"fn\">𝓧</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span>.<a href=\"./Mathlib/Probability/Kernel/RadonNikodym.html#ProbabilityTheory.Kernel.rnDeriv\">rnDeriv</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.const\">Kernel.const</a> <span class=\"fn\">𝓧</span> <span class=\"fn\">μ</span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/RadonNikodym.html#ProbabilityTheory.Kernel.rnDeriv\">rnDeriv</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.const\">Kernel.const</a> <span class=\"fn\">Ω</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>)</span> <span class=\"fn\">ω</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L263-L266","name":"ProbabilityTheory.rnDeriv_posterior","line":263,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.rnDeriv_posterior","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.rnDeriv_posterior\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">rnDeriv_posterior</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ac</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">ω</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AbsolutelyContinuous.html#MeasureTheory.Measure.AbsolutelyContinuous\">AbsolutelyContinuous</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">x</span> : <span class=\"fn\">𝓧</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span>.<a href=\"./Mathlib/Probability/Kernel/RadonNikodym.html#ProbabilityTheory.Kernel.rnDeriv\">rnDeriv</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.const\">Kernel.const</a> <span class=\"fn\">𝓧</span> <span class=\"fn\">μ</span>)</span> <span class=\"fn\">x</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/RadonNikodym.html#ProbabilityTheory.Kernel.rnDeriv\">rnDeriv</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.const\">Kernel.const</a> <span class=\"fn\">Ω</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>)</span> <span class=\"fn\">ω</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L228-L261","name":"ProbabilityTheory.rnDeriv_posterior_ae_prod","line":228,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.rnDeriv_posterior_ae_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.rnDeriv_posterior_ae_prod\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">rnDeriv_posterior_ae_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ac</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">ω</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AbsolutelyContinuous.html#MeasureTheory.Measure.AbsolutelyContinuous\">AbsolutelyContinuous</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">p</span> : <span class=\"fn\">Ω</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">𝓧</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Prod.html#MeasureTheory.Measure.prod\">prod</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span>.<a href=\"./Mathlib/Probability/Kernel/RadonNikodym.html#ProbabilityTheory.Kernel.rnDeriv\">rnDeriv</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.const\">Kernel.const</a> <span class=\"fn\">𝓧</span> <span class=\"fn\">μ</span>)</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <span class=\"fn\"><span class=\"fn\">p</span>.1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/RadonNikodym.html#ProbabilityTheory.Kernel.rnDeriv\">rnDeriv</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.const\">Kernel.const</a> <span class=\"fn\">Ω</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>)</span> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L222-L226","name":"ProbabilityTheory.Kernel.absolutelyContinuous_comp_of_absolutelyContinuous","line":222,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.Kernel.absolutelyContinuous_comp_of_absolutelyContinuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.Kernel.absolutelyContinuous_comp_of_absolutelyContinuous\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">Kernel</span>.<span class=\"name\">absolutelyContinuous_comp_of_absolutelyContinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/SFinite.html#MeasureTheory.SFinite\">MeasureTheory.SFinite</a> <span class=\"fn\">ν</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ac</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">ω</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AbsolutelyContinuous.html#MeasureTheory.Measure.AbsolutelyContinuous\">AbsolutelyContinuous</a></span> <span class=\"fn\">ν</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">ω</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AbsolutelyContinuous.html#MeasureTheory.Measure.AbsolutelyContinuous\">AbsolutelyContinuous</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L219-L220","name":"ProbabilityTheory.absolutelyContinuous_posterior_iff","line":219,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.absolutelyContinuous_posterior_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.absolutelyContinuous_posterior_iff\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">absolutelyContinuous_posterior_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">b</span> : <span class=\"fn\">𝓧</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AbsolutelyContinuous.html#MeasureTheory.Measure.AbsolutelyContinuous\">AbsolutelyContinuous</a></span> <span class=\"fn\">μ</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">ω</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AbsolutelyContinuous.html#MeasureTheory.Measure.AbsolutelyContinuous\">AbsolutelyContinuous</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L207-L217","name":"ProbabilityTheory.absolutelyContinuous_of_posterior","line":207,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.absolutelyContinuous_of_posterior","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.absolutelyContinuous_of_posterior\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">absolutelyContinuous_of_posterior</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountableOrCountablyGenerated\">MeasurableSpace.CountableOrCountablyGenerated</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ac</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">b</span> : <span class=\"fn\">𝓧</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AbsolutelyContinuous.html#MeasureTheory.Measure.AbsolutelyContinuous\">AbsolutelyContinuous</a></span> <span class=\"fn\">μ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">ω</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AbsolutelyContinuous.html#MeasureTheory.Measure.AbsolutelyContinuous\">AbsolutelyContinuous</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L180-L198","name":"ProbabilityTheory.posterior_comp","line":180,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior_comp","doc":"The posterior is contravariant. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior_comp\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">posterior_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓨</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓨</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓨</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">𝓧</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">𝓧</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">η</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">𝓧</span> <span class=\"fn\">𝓨</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">η</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/Comp.html#ProbabilityTheory.Kernel.comp\">comp</a></span> <span class=\"fn\">κ</span>)</span> <span class=\"fn\">μ</span>)</span></span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᵐ[</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">η</span></span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/Comp.html#ProbabilityTheory.Kernel.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">η</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L171-L178","name":"ProbabilityTheory.posterior_posterior","line":171,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior_posterior","doc":"The posterior is involutive (up to `μ`-a.e. equality). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior_posterior\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">posterior_posterior</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">𝓧</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">𝓧</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsMarkovKernel\">IsMarkovKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>)</span></span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᵐ[</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L155-L165","name":"ProbabilityTheory.absolutelyContinuous_posterior","line":155,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.absolutelyContinuous_posterior","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.absolutelyContinuous_posterior\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">absolutelyContinuous_posterior</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/SFinite.html#MeasureTheory.SFinite\">MeasureTheory.SFinite</a> <span class=\"fn\">ν</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_ac</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">κ</span> <span class=\"fn\">ω</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AbsolutelyContinuous.html#MeasureTheory.Measure.AbsolutelyContinuous\">AbsolutelyContinuous</a></span> <span class=\"fn\">ν</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">b</span> : <span class=\"fn\">𝓧</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AbsolutelyContinuous.html#MeasureTheory.Measure.AbsolutelyContinuous\">AbsolutelyContinuous</a></span> <span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L132-L153","name":"ProbabilityTheory.deterministic_comp_posterior","line":132,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.deterministic_comp_posterior","doc":"For a deterministic kernel `κ`, `κ ∘ₖ κ†μ` is `μ.map f`-a.e. equal to the identity kernel. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.deterministic_comp_posterior\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">deterministic_comp_posterior</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/CountablyGenerated.html#MeasurableSpace.CountablyGenerated\">MeasurableSpace.CountablyGenerated</a> <span class=\"fn\">𝓧</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.deterministic\">Kernel.deterministic</a> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/Comp.html#ProbabilityTheory.Kernel.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.deterministic\">Kernel.deterministic</a> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span> <span class=\"fn\">μ</span>)</span>)</span></span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᵐ[</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">MeasureTheory.Measure.map</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a>   <span class=\"fn\">⇑<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.id\">Kernel.id</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L124-L130","name":"ProbabilityTheory.posterior_id","line":124,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior_id","doc":"The posterior of the identity kernel is the identity kernel. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior_id\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">posterior_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.id\">Kernel.id</a> <span class=\"fn\">μ</span>)</span></span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᵐ[</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">⇑<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.id\">Kernel.id</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L119-L122","name":"ProbabilityTheory.posterior_comp_self","line":119,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior_comp_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior_comp_self\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">posterior_comp_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsMarkovKernel\">IsMarkovKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">μ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L113-L117","name":"ProbabilityTheory.ae_eq_posterior_of_compProd_eq_swap_comp","line":113,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.ae_eq_posterior_of_compProd_eq_swap_comp","doc":"The posterior is unique up to a `κ ∘ₘ μ`-null set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.ae_eq_posterior_of_compProd_eq_swap_comp\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">ae_eq_posterior_of_compProd_eq_swap_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">η</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">𝓧</span> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">η</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MeasureCompProd.html#MeasureTheory.Measure.compProd\">compProd</a></span> <span class=\"fn\">η</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MeasureCompProd.html#MeasureTheory.Measure.compProd\">compProd</a></span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.swap\">Kernel.swap</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">η</span></span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᵐ[</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L107-L111","name":"ProbabilityTheory.ae_eq_posterior_of_compProd_eq","line":107,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.ae_eq_posterior_of_compProd_eq","doc":"The posterior is unique up to a `κ ∘ₘ μ`-null set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.ae_eq_posterior_of_compProd_eq\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">ae_eq_posterior_of_compProd_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">η</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">𝓧</span> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">η</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MeasureCompProd.html#MeasureTheory.Measure.compProd\">compProd</a></span> <span class=\"fn\">η</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">MeasureTheory.Measure.map</a> <a href=\"./Init/Data/Prod.html#Prod.swap\">Prod.swap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MeasureCompProd.html#MeasureTheory.Measure.compProd\">compProd</a></span> <span class=\"fn\">κ</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">η</span></span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᵐ[</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L103-L105","name":"ProbabilityTheory.posterior_prod_id_comp","line":103,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior_prod_id_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior_prod_id_comp\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">posterior_prod_id_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/Prod.html#ProbabilityTheory.Kernel.prod\">prod</a></span> <a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.id\">Kernel.id</a>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MeasureCompProd.html#MeasureTheory.Measure.compProd\">compProd</a></span> <span class=\"fn\">κ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L85-L101","name":"ProbabilityTheory.parallelProd_posterior_comp_copy_comp","line":85,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.parallelProd_posterior_comp_copy_comp","doc":"The main property of the posterior, as equality of the following diagrams:\n```\n         -- id          -- κ\nμ -- κ -|        =  μ -|\n         -- κ†μ         -- id\n``` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.parallelProd_posterior_comp_copy_comp\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">parallelProd_posterior_comp_copy_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.copy\">Kernel.copy</a> <span class=\"fn\">𝓧</span>)</span></span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.id\">Kernel.id</a>.<a href=\"./Mathlib/Probability/Kernel/Composition/ParallelComp.html#ProbabilityTheory.Kernel.parallelComp\">parallelComp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.copy\">Kernel.copy</a> <span class=\"fn\">Ω</span>)</span></span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/ParallelComp.html#ProbabilityTheory.Kernel.parallelComp\">parallelComp</a></span> <a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.id\">Kernel.id</a>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L82-L83","name":"ProbabilityTheory.swap_compProd_posterior","line":82,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.swap_compProd_posterior","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.swap_compProd_posterior\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">swap_compProd_posterior</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MeasureCompProd.html#MeasureTheory.Measure.compProd\">compProd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.swap\">Kernel.swap</a> <span class=\"fn\">𝓧</span> <span class=\"fn\">Ω</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MeasureCompProd.html#MeasureTheory.Measure.compProd\">compProd</a></span> <span class=\"fn\">κ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L79-L80","name":"ProbabilityTheory.compProd_posterior_eq_swap_comp","line":79,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.compProd_posterior_eq_swap_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.compProd_posterior_eq_swap_comp\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">compProd_posterior_eq_swap_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MeasureCompProd.html#MeasureTheory.Measure.compProd\">compProd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MeasureCompProd.html#MeasureTheory.Measure.compProd\">compProd</a></span> <span class=\"fn\">κ</span>)</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Basic.html#ProbabilityTheory.Kernel.swap\">Kernel.swap</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L75-L77","name":"ProbabilityTheory.compProd_posterior_eq_map_swap","line":75,"kind":"theorem","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.compProd_posterior_eq_map_swap","doc":"The main property of the posterior. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.compProd_posterior_eq_map_swap\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">compProd_posterior_eq_map_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/GiryMonad.html#MeasureTheory.Measure.bind\">bind</a></span> <span class=\"fn\">⇑<span class=\"fn\">κ</span></span>)</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MeasureCompProd.html#MeasureTheory.Measure.compProd\">compProd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">MeasureTheory.Measure.map</a> <a href=\"./Init/Data/Prod.html#Prod.swap\">Prod.swap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Probability/Kernel/Composition/MeasureCompProd.html#MeasureTheory.Measure.compProd\">compProd</a></span> <span class=\"fn\">κ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L72-L73","name":"ProbabilityTheory.instIsMarkovKernelPosterior","line":72,"kind":"instance","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.instIsMarkovKernelPosterior","doc":"The posterior is a Markov kernel. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.instIsMarkovKernelPosterior\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">instIsMarkovKernelPosterior</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsMarkovKernel\">IsMarkovKernel</a> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\">posterior</a> <span class=\"fn\">κ</span> <span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L69-L70","name":"ProbabilityTheory.«term_†_»","line":69,"kind":"def","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.«term_†_»","doc":"Posterior of the kernel `κ` with respect to the measure `μ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.«term_†_»\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">«term_†_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Kernel/Posterior.lean#L63-L67","name":"ProbabilityTheory.posterior","line":63,"kind":"def","docLink":"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior","doc":"Posterior of the kernel `κ` with respect to the measure `μ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Kernel/Posterior.html#ProbabilityTheory.posterior\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">posterior</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝓧</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m𝓧</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">𝓧</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/Polish/Basic.html#StandardBorelSpace\">StandardBorelSpace</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">Ω</span> <span class=\"fn\">𝓧</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.IsFiniteKernel\">IsFiniteKernel</a> <span class=\"fn\">κ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Kernel/Defs.html#ProbabilityTheory.Kernel\">Kernel</a> <span class=\"fn\">𝓧</span> <span class=\"fn\">Ω</span></span></div></div>"}]}