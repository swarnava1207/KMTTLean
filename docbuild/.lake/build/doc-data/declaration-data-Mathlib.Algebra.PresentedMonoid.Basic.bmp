{"name":"Mathlib.Algebra.PresentedMonoid.Basic","instances":[{"typeNames":["PresentedMonoid"],"name":"PresentedMonoid.instMonoid","className":"Monoid"},{"typeNames":["PresentedAddMonoid"],"name":"PresentedAddMonoid.instAddMonoid","className":"AddMonoid"}],"imports":["Init","Mathlib.Algebra.FreeMonoid.Basic","Mathlib.Algebra.Group.Submonoid.Operations","Mathlib.GroupTheory.Congruence.Hom"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L134-L134","name":"PresentedMonoid.ext_iff","line":134,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.ext_iff\"><span class=\"name\">PresentedMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ψ</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.of\">of</a> <span class=\"fn\">rels</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.of\">of</a> <span class=\"fn\">rels</span> <span class=\"fn\">x</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L134-L134","name":"PresentedAddMonoid.ext_iff","line":134,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.ext_iff\"><span class=\"name\">PresentedAddMonoid</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ψ</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.of\">of</a> <span class=\"fn\">rels</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.of\">of</a> <span class=\"fn\">rels</span> <span class=\"fn\">x</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L134-L134","name":"PresentedAddMonoid.ext","line":134,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.ext\"><span class=\"name\">PresentedAddMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.of\">of</a> <span class=\"fn\">rels</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.of\">of</a> <span class=\"fn\">rels</span> <span class=\"fn\">x</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ψ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L134-L142","name":"PresentedMonoid.ext","line":134,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.ext\"><span class=\"name\">PresentedMonoid</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">ψ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.of\">of</a> <span class=\"fn\">rels</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ψ</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.of\">of</a> <span class=\"fn\">rels</span> <span class=\"fn\">x</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">φ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ψ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L129-L129","name":"PresentedAddMonoid.lift_of","line":129,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.lift_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.lift_of\"><span class=\"name\">PresentedAddMonoid</span>.<span class=\"name\">lift_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">rels</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid.lift\">FreeAddMonoid.lift</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid.lift\">FreeAddMonoid.lift</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">b</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.lift\">lift</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.of\">of</a> <span class=\"fn\">rels</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L129-L130","name":"PresentedMonoid.lift_of","line":129,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.lift_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.lift_of\"><span class=\"name\">PresentedMonoid</span>.<span class=\"name\">lift_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">rels</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid.lift\">FreeMonoid.lift</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid.lift\">FreeMonoid.lift</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">b</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.lift\">lift</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.of\">of</a> <span class=\"fn\">rels</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L124-L124","name":"PresentedAddMonoid.toMonoid.unique","line":124,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.toMonoid.unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.toMonoid.unique\"><span class=\"name\">PresentedAddMonoid</span>.<span class=\"name\">toMonoid</span>.<span class=\"name\">unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">rels</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid.lift\">FreeAddMonoid.lift</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid.lift\">FreeAddMonoid.lift</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">b</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Congruence/Defs.html#addConGen\">addConGen</a> <span class=\"fn\">rels</span>)</span>.<a href=\"./Mathlib/GroupTheory/Congruence/Defs.html#AddCon.Quotient\">Quotient</a></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.of\">of</a> <span class=\"fn\">rels</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.lift\">lift</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L124-L127","name":"PresentedMonoid.toMonoid.unique","line":124,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.toMonoid.unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.toMonoid.unique\"><span class=\"name\">PresentedMonoid</span>.<span class=\"name\">toMonoid</span>.<span class=\"name\">unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">rels</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid.lift\">FreeMonoid.lift</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid.lift\">FreeMonoid.lift</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">b</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Congruence/Defs.html#conGen\">conGen</a> <span class=\"fn\">rels</span>)</span>.<a href=\"./Mathlib/GroupTheory/Congruence/Defs.html#Con.Quotient\">Quotient</a></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.of\">of</a> <span class=\"fn\">rels</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.lift\">lift</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L119-L120","name":"PresentedAddMonoid.lift","line":119,"kind":"def","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.lift","doc":"The extension of a map `f : α → M` that satisfies the given relations to an\nadditive-monoid homomorphism from `PresentedAddMonoid rels → M`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.lift\"><span class=\"name\">PresentedAddMonoid</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">rels</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid.lift\">FreeAddMonoid.lift</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid.lift\">FreeAddMonoid.lift</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">b</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">M</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L117-L122","name":"PresentedMonoid.lift","line":117,"kind":"def","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.lift","doc":"The extension of a map `f : α → M` that satisfies the given relations to a monoid homomorphism\nfrom `PresentedMonoid rels → M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.lift\"><span class=\"name\">PresentedMonoid</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">rels</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid.lift\">FreeMonoid.lift</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid.lift\">FreeMonoid.lift</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">b</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L108-L108","name":"PresentedAddMonoid.surjective_mk","line":108,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.surjective_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.surjective_mk\"><span class=\"name\">PresentedAddMonoid</span>.<span class=\"name\">surjective_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.mk\">mk</a> <span class=\"fn\">rels</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L108-L110","name":"PresentedMonoid.surjective_mk","line":108,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.surjective_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.surjective_mk\"><span class=\"name\">PresentedMonoid</span>.<span class=\"name\">surjective_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.mk\">mk</a> <span class=\"fn\">rels</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L94-L95","name":"PresentedAddMonoid.closure_range_of","line":94,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.closure_range_of","doc":"The generators of a presented additive monoid generate the presented\nadditive monoid. That is, the additive submonoid closure of the set of generators equals `⊤`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.closure_range_of\"><span class=\"name\">PresentedAddMonoid</span>.<span class=\"name\">closure_range_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#AddSubmonoid.closure\">AddSubmonoid.closure</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.of\">of</a> <span class=\"fn\">rels</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L92-L106","name":"PresentedMonoid.closure_range_of","line":92,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.closure_range_of","doc":"The generators of a presented monoid generate the presented monoid. That is, the submonoid\nclosure of the set of generators equals `⊤`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.closure_range_of\"><span class=\"name\">PresentedMonoid</span>.<span class=\"name\">closure_range_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#Submonoid.closure\">Submonoid.closure</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.of\">of</a> <span class=\"fn\">rels</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L82-L82","name":"PresentedAddMonoid.inductionOn₃","line":82,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.inductionOn₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.inductionOn₃\"><span class=\"name\">PresentedAddMonoid</span>.<span class=\"name\">inductionOn₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₃</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels₁</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₁</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₁</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels₂</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₂</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₂</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels₃</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₃</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₃</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels₁</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels₂</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels₃</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q₃</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₁</span></span>) (<span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₂</span></span>) (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₃</span></span>),\n    <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.mk\">mk</a> <span class=\"fn\">rels₁</span>)</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.mk\">mk</a> <span class=\"fn\">rels₂</span>)</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.mk\">mk</a> <span class=\"fn\">rels₃</span>)</span> <span class=\"fn\">c</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">q₁</span> <span class=\"fn\">q₂</span> <span class=\"fn\">q₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L82-L86","name":"PresentedMonoid.inductionOn₃","line":82,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.inductionOn₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.inductionOn₃\"><span class=\"name\">PresentedMonoid</span>.<span class=\"name\">inductionOn₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₃</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels₁</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₁</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₁</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels₂</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₂</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₂</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels₃</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₃</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₃</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels₁</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels₂</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels₃</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q₃</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₁</span></span>) (<span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₂</span></span>) (<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₃</span></span>), <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.mk\">mk</a> <span class=\"fn\">rels₁</span>)</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.mk\">mk</a> <span class=\"fn\">rels₂</span>)</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.mk\">mk</a> <span class=\"fn\">rels₃</span>)</span> <span class=\"fn\">c</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">q₁</span> <span class=\"fn\">q₂</span> <span class=\"fn\">q₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L77-L77","name":"PresentedAddMonoid.inductionOn₂","line":77,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.inductionOn₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.inductionOn₂\"><span class=\"name\">PresentedAddMonoid</span>.<span class=\"name\">inductionOn₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels₁</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₁</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₁</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels₂</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₂</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₂</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels₁</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels₂</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₁</span></span>) (<span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₂</span></span>), <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.mk\">mk</a> <span class=\"fn\">rels₁</span>)</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.mk\">mk</a> <span class=\"fn\">rels₂</span>)</span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">q₁</span> <span class=\"fn\">q₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L77-L80","name":"PresentedMonoid.inductionOn₂","line":77,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.inductionOn₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.inductionOn₂\"><span class=\"name\">PresentedMonoid</span>.<span class=\"name\">inductionOn₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels₁</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₁</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₁</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels₂</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₂</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₂</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels₁</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels₂</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₁</span></span>) (<span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₂</span></span>), <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.mk\">mk</a> <span class=\"fn\">rels₁</span>)</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.mk\">mk</a> <span class=\"fn\">rels₂</span>)</span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">q₁</span> <span class=\"fn\">q₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L73-L73","name":"PresentedAddMonoid.inductionOn","line":73,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.inductionOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.inductionOn\"><span class=\"name\">PresentedAddMonoid</span>.<span class=\"name\">inductionOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels₁</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₁</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₁</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels₁</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α₁</span></span>), <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.mk\">mk</a> <span class=\"fn\">rels₁</span>)</span> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L73-L75","name":"PresentedMonoid.inductionOn","line":73,"kind":"theorem","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.inductionOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.inductionOn\"><span class=\"name\">PresentedMonoid</span>.<span class=\"name\">inductionOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels₁</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₁</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₁</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels₁</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α₁</span></span>), <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.mk\">mk</a> <span class=\"fn\">rels₁</span>)</span> <span class=\"fn\">a</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L59-L60","name":"PresentedAddMonoid.of","line":59,"kind":"def","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.of","doc":"`of` is the canonical map from `α` to a presented additive monoid with generators\n`x : α`. The term `x` is mapped to the equivalence class of the image of `x` in `FreeAddMonoid α`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.of\"><span class=\"name\">PresentedAddMonoid</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L57-L62","name":"PresentedMonoid.of","line":57,"kind":"def","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.of","doc":"`of` is the canonical map from `α` to a presented monoid with generators `x : α`. The term `x`\nis mapped to the equivalence class of the image of `x` in `FreeMonoid α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.of\"><span class=\"name\">PresentedMonoid</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L50-L51","name":"PresentedAddMonoid.mk","line":50,"kind":"def","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.mk","doc":"The quotient map from the free additive monoid on `α` to the presented additive\nmonoid with the same generators and the given relations `rels`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.mk\"><span class=\"name\">PresentedAddMonoid</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L48-L55","name":"PresentedMonoid.mk","line":48,"kind":"def","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.mk","doc":"The quotient map from the free monoid on `α` to the presented monoid with the same generators\nand the given relations `rels`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.mk\"><span class=\"name\">PresentedMonoid</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L44-L44","name":"PresentedAddMonoid.instAddMonoid","line":44,"kind":"instance","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.instAddMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid.instAddMonoid\"><span class=\"name\">PresentedAddMonoid</span>.<span class=\"name\">instAddMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\">PresentedAddMonoid</a> <span class=\"fn\">rels</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L44-L46","name":"PresentedMonoid.instMonoid","line":44,"kind":"instance","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.instMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid.instMonoid\"><span class=\"name\">PresentedMonoid</span>.<span class=\"name\">instMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">rels</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\">PresentedMonoid</a> <span class=\"fn\">rels</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L34-L36","name":"PresentedAddMonoid","line":34,"kind":"def","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid","doc":"Given a set of relations, `rels`, over a type `α`, `PresentedAddMonoid` constructs\nthe monoid with generators `x : α` and relations `rels` as a quotient of an AddCon structure over\nrels"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedAddMonoid\"><span class=\"name\">PresentedAddMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rel</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeAddMonoid\">FreeAddMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/PresentedMonoid/Basic.lean#L32-L37","name":"PresentedMonoid","line":32,"kind":"def","docLink":"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid","doc":"Given a set of relations, `rels`, over a type `α`, `PresentedMonoid` constructs the monoid with\ngenerators `x : α` and relations `rels` as a quotient of a congruence structure over rels. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/PresentedMonoid/Basic.html#PresentedMonoid\"><span class=\"name\">PresentedMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rel</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeMonoid/Basic.html#FreeMonoid\">FreeMonoid</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}