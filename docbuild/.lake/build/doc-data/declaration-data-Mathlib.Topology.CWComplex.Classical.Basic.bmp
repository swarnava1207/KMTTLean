{"name":"Mathlib.Topology.CWComplex.Classical.Basic","instances":[],"imports":["Init","Mathlib.Analysis.NormedSpace.Real","Mathlib.Logic.Equiv.PartialEquiv","Mathlib.Topology.MetricSpace.ProperSpace.Real"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L622-L627","name":"Topology.CWComplex.cellFrontier_subset_finite_openCell","line":622,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.cellFrontier_subset_finite_openCell","doc":"A version of `cellFrontier_subset_finite_closedCell` using open cells: The boundary of a cell is\ncontained in a finite union of open cells of a lower dimension. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.cellFrontier_subset_finite_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">cellFrontier_subset_finite_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L588-L620","name":"Topology.RelCWComplex.cellFrontier_subset_finite_openCell","line":588,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_finite_openCell","doc":"A version of `cellFrontier_subset_base_union_finite_closedCell` using open cells:\nThe boundary of a cell is contained in a finite union of open cells of a lower dimension. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_finite_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_subset_finite_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L581-L586","name":"Topology.CWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell","line":581,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell","doc":"If for every cell either `A ∩ openCell n j` or `A ∩ closedCell n j` is closed then\n`A` is closed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hAC</span> : <span class=\"fn\">A</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> → <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L563-L579","name":"Topology.RelCWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell","line":563,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell","doc":"If for every cell either `A ∩ openCell n j` or `A ∩ closedCell n j` is closed then\n`A` is closed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isClosed_of_isClosed_inter_openCell_or_isClosed_inter_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hAC</span> : <span class=\"fn\">A</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hDA</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">D</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> → <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L556-L561","name":"Topology.CWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell","line":556,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">∀ <span class=\"fn\">m</span> ≤ <span class=\"fn\">n</span>, <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">j</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L537-L554","name":"Topology.RelCWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell","line":537,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell","doc":"If for all `m ≤ n` and every `i : cell C m` the intersection `A ∩ closedCell m j` is closed\nand `A ∩ D` is closed then `A ∩ cellFrontier (n + 1) j` is closed for every\n`j : cell C (n + 1)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isClosed_inter_cellFrontier_succ_of_le_isClosed_inter_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">∀ <span class=\"fn\">m</span> ≤ <span class=\"fn\">n</span>, <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hD</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">D</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">j</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L531-L535","name":"Topology.RelCWComplex.skeleton_inter_closedCell_eq_skeleton_inter_cellFrontier","line":531,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_inter_closedCell_eq_skeleton_inter_cellFrontier","doc":"Version of `skeletonLT_inter_closedCell_eq_skeletonLT_inter_cellFrontier` using `skeleton`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_inter_closedCell_eq_skeleton_inter_cellFrontier\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton_inter_closedCell_eq_skeleton_inter_cellFrontier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnm</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L520-L529","name":"Topology.RelCWComplex.skeletonLT_inter_closedCell_eq_skeletonLT_inter_cellFrontier","line":520,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_inter_closedCell_eq_skeletonLT_inter_cellFrontier","doc":"A skeleton intersected with a closed cell of a higher dimension is the skeleton intersected with\nthe boundary of the cell. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_inter_closedCell_eq_skeletonLT_inter_cellFrontier\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_inter_closedCell_eq_skeletonLT_inter_cellFrontier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnm</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L515-L518","name":"Topology.RelCWComplex.disjoint_interior_base_iUnion_closedCell","line":515,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_interior_base_iUnion_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_interior_base_iUnion_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjoint_interior_base_iUnion_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">D</span>)</span> <span class=\"fn\">(⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L503-L513","name":"Topology.RelCWComplex.disjoint_interior_base_closedCell","line":503,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_interior_base_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_interior_base_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjoint_interior_base_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Basic.html#interior\">interior</a> <span class=\"fn\">D</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L497-L501","name":"Topology.RelCWComplex.disjoint_base_iUnion_openCell","line":497,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_base_iUnion_openCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_base_iUnion_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjoint_base_iUnion_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">D</span> <span class=\"fn\">(⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L492-L495","name":"Topology.RelCWComplex.disjoint_skeleton_openCell","line":492,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_skeleton_openCell","doc":"A skeleton and an open cell of a higher dimension are disjoint. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_skeleton_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjoint_skeleton_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nlem</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L480-L490","name":"Topology.RelCWComplex.disjoint_skeletonLT_openCell","line":480,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_skeletonLT_openCell","doc":"A skeleton and an open cell of a higher dimension are disjoint. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_skeletonLT_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjoint_skeletonLT_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnm</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L476-L478","name":"Topology.CWComplex.exists_mem_openCell_of_mem_skeleton","line":476,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.exists_mem_openCell_of_mem_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.exists_mem_openCell_of_mem_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">exists_mem_openCell_of_mem_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L467-L474","name":"Topology.RelCWComplex.mem_skeleton_iff","line":467,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mem_skeleton_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mem_skeleton_iff\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">mem_skeleton_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">D</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L463-L465","name":"Topology.CWComplex.mem_skeletonLT_iff","line":463,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mem_skeletonLT_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mem_skeletonLT_iff\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">mem_skeletonLT_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L459-L461","name":"Topology.RelCWComplex.mem_skeletonLT_iff","line":459,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mem_skeletonLT_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mem_skeletonLT_iff\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">mem_skeletonLT_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">D</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L452-L457","name":"Topology.RelCWComplex.eq_of_not_disjoint_openCell","line":452,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.eq_of_not_disjoint_openCell","doc":"The contrapositive of `disjoint_openCell_of_ne`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.eq_of_not_disjoint_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">eq_of_not_disjoint_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">i</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⟨<span class=\"fn\">n</span>, <span class=\"fn\">j</span>⟩</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟨<span class=\"fn\">m</span>, <span class=\"fn\">i</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L448-L450","name":"Topology.CWComplex.iUnion_openCell_eq_complex","line":448,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.iUnion_openCell_eq_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.iUnion_openCell_eq_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">iUnion_openCell_eq_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L444-L446","name":"Topology.RelCWComplex.union_iUnion_openCell_eq_complex","line":444,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.union_iUnion_openCell_eq_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.union_iUnion_openCell_eq_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">union_iUnion_openCell_eq_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L440-L442","name":"Topology.CWComplex.iUnion_openCell_eq_skeleton","line":440,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.iUnion_openCell_eq_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.iUnion_openCell_eq_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">iUnion_openCell_eq_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L436-L438","name":"Topology.RelCWComplex.iUnion_openCell_eq_skeleton","line":436,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_openCell_eq_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_openCell_eq_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">iUnion_openCell_eq_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L432-L434","name":"Topology.CWComplex.iUnion_openCell_eq_skeletonLT","line":432,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.iUnion_openCell_eq_skeletonLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.iUnion_openCell_eq_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">iUnion_openCell_eq_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L406-L430","name":"Topology.RelCWComplex.iUnion_openCell_eq_skeletonLT","line":406,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_openCell_eq_skeletonLT","doc":"A version of the definition of `skeletonLT` with open cells. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_openCell_eq_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">iUnion_openCell_eq_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L402-L404","name":"Topology.RelCWComplex.skeleton_union_iUnion_closedCell_eq_skeleton_succ","line":402,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_union_iUnion_closedCell_eq_skeleton_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_union_iUnion_closedCell_eq_skeleton_succ\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton_union_iUnion_closedCell_eq_skeleton_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L395-L400","name":"Topology.RelCWComplex.skeletonLT_union_iUnion_closedCell_eq_skeletonLT_succ","line":395,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_union_iUnion_closedCell_eq_skeletonLT_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_union_iUnion_closedCell_eq_skeletonLT_succ\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_union_iUnion_closedCell_eq_skeletonLT_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L386-L393","name":"Topology.RelCWComplex.isClosed","line":386,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isClosed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L382-L384","name":"Topology.RelCWComplex.base_subset_complex","line":382,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.base_subset_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.base_subset_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">base_subset_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L379-L380","name":"Topology.RelCWComplex.base_subset_skeleton","line":379,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.base_subset_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.base_subset_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">base_subset_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L376-L377","name":"Topology.RelCWComplex.base_subset_skeletonLT","line":376,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.base_subset_skeletonLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.base_subset_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">base_subset_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L372-L374","name":"Topology.RelCWComplex.cellFrontier_zero_eq_empty","line":372,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_zero_eq_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_zero_eq_empty\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_zero_eq_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">0</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L368-L370","name":"Topology.RelCWComplex.openCell_zero_eq_singleton","line":368,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_zero_eq_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_zero_eq_singleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">openCell_zero_eq_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">0</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">0</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">![</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">]</a></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L364-L366","name":"Topology.RelCWComplex.closedCell_zero_eq_singleton","line":364,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_zero_eq_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_zero_eq_singleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closedCell_zero_eq_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">0</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">0</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">![</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecEmpty\">]</a></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L360-L362","name":"Topology.RelCWComplex.iUnion_cellFrontier_subset_skeleton","line":360,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_cellFrontier_subset_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_cellFrontier_subset_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">iUnion_cellFrontier_subset_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">l</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">l</span> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">l</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L356-L358","name":"Topology.RelCWComplex.iUnion_cellFrontier_subset_skeletonLT","line":356,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_cellFrontier_subset_skeletonLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.iUnion_cellFrontier_subset_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">iUnion_cellFrontier_subset_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">l</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">l</span> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">l</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L352-L354","name":"Topology.RelCWComplex.cellFrontier_subset_complex","line":352,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_subset_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L348-L350","name":"Topology.RelCWComplex.cellFrontier_subset_skeleton","line":348,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_subset_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L338-L346","name":"Topology.RelCWComplex.cellFrontier_subset_skeletonLT","line":338,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_skeletonLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_subset_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L333-L336","name":"Topology.RelCWComplex.openCell_subset_complex","line":333,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">openCell_subset_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L329-L331","name":"Topology.RelCWComplex.openCell_subset_skeleton","line":329,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">openCell_subset_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L325-L327","name":"Topology.RelCWComplex.openCell_subset_skeletonLT","line":325,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_skeletonLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">openCell_subset_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L320-L323","name":"Topology.RelCWComplex.closedCell_subset_complex","line":320,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_subset_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_subset_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closedCell_subset_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L316-L318","name":"Topology.RelCWComplex.closedCell_subset_skeleton","line":316,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_subset_skeleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_subset_skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closedCell_subset_skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L309-L314","name":"Topology.RelCWComplex.closedCell_subset_skeletonLT","line":309,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_subset_skeletonLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell_subset_skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closedCell_subset_skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> (<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L305-L307","name":"Topology.RelCWComplex.skeleton_subset_complex","line":305,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_subset_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_subset_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton_subset_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L301-L303","name":"Topology.RelCWComplex.skeletonLT_subset_complex","line":301,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_subset_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_subset_complex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_subset_complex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L298-L299","name":"Topology.RelCWComplex.skeleton_monotone","line":298,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_monotone\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton_monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L294-L296","name":"Topology.RelCWComplex.skeleton_mono","line":294,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_mono\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L291-L292","name":"Topology.RelCWComplex.skeletonLT_monotone","line":291,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_monotone\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_monotone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L283-L289","name":"Topology.RelCWComplex.skeletonLT_mono","line":283,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_mono\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L281-L281","name":"Topology.RelCWComplex.skeleton_top","line":281,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton_top\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\">skeleton</a> <span class=\"fn\">C</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L278-L279","name":"Topology.RelCWComplex.skeletonLT_top","line":278,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_top\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L273-L276","name":"Topology.CWComplex.closed","line":273,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.closed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.closed\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">closed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">asubc</span> : <span class=\"fn\">A</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L267-L271","name":"Topology.RelCWComplex.closed","line":267,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closed\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">asubc</span> : <span class=\"fn\">A</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">D</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L259-L265","name":"Topology.RelCWComplex.closure_openCell_eq_closedCell","line":259,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closure_openCell_eq_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closure_openCell_eq_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closure_openCell_eq_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L255-L257","name":"Topology.RelCWComplex.isClosed_cellFrontier","line":255,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_cellFrontier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_cellFrontier\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isClosed_cellFrontier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L251-L253","name":"Topology.RelCWComplex.isCompact_cellFrontier","line":251,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isCompact_cellFrontier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isCompact_cellFrontier\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isCompact_cellFrontier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L248-L249","name":"Topology.RelCWComplex.isClosed_closedCell","line":248,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosed_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isClosed_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L244-L246","name":"Topology.RelCWComplex.isCompact_closedCell","line":244,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isCompact_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isCompact_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isCompact_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L241-L242","name":"Topology.CWComplex.skeletonLT_zero_eq_empty","line":241,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.skeletonLT_zero_eq_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.skeletonLT_zero_eq_empty\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">skeletonLT_zero_eq_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L238-L239","name":"Topology.RelCWComplex.skeletonLT_zero_eq_base","line":238,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_zero_eq_base","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT_zero_eq_base\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT_zero_eq_base</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\">skeletonLT</a> <span class=\"fn\">C</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">D</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L227-L230","name":"Topology.RelCWComplex.skeleton","line":227,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton","doc":"The `n`-skeleton of a CW complex, for `n ∈ ℕ ∪ {∞}`. For statements use `skeletonLT` instead\nand then derive the statement about `skeleton`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeleton\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L219-L225","name":"Topology.RelCWComplex.skeletonLT","line":219,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT","doc":"A non-standard definition of the `n`-skeleton of a CW complex for `n ∈ ℕ ∪ {∞}`.\nThis allows the base case of induction to be about the base instead of being about the union of\nthe base and some points.\nThe standard `skeleton` is defined in terms of `skeletonLT`. `skeletonLT` is preferred\nin statements. You should then derive the statement about `skeleton`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.skeletonLT\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">skeletonLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L215-L217","name":"Topology.RelCWComplex.map_zero_mem_closedCell","line":215,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map_zero_mem_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map_zero_mem_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">map_zero_mem_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L210-L213","name":"Topology.RelCWComplex.map_zero_mem_openCell","line":210,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map_zero_mem_openCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map_zero_mem_openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">map_zero_mem_openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L204-L208","name":"Topology.RelCWComplex.cellFrontier_union_openCell_eq_closedCell","line":204,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_union_openCell_eq_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_union_openCell_eq_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_union_openCell_eq_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L201-L202","name":"Topology.RelCWComplex.cellFrontier_subset_closedCell","line":201,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_subset_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L198-L199","name":"Topology.RelCWComplex.openCell_subset_closedCell","line":198,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell_subset_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">openCell_subset_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L193-L196","name":"Topology.CWComplex.union","line":193,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.union\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L190-L191","name":"Topology.RelCWComplex.union","line":190,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.union\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L183-L188","name":"Topology.CWComplex.cellFrontier_subset_finite_closedCell","line":183,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.cellFrontier_subset_finite_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.cellFrontier_subset_finite_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">cellFrontier_subset_finite_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L175-L181","name":"Topology.RelCWComplex.cellFrontier_subset_base_union_finite_closedCell","line":175,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_base_union_finite_closedCell","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier_subset_base_union_finite_closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier_subset_base_union_finite_closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\">cellFrontier</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\">closedCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L170-L173","name":"Topology.RelCWComplex.disjoint_openCell_of_ne","line":170,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_openCell_of_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjoint_openCell_of_ne\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjoint_openCell_of_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ne</span> : <span class=\"fn\">⟨<span class=\"fn\">n</span>, <span class=\"fn\">i</span>⟩</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">⟨<span class=\"fn\">m</span>, <span class=\"fn\">j</span>⟩</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L166-L168","name":"Topology.RelCWComplex.disjointBase","line":166,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjointBase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjointBase\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjointBase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L162-L164","name":"Topology.RelCWComplex.pairwiseDisjoint","line":162,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.pairwiseDisjoint","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.pairwiseDisjoint\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">pairwiseDisjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\">openCell</a> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L159-L160","name":"Topology.CWComplex.mapsto","line":159,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mapsto","doc":"**Alias** of `Topology.CWComplex.mapsTo`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mapsto\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">mapsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span> <span class=\"fn\">(⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L153-L157","name":"Topology.CWComplex.mapsTo","line":153,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mapsTo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mapsTo\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">mapsTo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span> <span class=\"fn\">(⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L141-L144","name":"Topology.RelCWComplex.cellFrontier","line":141,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier","doc":"The boundary of the `n`-cell given by the index `i`. Use this instead of `map n i '' sphere 0 1`\nwhenever possible. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cellFrontier\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cellFrontier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L136-L139","name":"Topology.RelCWComplex.closedCell","line":136,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell","doc":"The closed `n`-cell given by the index `i`. Use this instead of `map n i '' closedBall 0 1`\nwhenever possible. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closedCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closedCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L132-L134","name":"Topology.RelCWComplex.openCell","line":132,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell","doc":"The open `n`-cell given by the index `i`. Use this instead of `map n i '' ball 0 1` whenever\npossible. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.openCell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">openCell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C </span><span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L105-L128","name":"Topology.CWComplex.mk","line":105,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mk","doc":"A constructor for `CWComplex`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex.mk\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cell</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">source_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pairwiseDisjoint'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapsTo</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">m</span>)</span></span></span>),\n      <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n        <span class=\"fn\">(⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closed'</span> : <span class=\"fn\">∀ <span class=\"fn\">A</span> ⊆ <span class=\"fn\">C</span>, <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>)</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">union'</span> : <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\">CWComplex</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L101-L103","name":"Topology.CWComplex","line":101,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex","doc":"Characterizing when a subspace `C` of a topological space `X` is a CW complex. Note that this\nrequires `C` to be closed. If `C` is not closed choose `X` to be `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.CWComplex\"><span class=\"name\">Topology</span>.<span class=\"name\">CWComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L98-L99","name":"Topology.RelCWComplex.mapsto","line":98,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mapsto","doc":"**Alias** of `Topology.RelCWComplex.mapsTo`.\n\n---\n\nThe boundary of a cell is contained in a finite union of closed cells of a lower dimension.\nUse `RelCWComplex.cellFrontier_subset_finite_closedCell` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mapsto\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">mapsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n    (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L96-L96","name":"Topology.RelCWComplex.union'","line":96,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.union'","doc":"The union of all closed cells equals `C`. Use `RelCWComplex.union` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.union'\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">union'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L94-L94","name":"Topology.RelCWComplex.isClosedBase","line":94,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosedBase","doc":"The base `D` is closed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.isClosedBase\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">isClosedBase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L91-L91","name":"Topology.RelCWComplex.closed'","line":91,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closed'","doc":"A CW complex has weak topology, i.e. a set `A` in `X` is closed iff its intersection with\nevery closed cell and `D` is closed. Use `RelCWComplex.closed` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.closed'\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">closed'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">asubc</span> : <span class=\"fn\">A</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">D</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L87-L87","name":"Topology.RelCWComplex.mapsTo","line":87,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mapsTo","doc":"The boundary of a cell is contained in a finite union of closed cells of a lower dimension.\nUse `RelCWComplex.cellFrontier_subset_finite_closedCell` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mapsTo\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">mapsTo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">m</span>)</span></span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n    (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L84-L84","name":"Topology.RelCWComplex.disjointBase'","line":84,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjointBase'","doc":"All open cells are disjoint with the base. Use `RelCWComplex.disjointBase` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.disjointBase'\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">disjointBase'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> (<span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>) <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L81-L81","name":"Topology.RelCWComplex.pairwiseDisjoint'","line":81,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.pairwiseDisjoint'","doc":"The open cells are pairwise disjoint. Use `RelCWComplex.pairwiseDisjoint` or\n`RelCWComplex.disjoint_openCell_of_ne` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.pairwiseDisjoint'\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">pairwiseDisjoint'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L78-L78","name":"Topology.RelCWComplex.continuousOn_symm","line":78,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.continuousOn_symm","doc":"The inverse of the restriction to `ball 0 1` is continuous on the image. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.continuousOn_symm\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">continuousOn_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L76-L76","name":"Topology.RelCWComplex.continuousOn","line":76,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.continuousOn","doc":"The characteristic maps are continuous when restricting to `closedBall 0 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.continuousOn\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">continuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L74-L74","name":"Topology.RelCWComplex.source_eq","line":74,"kind":"theorem","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.source_eq","doc":"The source of every characteristic map of dimension `n` is\n`(ball 0 1 : Set (Fin n → ℝ))`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.source_eq\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">source_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\">map</a> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L71-L71","name":"Topology.RelCWComplex.map","line":71,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map","doc":"The characteristic map of the `n`-cell given by the index `i`.\nThis map is a bijection when restricting to `ball 0 1`, where we consider `(Fin n → ℝ)`\nendowed with the maximum metric. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.map\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\">cell</a> <span class=\"fn\">C</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L67-L67","name":"Topology.RelCWComplex.cell","line":67,"kind":"def","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell","doc":"The indexing type of the cells of dimension `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.cell\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">cell</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L65-L65","name":"Topology.RelCWComplex.mk","line":65,"kind":"ctor","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex.mk\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cell</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv\">PartialEquiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">source_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">continuousOn_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.symm\">symm</a></span>)</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pairwiseDisjoint'</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>.<a href=\"./Mathlib/Data/Set/Pairwise/Basic.html#Set.PairwiseDisjoint\">PairwiseDisjoint</a></span> <span class=\"fn\">fun (<span class=\"fn\">ni</span> : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) × <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span> <span class=\"fn\"><span class=\"fn\">ni</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">disjointBase'</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> (<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.ball\">Metric.ball</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>) <span class=\"fn\">D</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapsTo</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>),\n    <span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<span class=\"fn\">cell</span> <span class=\"fn\">m</span>)</span></span></span>),\n      <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.sphere\">Metric.sphere</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>\n        (<span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>), <span class=\"fn\">⋃ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">I</span> <span class=\"fn\">m</span></span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">m</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closed'</span> :\n  <span class=\"fn\">∀ <span class=\"fn\">A</span> ⊆ <span class=\"fn\">C</span>, <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> (<span class=\"fn\">A</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">D</span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">A</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isClosedBase</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">union'</span> : <span class=\"fn\">D</span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\">⋃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">cell</span> <span class=\"fn\">n</span></span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">map</span> <span class=\"fn\">n</span> <span class=\"fn\">j</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\">RelCWComplex</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/CWComplex/Classical/Basic.lean#L60-L96","name":"Topology.RelCWComplex","line":60,"kind":"class","docLink":"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex","doc":"A CW complex of a topological space `X` relative to another subspace `D` is the data of its\n*`n`-cells* `cell n i` for each `n : ℕ` along with *attaching maps* that satisfy a number of\nproperties with the most important being closure-finiteness (`mapsTo`) and weak topology\n(`closed'`). Note that this definition requires `C` and `D` to be closed subspaces.\nIf `C` is not closed choose `X` to be `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CWComplex/Classical/Basic.html#Topology.RelCWComplex\"><span class=\"name\">Topology</span>.<span class=\"name\">RelCWComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}