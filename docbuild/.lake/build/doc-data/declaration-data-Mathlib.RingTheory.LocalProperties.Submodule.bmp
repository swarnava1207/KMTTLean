{"name":"Mathlib.RingTheory.LocalProperties.Submodule","instances":[],"imports":["Init","Mathlib.Algebra.Module.LocalizedModule.Submodule","Mathlib.RingTheory.Localization.AtPrime","Mathlib.RingTheory.Localization.Away.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L199-L201","name":"Submodule.eq_top_of_isLocalized'_span","line":199,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_top_of_isLocalized'_span","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_top_of_isLocalized'_span\"><span class=\"name\">Submodule</span>.<span class=\"name\">eq_top_of_isLocalized'_span</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">span_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Rₚ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_4</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">IsLocalization.Away</a> <span class=\"fn\">(↑<span class=\"fn\">r</span>)</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_5</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized'\">localized'</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L195-L197","name":"Submodule.eq_bot_of_isLocalized'_span","line":195,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_bot_of_isLocalized'_span","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_bot_of_isLocalized'_span\"><span class=\"name\">Submodule</span>.<span class=\"name\">eq_bot_of_isLocalized'_span</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">span_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Rₚ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_4</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">IsLocalization.Away</a> <span class=\"fn\">(↑<span class=\"fn\">r</span>)</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_5</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized'\">localized'</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L190-L193","name":"Submodule.eq_of_isLocalized'_span","line":190,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_of_isLocalized'_span","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_of_isLocalized'_span\"><span class=\"name\">Submodule</span>.<span class=\"name\">eq_of_isLocalized'_span</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">span_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Rₚ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_4</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Away/Basic.html#IsLocalization.Away\">IsLocalization.Away</a> <span class=\"fn\">(↑<span class=\"fn\">r</span>)</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_5</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N </span><span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized'\">localized'</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized'\">localized'</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">P</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L186-L188","name":"Submodule.eq_top_of_isLocalized₀_span","line":186,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_top_of_isLocalized₀_span","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_top_of_isLocalized₀_span\"><span class=\"name\">Submodule</span>.<span class=\"name\">eq_top_of_isLocalized₀_span</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">span_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_5</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L182-L184","name":"Submodule.eq_bot_of_isLocalized₀_span","line":182,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_bot_of_isLocalized₀_span","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_bot_of_isLocalized₀_span\"><span class=\"name\">Submodule</span>.<span class=\"name\">eq_bot_of_isLocalized₀_span</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">span_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_5</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L177-L180","name":"Submodule.eq_of_isLocalized₀_span","line":177,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_of_isLocalized₀_span","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_of_isLocalized₀_span\"><span class=\"name\">Submodule</span>.<span class=\"name\">eq_of_isLocalized₀_span</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">span_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_5</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N </span><span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">P</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L173-L175","name":"Submodule.le_of_isLocalized_span","line":173,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.le_of_isLocalized_span","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.le_of_isLocalized_span\"><span class=\"name\">Submodule</span>.<span class=\"name\">le_of_isLocalized_span</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">span_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_5</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N </span><span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">P</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L160-L171","name":"Submodule.mem_of_isLocalized_span","line":160,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.mem_of_isLocalized_span","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.mem_of_isLocalized_span\"><span class=\"name\">Submodule</span>.<span class=\"name\">mem_of_isLocalized_span</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">span_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_5</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">N</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L157-L158","name":"Module.eq_zero_of_isLocalized_span","line":157,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Module.eq_zero_of_isLocalized_span","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Module.eq_zero_of_isLocalized_span\"><span class=\"name\">Module</span>.<span class=\"name\">eq_zero_of_isLocalized_span</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">span_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_5</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L149-L155","name":"Module.eq_of_isLocalized_span","line":149,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Module.eq_of_isLocalized_span","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Module.eq_of_isLocalized_span\"><span class=\"name\">Module</span>.<span class=\"name\">eq_of_isLocalized_span</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">span_eq</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">s</span></span> → <a href=\"./foundational_types.html\">Type</a> u_5</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>) → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">r</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">r</span>)</span> <span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L122-L125","name":"Submodule.eq_top_of_localization_maximal","line":122,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_top_of_localization_maximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_top_of_localization_maximal\"><span class=\"name\">Submodule</span>.<span class=\"name\">eq_top_of_localization_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Rₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_4</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/AtPrime.html#IsLocalization.AtPrime\">IsLocalization.AtPrime</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_5</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized'\">localized'</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L117-L120","name":"Submodule.eq_bot_of_localization_maximal","line":117,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_bot_of_localization_maximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_bot_of_localization_maximal\"><span class=\"name\">Submodule</span>.<span class=\"name\">eq_bot_of_localization_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Rₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_4</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/AtPrime.html#IsLocalization.AtPrime\">IsLocalization.AtPrime</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_5</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized'\">localized'</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L111-L115","name":"Submodule.eq_of_localization_maximal","line":111,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_of_localization_maximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_of_localization_maximal\"><span class=\"name\">Submodule</span>.<span class=\"name\">eq_of_localization_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Rₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_4</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/AtPrime.html#IsLocalization.AtPrime\">IsLocalization.AtPrime</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_5</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N₁ </span><span class=\"fn\">N₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>],\n    <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized'\">localized'</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">N₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized'\">localized'</a> <span class=\"fn\">(<span class=\"fn\">Rₚ</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">N₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L104-L109","name":"Module.subsingleton_of_localization_maximal","line":104,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Module.subsingleton_of_localization_maximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Module.subsingleton_of_localization_maximal\"><span class=\"name\">Module</span>.<span class=\"name\">subsingleton_of_localization_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_5</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L95-L101","name":"LinearMap.eq_of_localization_maximal","line":95,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#LinearMap.eq_of_localization_maximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#LinearMap.eq_of_localization_maximal\"><span class=\"name\">LinearMap</span>.<span class=\"name\">eq_of_localization_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M₁</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M₁</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_5</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M₁ₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_6</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">M₁ₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">M₁ₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₁</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\">M₁</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">M₁ₚ</span> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f₁</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g </span><span class=\"fn\">g'</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\">M₁</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>],\n    <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule.map\">IsLocalizedModule.map</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">(<span class=\"fn\">f₁</span> <span class=\"fn\">P</span>)</span>)</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule.map\">IsLocalizedModule.map</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">(<span class=\"fn\">f₁</span> <span class=\"fn\">P</span>)</span>)</span> <span class=\"fn\">g'</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L90-L93","name":"Module.eq_zero_of_localization_maximal","line":90,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Module.eq_zero_of_localization_maximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Module.eq_zero_of_localization_maximal\"><span class=\"name\">Module</span>.<span class=\"name\">eq_zero_of_localization_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_5</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L81-L88","name":"Module.eq_of_localization_maximal","line":81,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Module.eq_of_localization_maximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Module.eq_of_localization_maximal\"><span class=\"name\">Module</span>.<span class=\"name\">eq_of_localization_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_5</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">m'</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">m'</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L76-L79","name":"Submodule.eq_top_of_localization₀_maximal","line":76,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_top_of_localization₀_maximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_top_of_localization₀_maximal\"><span class=\"name\">Submodule</span>.<span class=\"name\">eq_top_of_localization₀_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_5</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L70-L74","name":"Submodule.eq_bot_of_localization₀_maximal","line":70,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_bot_of_localization₀_maximal","doc":"A submodule is trivial if its localization at every maximal ideal is trivial. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_bot_of_localization₀_maximal\"><span class=\"name\">Submodule</span>.<span class=\"name\">eq_bot_of_localization₀_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_5</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">N</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L61-L68","name":"Submodule.eq_of_localization₀_maximal","line":61,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_of_localization₀_maximal","doc":"Let `N₁ N₂ : Submodule R M`. If the localization of `N₁` at each maximal ideal `P` is equal to\nthe localization of `N₂` at `P`, then `N₁ = N₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.eq_of_localization₀_maximal\"><span class=\"name\">Submodule</span>.<span class=\"name\">eq_of_localization₀_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_5</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N₁ </span><span class=\"fn\">N₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">N₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">N₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">N₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L53-L59","name":"Submodule.le_of_localization_maximal","line":53,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.le_of_localization_maximal","doc":"Let `N₁ N₂ : Submodule R M`. If the localization of `N₁` at each maximal ideal `P` is\nincluded in the localization of `N₂` at `P`, then `N₁ ≤ N₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.le_of_localization_maximal\"><span class=\"name\">Submodule</span>.<span class=\"name\">le_of_localization_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_5</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N₁ </span><span class=\"fn\">N₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">N₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">N₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">N₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LocalProperties/Submodule.lean#L41-L51","name":"Submodule.mem_of_localization_maximal","line":41,"kind":"theorem","docLink":"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.mem_of_localization_maximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LocalProperties/Submodule.html#Submodule.mem_of_localization_maximal\"><span class=\"name\">Submodule</span>.<span class=\"name\">mem_of_localization_maximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Mₚ</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <a href=\"./foundational_types.html\">Type</a> u_5</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span>)</span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>] → <span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">Mₚ</span> <span class=\"fn\">P</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Basic.html#IsLocalizedModule\">IsLocalizedModule</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Maximal.html#Ideal.IsMaximal\">IsMaximal</a></span>], <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LocalizedModule/Submodule.html#Submodule.localized₀\">localized₀</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/RingTheory/Ideal/Prime.html#Ideal.primeCompl\">primeCompl</a></span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">P</span>)</span> <span class=\"fn\">N</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">N</span></div></div>"}]}