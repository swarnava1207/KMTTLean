{"name":"Mathlib.Probability.StrongLaw","instances":[],"imports":["Init","Mathlib.Probability.IdentDistrib","Mathlib.Probability.Independence.Integrable","Mathlib.MeasureTheory.Integral.DominatedConvergence","Mathlib.Analysis.SpecificLimits.FloorPow","Mathlib.Analysis.PSeries","Mathlib.Analysis.Asymptotics.SpecificAsymptotics"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L838-L875","name":"ProbabilityTheory.strong_law_Lp","line":838,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_Lp","doc":"**Strong law of large numbers**, L·µñ version: if `X n` is a sequence of independent\nidentically distributed random variables in L·µñ, then `n‚Åª¬π ‚Ä¢ ‚àë i ‚àà range n, X i`\nconverges in `L·µñ` to `ùîº[X 0]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_Lp\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">strong_law_Lp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mŒ©</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ©</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Œ©</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">p</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp'</span> : <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">‚ä§</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <span class=\"fn\">E</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h‚Ñíp</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LpSeminorm/Defs.html#MeasureTheory.MemLp\">MeasureTheory.MemLp</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">p</span> <span class=\"fn\">Œº</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hindep</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">Function.onFun</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <span class=\"fn\">E</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">x1</span> <span class=\"fn\">x2</span> <span class=\"fn\">Œº</span></span>)</span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">Œº</span> <span class=\"fn\">Œº</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a>\n  <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LpSeminorm/Defs.html#MeasureTheory.eLpNorm\">MeasureTheory.eLpNorm</a> <span class=\"fn\">(fun (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>) =&gt; <span class=\"fn\">(‚Üë<span class=\"fn\">n</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">‚Åª¬π</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚àÇ</a><span class=\"fn\">Œº</span></span>)</span> <span class=\"fn\">p</span> <span class=\"fn\">Œº</span></span>)</span>\n  <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L793-L828","name":"ProbabilityTheory.strong_law_ae","line":793,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_ae","doc":"**Strong law of large numbers**, almost sure version: if `X n` is a sequence of independent\nidentically distributed integrable random variables taking values in a Banach space,\nthen `n‚Åª¬π ‚Ä¢ ‚àë i ‚àà range n, X i` converges almost surely to `ùîº[X 0]`. We give here the strong\nversion, due to Etemadi, that only requires pairwise independence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_ae\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">strong_law_ae</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mŒ©</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ©</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Œ©</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <span class=\"fn\">E</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">Œº</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hindep</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">Function.onFun</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <span class=\"fn\">E</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">x1</span> <span class=\"fn\">x2</span> <span class=\"fn\">Œº</span></span>)</span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">Œº</span> <span class=\"fn\">Œº</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÄ·µê</a> (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÇ</a><span class=\"fn\">Œº</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\">(‚Üë<span class=\"fn\">n</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">‚Åª¬π</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span></span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚àÇ</a><span class=\"fn\">Œº</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L702-L790","name":"ProbabilityTheory.strong_law_ae_of_measurable","line":702,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_ae_of_measurable","doc":"Preliminary lemma for the strong law of large numbers for vector-valued random variables,\nassuming measurability in addition to integrability. This is weakened to ae measurability in\nthe full version `ProbabilityTheory.strong_law_ae`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_ae_of_measurable\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">strong_law_ae_of_measurable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mŒ©</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ©</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Œ©</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <span class=\"fn\">Œº</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.html#BorelSpace\">BorelSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <span class=\"fn\">E</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">Œº</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/Basic.html#MeasureTheory.StronglyMeasurable\">MeasureTheory.StronglyMeasurable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hindep</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">Function.onFun</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <span class=\"fn\">E</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">x1</span> <span class=\"fn\">x2</span> <span class=\"fn\">Œº</span></span>)</span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">Œº</span> <span class=\"fn\">Œº</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÄ·µê</a> (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÇ</a><span class=\"fn\">Œº</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\">(‚Üë<span class=\"fn\">n</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">‚Åª¬π</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span></span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚àÇ</a><span class=\"fn\">Œº</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L652-L698","name":"ProbabilityTheory.strong_law_ae_simpleFunc_comp","line":652,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_ae_simpleFunc_comp","doc":"Preliminary lemma for the strong law of large numbers for vector-valued random variables:\nthe composition of the random variables with a simple function satisfies the strong law of large\nnumbers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_ae_simpleFunc_comp\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">strong_law_ae_simpleFunc_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mŒ©</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ©</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Œ©</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <span class=\"fn\">Œº</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <span class=\"fn\">E</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hindep</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">Function.onFun</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <span class=\"fn\">E</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">x1</span> <span class=\"fn\">x2</span> <span class=\"fn\">Œº</span></span>)</span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">Œº</span> <span class=\"fn\">Œº</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÜ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/SimpleFunc.html#MeasureTheory.SimpleFunc\">MeasureTheory.SimpleFunc</a> <span class=\"fn\">E</span> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÄ·µê</a> (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÇ</a><span class=\"fn\">Œº</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\">(‚Üë<span class=\"fn\">n</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">‚Åª¬π</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">‚Ä¢</a> <span class=\"fn\">‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">œÜ</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span>)</span></span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\">(<span class=\"fn\">‚áë<span class=\"fn\">œÜ</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">0</span></span>) <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚àÇ</a><span class=\"fn\">Œº</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L602-L640","name":"ProbabilityTheory.strong_law_ae_real","line":602,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_ae_real","doc":"**Strong law of large numbers**, almost sure version: if `X n` is a sequence of independent\nidentically distributed integrable real-valued random variables, then `‚àë i ‚àà range n, X i / n`\nconverges almost surely to `ùîº[X 0]`. We give here the strong version, due to Etemadi, that only\nrequires pairwise independence. Superseded by `strong_law_ae`, which works for random variables\ntaking values in any Banach space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_ae_real\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">strong_law_ae_real</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ©</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Œ©</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">Œº</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hindep</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">Function.onFun</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">x1</span> <span class=\"fn\">x2</span> <span class=\"fn\">Œº</span></span>)</span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">Œº</span> <span class=\"fn\">Œº</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÄ·µê</a> (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÇ</a><span class=\"fn\">Œº</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\">(‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">‚Üë<span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚àÇ</a><span class=\"fn\">Œº</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L582-L598","name":"ProbabilityTheory.strong_law_aux7","line":582,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux7","doc":"`X·µ¢` satisfies the strong law of large numbers along all integers. This follows from the\ncorresponding fact along the sequences `c^n`, and the fact that any integer can be sandwiched\nbetween `c^n` and `c^(n+1)` with comparably small error if `c` is close enough to `1`\n(which is formalized in `tendsto_div_of_monotone_of_tendsto_div_floor_pow`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux7\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">strong_law_aux7</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace\">MeasureTheory.MeasureSpace</a> <span class=\"fn\">Œ©</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hindep</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">Function.onFun</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnonneg</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>), <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÄ·µê</a> (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\">(‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">‚Üë<span class=\"fn\">n</span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">a</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L562-L579","name":"ProbabilityTheory.strong_law_aux6","line":562,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux6\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">strong_law_aux6</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace\">MeasureTheory.MeasureSpace</a> <span class=\"fn\">Œ©</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hindep</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">Function.onFun</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnonneg</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>), <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c_one</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÄ·µê</a> (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\">(‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åä</a><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åã‚Çä</a></span>, <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">‚Üë<a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åä</a><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åã‚Çä</a></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">a</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L531-L556","name":"ProbabilityTheory.strong_law_aux5","line":531,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux5","doc":"The truncated and non-truncated versions of `X·µ¢` have the same asymptotic behavior, as they\nalmost surely coincide at all but finitely many steps. This follows from a probability computation\nand Borel-Cantelli. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux5\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">strong_law_aux5</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace\">MeasureTheory.MeasureSpace</a> <span class=\"fn\">Œ©</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnonneg</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>), <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÄ·µê</a> (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a>   <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\">‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(‚Üë<span class=\"fn\">i</span>)</span> <span class=\"fn\">œâ</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">=o[</a><a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">]</a>     <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\">‚Üë<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L520-L528","name":"ProbabilityTheory.strong_law_aux4","line":520,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux4\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">strong_law_aux4</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace\">MeasureTheory.MeasureSpace</a> <span class=\"fn\">Œ©</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hindep</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">Function.onFun</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnonneg</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>), <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c_one</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÄ·µê</a> (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a>   <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\">‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åä</a><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åã‚Çä</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(‚Üë<span class=\"fn\">i</span>)</span> <span class=\"fn\">œâ</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">‚Üë<a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åä</a><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åã‚Çä</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">a</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">=o[</a><a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">]</a>     <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\">‚Üë<a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åä</a><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åã‚Çä</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L501-L513","name":"ProbabilityTheory.strong_law_aux3","line":501,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux3","doc":"The expectation of the truncated version of `X·µ¢` behaves asymptotically like the whole\nexpectation. This follows from convergence and Ces√†ro averaging. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux3\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">strong_law_aux3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace\">MeasureTheory.MeasureSpace</a> <span class=\"fn\">Œ©</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">a</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">(‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">‚Üë<span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">‚Üë<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">a</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">=o[</a><a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">]</a>   <a href=\"./Init/Data/Cast.html#Nat.cast\">Nat.cast</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L486-L498","name":"ProbabilityTheory.strong_law_aux2","line":486,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux2\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">strong_law_aux2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace\">MeasureTheory.MeasureSpace</a> <span class=\"fn\">Œ©</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hindep</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">Function.onFun</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnonneg</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>), <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c_one</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÄ·µê</a> (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a>   <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt;\n      <span class=\"fn\">‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åä</a><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åã‚Çä</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(‚Üë<span class=\"fn\">i</span>)</span> <span class=\"fn\">œâ</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>         <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">a</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">(‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åä</a><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åã‚Çä</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">‚Üë<span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">a</span></span></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">=o[</a><a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsLittleO\">]</a>     <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\">‚Üë<a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åä</a><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åã‚Çä</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L378-L480","name":"ProbabilityTheory.strong_law_aux1","line":378,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux1","doc":"The truncation of `X·µ¢` up to `i` satisfies the strong law of large numbers (with respect to\nthe truncated expectation) along the sequence `c^n`, for any `c > 1`, up to a given `Œµ > 0`.\nThis follows from a variance control. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.strong_law_aux1\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">strong_law_aux1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace\">MeasureTheory.MeasureSpace</a> <span class=\"fn\">Œ©</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hindep</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">Function.onFun</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> <span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span> <span class=\"fn\">X</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnonneg</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>), <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">œâ</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c_one</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œµ</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œµpos</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">Œµ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÄ·µê</a> (<span class=\"fn\">œâ</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">‚àÄ·∂†</a> (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a>     <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\">‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åä</a><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åã‚Çä</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(‚Üë<span class=\"fn\">i</span>)</span> <span class=\"fn\">œâ</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>           <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">a</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">(‚àë <span class=\"fn\">i</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åä</a><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åã‚Çä</a></span>, <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">‚Üë<span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">a</span></span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a>       <span class=\"fn\">Œµ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">‚Üë<a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åä</a><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Nat.floor\">‚åã‚Çä</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L311-L365","name":"ProbabilityTheory.sum_variance_truncation_le","line":311,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.sum_variance_truncation_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.sum_variance_truncation_le\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">sum_variance_truncation_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace\">MeasureTheory.MeasureSpace</a> <span class=\"fn\">Œ©</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnonneg</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àë <span class=\"fn\">j</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">K</span></span>, (<span class=\"fn\">‚Üë<span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>)<a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">‚Åª¬π</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">a</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">X</span> <span class=\"fn\">‚Üë<span class=\"fn\">j</span></span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>) <span class=\"fn\">a</span></span></span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">a</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L287-L309","name":"ProbabilityTheory.tsum_prob_mem_Ioi_lt_top","line":287,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.tsum_prob_mem_Ioi_lt_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.tsum_prob_mem_Ioi_lt_top\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">tsum_prob_mem_Ioi_lt_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace\">MeasureTheory.MeasureSpace</a> <span class=\"fn\">Œ©</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnonneg</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#tsum\">‚àë'</a> (<span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)<a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#tsum\">,</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">œâ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">Œ©</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">œâ</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">‚Üë<span class=\"fn\">j</span></span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">‚ä§</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L214-L285","name":"ProbabilityTheory.sum_prob_mem_Ioc_le","line":214,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.sum_prob_mem_Ioc_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.sum_prob_mem_Ioc_le\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">sum_prob_mem_Ioc_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ©</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace\">MeasureTheory.MeasureSpace</a> <span class=\"fn\">Œ©</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Œ©</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hnonneg</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hKN</span> : <span class=\"fn\">K</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àë <span class=\"fn\">j</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">K</span></span>, <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.MeasureSpace.volume\">MeasureTheory.volume</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">œâ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">Œ©</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">œâ</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">‚Üë<span class=\"fn\">j</span></span> <span class=\"fn\">‚Üë<span class=\"fn\">N</span></span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> (<span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">a</span> : <span class=\"fn\">Œ©</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L201-L204","name":"ProbabilityTheory.IdentDistrib.truncation","line":201,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.IdentDistrib.truncation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.IdentDistrib.truncation\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IdentDistrib</span>.<span class=\"name\">truncation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ≤</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ŒΩ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">Œº</span> <span class=\"fn\">ŒΩ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">ProbabilityTheory.truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">ProbabilityTheory.truncation</a> <span class=\"fn\">g</span> <span class=\"fn\">A</span>)</span> <span class=\"fn\">Œº</span> <span class=\"fn\">ŒΩ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L185-L199","name":"ProbabilityTheory.tendsto_integral_truncation","line":185,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.tendsto_integral_truncation","doc":"If a function is integrable, then the integral of its truncated versions converges to the\nintegral of the whole function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.tendsto_integral_truncation\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">tendsto_integral_truncation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">Œº</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚àÇ</a><span class=\"fn\">Œº</span></span>)</span> <a href=\"./Mathlib/Order/Filter/AtTopBot/Defs.html#Filter.atTop\">Filter.atTop</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚àÇ</a><span class=\"fn\">Œº</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L175-L183","name":"ProbabilityTheory.integral_truncation_le_integral_of_nonneg","line":175,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.integral_truncation_le_integral_of_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.integral_truncation_le_integral_of_nonneg\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">integral_truncation_le_integral_of_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">f</span> <span class=\"fn\">Œº</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'f</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">f</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚àÇ</a><span class=\"fn\">Œº</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚àÇ</a><span class=\"fn\">Œº</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L171-L173","name":"ProbabilityTheory.integral_truncation_eq_intervalIntegral_of_nonneg","line":171,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.integral_truncation_eq_intervalIntegral_of_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.integral_truncation_eq_intervalIntegral_of_nonneg\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">integral_truncation_eq_intervalIntegral_of_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">Œº</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'f</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">f</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚àÇ</a><span class=\"fn\">Œº</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">‚à´</a> (<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>) <a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">in</a> <span class=\"fn\">0 </span><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">..</a><span class=\"fn\">A</span><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">,</a> <span class=\"fn\">y</span> <a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">‚àÇ</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">MeasureTheory.Measure.map</a> <span class=\"fn\">f</span> <span class=\"fn\">Œº</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L167-L169","name":"ProbabilityTheory.integral_truncation_eq_intervalIntegral","line":167,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.integral_truncation_eq_intervalIntegral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.integral_truncation_eq_intervalIntegral\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">integral_truncation_eq_intervalIntegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">Œº</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hA</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚àÇ</a><span class=\"fn\">Œº</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">‚à´</a> (<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>) <a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">in</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">A</span><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">..</a><span class=\"fn\">A</span><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">,</a> <span class=\"fn\">y</span> <a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">‚àÇ</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">MeasureTheory.Measure.map</a> <span class=\"fn\">f</span> <span class=\"fn\">Œº</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L141-L165","name":"ProbabilityTheory.moment_truncation_eq_intervalIntegral_of_nonneg","line":141,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.moment_truncation_eq_intervalIntegral_of_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.moment_truncation_eq_intervalIntegral_of_nonneg\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">moment_truncation_eq_intervalIntegral_of_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">Œº</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h'f</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">f</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚àÇ</a><span class=\"fn\">Œº</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">‚à´</a> (<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>) <a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">in</a> <span class=\"fn\">0 </span><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">..</a><span class=\"fn\">A</span><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">,</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">‚àÇ</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">MeasureTheory.Measure.map</a> <span class=\"fn\">f</span> <span class=\"fn\">Œº</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L131-L139","name":"ProbabilityTheory.moment_truncation_eq_intervalIntegral","line":131,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.moment_truncation_eq_intervalIntegral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.moment_truncation_eq_intervalIntegral\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">moment_truncation_eq_intervalIntegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">Œº</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hA</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">A</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚à´</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">‚àÇ</a><span class=\"fn\">Œº</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">‚à´</a> (<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>) <a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">in</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">A</span><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">..</a><span class=\"fn\">A</span><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">,</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#intervalIntegral\">‚àÇ</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">MeasureTheory.Measure.map</a> <span class=\"fn\">f</span> <span class=\"fn\">Œº</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L127-L129","name":"MeasureTheory.AEStronglyMeasurable.integrable_truncation","line":127,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#MeasureTheory.AEStronglyMeasurable.integrable_truncation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#MeasureTheory.AEStronglyMeasurable.integrable_truncation\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AEStronglyMeasurable</span>.<span class=\"name\">integrable_truncation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">Œº</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">AEStronglyMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">Œº</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">Integrable</a> <span class=\"fn\">(<a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">ProbabilityTheory.truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span>)</span> <span class=\"fn\">Œº</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L123-L125","name":"MeasureTheory.AEStronglyMeasurable.memLp_truncation","line":123,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#MeasureTheory.AEStronglyMeasurable.memLp_truncation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#MeasureTheory.AEStronglyMeasurable.memLp_truncation\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AEStronglyMeasurable</span>.<span class=\"name\">memLp_truncation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">Œº</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">AEStronglyMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">Œº</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/LpSeminorm/Defs.html#MeasureTheory.MemLp\">MemLp</a> <span class=\"fn\">(<a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">ProbabilityTheory.truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span>)</span> <span class=\"fn\">p</span> <span class=\"fn\">Œº</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L120-L121","name":"ProbabilityTheory.truncation_nonneg","line":120,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation_nonneg\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">truncation_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L109-L118","name":"ProbabilityTheory.truncation_eq_of_nonneg","line":109,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation_eq_of_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation_eq_of_nonneg\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">truncation_eq_of_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">‚àÄ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioc\">Set.Ioc</a> <span class=\"fn\">0</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Indicator.html#Set.indicator\">indicator</a></span> <a href=\"./Init/Prelude.html#id\">id</a></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L102-L107","name":"ProbabilityTheory.truncation_eq_self","line":102,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation_eq_self\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">truncation_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L96-L100","name":"ProbabilityTheory.abs_truncation_le_abs_self","line":96,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.abs_truncation_le_abs_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.abs_truncation_le_abs_self\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">abs_truncation_le_abs_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L93-L94","name":"ProbabilityTheory.truncation_zero","line":93,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation_zero\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">truncation_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L87-L91","name":"ProbabilityTheory.abs_truncation_le_bound","line":87,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.abs_truncation_le_bound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.abs_truncation_le_bound\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">abs_truncation_le_bound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\">A</span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L82-L85","name":"MeasureTheory.AEStronglyMeasurable.truncation","line":82,"kind":"theorem","docLink":"./Mathlib/Probability/StrongLaw.html#MeasureTheory.AEStronglyMeasurable.truncation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#MeasureTheory.AEStronglyMeasurable.truncation\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AEStronglyMeasurable</span>.<span class=\"name\">truncation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œº</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">AEStronglyMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">Œº</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">AEStronglyMeasurable</a> <span class=\"fn\">(<a href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\">ProbabilityTheory.truncation</a> <span class=\"fn\">f</span> <span class=\"fn\">A</span>)</span> <span class=\"fn\">Œº</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/StrongLaw.lean#L76-L78","name":"ProbabilityTheory.truncation","line":76,"kind":"def","docLink":"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation","doc":"Truncating a real-valued function to the interval `(-A, A]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/StrongLaw.html#ProbabilityTheory.truncation\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">truncation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a></span></div></div>"}]}