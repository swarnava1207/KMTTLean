{"name":"Mathlib.Testing.Plausible.Testable","instances":[{"typeNames":["Fact"],"name":"Plausible.Testable.factTestable","className":"Plausible.Testable"},{"typeNames":["Fact"],"name":"Plausible.Fact.printableProp","className":"Plausible.PrintableProp"}],"imports":["Init","Plausible.Testable","Mathlib.Logic.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Testing/Plausible/Testable.lean#L28-L29","name":"Plausible.Fact.printableProp","line":28,"kind":"instance","docLink":"./Mathlib/Testing/Plausible/Testable.html#Plausible.Fact.printableProp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Testing/Plausible/Testable.html#Plausible.Fact.printableProp\"><span class=\"name\">Plausible</span>.<span class=\"name\">Fact</span>.<span class=\"name\">printableProp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./foundational_types.html\">Prop</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Testable.html#Plausible.PrintableProp\">PrintableProp</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Testable.html#Plausible.PrintableProp\">PrintableProp</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">p</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Testing/Plausible/Testable.lean#L19-L22","name":"Plausible.Testable.factTestable","line":19,"kind":"instance","docLink":"./Mathlib/Testing/Plausible/Testable.html#Plausible.Testable.factTestable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Testing/Plausible/Testable.html#Plausible.Testable.factTestable\"><span class=\"name\">Plausible</span>.<span class=\"name\">Testable</span>.<span class=\"name\">factTestable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./foundational_types.html\">Prop</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Plausible/Testable.html#Plausible.Testable\">Testable</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Plausible/Testable.html#Plausible.Testable\">Testable</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">p</span>)</span></span></div></div>"}]}