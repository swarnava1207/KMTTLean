{"name":"Mathlib.NumberTheory.LSeries.Nonvanishing","instances":[],"imports":["Init","Mathlib.Analysis.SpecialFunctions.Complex.LogBounds","Mathlib.NumberTheory.Harmonic.ZetaAsymp","Mathlib.NumberTheory.LSeries.Dirichlet","Mathlib.NumberTheory.LSeries.DirichletContinuation","Mathlib.NumberTheory.LSeries.Positivity"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L407-L413","name":"riemannZeta_ne_zero_of_one_le_re","line":407,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#riemannZeta_ne_zero_of_one_le_re","doc":"The Riemann Zeta Function does not vanish on the closed half-plane `re s ≥ 1`.\n(Note that the value at `s = 1` is a junk value, which happens to be nonzero.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#riemannZeta_ne_zero_of_one_le_re\"><span class=\"name\">riemannZeta_ne_zero_of_one_le_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/RiemannZeta.html#riemannZeta\">riemannZeta</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L403-L405","name":"DirichletCharacter.LFunction_apply_one_ne_zero","line":403,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.LFunction_apply_one_ne_zero","doc":"The L-function of a nontrivial Dirichlet character does not vanish at `s = 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.LFunction_apply_one_ne_zero\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LFunction_apply_one_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hχ</span> : <span class=\"fn\">χ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/DirichletContinuation.html#DirichletCharacter.LFunction\">LFunction</a> <span class=\"fn\">χ</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L394-L399","name":"DirichletCharacter.LFunction_ne_zero_of_one_le_re","line":394,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.LFunction_ne_zero_of_one_le_re","doc":"If `χ` is a Dirichlet character, then `L(χ, s)` does not vanish for `s.re ≥ 1`\nexcept when `χ` is trivial and `s = 1` (then `L(χ, s)` has a simple pole at `s = 1`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.LFunction_ne_zero_of_one_le_re\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LFunction_ne_zero_of_one_le_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hχs</span> : <span class=\"fn\">χ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/DirichletContinuation.html#DirichletCharacter.LFunction\">LFunction</a> <span class=\"fn\">χ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L381-L392","name":"DirichletCharacter.LFunction_ne_zero_of_re_eq_one","line":381,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.LFunction_ne_zero_of_re_eq_one","doc":"If `χ` is a Dirichlet character, then `L(χ, s)` does not vanish when `s.re = 1`\nexcept when `χ` is trivial and `s = 1` (then `L(χ, s)` has a simple pole at `s = 1`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.LFunction_ne_zero_of_re_eq_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LFunction_ne_zero_of_re_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hχs</span> : <span class=\"fn\">χ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/DirichletContinuation.html#DirichletCharacter.LFunction\">LFunction</a> <span class=\"fn\">χ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L330-L336","name":"DirichletCharacter.LFunction_isBigO_horizontal","line":330,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.LFunction_isBigO_horizontal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.LFunction_isBigO_horizontal\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LFunction_isBigO_horizontal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">χ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/DirichletContinuation.html#DirichletCharacter.LFunction\">LFunction</a> <span class=\"fn\">χ</span> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L312-L322","name":"DirichletCharacter.LFunctionTrivChar_isBigO_near_one_horizontal","line":312,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.LFunctionTrivChar_isBigO_near_one_horizontal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.LFunctionTrivChar_isBigO_near_one_horizontal\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LFunctionTrivChar_isBigO_near_one_horizontal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/DirichletContinuation.html#DirichletCharacter.LFunctionTrivChar\">LFunctionTrivChar</a> <span class=\"fn\">N</span> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">0</span>)</span></span><a href=\"./Mathlib/Analysis/Asymptotics/Defs.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L303-L310","name":"DirichletCharacter.norm_LFunction_product_ge_one","line":303,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.norm_LFunction_product_ge_one","doc":"A variant of `DirichletCharacter.norm_LSeries_product_ge_one` in terms of the L-functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.norm_LFunction_product_ge_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">norm_LFunction_product_ge_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/DirichletContinuation.html#DirichletCharacter.LFunctionTrivChar\">LFunctionTrivChar</a> <span class=\"fn\">N</span> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/DirichletContinuation.html#DirichletCharacter.LFunction\">LFunction</a> <span class=\"fn\">χ</span> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>       <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/DirichletContinuation.html#DirichletCharacter.LFunction\">LFunction</a> (<span class=\"fn\">χ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>) (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#GE.ge\">≥</a>   <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L279-L299","name":"DirichletCharacter.norm_LSeries_product_ge_one","line":279,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.norm_LSeries_product_ge_one","doc":"For positive `x` and nonzero `y` and a Dirichlet character `χ` we have that\n`|L(χ^0, 1 + x)^3 L(χ, 1 + x + I * y)^4 L(χ^2, 1 + x + 2 * I * y)| ≥ 1. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.norm_LSeries_product_ge_one\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">norm_LSeries_product_ge_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">1</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>       <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeries\">LSeries</a> <span class=\"fn\">(fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">(<span class=\"fn\">χ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>) <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#GE.ge\">≥</a>   <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L263-L271","name":"DirichletCharacter.summable_neg_log_one_sub_mul_prime_cpow","line":263,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.summable_neg_log_one_sub_mul_prime_cpow","doc":"The logarithms of the Euler factors of a Dirichlet L-series form a summable sequence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.summable_neg_log_one_sub_mul_prime_cpow\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">summable_neg_log_one_sub_mul_prime_cpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes\">Nat.Primes</a>) =&gt; <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Complex/Log.html#Complex.log\">Complex.log</a> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">χ</span> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">p</span></span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">s</span>))</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L100-L107","name":"DirichletCharacter.zetaMul_nonneg","line":100,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.zetaMul_nonneg","doc":"`zetaMul χ` takes nonnegative real values when `χ` is a quadratic character. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.zetaMul_nonneg\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">zetaMul_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hχ</span> : <span class=\"fn\">χ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">χ</span>.<a href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.zetaMul\">zetaMul</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L85-L98","name":"DirichletCharacter.zetaMul_prime_pow_nonneg","line":85,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.zetaMul_prime_pow_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.zetaMul_prime_pow_nonneg\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">zetaMul_prime_pow_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hχ</span> : <span class=\"fn\">χ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">χ</span>.<a href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.zetaMul\">zetaMul</a></span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L78-L83","name":"DirichletCharacter.LSeriesSummable_zetaMul","line":78,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.LSeriesSummable_zetaMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.LSeriesSummable_zetaMul\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">LSeriesSummable_zetaMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LSeries/Basic.html#LSeriesSummable\">LSeriesSummable</a> <span class=\"fn\">(⇑<span class=\"fn\"><span class=\"fn\">χ</span>.<a href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.zetaMul\">zetaMul</a></span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L74-L76","name":"DirichletCharacter.isMultiplicative_zetaMul","line":74,"kind":"theorem","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.isMultiplicative_zetaMul","doc":"The arithmetic function `zetaMul χ` is multiplicative. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.isMultiplicative_zetaMul\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">isMultiplicative_zetaMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">χ</span>.<a href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.zetaMul\">zetaMul</a></span>.<a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction.IsMultiplicative\">IsMultiplicative</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/LSeries/Nonvanishing.lean#L69-L72","name":"DirichletCharacter.zetaMul","line":69,"kind":"def","docLink":"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.zetaMul","doc":"The complex-valued arithmetic function that is the convolution of the constant\nfunction `1` with `χ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/LSeries/Nonvanishing.html#DirichletCharacter.zetaMul\"><span class=\"name\">DirichletCharacter</span>.<span class=\"name\">zetaMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">χ</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/DirichletCharacter/Basic.html#DirichletCharacter\">DirichletCharacter</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ArithmeticFunction.html#ArithmeticFunction\">ArithmeticFunction</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"}]}