{"name":"Mathlib.Analysis.Meromorphic.Divisor","instances":[],"imports":["Init","Mathlib.Algebra.Order.WithTop.Untop0","Mathlib.Analysis.Meromorphic.Order","Mathlib.Data.LocallyFinsupp"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Meromorphic/Divisor.lean#L151-L156","name":"MeromorphicOn.negPart_divisor_add_of_analyticNhdOn_left","line":151,"kind":"theorem","docLink":"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.negPart_divisor_add_of_analyticNhdOn_left","doc":"Adding an analytic function to a meromorphic one does not change the pole divisor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.negPart_divisor_add_of_analyticNhdOn_left\"><span class=\"name\">MeromorphicOn</span>.<span class=\"name\">negPart_divisor_add_of_analyticNhdOn_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">𝕜</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">𝕜</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Analytic/Basic.html#AnalyticOnNhd\">AnalyticOnNhd</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">f₁</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Basic.html#MeromorphicOn\">MeromorphicOn</a> <span class=\"fn\">f₂</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> (<span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">f₂</span>) <span class=\"fn\">U</span>)</span><a href=\"./Mathlib/Algebra/Notation.html#NegPart.negPart\">⁻</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> <span class=\"fn\">f₂</span> <span class=\"fn\">U</span>)</span><a href=\"./Mathlib/Algebra/Notation.html#NegPart.negPart\">⁻</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Meromorphic/Divisor.lean#L129-L149","name":"MeromorphicOn.negPart_divisor_add_of_analyticNhdOn_right","line":129,"kind":"theorem","docLink":"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.negPart_divisor_add_of_analyticNhdOn_right","doc":"Adding an analytic function to a meromorphic one does not change the pole divisor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.negPart_divisor_add_of_analyticNhdOn_right\"><span class=\"name\">MeromorphicOn</span>.<span class=\"name\">negPart_divisor_add_of_analyticNhdOn_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">𝕜</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">𝕜</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Basic.html#MeromorphicOn\">MeromorphicOn</a> <span class=\"fn\">f₁</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Analytic/Basic.html#AnalyticOnNhd\">AnalyticOnNhd</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">f₂</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> (<span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">f₂</span>) <span class=\"fn\">U</span>)</span><a href=\"./Mathlib/Algebra/Notation.html#NegPart.negPart\">⁻</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> <span class=\"fn\">f₁</span> <span class=\"fn\">U</span>)</span><a href=\"./Mathlib/Algebra/Notation.html#NegPart.negPart\">⁻</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Meromorphic/Divisor.lean#L120-L127","name":"MeromorphicOn.divisor_inv","line":120,"kind":"theorem","docLink":"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor_inv","doc":"The divisor of the inverse is the negative of the divisor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor_inv\"><span class=\"name\">MeromorphicOn</span>.<span class=\"name\">divisor_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">𝕜</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">𝕜</span> → <span class=\"fn\">𝕜</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> <span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> <span class=\"fn\">f</span> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Meromorphic/Divisor.lean#L106-L118","name":"MeromorphicOn.divisor_mul","line":106,"kind":"theorem","docLink":"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor_mul","doc":"If orders are finite, the divisor of the product of two meromorphic functions is the sum of the\ndivisors.\n\nSee `MeromorphicOn.exists_order_ne_top_iff_forall` and\n`MeromorphicOn.order_ne_top_of_isPreconnected` for two convenient criteria to guarantee conditions\n`h₂f₁` and `h₂f₂`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor_mul\"><span class=\"name\">MeromorphicOn</span>.<span class=\"name\">divisor_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">𝕜</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">𝕜</span> → <span class=\"fn\">𝕜</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁f₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Basic.html#MeromorphicOn\">MeromorphicOn</a> <span class=\"fn\">f₁</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁f₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Basic.html#MeromorphicOn\">MeromorphicOn</a> <span class=\"fn\">f₂</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂f₁</span> : <span class=\"fn\">∀ (<span class=\"fn\">z</span> : <span class=\"fn\">𝕜</span>) (<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Analysis/Meromorphic/Order.html#MeromorphicAt.order\">order</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂f₂</span> : <span class=\"fn\">∀ (<span class=\"fn\">z</span> : <span class=\"fn\">𝕜</span>) (<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Analysis/Meromorphic/Order.html#MeromorphicAt.order\">order</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> (<span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">f₂</span>) <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> <span class=\"fn\">f₁</span> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> <span class=\"fn\">f₂</span> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Meromorphic/Divisor.lean#L86-L104","name":"MeromorphicOn.divisor_smul","line":86,"kind":"theorem","docLink":"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor_smul","doc":"If orders are finite, the divisor of the scalar product of two meromorphic functions is the sum of\nthe divisors.\n\nSee `MeromorphicOn.exists_order_ne_top_iff_forall` and\n`MeromorphicOn.order_ne_top_of_isPreconnected` for two convenient criteria to guarantee conditions\n`h₂f₁` and `h₂f₂`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor_smul\"><span class=\"name\">MeromorphicOn</span>.<span class=\"name\">divisor_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">𝕜</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁</span> : <span class=\"fn\"><span class=\"fn\">𝕜</span> → <span class=\"fn\">𝕜</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₂</span> : <span class=\"fn\"><span class=\"fn\">𝕜</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁f₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Basic.html#MeromorphicOn\">MeromorphicOn</a> <span class=\"fn\">f₁</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁f₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Basic.html#MeromorphicOn\">MeromorphicOn</a> <span class=\"fn\">f₂</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂f₁</span> : <span class=\"fn\">∀ (<span class=\"fn\">z</span> : <span class=\"fn\">𝕜</span>) (<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Analysis/Meromorphic/Order.html#MeromorphicAt.order\">order</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂f₂</span> : <span class=\"fn\">∀ (<span class=\"fn\">z</span> : <span class=\"fn\">𝕜</span>) (<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Analysis/Meromorphic/Order.html#MeromorphicAt.order\">order</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> (<span class=\"fn\">f₁</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f₂</span>) <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> <span class=\"fn\">f₁</span> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> <span class=\"fn\">f₂</span> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Meromorphic/Divisor.lean#L74-L80","name":"MeromorphicOn.AnalyticOnNhd.divisor_nonneg","line":74,"kind":"theorem","docLink":"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.AnalyticOnNhd.divisor_nonneg","doc":"Analytic functions have non-negative divisors. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.AnalyticOnNhd.divisor_nonneg\"><span class=\"name\">MeromorphicOn</span>.<span class=\"name\">AnalyticOnNhd</span>.<span class=\"name\">divisor_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">𝕜</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">𝕜</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Analytic/Basic.html#AnalyticOnNhd\">AnalyticOnNhd</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">f</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> <span class=\"fn\">f</span> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Meromorphic/Divisor.lean#L62-L68","name":"MeromorphicOn.divisor_apply","line":62,"kind":"theorem","docLink":"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor_apply","doc":"Simplifier lemma: on `U`, the divisor of a function `f` that is meromorphic on `U` evaluates to\n`order.untop₀`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor_apply\"><span class=\"name\">MeromorphicOn</span>.<span class=\"name\">divisor_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">𝕜</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <span class=\"fn\">𝕜</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">𝕜</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Basic.html#MeromorphicOn\">MeromorphicOn</a> <span class=\"fn\">f</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> <span class=\"fn\">f</span> <span class=\"fn\">U</span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Analysis/Meromorphic/Order.html#MeromorphicAt.order\">order</a></span>.<a href=\"./Mathlib/Algebra/Order/WithTop/Untop0.html#WithTop.untop₀\">untop₀</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Meromorphic/Divisor.lean#L57-L60","name":"MeromorphicOn.divisor_def","line":57,"kind":"theorem","docLink":"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor_def","doc":"Definition of the divisor "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor_def\"><span class=\"name\">MeromorphicOn</span>.<span class=\"name\">divisor_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <span class=\"fn\">𝕜</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">𝕜</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\">divisor</a> <span class=\"fn\">f</span> <span class=\"fn\">U</span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Meromorphic/Basic.html#MeromorphicOn\">MeromorphicOn</a> <span class=\"fn\">f</span> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span> then <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Analysis/Meromorphic/Order.html#MeromorphicAt.order\">order</a></span>.<a href=\"./Mathlib/Algebra/Order/WithTop/Untop0.html#WithTop.untop₀\">untop₀</a></span> else <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Meromorphic/Divisor.lean#L32-L54","name":"MeromorphicOn.divisor","line":32,"kind":"def","docLink":"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor","doc":"The divisor of a meromorphic function `f`, mapping a point `z` to the order of `f` at `z`, and to\nzero if the order is infinite.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Meromorphic/Divisor.html#MeromorphicOn.divisor\"><span class=\"name\">MeromorphicOn</span>.<span class=\"name\">divisor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">𝕜</span> → <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">𝕜</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/LocallyFinsupp.html#Function.locallyFinsuppWithin\">Function.locallyFinsuppWithin</a> <span class=\"fn\">U</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"}]}