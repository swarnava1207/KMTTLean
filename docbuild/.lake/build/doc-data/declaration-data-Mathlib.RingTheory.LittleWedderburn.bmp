{"name":"Mathlib.RingTheory.LittleWedderburn","instances":[{"typeNames":[],"name":"littleWedderburn","className":"Field"}],"imports":["Init","Mathlib.Algebra.GroupWithZero.Action.Center","Mathlib.GroupTheory.ClassEquation","Mathlib.RingTheory.Polynomial.Cyclotomic.Eval"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LittleWedderburn.lean#L166-L172","name":"Finite.isDomain_to_isField","line":166,"kind":"theorem","docLink":"./Mathlib/RingTheory/LittleWedderburn.html#Finite.isDomain_to_isField","doc":"A finite domain is a field. See also `littleWedderburn` and `Fintype.divisionRingOfIsDomain`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LittleWedderburn.html#Finite.isDomain_to_isField\"><span class=\"name\">Finite</span>.<span class=\"name\">isDomain_to_isField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/IsField.html#IsField\">IsField</a> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LittleWedderburn.lean#L164-L164","name":"Finite.divisionRing_to_field","line":164,"kind":"def","docLink":"./Mathlib/RingTheory/LittleWedderburn.html#Finite.divisionRing_to_field","doc":"**Alias** of `littleWedderburn`.\n\n---\n\nA finite division ring is a field. See `Finite.isDomain_to_isField` and\n`Fintype.divisionRingOfIsDomain` for more general statements, but these create data, and therefore\nmay cause diamonds if used improperly. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LittleWedderburn.html#Finite.divisionRing_to_field\"><span class=\"name\">Finite</span>.<span class=\"name\">divisionRing_to_field</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">D</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LittleWedderburn.lean#L157-L162","name":"littleWedderburn","line":157,"kind":"instance","docLink":"./Mathlib/RingTheory/LittleWedderburn.html#littleWedderburn","doc":"A finite division ring is a field. See `Finite.isDomain_to_isField` and\n`Fintype.divisionRingOfIsDomain` for more general statements, but these create data, and therefore\nmay cause diamonds if used improperly. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LittleWedderburn.html#littleWedderburn\"><span class=\"name\">littleWedderburn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#DivisionRing\">DivisionRing</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">D</span></span></div></div>"}]}