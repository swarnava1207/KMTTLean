{"name":"Mathlib.AlgebraicTopology.SimplicialNerve","instances":[{"typeNames":["CategoryTheory.SimplicialThickening"],"name":"CategoryTheory.instLinearOrderSimplicialThickening","className":"LinearOrder"},{"typeNames":["CategoryTheory.SimplicialThickening.Path"],"name":"CategoryTheory.SimplicialThickening.instCategoryPath","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.SimplicialThickening"],"name":"CategoryTheory.SimplicialThickening.instCategoryStruct","className":"CategoryTheory.CategoryStruct"},{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.SimplicialThickening.instCategoryHom","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.SimplicialThickening"],"name":"CategoryTheory.SimplicialThickening.instCategory","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.SimplicialThickening"],"name":"CategoryTheory.SimplicialThickening.instSimplicialCategory","className":"CategoryTheory.EnrichedOrdinaryCategory"}],"imports":["Init","Mathlib.AlgebraicTopology.SimplicialCategory.Basic","Mathlib.AlgebraicTopology.SimplicialSet.Nerve"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L207-L224","name":"CategoryTheory.SimplicialNerve","line":207,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialNerve","doc":"The simplicial nerve of a simplicial category `C` is defined as the simplicial set whose\n`n`-simplices are given by the set of simplicial functors from the simplicial thickening of\nthe linear order `Fin (n + 1)` to `C`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialNerve\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialNerve</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory\">SimplicialCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L197-L203","name":"CategoryTheory.SimplicialThickening.functor_comp","line":197,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">functor_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J </span><span class=\"fn\">K </span><span class=\"fn\">L</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">L</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">J</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">L</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor\">functor</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.comp\">comp</a></span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Enriched/Basic.html#CategoryTheory.EnrichedFunctor.comp\">EnrichedFunctor.comp</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor\">functor</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor\">functor</a> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L191-L195","name":"CategoryTheory.SimplicialThickening.functor_id","line":191,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">functor_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor\">functor</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom.id\">OrderHom.id</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Enriched/Basic.html#CategoryTheory.EnrichedFunctor.id\">EnrichedFunctor.id</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L177-L177","name":"CategoryTheory.SimplicialThickening.functor_map","line":177,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">functor_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J </span><span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">J</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor\">functor</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Enriched/Basic.html#CategoryTheory.EnrichedFunctor.map\">map</a></span> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Nerve.html#CategoryTheory.nerveMap\">nerveMap</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functorMap\">functorMap</a> <span class=\"fn\">f</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L177-L177","name":"CategoryTheory.SimplicialThickening.functor_obj","line":177,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">functor_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J </span><span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">J</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor\">functor</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Enriched/Basic.html#CategoryTheory.EnrichedFunctor.obj\">obj</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L173-L189","name":"CategoryTheory.SimplicialThickening.functor","line":173,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor","doc":"The simplicial thickening defines a functor from the category of linear orders to the category of\nsimplicial categories\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J </span><span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">J</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Enriched/Basic.html#CategoryTheory.EnrichedFunctor\">EnrichedFunctor</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L165-L171","name":"CategoryTheory.SimplicialThickening.functorMap","line":165,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functorMap","doc":"Auxiliary definition for `SimplicialThickening.functor` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.functorMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">functorMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J </span><span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">J</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> (<span class=\"fn\">i</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j</span>) (<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.orderHom\">orderHom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.orderHom\">orderHom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">j</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L161-L163","name":"CategoryTheory.SimplicialThickening.orderHom","line":161,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.orderHom","doc":"Auxiliary definition for `SimplicialThickening.functorMap` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.orderHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">orderHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">J</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L154-L159","name":"CategoryTheory.SimplicialThickening.instSimplicialCategory","line":154,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instSimplicialCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instSimplicialCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">instSimplicialCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory\">SimplicialCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L143-L148","name":"CategoryTheory.SimplicialThickening.SimplicialCategory.assoc","line":143,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">SimplicialCategory</span>.<span class=\"name\">assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k </span><span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">MonoidalCategoryStruct.associator</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">k</span> <span class=\"fn\">l</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.comp\">comp</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">k</span> <span class=\"fn\">l</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.comp\">comp</a> <span class=\"fn\">i</span> <span class=\"fn\">k</span> <span class=\"fn\">l</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.comp\">comp</a> <span class=\"fn\">j</span> <span class=\"fn\">k</span> <span class=\"fn\">l</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.comp\">comp</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">l</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L136-L141","name":"CategoryTheory.SimplicialThickening.SimplicialCategory.comp_id","line":136,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.comp_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.comp_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">SimplicialCategory</span>.<span class=\"name\">comp_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.id\">id</a> <span class=\"fn\">j</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.comp\">comp</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">j</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L129-L134","name":"CategoryTheory.SimplicialThickening.SimplicialCategory.id_comp","line":129,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.id_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.id_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">SimplicialCategory</span>.<span class=\"name\">id_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.id\">id</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.comp\">comp</a> <span class=\"fn\">i</span> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L125-L127","name":"CategoryTheory.SimplicialThickening.SimplicialCategory.comp","line":125,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.comp","doc":"The composition of the simplicial category structure on `SimplicialThickening J` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">SimplicialCategory</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">i</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L121-L123","name":"CategoryTheory.SimplicialThickening.SimplicialCategory.id","line":121,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.id","doc":"The identity of the simplicial category structure on `SimplicialThickening J` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">SimplicialCategory</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">𝟙_ <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\">Hom</a> <span class=\"fn\">i</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L118-L119","name":"CategoryTheory.SimplicialThickening.SimplicialCategory.Hom","line":118,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom","doc":"The hom simplicial set of the simplicial category structure on `SimplicialThickening J` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.SimplicialCategory.Hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">SimplicialCategory</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L108-L108","name":"CategoryTheory.SimplicialThickening.compFunctor_obj","line":108,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.compFunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.compFunctor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">compFunctor_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : (<span class=\"fn\">i</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> (<span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span>))</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.compFunctor\">compFunctor</a></span> <span class=\"fn\">j</span> <span class=\"fn\">k</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L105-L112","name":"CategoryTheory.SimplicialThickening.compFunctor","line":105,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.compFunctor","doc":"Composition of morphisms in `SimplicialThickening J`, as a functor `(i ⟶ j) × (j ⟶ k) ⥤ (i ⟶ k)`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.compFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">compFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> ((<span class=\"fn\">i</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j</span>) <a href=\"./Init/Prelude.html#Prod\">×</a> (<span class=\"fn\">j</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span>)) (<span class=\"fn\">i</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">k</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L101-L103","name":"CategoryTheory.SimplicialThickening.instCategory","line":101,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">instCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_1, u_1}</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L94-L94","name":"CategoryTheory.SimplicialThickening.hom_ext_iff","line":94,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.hom_ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">i</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>), <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L94-L99","name":"CategoryTheory.SimplicialThickening.hom_ext","line":94,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.hom_ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">i</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>), <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L91-L92","name":"CategoryTheory.SimplicialThickening.instCategoryHom","line":91,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategoryHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategoryHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">instCategoryHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_1, u_1}</a> (<span class=\"fn\">i</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L76-L76","name":"CategoryTheory.SimplicialThickening.instCategoryStruct_id_I","line":76,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategoryStruct_id_I","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategoryStruct_id_I\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">instCategoryStruct_id_I</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">i</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L76-L76","name":"CategoryTheory.SimplicialThickening.instCategoryStruct_comp_I","line":76,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategoryStruct_comp_I","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategoryStruct_comp_I\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">instCategoryStruct_comp_I</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j </span><span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\">Path</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\">Path</a> <span class=\"fn\">j</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L76-L76","name":"CategoryTheory.SimplicialThickening.instCategoryStruct_Hom","line":76,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategoryStruct_Hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategoryStruct_Hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">instCategoryStruct_Hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">i</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">j</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\">Path</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L76-L89","name":"CategoryTheory.SimplicialThickening.instCategoryStruct","line":76,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategoryStruct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategoryStruct\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">instCategoryStruct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct\">CategoryStruct.{u_1, u_1}</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L73-L74","name":"CategoryTheory.SimplicialThickening.instCategoryPath","line":73,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategoryPath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.instCategoryPath\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">instCategoryPath</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_1, u_1}</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\">Path</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L70-L71","name":"CategoryTheory.SimplicialThickening.Path.le","line":70,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.le\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">Path</span>.<span class=\"name\">le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\">Path</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L68-L68","name":"CategoryTheory.SimplicialThickening.Path.le_right","line":68,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.le_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.le_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">Path</span>.<span class=\"name\">le_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\">Path</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span> → <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L67-L67","name":"CategoryTheory.SimplicialThickening.Path.left_le","line":67,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.left_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.left_le\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">Path</span>.<span class=\"name\">left_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\">Path</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span> → <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L66-L66","name":"CategoryTheory.SimplicialThickening.Path.right","line":66,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">Path</span>.<span class=\"name\">right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\">Path</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L65-L65","name":"CategoryTheory.SimplicialThickening.Path.left","line":65,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">Path</span>.<span class=\"name\">left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\">Path</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L64-L64","name":"CategoryTheory.SimplicialThickening.Path.I","line":64,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I","doc":"The underlying subset "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">Path</span>.<span class=\"name\">I</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\">Path</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">J</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L62-L62","name":"CategoryTheory.SimplicialThickening.Path.mk","line":62,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">Path</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">left</span> : <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span> := by simp)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">right</span> : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">I</span> := by simp)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">left_le</span> : <span class=\"fn\">∀ <span class=\"fn\">k</span> ∈ <span class=\"fn\">I</span>, <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span></span> := by simp)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">le_right</span> : <span class=\"fn\">∀ <span class=\"fn\">k</span> ∈ <span class=\"fn\">I</span>, <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">j</span></span> := by simp)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\">Path</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L61-L61","name":"CategoryTheory.SimplicialThickening.Path.ext","line":61,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">Path</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\">Path</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L61-L61","name":"CategoryTheory.SimplicialThickening.Path.ext_iff","line":61,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">Path</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\">Path</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path.I\">I</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L57-L68","name":"CategoryTheory.SimplicialThickening.Path","line":57,"kind":"structure","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path","doc":"A path from `i` to `j` in a linear order `J` is a subset of the interval `[i, j]` in `J` containing\nthe endpoints.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening.Path\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span>.<span class=\"name\">Path</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L52-L53","name":"CategoryTheory.instLinearOrderSimplicialThickening","line":52,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.instLinearOrderSimplicialThickening","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.instLinearOrderSimplicialThickening\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instLinearOrderSimplicialThickening</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\">SimplicialThickening</a> <span class=\"fn\">J</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialNerve.lean#L48-L50","name":"CategoryTheory.SimplicialThickening","line":48,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening","doc":"A type synonym for a linear order `J`, will be equipped with a simplicial category structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialNerve.html#CategoryTheory.SimplicialThickening\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialThickening</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}