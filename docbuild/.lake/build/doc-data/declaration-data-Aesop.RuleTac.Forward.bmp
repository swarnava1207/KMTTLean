{"name":"Aesop.RuleTac.Forward","instances":[],"imports":["Init","Aesop.Forward.Match","Aesop.RuleTac.Basic","Aesop.RuleTac.ElabRuleTerm","Aesop.RuleTac.Forward.Basic","Aesop.Script.SpecificTactics","Batteries.Lean.Meta.UnusedNames"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RuleTac/Forward.lean#L205-L218","name":"Aesop.RuleTac.forwardMatch","line":205,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardMatch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardMatch\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">forwardMatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">RuleTac</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RuleTac/Forward.lean#L199-L203","name":"Aesop.RuleTac.forward","line":199,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forward","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forward\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">forward</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Aesop/RuleTac/RuleTerm.html#Aesop.RuleTerm\">RuleTerm</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">immediate</span> : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">UnorderedArraySet</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">clear</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">RuleTac</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RuleTac/Forward.lean#L193-L197","name":"Aesop.RuleTac.forwardTerm","line":193,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardTerm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardTerm\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">forwardTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">immediate</span> : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">UnorderedArraySet</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">clear</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">RuleTac</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RuleTac/Forward.lean#L188-L191","name":"Aesop.RuleTac.forwardConst","line":188,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardConst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardConst\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">forwardConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">immediate</span> : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">UnorderedArraySet</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">clear</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">RuleTac</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RuleTac/Forward.lean#L178-L186","name":"Aesop.RuleTac.forwardExpr","line":178,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.forwardExpr\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">forwardExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">immediate</span> : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">UnorderedArraySet</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">clear</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTac\">RuleTac</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RuleTac/Forward.lean#L175-L176","name":"Aesop.RuleTac.applyForwardRule.err","line":175,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.applyForwardRule.err","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.applyForwardRule.err\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">applyForwardRule</span>.<span class=\"name\">err</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RuleTac/Forward.lean#L120-L176","name":"Aesop.RuleTac.applyForwardRule","line":120,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.applyForwardRule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.applyForwardRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">applyForwardRule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">patSubsts?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">immediate</span> : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">UnorderedArraySet</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">clear</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">maxDepth?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">existingHypTypes</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINF\">RPINF</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/ScriptM.html#Aesop.ScriptM\">ScriptM</a> <a href=\"./Aesop/RuleTac/Basic.html#Aesop.Subgoal\">Subgoal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RuleTac/Forward.lean#L118-L118","name":"Aesop.RuleTac.assertForwardHyp.tacticBuilder","line":118,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.assertForwardHyp.tacticBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.assertForwardHyp.tacticBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">assertForwardHyp</span>.<span class=\"name\">tacticBuilder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hyp</span> : <a href=\"./Lean/Meta/Tactic/Assert.html#Lean.Meta.Hypothesis\">Lean.Meta.Hypothesis</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> → <a href=\"./Aesop/Script/Tactic.html#Aesop.Script.TacticBuilder\">Script.TacticBuilder</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RuleTac/Forward.lean#L99-L118","name":"Aesop.RuleTac.assertForwardHyp","line":99,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.assertForwardHyp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.assertForwardHyp\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">assertForwardHyp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hyp</span> : <a href=\"./Lean/Meta/Tactic/Assert.html#Lean.Meta.Hypothesis\">Lean.Meta.Hypothesis</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">depth</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/ScriptM.html#Aesop.ScriptM\">ScriptM</a> (<a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RuleTac/Forward.lean#L41-L97","name":"Aesop.RuleTac.makeForwardHyps.loop","line":41,"kind":"opaque","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.makeForwardHyps.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.makeForwardHyps.loop\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">makeForwardHyps</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">maxDepth?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">forwardHypData</span> : <a href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.ForwardHypData\">ForwardHypData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">existingHypTypes</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINF\">RPINF</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">app</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">instMVars </span><span class=\"fn\">immediateMVars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">proofsAcc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">currentMaxHypDepth</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">currentUsedHyps </span><span class=\"fn\">usedHypsAcc</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">proofTypesAcc</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINF\">RPINF</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINF\">RPINF</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/RuleTac/Forward.lean#L19-L97","name":"Aesop.RuleTac.makeForwardHyps","line":19,"kind":"def","docLink":"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.makeForwardHyps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleTac/Forward.html#Aesop.RuleTac.makeForwardHyps\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTac</span>.<span class=\"name\">makeForwardHyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">patSubst?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">immediate</span> : <span class=\"fn\"><a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">UnorderedArraySet</a> <a href=\"./Aesop/Forward/PremiseIndex.html#Aesop.PremiseIndex\">PremiseIndex</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">maxDepth?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">forwardHypData</span> : <a href=\"./Aesop/RuleTac/Forward/Basic.html#Aesop.ForwardHypData\">ForwardHypData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">existingHypTypes</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINF\">RPINF</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></div></div>"}]}