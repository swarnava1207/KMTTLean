{"name":"Mathlib.Geometry.Manifold.VectorBundle.FiberwiseLinear","instances":[],"imports":["Init","Mathlib.Geometry.Manifold.ContMDiff.NormedSpace"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean#L302-L303","name":"mem_smoothFiberwiseLinear_iff","line":302,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#mem_smoothFiberwiseLinear_iff","doc":"**Alias** of `mem_contMDiffFiberwiseLinear_iff`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#mem_smoothFiberwiseLinear_iff\"><span class=\"name\">mem_smoothFiberwiseLinear_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EB</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HB</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HB</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">IB</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span> <span class=\"fn\">HB</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithTop\">WithTop</a> <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph\">PartialHomeomorph</a> (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>) (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#contMDiffFiberwiseLinear\">contMDiffFiberwiseLinear</a> <span class=\"fn\">B</span> <span class=\"fn\">F</span> <span class=\"fn\">IB</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>) (<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>) (<span class=\"fn\">hU</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span>) (<span class=\"fn\">hφ</span> :\n    <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">U</span></span>) (<span class=\"fn\">h2φ</span> :\n    <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">U</span></span>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.EqOnSource\">EqOnSource</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">FiberwiseLinear.partialHomeomorph</a> <span class=\"fn\">φ</span> <span class=\"fn\">hU</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean#L293-L300","name":"mem_contMDiffFiberwiseLinear_iff","line":293,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#mem_contMDiffFiberwiseLinear_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#mem_contMDiffFiberwiseLinear_iff\"><span class=\"name\">mem_contMDiffFiberwiseLinear_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EB</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HB</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HB</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">IB</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span> <span class=\"fn\">HB</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithTop\">WithTop</a> <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph\">PartialHomeomorph</a> (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>) (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">e</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#contMDiffFiberwiseLinear\">contMDiffFiberwiseLinear</a> <span class=\"fn\">B</span> <span class=\"fn\">F</span> <span class=\"fn\">IB</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>) (<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>) (<span class=\"fn\">hU</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span>) (<span class=\"fn\">hφ</span> :\n    <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">U</span></span>) (<span class=\"fn\">h2φ</span> :\n    <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">U</span></span>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.EqOnSource\">EqOnSource</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">FiberwiseLinear.partialHomeomorph</a> <span class=\"fn\">φ</span> <span class=\"fn\">hU</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean#L291-L291","name":"smoothFiberwiseLinear","line":291,"kind":"def","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#smoothFiberwiseLinear","doc":"**Alias** of `contMDiffFiberwiseLinear`.\n\n---\n\nFor `B` a manifold and `F` a normed space, the groupoid on `B × F` consisting of local\nhomeomorphisms which are bi-`C^n` and fiberwise linear, and induce the identity on `B`.\nWhen a (topological) vector bundle is `C^n`, then the composition of charts associated\nto the vector bundle belong to this groupoid. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#smoothFiberwiseLinear\"><span class=\"name\">smoothFiberwiseLinear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EB</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HB</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HB</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">IB</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span> <span class=\"fn\">HB</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithTop\">WithTop</a> <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#StructureGroupoid\">StructureGroupoid</a> (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean#L241-L289","name":"contMDiffFiberwiseLinear","line":241,"kind":"def","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#contMDiffFiberwiseLinear","doc":"For `B` a manifold and `F` a normed space, the groupoid on `B × F` consisting of local\nhomeomorphisms which are bi-`C^n` and fiberwise linear, and induce the identity on `B`.\nWhen a (topological) vector bundle is `C^n`, then the composition of charts associated\nto the vector bundle belong to this groupoid. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#contMDiffFiberwiseLinear\"><span class=\"name\">contMDiffFiberwiseLinear</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EB</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HB</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HB</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">IB</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span> <span class=\"fn\">HB</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithTop\">WithTop</a> <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#StructureGroupoid\">StructureGroupoid</a> (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean#L220-L221","name":"SmoothFiberwiseLinear.locality_aux₂","line":220,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#SmoothFiberwiseLinear.locality_aux₂","doc":"**Alias** of `ContMDiffFiberwiseLinear.locality_aux₂`.\n\n---\n\nLet `e` be a partial homeomorphism of `B × F` whose source is `U ×ˢ univ`, for some set `U` in\n`B`, and which, at any point `x` in `U`, admits a neighbourhood `u` of `x` such that `e` is equal\non `u ×ˢ univ` to some bi-`C^n` fiberwise linear partial homeomorphism.  Then `e` itself\nis equal to some bi-`C^n` fiberwise linear partial homeomorphism.\n\nThis is the key mathematical point of the `locality` condition in the construction of the\n`StructureGroupoid` of bi-`C^n` fiberwise linear partial homeomorphisms.  The proof is by gluing\ntogether the various bi-`C^n` fiberwise linear partial homeomorphism which exist locally.\n\nThe `U` in the conclusion is the same `U` as in the hypothesis. We state it like this, because this\nis exactly what we need for `contMDiffFiberwiseLinear`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#SmoothFiberwiseLinear.locality_aux₂\"><span class=\"name\">SmoothFiberwiseLinear</span>.<span class=\"name\">locality_aux₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EB</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HB</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HB</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">IB</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span> <span class=\"fn\">HB</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithTop\">WithTop</a> <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph\">PartialHomeomorph</a> (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>) (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">U</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">U</span>,\n    <span class=\"fn\">∃ (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>) (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>) (<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">u</span></span>) (_ : <span class=\"fn\">u</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span>) (_ : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">u</span>) (<span class=\"fn\">hφ</span> :\n      <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">u</span></span>) (<span class=\"fn\">h2φ</span> :\n      <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">u</span></span>),\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.restr\">restr</a></span> (<span class=\"fn\">u</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>))</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.EqOnSource\">EqOnSource</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">FiberwiseLinear.partialHomeomorph</a> <span class=\"fn\">φ</span> <span class=\"fn\">hu</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">Φ</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>) (<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>) (<span class=\"fn\">hU₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span>) (<span class=\"fn\">hΦ</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">Φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">U</span></span>) (<span class=\"fn\">h2Φ</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">U</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.EqOnSource\">EqOnSource</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">FiberwiseLinear.partialHomeomorph</a> <span class=\"fn\">Φ</span> <span class=\"fn\">hU₀</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean#L147-L218","name":"ContMDiffFiberwiseLinear.locality_aux₂","line":147,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#ContMDiffFiberwiseLinear.locality_aux₂","doc":"Let `e` be a partial homeomorphism of `B × F` whose source is `U ×ˢ univ`, for some set `U` in\n`B`, and which, at any point `x` in `U`, admits a neighbourhood `u` of `x` such that `e` is equal\non `u ×ˢ univ` to some bi-`C^n` fiberwise linear partial homeomorphism.  Then `e` itself\nis equal to some bi-`C^n` fiberwise linear partial homeomorphism.\n\nThis is the key mathematical point of the `locality` condition in the construction of the\n`StructureGroupoid` of bi-`C^n` fiberwise linear partial homeomorphisms.  The proof is by gluing\ntogether the various bi-`C^n` fiberwise linear partial homeomorphism which exist locally.\n\nThe `U` in the conclusion is the same `U` as in the hypothesis. We state it like this, because this\nis exactly what we need for `contMDiffFiberwiseLinear`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#ContMDiffFiberwiseLinear.locality_aux₂\"><span class=\"name\">ContMDiffFiberwiseLinear</span>.<span class=\"name\">locality_aux₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EB</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HB</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HB</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">IB</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span> <span class=\"fn\">HB</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithTop\">WithTop</a> <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph\">PartialHomeomorph</a> (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>) (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">U</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">U</span>,\n    <span class=\"fn\">∃ (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>) (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>) (<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">u</span></span>) (_ : <span class=\"fn\">u</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span>) (_ : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">u</span>) (<span class=\"fn\">hφ</span> :\n      <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">u</span></span>) (<span class=\"fn\">h2φ</span> :\n      <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">u</span></span>),\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.restr\">restr</a></span> (<span class=\"fn\">u</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>))</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.EqOnSource\">EqOnSource</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">FiberwiseLinear.partialHomeomorph</a> <span class=\"fn\">φ</span> <span class=\"fn\">hu</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">Φ</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>) (<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>) (<span class=\"fn\">hU₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span>) (<span class=\"fn\">hΦ</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">Φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">U</span></span>) (<span class=\"fn\">h2Φ</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">U</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.EqOnSource\">EqOnSource</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">FiberwiseLinear.partialHomeomorph</a> <span class=\"fn\">Φ</span> <span class=\"fn\">hU₀</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean#L144-L145","name":"SmoothFiberwiseLinear.locality_aux₁","line":144,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#SmoothFiberwiseLinear.locality_aux₁","doc":"**Alias** of `ContMDiffFiberwiseLinear.locality_aux₁`.\n\n---\n\nLet `e` be a partial homeomorphism of `B × F`.  Suppose that at every point `p` in the source of\n`e`, there is some neighbourhood `s` of `p` on which `e` is equal to a bi-`C^n` fiberwise linear\npartial homeomorphism.\nThen the source of `e` is of the form `U ×ˢ univ`, for some set `U` in `B`, and, at any point `x` in\n`U`, admits a neighbourhood `u` of `x` such that `e` is equal on `u ×ˢ univ` to some bi-`C^n`\nfiberwise linear partial homeomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#SmoothFiberwiseLinear.locality_aux₁\"><span class=\"name\">SmoothFiberwiseLinear</span>.<span class=\"name\">locality_aux₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EB</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HB</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HB</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">IB</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span> <span class=\"fn\">HB</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithTop\">WithTop</a> <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph\">PartialHomeomorph</a> (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>) (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span>,\n    <span class=\"fn\">∃ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>)</span>),\n      <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#And\">∧</a>           <span class=\"fn\">∃ (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>) (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>) (<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">u</span></span>) (<span class=\"fn\">hφ</span> :\n            <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">u</span></span>) (<span class=\"fn\">h2φ</span> :\n            <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">u</span></span>),\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.restr\">restr</a></span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.EqOnSource\">EqOnSource</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">FiberwiseLinear.partialHomeomorph</a> <span class=\"fn\">φ</span> <span class=\"fn\">hu</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>),\n  <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">U</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">U</span>,\n      <span class=\"fn\">∃ (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>) (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>) (<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">u</span></span>) (_ : <span class=\"fn\">u</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span>) (_ : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">u</span>) (<span class=\"fn\">hφ</span> :\n        <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">u</span></span>) (<span class=\"fn\">h2φ</span> :\n        <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">u</span></span>),\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.restr\">restr</a></span> (<span class=\"fn\">u</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>))</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.EqOnSource\">EqOnSource</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">FiberwiseLinear.partialHomeomorph</a> <span class=\"fn\">φ</span> <span class=\"fn\">hu</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean#L97-L142","name":"ContMDiffFiberwiseLinear.locality_aux₁","line":97,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#ContMDiffFiberwiseLinear.locality_aux₁","doc":"Let `e` be a partial homeomorphism of `B × F`.  Suppose that at every point `p` in the source of\n`e`, there is some neighbourhood `s` of `p` on which `e` is equal to a bi-`C^n` fiberwise linear\npartial homeomorphism.\nThen the source of `e` is of the form `U ×ˢ univ`, for some set `U` in `B`, and, at any point `x` in\n`U`, admits a neighbourhood `u` of `x` such that `e` is equal on `u ×ˢ univ` to some bi-`C^n`\nfiberwise linear partial homeomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#ContMDiffFiberwiseLinear.locality_aux₁\"><span class=\"name\">ContMDiffFiberwiseLinear</span>.<span class=\"name\">locality_aux₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">EB</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">HB</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">HB</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">HB</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">IB</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">EB</span> <span class=\"fn\">HB</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/TypeTags.html#WithTop\">WithTop</a> <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph\">PartialHomeomorph</a> (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>) (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ <span class=\"fn\">p</span> ∈ <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span>,\n    <span class=\"fn\">∃ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>)</span>),\n      <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#And\">∧</a>           <span class=\"fn\">∃ (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>) (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>) (<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">u</span></span>) (<span class=\"fn\">hφ</span> :\n            <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">u</span></span>) (<span class=\"fn\">h2φ</span> :\n            <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">u</span></span>),\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.restr\">restr</a></span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.EqOnSource\">EqOnSource</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">FiberwiseLinear.partialHomeomorph</a> <span class=\"fn\">φ</span> <span class=\"fn\">hu</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>),\n  <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">U</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">U</span>,\n      <span class=\"fn\">∃ (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>) (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>) (<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">u</span></span>) (_ : <span class=\"fn\">u</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">U</span>) (_ : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">u</span>) (<span class=\"fn\">hφ</span> :\n        <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">u</span></span>) (<span class=\"fn\">h2φ</span> :\n        <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffOn\">ContMDiffOn</a> <span class=\"fn\">IB</span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#modelWithCornersSelf\">modelWithCornersSelf</a> <span class=\"fn\">𝕜</span> (<span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/LinearMap.html#ContinuousLinearMap\">]</a> <span class=\"fn\">F</span>))</span> <span class=\"fn\">n</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">u</span></span>),\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.restr\">restr</a></span> (<span class=\"fn\">u</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>))</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.EqOnSource\">EqOnSource</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">FiberwiseLinear.partialHomeomorph</a> <span class=\"fn\">φ</span> <span class=\"fn\">hu</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean#L80-L90","name":"FiberwiseLinear.target_trans_partialHomeomorph","line":80,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.target_trans_partialHomeomorph","doc":"Compute the target of the composition of two partial homeomorphisms induced by fiberwise linear\nequivalences. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.target_trans_partialHomeomorph\"><span class=\"name\">FiberwiseLinear</span>.<span class=\"name\">target_trans_partialHomeomorph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">φ'</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U </span><span class=\"fn\">U'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2φ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ'</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">U'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2φ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ'</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">U'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">partialHomeomorph</a> <span class=\"fn\">φ</span> <span class=\"fn\">hU</span> <span class=\"fn\">hφ</span> <span class=\"fn\">h2φ</span>)</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">partialHomeomorph</a> <span class=\"fn\">φ'</span> <span class=\"fn\">hU'</span> <span class=\"fn\">hφ'</span> <span class=\"fn\">h2φ'</span>)</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.target\">target</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">U</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">U'</span>) <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean#L68-L78","name":"FiberwiseLinear.source_trans_partialHomeomorph","line":68,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.source_trans_partialHomeomorph","doc":"Compute the source of the composition of two partial homeomorphisms induced by fiberwise linear\nequivalences. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.source_trans_partialHomeomorph\"><span class=\"name\">FiberwiseLinear</span>.<span class=\"name\">source_trans_partialHomeomorph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">φ'</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U </span><span class=\"fn\">U'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2φ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ'</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">U'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2φ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ'</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">U'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">partialHomeomorph</a> <span class=\"fn\">φ</span> <span class=\"fn\">hU</span> <span class=\"fn\">hφ</span> <span class=\"fn\">h2φ</span>)</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">partialHomeomorph</a> <span class=\"fn\">φ'</span> <span class=\"fn\">hU'</span> <span class=\"fn\">hφ'</span> <span class=\"fn\">h2φ'</span>)</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/PartialEquiv.html#PartialEquiv.source\">source</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">U</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">U'</span>) <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean#L55-L66","name":"FiberwiseLinear.trans_partialHomeomorph_apply","line":55,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.trans_partialHomeomorph_apply","doc":"Compute the composition of two partial homeomorphisms induced by fiberwise linear\nequivalences. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.trans_partialHomeomorph_apply\"><span class=\"name\">FiberwiseLinear</span>.<span class=\"name\">trans_partialHomeomorph_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ </span><span class=\"fn\">φ'</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U </span><span class=\"fn\">U'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2φ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ'</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">U'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2φ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ'</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">U'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">partialHomeomorph</a> <span class=\"fn\">φ</span> <span class=\"fn\">hU</span> <span class=\"fn\">hφ</span> <span class=\"fn\">h2φ</span>)</span>.<a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\">partialHomeomorph</a> <span class=\"fn\">φ'</span> <span class=\"fn\">hU'</span> <span class=\"fn\">hφ'</span> <span class=\"fn\">h2φ'</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">v</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ'</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">v</span>)</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.lean#L30-L53","name":"FiberwiseLinear.partialHomeomorph","line":30,"kind":"def","docLink":"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph","doc":"For `B` a topological space and `F` a `𝕜`-normed space, a map from `U : Set B` to `F ≃L[𝕜] F`\ndetermines a partial homeomorphism from `B × F` to itself by its action fiberwise. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/VectorBundle/FiberwiseLinear.html#FiberwiseLinear.partialHomeomorph\"><span class=\"name\">FiberwiseLinear</span>.<span class=\"name\">partialHomeomorph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">𝕜</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">F</span> <a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">≃L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv\">]</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2φ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Module/Equiv.html#ContinuousLinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/PartialHomeomorph.html#PartialHomeomorph\">PartialHomeomorph</a> (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>) (<span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">F</span>)</span></div></div>"}]}