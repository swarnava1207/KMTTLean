{"name":"Mathlib.Logic.Godel.GodelBetaFunction","instances":[],"imports":["Init","Mathlib.Data.Nat.ModEq","Mathlib.Data.Nat.ChineseRemainder","Mathlib.Data.Nat.Prime.Defs","Mathlib.Data.Nat.Pairing","Mathlib.Order.Fin.Basic","Mathlib.Data.Finset.Lattice.Fold","Mathlib.Data.Fintype.Basic","Mathlib.Data.Nat.Factorial.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Logic/Godel/GodelBetaFunction.lean#L98-L104","name":"Nat.beta_unbeta_coe","line":98,"kind":"theorem","docLink":"./Mathlib/Logic/Godel/GodelBetaFunction.html#Nat.beta_unbeta_coe","doc":"**Gödel's Beta Function Lemma** "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Logic/Godel/GodelBetaFunction.html#Nat.beta_unbeta_coe\"><span class=\"name\">Nat</span>.<span class=\"name\">beta_unbeta_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Godel/GodelBetaFunction.html#Nat.unbeta\">unbeta</a> <span class=\"fn\">l</span>)</span>.<a href=\"./Mathlib/Logic/Godel/GodelBetaFunction.html#Nat.beta\">beta</a></span> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">i</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Logic/Godel/GodelBetaFunction.lean#L90-L96","name":"Nat.unbeta","line":90,"kind":"def","docLink":"./Mathlib/Logic/Godel/GodelBetaFunction.html#Nat.unbeta","doc":"Inverse of Gödel's Beta Function. This is similar to `Encodable.encodeList`, but it is easier\nto prove that it is arithmetically definable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Logic/Godel/GodelBetaFunction.html#Nat.unbeta\"><span class=\"name\">Nat</span>.<span class=\"name\">unbeta</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Logic/Godel/GodelBetaFunction.lean#L86-L88","name":"Nat.beta","line":86,"kind":"def","docLink":"./Mathlib/Logic/Godel/GodelBetaFunction.html#Nat.beta","doc":"Gödel's Beta Function. This is similar to `(Encodable.decodeList)[i]`, but it is easier to\nprove that it is arithmetically definable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Logic/Godel/GodelBetaFunction.html#Nat.beta\"><span class=\"name\">Nat</span>.<span class=\"name\">beta</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Logic/Godel/GodelBetaFunction.lean#L67-L73","name":"Nat.coprimes_lt","line":67,"kind":"theorem","docLink":"./Mathlib/Logic/Godel/GodelBetaFunction.html#Nat.coprimes_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Logic/Godel/GodelBetaFunction.html#Nat.coprimes_lt\"><span class=\"name\">Nat</span>.<span class=\"name\">coprimes_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Godel/GodelBetaFunction.html#_private.Mathlib.Logic.Godel.GodelBetaFunction.0.Nat.coprimes\">Nat.coprimes✝</a> <span class=\"fn\">a</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Logic/Godel/GodelBetaFunction.lean#L49-L59","name":"Nat.coprime_mul_succ","line":49,"kind":"theorem","docLink":"./Mathlib/Logic/Godel/GodelBetaFunction.html#Nat.coprime_mul_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Logic/Godel/GodelBetaFunction.html#Nat.coprime_mul_succ\"><span class=\"name\">Nat</span>.<span class=\"name\">coprime_mul_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m </span><span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"}]}