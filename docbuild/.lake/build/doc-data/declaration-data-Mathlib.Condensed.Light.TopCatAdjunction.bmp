{"name":"Mathlib.Condensed.Light.TopCatAdjunction","instances":[{"typeNames":["CategoryTheory.NatTrans.app"],"name":"LightCondSet.instEpiTopCatAppCounitTopCatAdjunction","className":"CategoryTheory.Epi"},{"typeNames":["topCatToLightCondSet"],"name":"LightCondSet.instFaithfulTopCatTopCatToLightCondSet","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["TopCat.carrier"],"name":"LightCondSet.instSequentialSpaceCarrierToTopCat","className":"SequentialSpace"},{"typeNames":["TopCat.carrier"],"name":"LightCondSet.instSequentialSpaceCarrierObjTopCatLightCondSetToTopCat","className":"SequentialSpace"},{"typeNames":["CategoryTheory.Adjunction.counit"],"name":"LightCondSet.instIsIsoFunctorSequentialCounitSequentialAdjunction","className":"CategoryTheory.IsIso"}],"imports":["Init","Mathlib.Condensed.Light.TopComparison","Mathlib.Topology.Category.Sequential","Mathlib.Topology.Category.LightProfinite.Sequence"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L195-L204","name":"LightCondSet.fullyFaithfulSequentialToLightCondSet","line":195,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.fullyFaithfulSequentialToLightCondSet","doc":"The functor from topological spaces to light condensed sets restricted to sequential spaces\nis fully faithful.\n\nNote: for now, we only have `ℕ∪{∞}` as a light profinite set at universe level 0, which is why we\ncan only prove this for the functor `Sequential.{0} ⥤ LightCondSet.{0}`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.fullyFaithfulSequentialToLightCondSet\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">fullyFaithfulSequentialToLightCondSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.sequentialToLightCondSet\">sequentialToLightCondSet</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.FullyFaithful\">FullyFaithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L190-L193","name":"LightCondSet.instIsIsoFunctorSequentialCounitSequentialAdjunction","line":190,"kind":"instance","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.instIsIsoFunctorSequentialCounitSequentialAdjunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.instIsIsoFunctorSequentialCounitSequentialAdjunction\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">instIsIsoFunctorSequentialCounitSequentialAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\"><a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.sequentialAdjunction\">sequentialAdjunction</a>.<a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.counit\">counit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L179-L188","name":"LightCondSet.sequentialAdjunctionCounitIso","line":179,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.sequentialAdjunctionCounitIso","doc":"The counit of the adjunction `lightCondSetToSequential ⊣ sequentialToLightCondSet`\nis an isomorphism.\n\nNote: for now, we only have `ℕ∪{∞}` as a light profinite set at universe level 0, which is why we\ncan only prove this for `X : Sequential.{0}`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.sequentialAdjunctionCounitIso\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">sequentialAdjunctionCounitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/Sequential.html#Sequential\">Sequential</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.lightCondSetToSequential\">lightCondSetToSequential</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.sequentialToLightCondSet\">sequentialToLightCondSet</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L158-L177","name":"LightCondSet.sequentialAdjunctionHomeo","line":158,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.sequentialAdjunctionHomeo","doc":"The counit of the adjunction `lightCondSetToSequential ⊣ sequentialToLightCondSet`\nis a homeomorphism.\n\nNote: for now, we only have `ℕ∪{∞}` as a light profinite set at universe level 0, which is why we\ncan only prove this for `X : TopCat.{0}`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.sequentialAdjunctionHomeo\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">sequentialAdjunctionHomeo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Sequences.html#SequentialSpace\">SequentialSpace</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Condensed/Light/TopComparison.html#TopCat.toLightCondSet\">toLightCondSet</a></span>.<a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCat\">toTopCat</a></span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L148-L156","name":"LightCondSet.sequentialAdjunction","line":148,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.sequentialAdjunction","doc":"The adjunction `lightCondSetToTopCat ⊣ topCatToLightCondSet` restricted to sequential\nspaces.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.sequentialAdjunction\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">sequentialAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.lightCondSetToSequential\">lightCondSetToSequential</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.sequentialToLightCondSet\">sequentialToLightCondSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L141-L146","name":"LightCondSet.sequentialToLightCondSet","line":141,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.sequentialToLightCondSet","doc":"The functor from topological spaces to light condensed sets restricted to sequential spaces.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.sequentialToLightCondSet\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">sequentialToLightCondSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/Sequential.html#Sequential\">Sequential</a> <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L136-L139","name":"LightCondSet.lightCondSetToSequential","line":136,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.lightCondSetToSequential","doc":"The functor from light condensed sets to topological spaces lands in sequential spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.lightCondSetToSequential\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">lightCondSetToSequential</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a> <a href=\"./Mathlib/Topology/Category/Sequential.html#Sequential\">Sequential</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L133-L134","name":"LightCondSet.instSequentialSpaceCarrierObjTopCatLightCondSetToTopCat","line":133,"kind":"instance","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.instSequentialSpaceCarrierObjTopCatLightCondSetToTopCat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.instSequentialSpaceCarrierObjTopCatLightCondSetToTopCat\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">instSequentialSpaceCarrierObjTopCatLightCondSetToTopCat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Sequences.html#SequentialSpace\">SequentialSpace</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#lightCondSetToTopCat\">lightCondSetToTopCat</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L130-L131","name":"LightCondSet.instSequentialSpaceCarrierToTopCat","line":130,"kind":"instance","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.instSequentialSpaceCarrierToTopCat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.instSequentialSpaceCarrierToTopCat\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">instSequentialSpaceCarrierToTopCat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Sequences.html#SequentialSpace\">SequentialSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCat\">toTopCat</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L126-L126","name":"LightCondSet.instFaithfulTopCatTopCatToLightCondSet","line":126,"kind":"instance","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.instFaithfulTopCatTopCatToLightCondSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.instFaithfulTopCatTopCatToLightCondSet\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">instFaithfulTopCatTopCatToLightCondSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Condensed/Light/TopComparison.html#topCatToLightCondSet\">topCatToLightCondSet</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L122-L124","name":"LightCondSet.instEpiTopCatAppCounitTopCatAdjunction","line":122,"kind":"instance","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.instEpiTopCatAppCounitTopCatAdjunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.instEpiTopCatAppCounitTopCatAdjunction\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">instEpiTopCatAppCounitTopCatAdjunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunction\">topCatAdjunction</a>.<a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction.counit\">counit</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L113-L120","name":"LightCondSet.topCatAdjunction","line":113,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunction","doc":"The adjunction `lightCondSetToTopCat ⊣ topCatToLightCondSet` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunction\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">topCatAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#lightCondSetToTopCat\">lightCondSetToTopCat</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <a href=\"./Mathlib/Condensed/Light/TopComparison.html#topCatToLightCondSet\">topCatToLightCondSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L97-L97","name":"LightCondSet.topCatAdjunctionUnit_val_app","line":97,"kind":"theorem","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionUnit_val_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionUnit_val_app\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">topCatAdjunctionUnit_val_app</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionUnit\">topCatAdjunctionUnit</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.Hom.val\">val</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">S</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">{\n    <span class=\"fn\">toFun</span> :=\n      <span class=\"fn\">fun\n        (<span class=\"fn\">s</span> :\n          <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.compHausLikeToTop\">CompHausLike.compHausLikeToTop</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>) =&gt;\n                  <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span>\n              <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">S</span>)</span>)</span></span>) =&gt;\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.const\">CompHausLike.const</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of\">LightProfinite.of</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u + 1}</a>)</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\">x</span></span></span>,\n    <span class=\"fn\">continuous_toFun</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L97-L97","name":"LightCondSet.topCatAdjunctionUnit_val_app_apply","line":97,"kind":"theorem","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionUnit_val_app_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionUnit_val_app_apply\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">topCatAdjunctionUnit_val_app_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> :\n  <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.compHausLikeToTop\">CompHausLike.compHausLikeToTop</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span>\n      <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">S</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionUnit\">topCatAdjunctionUnit</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.Hom.val\">val</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">S</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.const\">CompHausLike.const</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of\">LightProfinite.of</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u + 1}</a>)</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L96-L111","name":"LightCondSet.topCatAdjunctionUnit","line":96,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionUnit","doc":"The unit of the adjunction `lightCondSetToTopCat ⊣ topCatToLightCondSet` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionUnit\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">topCatAdjunctionUnit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCat\">toTopCat</a></span>.<a href=\"./Mathlib/Condensed/Light/TopComparison.html#TopCat.toLightCondSet\">toLightCondSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L92-L94","name":"LightCondSet.topCatAdjunctionCounit_bijective","line":92,"kind":"theorem","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionCounit_bijective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionCounit_bijective\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">topCatAdjunctionCounit_bijective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionCounit\">topCatAdjunctionCounit</a> <span class=\"fn\">X</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L83-L90","name":"LightCondSet.topCatAdjunctionCounitEquiv","line":83,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionCounitEquiv","doc":"The counit of the adjunction `lightCondSetToTopCat ⊣ topCatToLightCondSet` is always bijective,\nbut not an isomorphism in general (the inverse isn't continuous unless `X` is sequential).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionCounitEquiv\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">topCatAdjunctionCounitEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Condensed/Light/TopComparison.html#TopCat.toLightCondSet\">toLightCondSet</a></span>.<a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCat\">toTopCat</a></span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L75-L81","name":"LightCondSet.topCatAdjunctionCounit","line":75,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionCounit","doc":"The counit of the adjunction `lightCondSetToTopCat ⊣ topCatToLightCondSet` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.topCatAdjunctionCounit\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">topCatAdjunctionCounit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Condensed/Light/TopComparison.html#TopCat.toLightCondSet\">toLightCondSet</a></span>.<a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCat\">toTopCat</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L70-L70","name":"lightCondSetToTopCat_obj_carrier","line":70,"kind":"theorem","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#lightCondSetToTopCat_obj_carrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#lightCondSetToTopCat_obj_carrier\"><span class=\"name\">lightCondSetToTopCat_obj_carrier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#lightCondSetToTopCat\">lightCondSetToTopCat</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of\">LightProfinite.of</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u + 1}</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L70-L70","name":"lightCondSetToTopCat_map","line":70,"kind":"theorem","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#lightCondSetToTopCat_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#lightCondSetToTopCat_map\"><span class=\"name\">lightCondSetToTopCat_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#lightCondSetToTopCat\">lightCondSetToTopCat</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCatMap\">LightCondSet.toTopCatMap</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L69-L73","name":"lightCondSetToTopCat","line":69,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#lightCondSetToTopCat","doc":"The functor `LightCondSet ⥤ TopCat` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#lightCondSetToTopCat\"><span class=\"name\">lightCondSetToTopCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L56-L56","name":"LightCondSet.toTopCatMap_hom_apply","line":56,"kind":"theorem","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCatMap_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCatMap_hom_apply\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">toTopCatMap_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of\">LightProfinite.of</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u + 1}</a>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.Hom.hom\">TopCat.Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCatMap\">toTopCatMap</a> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.Hom.val\">val</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of\">LightProfinite.of</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u + 1}</a>)</span>)</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L55-L67","name":"LightCondSet.toTopCatMap","line":55,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCatMap","doc":"The map part of the functor `LightCondSet ⥤ TopCat` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCatMap\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">toTopCatMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCat\">toTopCat</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCat\">toTopCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L45-L50","name":"LightCondSet.continuous_coinducingCoprod","line":45,"kind":"theorem","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.continuous_coinducingCoprod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.continuous_coinducingCoprod\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">continuous_coinducingCoprod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">S</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⟨<span class=\"fn\">S</span>, <span class=\"fn\">x</span>⟩</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#_private.Mathlib.Condensed.Light.TopCatAdjunction.0.LightCondSet.coinducingCoprod\">LightCondSet.coinducingCoprod✝</a> <span class=\"fn\">X</span> <span class=\"fn\">⟨<span class=\"fn\">⟨<span class=\"fn\">S</span>, <span class=\"fn\">x</span>⟩</span>, <span class=\"fn\">a</span>⟩</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L42-L43","name":"LightCondSet.toTopCat","line":42,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCat","doc":"The object part of the functor `LightCondSet ⥤ TopCat` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.toTopCat\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">toTopCat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Condensed/Light/TopCatAdjunction.lean#L35-L40","name":"LightCondSet.underlyingTopologicalSpace","line":35,"kind":"def","docLink":"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.underlyingTopologicalSpace","doc":"Let `X` be a light condensed set. We define a topology on `X(*)` as the quotient topology of\nall the maps from light profinite sets `S` to `X(*)`, corresponding to elements of `X(S)`.\nIn other words, the topology coinduced by the map `LightCondSet.coinducingCoprod` above. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Condensed/Light/TopCatAdjunction.html#LightCondSet.underlyingTopologicalSpace\"><span class=\"name\">LightCondSet</span>.<span class=\"name\">underlyingTopologicalSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Condensed/Light/Basic.html#LightCondSet\">LightCondSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of\">LightProfinite.of</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u + 1}</a>)</span>)</span>)</span></span></div></div>"}]}