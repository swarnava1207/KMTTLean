{"name":"Mathlib.NumberTheory.NumberField.ClassNumber","instances":[{"typeNames":["ClassGroup"],"name":"NumberField.RingOfIntegers.instFintypeClassGroup","className":"Fintype"}],"imports":["Init","Mathlib.NumberTheory.ClassNumber.AdmissibleAbs","Mathlib.NumberTheory.ClassNumber.Finite","Mathlib.NumberTheory.NumberField.Discriminant.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/ClassNumber.lean#L95-L98","name":"Rat.classNumber_eq","line":95,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/ClassNumber.html#Rat.classNumber_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/ClassNumber.html#Rat.classNumber_eq\"><span class=\"name\">Rat</span>.<span class=\"name\">classNumber_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/ClassNumber.html#NumberField.classNumber\">NumberField.classNumber</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/ClassNumber.lean#L72-L87","name":"RingOfIntegers.isPrincipalIdealRing_of_abs_discr_lt","line":72,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/ClassNumber.html#RingOfIntegers.isPrincipalIdealRing_of_abs_discr_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/ClassNumber.html#RingOfIntegers.isPrincipalIdealRing_of_abs_discr_lt\"><span class=\"name\">RingOfIntegers</span>.<span class=\"name\">isPrincipalIdealRing_of_abs_discr_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Discriminant/Defs.html#NumberField.discr\">NumberField.discr</a> <span class=\"fn\">K</span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a>     (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<a href=\"./Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.html#Real.pi\">Real.pi</a> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">4</span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.nrComplexPlaces\">NumberField.InfinitePlace.nrComplexPlaces</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>         (<span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span></span>)) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a>       <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#IsPrincipalIdealRing\">IsPrincipalIdealRing</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">NumberField.RingOfIntegers</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/ClassNumber.lean#L47-L70","name":"NumberField.exists_ideal_in_class_of_norm_le","line":47,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/ClassNumber.html#NumberField.exists_ideal_in_class_of_norm_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/ClassNumber.html#NumberField.exists_ideal_in_class_of_norm_le\"><span class=\"name\">NumberField</span>.<span class=\"name\">exists_ideal_in_class_of_norm_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/ClassGroup.html#ClassGroup\">ClassGroup</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">RingOfIntegers</a> <span class=\"fn\">K</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">I</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">RingOfIntegers</a> <span class=\"fn\">K</span>)</span>)</span>)</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/RingTheory/ClassGroup.html#ClassGroup.mk0\">ClassGroup.mk0</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/Norm/AbsNorm.html#Ideal.absNorm\">Ideal.absNorm</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>       (<span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <a href=\"./Mathlib/Analysis/SpecialFunctions/Trigonometric/Basic.html#Real.pi\">Real.pi</a>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.nrComplexPlaces\">InfinitePlace.nrComplexPlaces</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>         (<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Dimension/Finrank.html#Module.finrank\">Module.finrank</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Real/Sqrt.html#Real.sqrt\">√</a><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Discriminant/Defs.html#NumberField.discr\">discr</a> <span class=\"fn\">K</span>)</span></span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/ClassNumber.lean#L39-L41","name":"NumberField.classNumber_eq_one_iff","line":39,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/ClassNumber.html#NumberField.classNumber_eq_one_iff","doc":"The class number of a number field is `1` iff the ring of integers is a PID. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/ClassNumber.html#NumberField.classNumber_eq_one_iff\"><span class=\"name\">NumberField</span>.<span class=\"name\">classNumber_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/ClassNumber.html#NumberField.classNumber\">classNumber</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#IsPrincipalIdealRing\">IsPrincipalIdealRing</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">RingOfIntegers</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/ClassNumber.lean#L33-L35","name":"NumberField.classNumber","line":33,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/ClassNumber.html#NumberField.classNumber","doc":"The class number of a number field is the (finite) cardinality of the class group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/ClassNumber.html#NumberField.classNumber\"><span class=\"name\">NumberField</span>.<span class=\"name\">classNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/ClassNumber.lean#L28-L29","name":"NumberField.RingOfIntegers.instFintypeClassGroup","line":28,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/ClassNumber.html#NumberField.RingOfIntegers.instFintypeClassGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/ClassNumber.html#NumberField.RingOfIntegers.instFintypeClassGroup\"><span class=\"name\">NumberField</span>.<span class=\"name\">RingOfIntegers</span>.<span class=\"name\">instFintypeClassGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField\">NumberField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/ClassGroup.html#ClassGroup\">ClassGroup</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.RingOfIntegers\">RingOfIntegers</a> <span class=\"fn\">K</span>)</span>)</span></span></div></div>"}]}