{"name":"Mathlib.CategoryTheory.Sites.Coherent.RegularSheaves","instances":[{"typeNames":["CategoryTheory.regularTopology"],"name":"CategoryTheory.regularTopology.subcanonical","className":"CategoryTheory.GrothendieckTopology.Subcanonical"}],"imports":["Init","Mathlib.CategoryTheory.EffectiveEpi.Preserves","Mathlib.CategoryTheory.Limits.Final.ParallelPair","Mathlib.CategoryTheory.Preadditive.Projective.Basic","Mathlib.CategoryTheory.Sites.Canonical","Mathlib.CategoryTheory.Sites.Coherent.Basic","Mathlib.CategoryTheory.Sites.EffectiveEpimorphic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L259-L261","name":"CategoryTheory.regularTopology.subcanonical","line":259,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.subcanonical","doc":"The regular topology on any preregular category is subcanonical. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.subcanonical\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">subcanonical</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">regularTopology</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Canonical.html#CategoryTheory.GrothendieckTopology.Subcanonical\">Subcanonical</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L238-L257","name":"CategoryTheory.regularTopology.isSheaf_yoneda_obj","line":238,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.isSheaf_yoneda_obj","doc":"Every Yoneda-presheaf is a sheaf for the regular topology. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.isSheaf_yoneda_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">isSheaf_yoneda_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/SheafOfTypes.html#CategoryTheory.Presieve.IsSheaf\">Presieve.IsSheaf</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">regularTopology</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Yoneda.html#CategoryTheory.yoneda\">yoneda</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">W</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L232-L236","name":"CategoryTheory.regularTopology.isSheaf_of_projective","line":232,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.isSheaf_of_projective","doc":"Every presheaf is a sheaf for the regular topology if every object of `C` is projective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.isSheaf_of_projective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">isSheaf_of_projective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">X</span> : <span class=\"fn\">C</span>), <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Projective/Basic.html#CategoryTheory.Projective\">Projective</a> <span class=\"fn\">X</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">Presheaf.IsSheaf</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">regularTopology</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L223-L230","name":"CategoryTheory.regularTopology.isSheafFor_regular_of_projective","line":223,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.isSheafFor_regular_of_projective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.isSheafFor_regular_of_projective\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">isSheafFor_regular_of_projective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.Presieve.regular\">regular</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Projective/Basic.html#CategoryTheory.Projective\">Projective</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> u_4)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.IsSheafFor\">Presieve.IsSheafFor</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L212-L221","name":"CategoryTheory.regularTopology.equalizerCondition_iff_isSheaf","line":212,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_iff_isSheaf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_iff_isSheaf\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">equalizerCondition_iff_isSheaf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">Preregular</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ {<span class=\"fn\">Y </span><span class=\"fn\">X</span> : <span class=\"fn\">C</span>} (<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpi\">EffectiveEpi</a> <span class=\"fn\">f</span></span>], <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">f</span> <span class=\"fn\">f</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition\">EqualizerCondition</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Presheaf.IsSheaf\">Presheaf.IsSheaf</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.regularTopology\">regularTopology</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L202-L210","name":"CategoryTheory.regularTopology.equalizerConditionMap_iff_nonempty_isLimit","line":202,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerConditionMap_iff_nonempty_isLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerConditionMap_iff_nonempty_isLimit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">equalizerConditionMap_iff_nonempty_isLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">X </span><span class=\"fn\">B</span> : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.SingleEqualizerCondition\">SingleEqualizerCondition</a> <span class=\"fn\">P</span> <span class=\"fn\">π</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Functor.mapCone\">mapCone</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.ofArrows\">Sieve.ofArrows</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <span class=\"fn\">X</span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <span class=\"fn\">π</span></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.cocone\">cocone</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.op\">op</a></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L179-L200","name":"CategoryTheory.regularTopology.isLimit_forkOfι_equiv","line":179,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.isLimit_forkOfι_equiv","doc":"Given a limiting pullback cone, the fork in `SingleEqualizerCondition` is limiting iff the diagram\nin `Presheaf.isSheaf_iff_isLimit_coverage` is limiting.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.isLimit_forkOfι_equiv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">isLimit_forkOfι_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PullbackCone\">Limits.PullbackCone</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork.ofι\">Limits.Fork.ofι</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span> <span class=\"fn\">⋯</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Functor.mapCone\">mapCone</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.ofArrows\">Sieve.ofArrows</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <span class=\"fn\">X</span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <span class=\"fn\">π</span></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.cocone\">cocone</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone.op\">op</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L159-L177","name":"CategoryTheory.regularTopology.parallelPair_pullback_initial","line":159,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.parallelPair_pullback_initial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.parallelPair_pullback_initial\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">parallelPair_pullback_initial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PullbackCone\">Limits.PullbackCone</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.parallelPair\">Limits.parallelPair</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Over/Basic.html#CategoryTheory.Over.homMk\">Over.homMk</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PullbackCone.fst\">fst</a></span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Comma/Over/Basic.html#CategoryTheory.Over.homMk\">Over.homMk</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PullbackCone.snd\">snd</a></span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Final.html#CategoryTheory.Functor.Initial\">Initial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L151-L156","name":"CategoryTheory.regularTopology.equalizerCondition_iff_of_equivalence","line":151,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_iff_of_equivalence","doc":"`P` satisfies the equalizer condition iff its precomposition by an equivalence does. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_iff_of_equivalence\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">equalizerCondition_iff_of_equivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_6, u_3}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">C</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition\">EqualizerCondition</a> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition\">EqualizerCondition</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Opposites.html#CategoryTheory.Equivalence.op\">op</a></span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">P</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L134-L149","name":"CategoryTheory.regularTopology.equalizerCondition_iff_isIso_lift","line":134,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_iff_isIso_lift","doc":"An alternative phrasing of the explicit equalizer condition, using more categorical language. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_iff_isIso_lift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">equalizerCondition_iff_isIso_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> u_4)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition\">EqualizerCondition</a> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">X </span><span class=\"fn\">B</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">π</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpi\">EffectiveEpi</a> <span class=\"fn\">π</span></span>] [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span></span>],\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.equalizer.lift\">Limits.equalizer.lift</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span> <span class=\"fn\">⋯</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L126-L132","name":"CategoryTheory.regularTopology.mapToEqualizer_eq_comp","line":126,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.mapToEqualizer_eq_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.mapToEqualizer_eq_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">mapToEqualizer_eq_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> u_4)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.MapToEqualizer\">MapToEqualizer</a> <span class=\"fn\">P</span> <span class=\"fn\">π</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">Limits.pullback.fst</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.snd\">Limits.pullback.snd</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.equalizer.lift\">Limits.equalizer.lift</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span> <span class=\"fn\">⋯</span>)</span>\n    <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Types/Shapes.html#CategoryTheory.Limits.Types.equalizerIso\">Limits.Types.equalizerIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">Limits.pullback.fst</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.snd\">Limits.pullback.snd</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L121-L124","name":"CategoryTheory.regularTopology.equalizerCondition_w'","line":121,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_w'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_w'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">equalizerCondition_w'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> u_4)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">Limits.pullback.fst</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.snd\">Limits.pullback.snd</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L101-L119","name":"CategoryTheory.regularTopology.EqualizerCondition.mk","line":101,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">EqualizerCondition</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> u_4)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">X </span><span class=\"fn\">B</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">π</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpi\">EffectiveEpi</a> <span class=\"fn\">π</span></span>] [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span></span>],\n    <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.MapToEqualizer\">MapToEqualizer</a> <span class=\"fn\">P</span> <span class=\"fn\">π</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">Limits.pullback.fst</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.snd\">Limits.pullback.snd</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">⋯</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition\">EqualizerCondition</a> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L87-L99","name":"CategoryTheory.regularTopology.EqualizerCondition.bijective_mapToEqualizer_pullback","line":87,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition.bijective_mapToEqualizer_pullback","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition.bijective_mapToEqualizer_pullback\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">EqualizerCondition</span>.<span class=\"name\">bijective_mapToEqualizer_pullback</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> u_4)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition\">EqualizerCondition</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">B</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpi\">EffectiveEpi</a> <span class=\"fn\">π</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullback\">Limits.HasPullback</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.MapToEqualizer\">MapToEqualizer</a> <span class=\"fn\">P</span> <span class=\"fn\">π</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.fst\">Limits.pullback.fst</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback.snd\">Limits.pullback.snd</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">⋯</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L81-L85","name":"CategoryTheory.regularTopology.MapToEqualizer","line":81,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.MapToEqualizer","doc":"The canonical map to the explicit equalizer. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.MapToEqualizer\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">MapToEqualizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> u_4)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W </span><span class=\"fn\">X </span><span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">g₁</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">g₂</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">B</span>)</span></span> → <span class=\"fn\">↑<a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">g₁</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">g₂</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L68-L79","name":"CategoryTheory.regularTopology.equalizerCondition_precomp_of_preservesPullback","line":68,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_precomp_of_preservesPullback","doc":"Precomposing with a pullback-preserving functor preserves the equalizer condition. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_precomp_of_preservesPullback\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">equalizerCondition_precomp_of_preservesPullback</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_6, u_3}</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">E</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">B</span> : <span class=\"fn\">E</span>} (<span class=\"fn\">π</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>) [<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpi\">EffectiveEpi</a> <span class=\"fn\">π</span></span>], <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimit\">Limits.PreservesLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/Cospan.html#CategoryTheory.Limits.cospan\">Limits.cospan</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">F</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Preserves.html#CategoryTheory.Functor.PreservesEffectiveEpis\">PreservesEffectiveEpis</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition\">EqualizerCondition</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition\">EqualizerCondition</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Opposites.html#CategoryTheory.Functor.op\">op</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">P</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L63-L66","name":"CategoryTheory.regularTopology.equalizerCondition_of_natIso","line":63,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_of_natIso","doc":"The equalizer condition is preserved by natural isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_of_natIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">equalizerCondition_of_natIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">P'</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">D</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">P</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">P'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition\">EqualizerCondition</a> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition\">EqualizerCondition</a> <span class=\"fn\">P'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L56-L61","name":"CategoryTheory.regularTopology.EqualizerCondition","line":56,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition","doc":"A contravariant functor on `C` satisfies `EqualizerCondition` if it takes kernel pairs of effective\nepimorphisms to equalizer diagrams.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.EqualizerCondition\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">EqualizerCondition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L48-L54","name":"CategoryTheory.regularTopology.SingleEqualizerCondition","line":48,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.SingleEqualizerCondition","doc":"A contravariant functor on `C` satisfies `SingleEqualizerCondition` with respect to a morphism `π`\nif it takes its kernel pair to an equalizer diagram.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.SingleEqualizerCondition\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">SingleEqualizerCondition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">X </span><span class=\"fn\">B</span> : <span class=\"fn\">C</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L44-L46","name":"CategoryTheory.regularTopology.equalizerCondition_w","line":44,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_w","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.regularTopology.equalizerCondition_w\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">regularTopology</span>.<span class=\"name\">equalizerCondition_w</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_5, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PullbackCone\">Limits.PullbackCone</a> <span class=\"fn\">π</span> <span class=\"fn\">π</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PullbackCone.fst\">fst</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">π</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PullbackCone.snd\">snd</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L39-L39","name":"CategoryTheory.Presieve.regular.single_epi","line":39,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.Presieve.regular.single_epi","doc":"`R` consists of a single epimorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.Presieve.regular.single_epi\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">regular</span>.<span class=\"name\">single_epi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.Presieve.regular\">regular</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>), (<span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.ofArrows\">ofArrows</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <span class=\"fn\">Y</span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <span class=\"fn\">f</span></span></span>) <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpi\">EffectiveEpi</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L37-L37","name":"CategoryTheory.Presieve.regular.mk","line":37,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.Presieve.regular.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.Presieve.regular.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">regular</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">single_epi</span> : <span class=\"fn\">∃ (<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>), (<span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.ofArrows\">ofArrows</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <span class=\"fn\">Y</span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Unit\">Unit</a>) =&gt; <span class=\"fn\">f</span></span></span>) <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpi\">EffectiveEpi</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.Presieve.regular\">regular</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.lean#L36-L40","name":"CategoryTheory.Presieve.regular","line":36,"kind":"class","docLink":"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.Presieve.regular","doc":"A presieve is *regular* if it consists of a single effective epimorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/Coherent/RegularSheaves.html#CategoryTheory.Presieve.regular\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">regular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}