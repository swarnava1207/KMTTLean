{"name":"Mathlib.Algebra.Quandle","instances":[{"typeNames":["MulOpposite"],"name":"Rack.oppositeRack","className":"Rack"},{"typeNames":["ShelfHom"],"name":"ShelfHom.instFunLike","className":"DFunLike"},{"typeNames":["ShelfHom"],"name":"ShelfHom.inhabited","className":"Inhabited"},{"typeNames":["MulOpposite"],"name":"Quandle.oppositeQuandle","className":"Quandle"},{"typeNames":["Quandle.Conj"],"name":"Quandle.Conj.quandle","className":"Quandle"},{"typeNames":["Quandle.Dihedral"],"name":"Quandle.instDihedral","className":"Quandle"},{"typeNames":["Rack.PreEnvelGroup"],"name":"Rack.PreEnvelGroup.inhabited","className":"Inhabited"},{"typeNames":["Rack.PreEnvelGroupRel'"],"name":"Rack.PreEnvelGroupRel'.inhabited","className":"Inhabited"},{"typeNames":["Rack.PreEnvelGroup"],"name":"Rack.PreEnvelGroup.setoid","className":"Setoid"},{"typeNames":["Rack.EnvelGroup"],"name":"Rack.instDivInvMonoidEnvelGroup","className":"DivInvMonoid"},{"typeNames":["Rack.EnvelGroup"],"name":"Rack.instGroupEnvelGroup","className":"Group"},{"typeNames":["Rack.EnvelGroup"],"name":"Rack.EnvelGroup.inhabited","className":"Inhabited"}],"imports":["Init","Mathlib.Algebra.Group.End","Mathlib.Data.ZMod.Defs","Mathlib.Tactic.Ring"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L704-L707","name":"Rack.envelAction_prop","line":704,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.envelAction_prop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.envelAction_prop\"><span class=\"name\">Rack</span>.<span class=\"name\">envelAction_prop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.envelAction\">envelAction</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup\">toEnvelGroup</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">x</span>)</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L696-L702","name":"Rack.envelAction","line":696,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.envelAction","doc":"The induced group homomorphism from the enveloping group into bijections of the rack,\nusing `Rack.toConj`. Satisfies the property `envelAction_prop`.\n\nThis gives the rack `R` the structure of an augmented rack over `EnvelGroup R`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.envelAction\"><span class=\"name\">Rack</span>.<span class=\"name\">envelAction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">EnvelGroup</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L688-L694","name":"Rack.toEnvelGroup.univ_uniq","line":688,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.univ_uniq","doc":"The homomorphism `toEnvelGroup.map f` is the unique map that fits into the commutative\ntriangle in `toEnvelGroup.univ`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.univ_uniq\"><span class=\"name\">Rack</span>.<span class=\"name\">toEnvelGroup</span>.<span class=\"name\">univ_uniq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">EnvelGroup</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj.map\">Quandle.Conj.map</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup\">toEnvelGroup</a> <span class=\"fn\">R</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.map\">map</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L682-L686","name":"Rack.toEnvelGroup.univ","line":682,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.univ","doc":"Given a homomorphism from a rack to a group, it factors through the enveloping group.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.univ\"><span class=\"name\">Rack</span>.<span class=\"name\">toEnvelGroup</span>.<span class=\"name\">univ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj.map\">Quandle.Conj.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.map\">map</a> <span class=\"fn\">f</span>)</span>)</span>.<a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup\">toEnvelGroup</a> <span class=\"fn\">R</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L647-L680","name":"Rack.toEnvelGroup.map","line":647,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.map","doc":"Given a map from a rack to a group, lift it to being a map from the enveloping group.\nMore precisely, the `EnvelGroup` functor is left adjoint to `Quandle.Conj`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.map\"><span class=\"name\">Rack</span>.<span class=\"name\">toEnvelGroup</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">EnvelGroup</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L628-L643","name":"Rack.toEnvelGroup.mapAux.well_def","line":628,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.mapAux.well_def","doc":"Show that `toEnvelGroup.mapAux` sends equivalent expressions to equal terms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.mapAux.well_def\"><span class=\"name\">Rack</span>.<span class=\"name\">toEnvelGroup</span>.<span class=\"name\">mapAux</span>.<span class=\"name\">well_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.mapAux\">mapAux</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.mapAux\">mapAux</a> <span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L614-L622","name":"Rack.toEnvelGroup.mapAux","line":614,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.mapAux","doc":"The preliminary definition of the induced map from the enveloping group.\nSee `toEnvelGroup.map`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup.mapAux\"><span class=\"name\">Rack</span>.<span class=\"name\">toEnvelGroup</span>.<span class=\"name\">mapAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">G</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span> → <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L607-L612","name":"Rack.toEnvelGroup","line":607,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup","doc":"The canonical homomorphism from a rack to its enveloping group.\nSatisfies universal properties given by `toEnvelGroup.map` and `toEnvelGroup.univ`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toEnvelGroup\"><span class=\"name\">Rack</span>.<span class=\"name\">toEnvelGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">EnvelGroup</a> <span class=\"fn\">R</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L604-L605","name":"Rack.EnvelGroup.inhabited","line":604,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup.inhabited\"><span class=\"name\">Rack</span>.<span class=\"name\">EnvelGroup</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">EnvelGroup</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L600-L602","name":"Rack.instGroupEnvelGroup","line":600,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.instGroupEnvelGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.instGroupEnvelGroup\"><span class=\"name\">Rack</span>.<span class=\"name\">instGroupEnvelGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">EnvelGroup</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L587-L598","name":"Rack.instDivInvMonoidEnvelGroup","line":587,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.instDivInvMonoidEnvelGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.instDivInvMonoidEnvelGroup\"><span class=\"name\">Rack</span>.<span class=\"name\">instDivInvMonoidEnvelGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivInvMonoid\">DivInvMonoid</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\">EnvelGroup</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L580-L583","name":"Rack.EnvelGroup","line":580,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup","doc":"The universal enveloping group for the rack R.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.EnvelGroup\"><span class=\"name\">Rack</span>.<span class=\"name\">EnvelGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L573-L579","name":"Rack.PreEnvelGroup.setoid","line":573,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.setoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.setoid\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span>.<span class=\"name\">setoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid\">Setoid</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L568-L571","name":"Rack.PreEnvelGroupRel.trans","line":568,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.trans\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L563-L566","name":"Rack.PreEnvelGroupRel.symm","line":563,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.symm\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L558-L561","name":"Rack.PreEnvelGroupRel.refl","line":558,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.refl\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L553-L556","name":"Rack.PreEnvelGroupRel'.rel","line":553,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.rel","doc":"A quick way to convert a `PreEnvelGroupRel'` to a `PreEnvelGroupRel`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.rel\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L551-L551","name":"Rack.PreEnvelGroupRel.rel","line":551,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.rel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel.rel\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel</span>.<span class=\"name\">rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\">PreEnvelGroupRel</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L547-L551","name":"Rack.PreEnvelGroupRel","line":547,"kind":"inductive","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel","doc":"The `PreEnvelGroupRel` relation as a `Prop`.  Used as the relation for `PreEnvelGroup.setoid`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L543-L545","name":"Rack.PreEnvelGroupRel'.inhabited","line":543,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.inhabited\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.unit\">PreEnvelGroup.unit</a> <a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.unit\">PreEnvelGroup.unit</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L540-L541","name":"Rack.PreEnvelGroupRel'.act_incl","line":540,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.act_incl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.act_incl\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">act_incl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.incl\">PreEnvelGroup.incl</a> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">mul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.incl\">PreEnvelGroup.incl</a> <span class=\"fn\">y</span>)</span>)</span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">mul</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.incl\">PreEnvelGroup.incl</a> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inv\">inv</a></span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.incl\">PreEnvelGroup.incl</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L539-L539","name":"Rack.PreEnvelGroupRel'.inv_mul_cancel","line":539,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.inv_mul_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.inv_mul_cancel\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">inv_mul_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inv\">inv</a></span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">mul</a></span> <span class=\"fn\">a</span>)</span> <a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.unit\">PreEnvelGroup.unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L538-L538","name":"Rack.PreEnvelGroupRel'.mul_one","line":538,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.mul_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.mul_one\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">mul_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">mul</a></span> <a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.unit\">PreEnvelGroup.unit</a>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L537-L537","name":"Rack.PreEnvelGroupRel'.one_mul","line":537,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.one_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.one_mul\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">one_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.unit\">PreEnvelGroup.unit</a>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">mul</a></span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L536-L536","name":"Rack.PreEnvelGroupRel'.assoc","line":536,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.assoc\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">mul</a></span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">mul</a></span> <span class=\"fn\">c</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">mul</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">mul</a></span> <span class=\"fn\">c</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L534-L535","name":"Rack.PreEnvelGroupRel'.congr_inv","line":534,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.congr_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.congr_inv\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">congr_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">a'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inv\">inv</a></span> <span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inv\">inv</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L532-L533","name":"Rack.PreEnvelGroupRel'.congr_mul","line":532,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.congr_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.congr_mul\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">congr_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">a' </span><span class=\"fn\">b'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">a'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">b</span> <span class=\"fn\">b'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">mul</a></span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\">mul</a></span> <span class=\"fn\">b'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L530-L531","name":"Rack.PreEnvelGroupRel'.trans","line":530,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.trans\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hab</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hbc</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L529-L529","name":"Rack.PreEnvelGroupRel'.symm","line":529,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.symm\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hab</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L528-L528","name":"Rack.PreEnvelGroupRel'.refl","line":528,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'.refl\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\">PreEnvelGroupRel'</a> <span class=\"fn\">R</span> <span class=\"fn\">a</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L522-L541","name":"Rack.PreEnvelGroupRel'","line":522,"kind":"inductive","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'","doc":"Relations for the enveloping group. This is a type-valued relation because\n`toEnvelGroup.mapAux.well_def` inducts on it to show `toEnvelGroup.map`\nis well-defined.  The relation `PreEnvelGroupRel` is the `Prop`-valued version,\nwhich is used to define `EnvelGroup` itself.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroupRel'\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroupRel'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span> → <a href=\"./foundational_types.html\">Type</a> u</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L517-L518","name":"Rack.PreEnvelGroup.inhabited","line":517,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inhabited\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L515-L515","name":"Rack.PreEnvelGroup.inv","line":515,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.inv\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span>.<span class=\"name\">inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L514-L514","name":"Rack.PreEnvelGroup.mul","line":514,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.mul\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L513-L513","name":"Rack.PreEnvelGroup.incl","line":513,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.incl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.incl\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span>.<span class=\"name\">incl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L512-L512","name":"Rack.PreEnvelGroup.unit","line":512,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.unit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup.unit\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span>.<span class=\"name\">unit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\">PreEnvelGroup</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L509-L515","name":"Rack.PreEnvelGroup","line":509,"kind":"inductive","docLink":"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup","doc":"Free generators of the enveloping group.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.PreEnvelGroup\"><span class=\"name\">Rack</span>.<span class=\"name\">PreEnvelGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L440-L446","name":"Rack.toConj","line":440,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toConj","doc":"This is the natural rack homomorphism to the conjugation quandle of the group `R ≃ R`\nthat acts on the rack. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toConj\"><span class=\"name\">Rack</span>.<span class=\"name\">toConj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Quandle.Conj</a> (<span class=\"fn\">R</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">R</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L422-L434","name":"Quandle.instDihedral","line":422,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.instDihedral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.instDihedral\"><span class=\"name\">Quandle</span>.<span class=\"name\">instDihedral</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Dihedral\">Dihedral</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L417-L420","name":"Quandle.dihedralAct.inv","line":417,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.dihedralAct.inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.dihedralAct.inv\"><span class=\"name\">Quandle</span>.<span class=\"name\">dihedralAct</span>.<span class=\"name\">inv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.Involutive\">Function.Involutive</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.dihedralAct\">dihedralAct</a> <span class=\"fn\">n</span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L413-L415","name":"Quandle.dihedralAct","line":413,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.dihedralAct","doc":"The operation for the dihedral quandle.  It does not need to be an equivalence\nbecause it is an involution (see `dihedralAct.inv`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.dihedralAct\"><span class=\"name\">Quandle</span>.<span class=\"name\">dihedralAct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L407-L411","name":"Quandle.Dihedral","line":407,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.Dihedral","doc":"The dihedral quandle. This is the conjugation quandle of the dihedral group restrict to flips.\n\nUsed for Fox n-colorings of knots. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.Dihedral\"><span class=\"name\">Quandle</span>.<span class=\"name\">Dihedral</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L401-L405","name":"Quandle.Conj.map","line":401,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.Conj.map","doc":"`Conj` is functorial\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj.map\"><span class=\"name\">Quandle</span>.<span class=\"name\">Conj</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Conj</a> <span class=\"fn\">G</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Conj</a> <span class=\"fn\">H</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L397-L399","name":"Quandle.conj_swap","line":397,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.conj_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.conj_swap\"><span class=\"name\">Quandle</span>.<span class=\"name\">conj_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Conj</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L392-L395","name":"Quandle.conj_act_eq_conj","line":392,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.conj_act_eq_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.conj_act_eq_conj\"><span class=\"name\">Quandle</span>.<span class=\"name\">conj_act_eq_conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Conj</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L379-L390","name":"Quandle.Conj.quandle","line":379,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.Conj.quandle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj.quandle\"><span class=\"name\">Quandle</span>.<span class=\"name\">Conj</span>.<span class=\"name\">quandle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\">Conj</a> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L375-L377","name":"Quandle.Conj","line":375,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.Conj","doc":"The conjugation quandle of a group.  Each element of the group acts by\nthe corresponding inner automorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.Conj\"><span class=\"name\">Quandle</span>.<span class=\"name\">Conj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L369-L373","name":"Quandle.oppositeQuandle","line":369,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.oppositeQuandle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.oppositeQuandle\"><span class=\"name\">Quandle</span>.<span class=\"name\">oppositeQuandle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">Q</span><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite\">ᵐᵒᵖ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L364-L367","name":"Quandle.fix_inv","line":364,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.fix_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.fix_inv\"><span class=\"name\">Quandle</span>.<span class=\"name\">fix_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Q</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">Q</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Q</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">Rack.invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L354-L354","name":"Quandle.fix","line":354,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.fix","doc":"The fixing property of a Quandle "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.fix\"><span class=\"name\">Quandle</span>.<span class=\"name\">fix</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L352-L352","name":"Quandle.mk","line":352,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.mk\"><span class=\"name\">Quandle</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toRack</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fix</span> : <span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L352-L354","name":"Quandle.toRack","line":352,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandle.toRack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle.toRack\"><span class=\"name\">Quandle</span>.<span class=\"name\">toRack</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Quandle\">Quandle</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L350-L354","name":"Quandle","line":350,"kind":"class","docLink":"./Mathlib/Algebra/Quandle.html#Quandle","doc":"A quandle is a rack such that each automorphism fixes its corresponding element.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandle\"><span class=\"name\">Quandle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">α</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L344-L346","name":"ShelfHom.comp_apply","line":344,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.comp_apply\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₃</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₂</span> <span class=\"fn\">S₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">S₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.comp\">comp</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L339-L342","name":"ShelfHom.comp","line":339,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.comp","doc":"The composition of shelf homomorphisms "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.comp\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₃</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₃</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₂</span> <span class=\"fn\">S₃</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L336-L337","name":"ShelfHom.inhabited","line":336,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.inhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.inhabited\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">inhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S</span> <span class=\"fn\">S</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L331-L334","name":"ShelfHom.id","line":331,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.id","doc":"The identity homomorphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.id\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L327-L329","name":"ShelfHom.map_act","line":327,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.map_act","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.map_act\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">map_act</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">S₁</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L325-L325","name":"ShelfHom.toFun_eq_coe","line":325,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun_eq_coe\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">toFun_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun\">toFun</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L321-L323","name":"ShelfHom.instFunLike","line":321,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.instFunLike","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.instFunLike\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">instFunLike</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span>)</span> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L309-L313","name":"Rack.assoc_iff_id","line":309,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.assoc_iff_id","doc":"Associative racks are uninteresting.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.assoc_iff_id\"><span class=\"name\">Rack</span>.<span class=\"name\">assoc_iff_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L304-L307","name":"Rack.IsAbelian","line":304,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.IsAbelian","doc":"An abelian rack is one for which the mediality axiom holds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.IsAbelian\"><span class=\"name\">Rack</span>.<span class=\"name\">IsAbelian</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L300-L302","name":"Rack.involutory_invAct_eq_act","line":300,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.involutory_invAct_eq_act","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.involutory_invAct_eq_act\"><span class=\"name\">Rack</span>.<span class=\"name\">involutory_invAct_eq_act</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.IsInvolutory\">IsInvolutory</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L295-L298","name":"Rack.IsInvolutory","line":295,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.IsInvolutory","doc":"An involutory rack is one for which `Rack.oppositeRack R x` is an involution for every x.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.IsInvolutory\"><span class=\"name\">Rack</span>.<span class=\"name\">IsInvolutory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L286-L293","name":"Rack.selfApplyEquiv","line":286,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.selfApplyEquiv","doc":"The map `x ↦ x ◃ x` is a bijection.  (This has applications for the\nregular isotopy version of the Reidemeister I move for knot diagrams.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.selfApplyEquiv\"><span class=\"name\">Rack</span>.<span class=\"name\">selfApplyEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L282-L284","name":"Rack.self_invAct_eq_iff_eq","line":282,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_invAct_eq_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_invAct_eq_iff_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">self_invAct_eq_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">y</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L274-L280","name":"Rack.self_act_eq_iff_eq","line":274,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_act_eq_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_act_eq_iff_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">self_act_eq_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">y</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L269-L272","name":"Rack.self_invAct_act_eq","line":269,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_invAct_act_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_invAct_act_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">self_invAct_act_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L262-L267","name":"Rack.self_act_invAct_eq","line":262,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_act_invAct_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_act_invAct_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">self_act_invAct_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L257-L260","name":"Rack.self_invAct_invAct_eq","line":257,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_invAct_invAct_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_invAct_invAct_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">self_invAct_invAct_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L254-L255","name":"Rack.self_act_act_eq","line":254,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_act_act_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_act_act_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">self_act_act_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L250-L252","name":"Rack.op_invAct_op_eq","line":250,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.op_invAct_op_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.op_invAct_op_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">op_invAct_op_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L246-L248","name":"Rack.op_act_op_eq","line":246,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.op_act_op_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.op_act_op_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">op_act_op_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite.op\">MulOpposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L231-L244","name":"Rack.oppositeRack","line":231,"kind":"instance","docLink":"./Mathlib/Algebra/Quandle.html#Rack.oppositeRack","doc":"The opposite rack, swapping the roles of `◃` and `◃⁻¹`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.oppositeRack\"><span class=\"name\">Rack</span>.<span class=\"name\">oppositeRack</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite\">ᵐᵒᵖ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L220-L229","name":"Rack.ad_conj","line":220,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.ad_conj","doc":"The *adjoint action* of a rack on itself is `op'`, and the adjoint\naction of `x ◃ y` is the conjugate of the action of `y` by the action\nof `x`. It is another way to understand the self-distributivity axiom.\n\nThis is used in the natural rack homomorphism `toConj` from `R` to\n`Conj (R ≃ R)` defined by `op'`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.ad_conj\"><span class=\"name\">Rack</span>.<span class=\"name\">ad_conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">act'</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">act'</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">act'</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">act'</a> <span class=\"fn\">x</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L216-L218","name":"Rack.self_distrib_inv","line":216,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.self_distrib_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.self_distrib_inv\"><span class=\"name\">Rack</span>.<span class=\"name\">self_distrib_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">z</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L210-L214","name":"Rack.left_cancel_inv","line":210,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.left_cancel_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.left_cancel_inv\"><span class=\"name\">Rack</span>.<span class=\"name\">left_cancel_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y </span><span class=\"fn\">y'</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y'</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L204-L208","name":"Rack.left_cancel","line":204,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.left_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.left_cancel\"><span class=\"name\">Rack</span>.<span class=\"name\">left_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y </span><span class=\"fn\">y'</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y'</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L200-L202","name":"Rack.act_invAct_eq","line":200,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.act_invAct_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.act_invAct_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">act_invAct_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L196-L198","name":"Rack.invAct_act_eq","line":196,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.invAct_act_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct_act_eq\"><span class=\"name\">Rack</span>.<span class=\"name\">invAct_act_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L192-L194","name":"Rack.invAct_apply","line":192,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.invAct_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct_apply\"><span class=\"name\">Rack</span>.<span class=\"name\">invAct_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">act'</a> <span class=\"fn\">x</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L188-L190","name":"Rack.act'_symm_apply","line":188,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.act'_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.act'_symm_apply\"><span class=\"name\">Rack</span>.<span class=\"name\">act'_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">act'</a> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L184-L186","name":"Rack.act'_apply","line":184,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.act'_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.act'_apply\"><span class=\"name\">Rack</span>.<span class=\"name\">act'_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\">act'</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L177-L182","name":"Rack.act'","line":177,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.act'","doc":"A rack acts on itself by equivalences. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.act'\"><span class=\"name\">Rack</span>.<span class=\"name\">act'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L163-L167","name":"UnitalShelf.assoc","line":163,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.assoc","doc":"The associativity of a unital shelf comes for free.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.assoc\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L159-L161","name":"UnitalShelf.act_self_act_eq","line":159,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_self_act_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_self_act_eq\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">act_self_act_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L157-L157","name":"UnitalShelf.act_idem","line":157,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_idem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_idem\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">act_idem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L148-L155","name":"UnitalShelf.act_act_self_eq","line":148,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_act_self_eq","doc":"A monoid is *graphic* if, for all `x` and `y`, the *graphic identity*\n`(x * y) * x = x * y` holds.  For a unital shelf, this graphic\nidentity holds.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_act_self_eq\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">act_act_self_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L138-L139","name":"Quandles.«term_→◃_»","line":138,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandles.«term_→◃_»","doc":"Shelf Homomorphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandles.«term_→◃_»\"><span class=\"name\">Quandles</span>.<span class=\"name\">«term_→◃_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L135-L136","name":"Quandles.«term_◃⁻¹_»","line":135,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandles.«term_◃⁻¹_»","doc":"Inverse Action of a Rack "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandles.«term_◃⁻¹_»\"><span class=\"name\">Quandles</span>.<span class=\"name\">«term_◃⁻¹_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L132-L133","name":"Quandles.«term_◃_»","line":132,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Quandles.«term_◃_»","doc":"Action of a Shelf "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Quandles.«term_◃_»\"><span class=\"name\">Quandles</span>.<span class=\"name\">«term_◃_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L130-L130","name":"Rack.right_inv","line":130,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.right_inv","doc":"Proof of right inverse "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.right_inv\"><span class=\"name\">Rack</span>.<span class=\"name\">right_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L128-L128","name":"Rack.left_inv","line":128,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Rack.left_inv","doc":"Proof of left inverse "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.left_inv\"><span class=\"name\">Rack</span>.<span class=\"name\">left_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\">invAct</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L126-L126","name":"Rack.invAct","line":126,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.invAct","doc":"The inverse actions of the elements "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.invAct\"><span class=\"name\">Rack</span>.<span class=\"name\">invAct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L124-L124","name":"Rack.mk","line":124,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Rack.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.mk\"><span class=\"name\">Rack</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toShelf</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">invAct</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">left_inv</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.LeftInverse\">Function.LeftInverse</a> <span class=\"fn\">(<span class=\"fn\">invAct</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">right_inv</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.RightInverse\">Function.RightInverse</a> <span class=\"fn\">(<span class=\"fn\">invAct</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L124-L130","name":"Rack.toShelf","line":124,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Rack.toShelf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack.toShelf\"><span class=\"name\">Rack</span>.<span class=\"name\">toShelf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Rack\">Rack</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L117-L130","name":"Rack","line":117,"kind":"class","docLink":"./Mathlib/Algebra/Quandle.html#Rack","doc":"A *rack* is an automorphic set (a set with an action on itself by\nbijections) that is self-distributive.  It is a shelf such that each\nelement's action is invertible.\n\nThe notations `x ◃ y` and `x ◃⁻¹ y` denote the action and the\ninverse action, respectively, and they are right associative.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Rack\"><span class=\"name\">Rack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L115-L115","name":"ShelfHom.map_act'","line":115,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.map_act'","doc":"The homomorphism property of a Shelf Homomorphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.map_act'\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">map_act'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">S₁</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun\">toFun</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun\">toFun</a></span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun\">toFun</a></span> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L113-L113","name":"ShelfHom.toFun","line":113,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun","doc":"The function under the Shelf Homomorphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">S₁</span> → <span class=\"fn\">S₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L111-L111","name":"ShelfHom.mk","line":111,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.mk\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toFun</span> : <span class=\"fn\"><span class=\"fn\">S₁</span> → <span class=\"fn\">S₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map_act'</span> : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">S₁</span>}, <span class=\"fn\"><span class=\"fn\">toFun</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">(<span class=\"fn\">toFun</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">toFun</span> <span class=\"fn\">y</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L110-L110","name":"ShelfHom.ext_iff","line":110,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.ext_iff\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun\">toFun</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun\">toFun</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L110-L110","name":"ShelfHom.ext","line":110,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.ext\"><span class=\"name\">ShelfHom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\">ShelfHom</a> <span class=\"fn\">S₁</span> <span class=\"fn\">S₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toFun</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun\">toFun</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Algebra/Quandle.html#ShelfHom.toFun\">toFun</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L107-L115","name":"ShelfHom","line":107,"kind":"structure","docLink":"./Mathlib/Algebra/Quandle.html#ShelfHom","doc":"The type of homomorphisms between shelves.\nThis is also the notion of rack and quandle homomorphisms.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#ShelfHom\"><span class=\"name\">ShelfHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S₁</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S₂</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">S₂</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L105-L105","name":"UnitalShelf.act_one","line":105,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.act_one\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">act_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L104-L104","name":"UnitalShelf.one_act","line":104,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.one_act","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.one_act\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">one_act</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">1</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L103-L103","name":"UnitalShelf.mk","line":103,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.mk\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toShelf</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toOne</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">one_act</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">1</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">act_one</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">Shelf.act</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L103-L105","name":"UnitalShelf.toOne","line":103,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.toOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.toOne\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">toOne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L103-L105","name":"UnitalShelf.toShelf","line":103,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf.toShelf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf.toShelf\"><span class=\"name\">UnitalShelf</span>.<span class=\"name\">toShelf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\">UnitalShelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L99-L105","name":"UnitalShelf","line":99,"kind":"class","docLink":"./Mathlib/Algebra/Quandle.html#UnitalShelf","doc":"A *unital shelf* is a shelf equipped with an element `1` such that, for all elements `x`,\nwe have both `x ◃ 1` and `1 ◃ x` equal `x`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#UnitalShelf\"><span class=\"name\">UnitalShelf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">α</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L97-L97","name":"Shelf.self_distrib","line":97,"kind":"theorem","docLink":"./Mathlib/Algebra/Quandle.html#Shelf.self_distrib","doc":"A verification that `act` is self-distributive "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Shelf.self_distrib\"><span class=\"name\">Shelf</span>.<span class=\"name\">self_distrib</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">act</a> <span class=\"fn\">x</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">act</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">act</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">act</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\">act</a> <span class=\"fn\">x</span> <span class=\"fn\">z</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L95-L95","name":"Shelf.act","line":95,"kind":"def","docLink":"./Mathlib/Algebra/Quandle.html#Shelf.act","doc":"The action of the `Shelf` over `α` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Shelf.act\"><span class=\"name\">Shelf</span>.<span class=\"name\">act</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L93-L93","name":"Shelf.mk","line":93,"kind":"ctor","docLink":"./Mathlib/Algebra/Quandle.html#Shelf.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Shelf.mk\"><span class=\"name\">Shelf</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">act</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self_distrib</span> : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\">act</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">act</span> <span class=\"fn\">y</span> <span class=\"fn\">z</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">act</span> <span class=\"fn\">(<span class=\"fn\">act</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span>)</span> <span class=\"fn\">(<span class=\"fn\">act</span> <span class=\"fn\">x</span> <span class=\"fn\">z</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Quandle.html#Shelf\">Shelf</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Quandle.lean#L90-L97","name":"Shelf","line":90,"kind":"class","docLink":"./Mathlib/Algebra/Quandle.html#Shelf","doc":"A *Shelf* is a structure with a self-distributive binary operation.\nThe binary operation is regarded as a left action of the type on itself.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Quandle.html#Shelf\"><span class=\"name\">Shelf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}