{"name":"Mathlib.Computability.Ackermann","instances":[],"imports":["Init","Mathlib.Computability.Primrec","Mathlib.Tactic.Ring","Mathlib.Tactic.Linarith"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L349-L351","name":"not_primrec₂_ack","line":349,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#not_primrec₂_ack","doc":"The Ackermann function is not primitive recursive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#not_primrec₂_ack\"><span class=\"name\">not_primrec₂_ack</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec₂\">Primrec₂</a> <a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L345-L347","name":"not_primrec_ack_self","line":345,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#not_primrec_ack_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#not_primrec_ack_self\"><span class=\"name\">not_primrec_ack_self</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Primrec\">Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">n</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L341-L343","name":"not_nat_primrec_ack_self","line":341,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#not_nat_primrec_ack_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#not_nat_primrec_ack_self\"><span class=\"name\">not_nat_primrec_ack_self</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Nat.Primrec\">Nat.Primrec</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">n</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L272-L339","name":"exists_lt_ack_of_nat_primrec","line":272,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#exists_lt_ack_of_nat_primrec","doc":"If `f` is primitive recursive, there exists `m` such that `f n < ack m n` for all `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#exists_lt_ack_of_nat_primrec\"><span class=\"name\">exists_lt_ack_of_nat_primrec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Primrec.html#Nat.Primrec\">Nat.Primrec</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L268-L270","name":"ack_pair_lt","line":268,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_pair_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_pair_lt\"><span class=\"name\">ack_pair_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Pairing.html#Nat.pair\">Nat.pair</a> <span class=\"fn\">n</span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">4</span>) (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">k</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L259-L266","name":"ack_add_one_sq_lt_ack_add_four","line":259,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_add_one_sq_lt_ack_add_four","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_add_one_sq_lt_ack_add_four\"><span class=\"name\">ack_add_one_sq_lt_ack_add_four</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> ((<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">4</span>) <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L251-L257","name":"ack_ack_lt_ack_max_add_two","line":251,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_ack_lt_ack_max_add_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_ack_lt_ack_max_add_two\"><span class=\"name\">ack_ack_lt_ack_max_add_two</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">n</span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>) <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L241-L249","name":"ack_add_one_sq_lt_ack_add_three","line":241,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_add_one_sq_lt_ack_add_three","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_add_one_sq_lt_ack_add_three\"><span class=\"name\">ack_add_one_sq_lt_ack_add_three</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>) <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L218-L223","name":"ack_succ_right_le_ack_succ_left","line":218,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_succ_right_le_ack_succ_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_succ_right_le_ack_succ_left\"><span class=\"name\">ack_succ_right_le_ack_succ_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L215-L216","name":"ack_le_ack","line":215,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_le_ack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_le_ack\"><span class=\"name\">ack_le_ack</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m₁</span> <span class=\"fn\">n₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m₂</span> <span class=\"fn\">n₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L212-L213","name":"max_ack_left","line":212,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#max_ack_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#max_ack_left\"><span class=\"name\">max_ack_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> (<span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">m₂</span>) <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m₁</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m₂</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L208-L210","name":"ack_inj_left","line":208,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_inj_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_inj_left\"><span class=\"name\">ack_inj_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m₁</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m₂</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L204-L206","name":"ack_le_iff_left","line":204,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_le_iff_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_le_iff_left\"><span class=\"name\">ack_le_iff_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m₁</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m₂</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L200-L202","name":"ack_lt_iff_left","line":200,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_lt_iff_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_lt_iff_left\"><span class=\"name\">ack_lt_iff_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m₁</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m₂</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L197-L198","name":"ack_injective_left","line":197,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_injective_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_injective_left\"><span class=\"name\">ack_injective_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L194-L195","name":"ack_mono_left","line":194,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_mono_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_mono_left\"><span class=\"name\">ack_mono_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L191-L192","name":"ack_strictMono_left","line":191,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_strictMono_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_strictMono_left\"><span class=\"name\">ack_strictMono_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">fun (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L172-L173","name":"lt_ack_right","line":172,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#lt_ack_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#lt_ack_right\"><span class=\"name\">lt_ack_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L169-L170","name":"lt_ack_left","line":169,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#lt_ack_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#lt_ack_left\"><span class=\"name\">lt_ack_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L166-L167","name":"add_add_one_le_ack","line":166,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#add_add_one_le_ack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#add_add_one_le_ack\"><span class=\"name\">add_add_one_le_ack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L154-L164","name":"add_lt_ack","line":154,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#add_lt_ack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#add_lt_ack\"><span class=\"name\">add_lt_ack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L151-L152","name":"max_ack_right","line":151,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#max_ack_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#max_ack_right\"><span class=\"name\">max_ack_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> (<span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">n₂</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n₁</span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L147-L149","name":"ack_inj_right","line":147,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_inj_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_inj_right\"><span class=\"name\">ack_inj_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L143-L145","name":"ack_le_iff_right","line":143,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_le_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_le_iff_right\"><span class=\"name\">ack_le_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L139-L141","name":"ack_lt_iff_right","line":139,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_lt_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_lt_iff_right\"><span class=\"name\">ack_lt_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n₁ </span><span class=\"fn\">n₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L136-L137","name":"ack_injective_right","line":136,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_injective_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_injective_right\"><span class=\"name\">ack_injective_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L133-L134","name":"ack_mono_right","line":133,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_mono_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_mono_right\"><span class=\"name\">ack_mono_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#Monotone\">Monotone</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L123-L131","name":"ack_strictMono_right","line":123,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_strictMono_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_strictMono_right\"><span class=\"name\">ack_strictMono_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Defs.html#StrictMono\">StrictMono</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L115-L121","name":"one_lt_ack_succ_right","line":115,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#one_lt_ack_succ_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#one_lt_ack_succ_right\"><span class=\"name\">one_lt_ack_succ_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L106-L113","name":"one_lt_ack_succ_left","line":106,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#one_lt_ack_succ_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#one_lt_ack_succ_left\"><span class=\"name\">one_lt_ack_succ_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L97-L104","name":"ack_pos","line":97,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_pos\"><span class=\"name\">ack_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L86-L95","name":"ack_three","line":86,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_three","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_three\"><span class=\"name\">ack_three</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">3</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span>) <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">3</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L80-L84","name":"ack_two","line":80,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_two\"><span class=\"name\">ack_two</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L74-L78","name":"ack_one","line":74,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_one\"><span class=\"name\">ack_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">1</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L71-L72","name":"ack_succ_succ","line":71,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_succ_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_succ_succ\"><span class=\"name\">ack_succ_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L68-L69","name":"ack_succ_zero","line":68,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_succ_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_succ_zero\"><span class=\"name\">ack_succ_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">m</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L65-L66","name":"ack_zero","line":65,"kind":"theorem","docLink":"./Mathlib/Computability/Ackermann.html#ack_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack_zero\"><span class=\"name\">ack_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Ackermann.html#ack\">ack</a> <span class=\"fn\">0</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/Ackermann.lean#L52-L63","name":"ack","line":52,"kind":"def","docLink":"./Mathlib/Computability/Ackermann.html#ack","doc":"The two-argument Ackermann function, defined so that\n\n- `ack 0 n = n + 1`\n- `ack (m + 1) 0 = ack m 1`\n- `ack (m + 1) (n + 1) = ack m (ack (m + 1) n)`.\n\nThis is of interest as both a fast-growing function, and as an example of a recursive function that\nisn't primitive recursive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/Ackermann.html#ack\"><span class=\"name\">ack</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"}]}