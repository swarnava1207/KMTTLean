{"name":"Mathlib.Tactic.Linter.UpstreamableDecl","instances":[],"imports":["Init","ImportGraph.Imports","Mathlib.Tactic.MinImports"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/UpstreamableDecl.lean#L87-L119","name":"Mathlib.Linter.DoubleImports.upstreamableDeclLinter","line":87,"kind":"def","docLink":"./Mathlib/Tactic/Linter/UpstreamableDecl.html#Mathlib.Linter.DoubleImports.upstreamableDeclLinter","doc":"The `upstreamableDecl` linter detects declarations that could be moved to a file higher up in the\nimport hierarchy. If this is the case, it emits a warning.\n\nBy default, this linter will not fire on definitions, nor private declarations:\nsee options `linter.upstreamableDecl.defs` and `linter.upstreamableDecl.private`.\n\nThis is intended to assist with splitting files.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UpstreamableDecl.html#Mathlib.Linter.DoubleImports.upstreamableDeclLinter\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">DoubleImports</span>.<span class=\"name\">upstreamableDeclLinter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter\">Lean.Linter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/UpstreamableDecl.lean#L77-L83","name":"Mathlib.Linter.linter.upstreamableDecl.private","line":77,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/UpstreamableDecl.html#Mathlib.Linter.linter.upstreamableDecl.private","doc":"If set to `true`, the `upstreamableDecl` linter will add warnings on private declarations.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UpstreamableDecl.html#Mathlib.Linter.linter.upstreamableDecl.private\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">linter</span>.<span class=\"name\">upstreamableDecl</span>.<span class=\"name\">private</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/UpstreamableDecl.lean#L65-L75","name":"Mathlib.Linter.linter.upstreamableDecl.defs","line":65,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/UpstreamableDecl.html#Mathlib.Linter.linter.upstreamableDecl.defs","doc":"If set to `true`, the `upstreamableDecl` linter will add warnings on definitions.\n\nThe linter does not place a warning on any declaration depending on a definition in the current file\n(while it does place a warning on the definition itself), since we often create a new file for a\ndefinition on purpose.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UpstreamableDecl.html#Mathlib.Linter.linter.upstreamableDecl.defs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">linter</span>.<span class=\"name\">upstreamableDecl</span>.<span class=\"name\">defs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/UpstreamableDecl.lean#L51-L63","name":"Mathlib.Linter.linter.upstreamableDecl","line":51,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/UpstreamableDecl.html#Mathlib.Linter.linter.upstreamableDecl","doc":"The `upstreamableDecl` linter detects declarations that could be moved to a file higher up in the\nimport hierarchy. If this is the case, it emits a warning.\n\nBy default, this linter will not fire on definitions, nor private declarations:\nsee options `linter.upstreamableDecl.defs` and `linter.upstreamableDecl.private`.\n\nThis is intended to assist with splitting files.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UpstreamableDecl.html#Mathlib.Linter.linter.upstreamableDecl\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">linter</span>.<span class=\"name\">upstreamableDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/UpstreamableDecl.lean#L23-L47","name":"Lean.Environment.localDefinitionDependencies","line":23,"kind":"def","docLink":"./Mathlib/Tactic/Linter/UpstreamableDecl.html#Lean.Environment.localDefinitionDependencies","doc":"Does the declaration with this name depend on definitions in the current file?\n\nHere, \"definition\" means everything that is not a theorem, and so includes `def`,\n`structure`, `inductive`, etc.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UpstreamableDecl.html#Lean.Environment.localDefinitionDependencies\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">localDefinitionDependencies</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx </span><span class=\"fn\">id</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/UpstreamableDecl.lean#L17-L19","name":"Lean.Name.isLocal","line":17,"kind":"def","docLink":"./Mathlib/Tactic/Linter/UpstreamableDecl.html#Lean.Name.isLocal","doc":"Does this declaration come from the current file? "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/UpstreamableDecl.html#Lean.Name.isLocal\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">isLocal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"}]}