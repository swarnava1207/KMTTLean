{"name":"Mathlib.Topology.Category.UniformSpace","instances":[{"typeNames":["UniformSpaceCat","_builtin_typeu"],"name":"UniformSpaceCat.instCoeSortType","className":"CoeSort"},{"typeNames":["UniformSpaceCat"],"name":"UniformSpaceCat.instLargeCategory","className":"CategoryTheory.Category"},{"typeNames":["Subtype","UniformSpaceCat.carrier","UniformSpaceCat.carrier"],"name":"UniformSpaceCat.instFunLike","className":"DFunLike"},{"typeNames":["UniformSpaceCat"],"name":"UniformSpaceCat.instConcreteCategorySubtypeForallCarrierUniformContinuous","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["UniformSpaceCat"],"name":"UniformSpaceCat.instInhabited","className":"Inhabited"},{"typeNames":["UniformSpaceCat","TopCat"],"name":"UniformSpaceCat.hasForgetToTop","className":"CategoryTheory.HasForget₂"},{"typeNames":["CpltSepUniformSpace","_builtin_typeu"],"name":"CpltSepUniformSpace.instCoeSortType","className":"CoeSort"},{"typeNames":["UniformSpaceCat.carrier"],"name":"CpltSepUniformSpace.completeSpace","className":"CompleteSpace"},{"typeNames":["UniformSpaceCat.carrier"],"name":"CpltSepUniformSpace.t0Space","className":"T0Space"},{"typeNames":["CpltSepUniformSpace"],"name":"CpltSepUniformSpace.instInhabited","className":"Inhabited"},{"typeNames":["CpltSepUniformSpace"],"name":"CpltSepUniformSpace.category","className":"CategoryTheory.Category"},{"typeNames":["Subtype","CpltSepUniformSpace.α","CpltSepUniformSpace.α"],"name":"CpltSepUniformSpace.instFunLike","className":"DFunLike"},{"typeNames":["CpltSepUniformSpace"],"name":"CpltSepUniformSpace.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["CpltSepUniformSpace","UniformSpaceCat"],"name":"CpltSepUniformSpace.hasForgetToUniformSpace","className":"CategoryTheory.HasForget₂"},{"typeNames":["CategoryTheory.forget₂"],"name":"UniformSpaceCat.instReflectiveCpltSepUniformSpaceForget₂","className":"CategoryTheory.Reflective"}],"imports":["Init","Mathlib.CategoryTheory.Adjunction.Reflective","Mathlib.CategoryTheory.Monad.Limits","Mathlib.Topology.Category.TopCat.Basic","Mathlib.Topology.UniformSpace.Completion"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L251-L254","name":"UniformSpaceCat.instReflectiveCpltSepUniformSpaceForget₂","line":251,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.instReflectiveCpltSepUniformSpaceForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.instReflectiveCpltSepUniformSpaceForget₂\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">instReflectiveCpltSepUniformSpaceForget₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Reflective.html#CategoryTheory.Reflective\">CategoryTheory.Reflective</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L233-L249","name":"UniformSpaceCat.adj","line":233,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.adj","doc":"The completion functor is left adjoint to the forgetful functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.adj\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">adj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionFunctor\">completionFunctor</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L226-L231","name":"UniformSpaceCat.extension_comp_coe","line":226,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.extension_comp_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.extension_comp_coe\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">extension_comp_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.of\">CpltSepUniformSpace.of</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Completion.html#UniformSpace.Completion\">UniformSpace.Completion</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span>)</span>)</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.toUniformSpace\">toUniformSpace</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.toUniformSpace\">toUniformSpace</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.extensionHom\">extensionHom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionHom\">completionHom</a></span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L221-L224","name":"UniformSpaceCat.extensionHom_val","line":221,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.extensionHom_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.extensionHom_val\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">extensionHom_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionFunctor\">completionFunctor</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.α\">α</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.extensionHom\">extensionHom</a> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Completion.html#UniformSpace.Completion.extension\">UniformSpace.Completion.extension</a> <span class=\"fn\">(⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L214-L219","name":"UniformSpaceCat.extensionHom","line":214,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.extensionHom","doc":"The mate of a morphism from a `UniformSpace` to a `CpltSepUniformSpace`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.extensionHom\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">extensionHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionFunctor\">completionFunctor</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L210-L212","name":"UniformSpaceCat.completionHom_val","line":210,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionHom_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionHom_val\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">completionHom_val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionHom\">completionHom</a></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L204-L208","name":"UniformSpaceCat.completionHom","line":204,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionHom","doc":"The inclusion of a uniform space into its completion. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionHom\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">completionHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionFunctor\">completionFunctor</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L197-L197","name":"UniformSpaceCat.completionFunctor_map","line":197,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionFunctor_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionFunctor_map\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">completionFunctor_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionFunctor\">completionFunctor</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.ofHom\">ofHom</a> <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Completion.html#UniformSpace.Completion.map\">UniformSpace.Completion.map</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom'\">hom'</a></span></span></span>, <span class=\"fn\">⋯</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L196-L202","name":"UniformSpaceCat.completionFunctor","line":196,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionFunctor","doc":"The functor turning uniform spaces into complete separated uniform spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.completionFunctor\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">completionFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L183-L186","name":"CpltSepUniformSpace.hom_ofHom","line":183,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.hom_ofHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.hom_ofHom\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">hom_ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom\">UniformSpaceCat.Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.ofHom\">UniformSpaceCat.ofHom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L178-L181","name":"CpltSepUniformSpace.hom_id","line":178,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.hom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.hom_id\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">hom_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟨<a href=\"./Init/Prelude.html#id\">id</a>, <span class=\"fn\">⋯</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L173-L176","name":"CpltSepUniformSpace.hom_comp","line":173,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.hom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.hom_comp\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">hom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⟨<span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span>, <span class=\"fn\">⋯</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L170-L171","name":"CpltSepUniformSpace.hasForgetToUniformSpace","line":170,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.hasForgetToUniformSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.hasForgetToUniformSpace\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">hasForgetToUniformSpace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L165-L168","name":"CpltSepUniformSpace.concreteCategory","line":165,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.concreteCategory","doc":"The concrete category instance on `CpltSepUniformSpace`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.concreteCategory\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>) =&gt;\n  <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.α\">α</a></span> → <span class=\"fn\"><span class=\"fn\">x2</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.α\">α</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L160-L163","name":"CpltSepUniformSpace.instFunLike","line":160,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.instFunLike","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.instFunLike\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">instFunLike</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.α\">α</a></span> → <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.α\">α</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.α\">α</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.α\">α</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L156-L158","name":"CpltSepUniformSpace.category","line":156,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.category","doc":"The category instance on `CpltSepUniformSpace`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.category\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L153-L154","name":"CpltSepUniformSpace.instInhabited","line":153,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.instInhabited\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L148-L151","name":"CpltSepUniformSpace.coe_of","line":148,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.coe_of\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.of\">of</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.α\">α</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L144-L146","name":"CpltSepUniformSpace.of","line":144,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.of","doc":"Construct a bundled `UniformSpace` from the underlying type and the appropriate typeclasses. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.of\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L141-L142","name":"CpltSepUniformSpace.t0Space","line":141,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.t0Space","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.t0Space\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">t0Space</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.toUniformSpace\">toUniformSpace</a></span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L138-L139","name":"CpltSepUniformSpace.completeSpace","line":138,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.completeSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.completeSpace\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">completeSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.toUniformSpace\">toUniformSpace</a></span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L134-L136","name":"CpltSepUniformSpace.toUniformSpace","line":134,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.toUniformSpace","doc":"The function forgetting that a complete separated uniform spaces is complete and separated. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.toUniformSpace\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">toUniformSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L129-L130","name":"CpltSepUniformSpace.instCoeSortType","line":129,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.instCoeSortType\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a> <a href=\"./foundational_types.html\">(Type</a> u)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L125-L125","name":"CpltSepUniformSpace.isT0","line":125,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.isT0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.isT0\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">isT0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.α\">α</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L124-L124","name":"CpltSepUniformSpace.isCompleteSpace","line":124,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.isCompleteSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.isCompleteSpace\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">isCompleteSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.α\">α</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L123-L123","name":"CpltSepUniformSpace.isUniformSpace","line":123,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.isUniformSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.isUniformSpace\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">isUniformSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.α\">α</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L122-L122","name":"CpltSepUniformSpace.α","line":122,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.α","doc":"The underlying space "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.α\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">α</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L120-L120","name":"CpltSepUniformSpace.mk","line":120,"kind":"ctor","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace.mk\"><span class=\"name\">CpltSepUniformSpace</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">isUniformSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">isCompleteSpace</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">isT0</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\">CpltSepUniformSpace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L119-L125","name":"CpltSepUniformSpace","line":119,"kind":"structure","docLink":"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace","doc":"A (bundled) complete separated uniform space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#CpltSepUniformSpace\"><span class=\"name\">CpltSepUniformSpace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L109-L115","name":"UniformSpaceCat.hasForgetToTop","line":109,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.hasForgetToTop","doc":"The forgetful functor from uniform spaces to topological spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.hasForgetToTop\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">hasForgetToTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L105-L105","name":"UniformSpaceCat.hom_ext_iff","line":105,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.hom_ext_iff\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L105-L107","name":"UniformSpaceCat.hom_ext","line":105,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.hom_ext\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L101-L103","name":"UniformSpaceCat.coe_mk","line":101,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.coe_mk\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span> → <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">hom'</span> := <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span> }</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L98-L99","name":"UniformSpaceCat.coe_id","line":98,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.coe_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.coe_id\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">coe_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L95-L96","name":"UniformSpaceCat.coe_comp","line":95,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.coe_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.coe_comp\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">coe_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L90-L93","name":"UniformSpaceCat.hom_ofHom","line":90,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.hom_ofHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.hom_ofHom\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">hom_ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L86-L88","name":"UniformSpaceCat.hom_id","line":86,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.hom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.hom_id\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">hom_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟨<a href=\"./Init/Prelude.html#id\">id</a>, <span class=\"fn\">⋯</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L81-L84","name":"UniformSpaceCat.hom_comp","line":81,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.hom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.hom_comp\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">hom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⟨<span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span>, <span class=\"fn\">⋯</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L78-L79","name":"UniformSpaceCat.coe_of","line":78,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.coe_of\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.of\">of</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L75-L76","name":"UniformSpaceCat.instInhabited","line":75,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.instInhabited\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L70-L73","name":"UniformSpaceCat.ofHom","line":70,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.ofHom","doc":"Typecheck a function which is `UniformContinuous` as a morphism in `UniformSpaceCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.ofHom\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.of\">of</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.of\">of</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L66-L68","name":"UniformSpaceCat.Hom.hom","line":66,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom","doc":"Turn a morphism in `UniformSpaceCat` back into a function which is `UniformContinuous`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span> → <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L62-L64","name":"UniformSpaceCat.instConcreteCategorySubtypeForallCarrierUniformContinuous","line":62,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.instConcreteCategorySubtypeForallCarrierUniformContinuous","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.instConcreteCategorySubtypeForallCarrierUniformContinuous\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">instConcreteCategorySubtypeForallCarrierUniformContinuous</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>) =&gt;\n  <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span> → <span class=\"fn\"><span class=\"fn\">x2</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L57-L60","name":"UniformSpaceCat.instFunLike","line":57,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.instFunLike","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.instFunLike\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">instFunLike</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span> → <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L49-L55","name":"UniformSpaceCat.instLargeCategory","line":49,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.instLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.instLargeCategory\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">instLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L47-L47","name":"UniformSpaceCat.Hom.hom'","line":47,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom'","doc":"The underlying `UniformContinuous` function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom'\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span> → <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L45-L45","name":"UniformSpaceCat.Hom.mk","line":45,"kind":"ctor","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.mk\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hom'</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span> → <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L44-L44","name":"UniformSpaceCat.Hom.ext_iff","line":44,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.ext_iff\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom'\">hom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom'\">hom'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L44-L44","name":"UniformSpaceCat.Hom.ext","line":44,"kind":"theorem","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.ext\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hom'</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom'\">hom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom.hom'\">hom'</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L43-L47","name":"UniformSpaceCat.Hom","line":43,"kind":"structure","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom","doc":"A bundled uniform continuous map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.Hom\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">Hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L39-L41","name":"UniformSpaceCat.of","line":39,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.of","doc":"Construct a bundled `UniformSpace` from the underlying type and the typeclass. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.of\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L36-L37","name":"UniformSpaceCat.instCoeSortType","line":36,"kind":"instance","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.instCoeSortType\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L30-L30","name":"UniformSpaceCat.str","line":30,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.str","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.str\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\">carrier</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L29-L29","name":"UniformSpaceCat.carrier","line":29,"kind":"def","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier","doc":"The underlying uniform space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.carrier\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">carrier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L27-L27","name":"UniformSpaceCat.mk","line":27,"kind":"ctor","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat.mk\"><span class=\"name\">UniformSpaceCat</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">carrier</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">str</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">carrier</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\">UniformSpaceCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/UniformSpace.lean#L26-L30","name":"UniformSpaceCat","line":26,"kind":"structure","docLink":"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat","doc":"An object in the category of uniform spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/UniformSpace.html#UniformSpaceCat\"><span class=\"name\">UniformSpaceCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}