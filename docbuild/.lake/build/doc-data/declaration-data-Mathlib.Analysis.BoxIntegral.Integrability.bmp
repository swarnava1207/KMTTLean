{"name":"Mathlib.Analysis.BoxIntegral.Integrability","instances":[],"imports":["Init","Mathlib.Analysis.BoxIntegral.Basic","Mathlib.MeasureTheory.Integral.SetIntegral","Mathlib.Tactic.Generalize"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/BoxIntegral/Integrability.lean#L314-L342","name":"MeasureTheory.AEContinuous.hasBoxIntegral","line":314,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Integrability.html#MeasureTheory.AEContinuous.hasBoxIntegral","doc":"If `f : ℝⁿ → E` is a.e. continuous and bounded on a rectangular box `I`, then it is Box\nintegrable on `I` w.r.t. a locally finite measure `μ` with the same integral. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Integrability.html#MeasureTheory.AEContinuous.hasBoxIntegral\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AEContinuous</span>.<span class=\"name\">hasBoxIntegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">∃ (<span class=\"fn\">C</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">BoxIntegral.Box.Icc</a> <span class=\"fn\">I</span></span>, <a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/BoxIntegral/Integrability.lean#L302-L312","name":"MeasureTheory.ContinuousOn.hasBoxIntegral","line":302,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Integrability.html#MeasureTheory.ContinuousOn.hasBoxIntegral","doc":"If `f : ℝⁿ → E` is continuous on a rectangular box `I`, then it is Box integrable on `I`\nw.r.t. a locally finite measure `μ` with the same integral. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Integrability.html#MeasureTheory.ContinuousOn.hasBoxIntegral\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ContinuousOn</span>.<span class=\"name\">hasBoxIntegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box.Icc\">BoxIntegral.Box.Icc</a> <span class=\"fn\">I</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/BoxIntegral/Integrability.lean#L195-L300","name":"MeasureTheory.IntegrableOn.hasBoxIntegral","line":195,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Integrability.html#MeasureTheory.IntegrableOn.hasBoxIntegral","doc":"If `f : ℝⁿ → E` is Bochner integrable w.r.t. a locally finite measure `μ` on a rectangular box\n`I`, then it is McShane integrable on `I` with the same integral. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Integrability.html#MeasureTheory.IntegrableOn.hasBoxIntegral\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IntegrableOn</span>.<span class=\"name\">hasBoxIntegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">IntegrableOn</a> <span class=\"fn\">f</span> <span class=\"fn\">(↑<span class=\"fn\">I</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.bRiemann\">bRiemann</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">in</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/BoxIntegral/Integrability.lean#L184-L189","name":"MeasureTheory.SimpleFunc.box_integral_eq_integral","line":184,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Integrability.html#MeasureTheory.SimpleFunc.box_integral_eq_integral","doc":"For a simple function, its McShane (or Henstock, or `⊥`) box integral is equal to its\nintegral in the sense of `MeasureTheory.SimpleFunc.integral`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Integrability.html#MeasureTheory.SimpleFunc.box_integral_eq_integral\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">SimpleFunc</span>.<span class=\"name\">box_integral_eq_integral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/SimpleFunc.html#MeasureTheory.SimpleFunc\">SimpleFunc</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.bRiemann\">bRiemann</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.integral\">BoxIntegral.integral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/BochnerL1.html#MeasureTheory.SimpleFunc.integral\">integral</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">↑<span class=\"fn\">I</span></span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/BoxIntegral/Integrability.lean#L169-L182","name":"MeasureTheory.SimpleFunc.hasBoxIntegral","line":169,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Integrability.html#MeasureTheory.SimpleFunc.hasBoxIntegral","doc":"A simple function is McShane integrable w.r.t. any locally finite measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Integrability.html#MeasureTheory.SimpleFunc.hasBoxIntegral\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">SimpleFunc</span>.<span class=\"name\">hasBoxIntegral</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/SimpleFunc.html#MeasureTheory.SimpleFunc\">SimpleFunc</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <span class=\"fn\">E</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">BoxIntegral.Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">BoxIntegral.IntegrationParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.bRiemann\">bRiemann</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">BoxIntegral.HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Integral/BochnerL1.html#MeasureTheory.SimpleFunc.integral\">integral</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">↑<span class=\"fn\">I</span></span>)</span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/BoxIntegral/Integrability.lean#L154-L161","name":"BoxIntegral.HasIntegral.congr_ae","line":154,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Integrability.html#BoxIntegral.HasIntegral.congr_ae","doc":"If `f` has integral `y` on a box `I` with respect to a locally finite measure `μ` and `g` is\na.e. equal to `f` on `I`, then `g` has the same integral on `I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Integrability.html#BoxIntegral.HasIntegral.congr_ae\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">congr_ae</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y</span> : <span class=\"fn\">E</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfg</span> : <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᵐ[</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">g</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.bRiemann\">bRiemann</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">g</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/BoxIntegral/Integrability.lean#L99-L152","name":"BoxIntegral.HasIntegral.of_aeEq_zero","line":99,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Integrability.html#BoxIntegral.HasIntegral.of_aeEq_zero","doc":"If `f` is a.e. equal to zero on a rectangular box, then it has McShane integral zero on this\nbox. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Integrability.html#BoxIntegral.HasIntegral.of_aeEq_zero\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">HasIntegral</span>.<span class=\"name\">of_aeEq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᵐ[</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/MeasureTheory/Measure/Restrict.html#MeasureTheory.Measure.restrict\">restrict</a></span> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.bRiemann\">bRiemann</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/BoxIntegral/Integrability.lean#L34-L97","name":"BoxIntegral.hasIntegralIndicatorConst","line":34,"kind":"theorem","docLink":"./Mathlib/Analysis/BoxIntegral/Integrability.html#BoxIntegral.hasIntegralIndicatorConst","doc":"The indicator function of a measurable set is McShane integrable with respect to any\nlocally-finite measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/BoxIntegral/Integrability.html#BoxIntegral.hasIntegralIndicatorConst\"><span class=\"name\">BoxIntegral</span>.<span class=\"name\">hasIntegralIndicatorConst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams\">IntegrationParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hl</span> : <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Filter.html#BoxIntegral.IntegrationParams.bRiemann\">bRiemann</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Box/Basic.html#BoxIntegral.Box\">Box</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">(<span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsLocallyFiniteMeasure\">MeasureTheory.IsLocallyFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/BoxIntegral/Basic.html#BoxIntegral.HasIntegral\">HasIntegral</a> <span class=\"fn\">I</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Algebra/Group/Indicator.html#Set.indicator\">indicator</a></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">y</span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Measure.html#MeasureTheory.Measure.toBoxAdditive\">toBoxAdditive</a></span>.<a href=\"./Mathlib/Analysis/BoxIntegral/Partition/Additive.html#BoxIntegral.BoxAdditiveMap.toSMul\">toSMul</a></span> (<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> (<span class=\"fn\">s</span> <a href=\"./Init/Core.html#Inter.inter\">∩</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span>))</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">y</span>)</span></div></div>"}]}