{"name":"Mathlib.SetTheory.Surreal.Dyadic","instances":[{"typeNames":["SetTheory.PGame.LeftMoves"],"name":"SetTheory.PGame.uniquePowHalfLeftMoves","className":"Unique"},{"typeNames":["SetTheory.PGame.RightMoves"],"name":"SetTheory.PGame.isEmpty_powHalf_zero_rightMoves","className":"IsEmpty"},{"typeNames":["SetTheory.PGame.RightMoves"],"name":"SetTheory.PGame.uniquePowHalfSuccRightMoves","className":"Unique"}],"imports":["Init","Mathlib.Algebra.Algebra.Defs","Mathlib.Algebra.Order.Group.Basic","Mathlib.Algebra.Ring.Regular","Mathlib.GroupTheory.MonoidLocalization.Away","Mathlib.RingTheory.Localization.Defs","Mathlib.SetTheory.Game.Birthday","Mathlib.SetTheory.Surreal.Multiplication","Mathlib.Tactic.Linarith"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L254-L256","name":"Surreal.dyadic","line":254,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadic","doc":"We define dyadic surreals as the range of the map `dyadicMap`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadic\"><span class=\"name\">Surreal</span>.<span class=\"name\">dyadic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L249-L252","name":"Surreal.dyadicMap_apply_pow'","line":249,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap_apply_pow'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap_apply_pow'\"><span class=\"name\">Surreal</span>.<span class=\"name\">dyadicMap_apply_pow'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.log\">Submonoid.log</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.pow\">Submonoid.pow</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L243-L247","name":"Surreal.dyadicMap_apply_pow","line":243,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap_apply_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap_apply_pow\"><span class=\"name\">Surreal</span>.<span class=\"name\">dyadicMap_apply_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap\">dyadicMap</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Localization/Defs.html#IsLocalization.mk'\">IsLocalization.mk'</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/MonoidLocalization/Basic.html#Localization\">Localization</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">2</span>)</span>)</span> <span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.pow\">Submonoid.pow</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L237-L241","name":"Surreal.dyadicMap_apply","line":237,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap_apply\"><span class=\"name\">Surreal</span>.<span class=\"name\">dyadicMap_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">2</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap\">dyadicMap</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Localization/Defs.html#IsLocalization.mk'\">IsLocalization.mk'</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/MonoidLocalization/Basic.html#Localization\">Localization</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">2</span>)</span>)</span> <span class=\"fn\">m</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.log\">Submonoid.log</a> <span class=\"fn\">p</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L201-L235","name":"Surreal.dyadicMap","line":201,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap","doc":"The additive monoid morphism `dyadicMap` sends ⟦⟨m, 2^n⟩⟧ to m • half ^ n. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap\"><span class=\"name\">Surreal</span>.<span class=\"name\">dyadicMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization/Away.html#Localization.Away\">Localization.Away</a> <span class=\"fn\">2</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L187-L199","name":"Surreal.dyadic_aux","line":187,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadic_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadic_aux\"><span class=\"name\">Surreal</span>.<span class=\"name\">dyadic_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">y₁ </span><span class=\"fn\">y₂</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">y₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> <span class=\"fn\">y₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> <span class=\"fn\">y₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L181-L185","name":"Surreal.zsmul_pow_two_powHalf","line":181,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.zsmul_pow_two_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.zsmul_pow_two_powHalf\"><span class=\"name\">Surreal</span>.<span class=\"name\">zsmul_pow_two_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L171-L179","name":"Surreal.nsmul_pow_two_powHalf'","line":171,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.nsmul_pow_two_powHalf'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.nsmul_pow_two_powHalf'\"><span class=\"name\">Surreal</span>.<span class=\"name\">nsmul_pow_two_powHalf'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L164-L169","name":"Surreal.nsmul_pow_two_powHalf","line":164,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.nsmul_pow_two_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.nsmul_pow_two_powHalf\"><span class=\"name\">Surreal</span>.<span class=\"name\">nsmul_pow_two_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L160-L162","name":"Surreal.double_powHalf_succ_eq_powHalf","line":160,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.double_powHalf_succ_eq_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.double_powHalf_succ_eq_powHalf\"><span class=\"name\">Surreal</span>.<span class=\"name\">double_powHalf_succ_eq_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L156-L158","name":"Surreal.powHalf_zero","line":156,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf_zero\"><span class=\"name\">Surreal</span>.<span class=\"name\">powHalf_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">powHalf</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L152-L154","name":"Surreal.powHalf","line":152,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf","doc":"Powers of the surreal number `half`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\"><span class=\"name\">Surreal</span>.<span class=\"name\">powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L141-L142","name":"SetTheory.PGame.half_add_half_equiv_one","line":141,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.half_add_half_equiv_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.half_add_half_equiv_one\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">half_add_half_equiv_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L107-L139","name":"SetTheory.PGame.add_powHalf_succ_self_eq_powHalf","line":107,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.add_powHalf_succ_self_eq_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.add_powHalf_succ_self_eq_powHalf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">add_powHalf_succ_self_eq_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L104-L105","name":"SetTheory.PGame.zero_le_powHalf","line":104,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.zero_le_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.zero_le_powHalf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">zero_le_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L101-L102","name":"SetTheory.PGame.powHalf_pos","line":101,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_pos\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L98-L99","name":"SetTheory.PGame.powHalf_succ_lt_one","line":98,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_lt_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_lt_one\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_succ_lt_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L93-L96","name":"SetTheory.PGame.powHalf_le_one","line":93,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_le_one\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_le_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L90-L91","name":"SetTheory.PGame.powHalf_succ_le_powHalf","line":90,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_le_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_le_powHalf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_succ_le_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L87-L88","name":"SetTheory.PGame.powHalf_succ_lt_powHalf","line":87,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_lt_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_lt_powHalf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_succ_lt_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L78-L85","name":"SetTheory.PGame.numeric_powHalf","line":78,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.numeric_powHalf","doc":"For all natural numbers `n`, the pre-games `powHalf n` are numeric. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.numeric_powHalf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">numeric_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L74-L76","name":"SetTheory.PGame.birthday_half","line":74,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.birthday_half","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.birthday_half\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">birthday_half</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">1</span>)</span>.<a href=\"./Mathlib/SetTheory/Game/Birthday.html#SetTheory.PGame.birthday\">birthday</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L71-L72","name":"SetTheory.PGame.uniquePowHalfSuccRightMoves","line":71,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.uniquePowHalfSuccRightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.uniquePowHalfSuccRightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">uniquePowHalfSuccRightMoves</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L68-L69","name":"SetTheory.PGame.isEmpty_powHalf_zero_rightMoves","line":68,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.isEmpty_powHalf_zero_rightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.isEmpty_powHalf_zero_rightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">isEmpty_powHalf_zero_rightMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L65-L66","name":"SetTheory.PGame.uniquePowHalfLeftMoves","line":65,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.uniquePowHalfLeftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.uniquePowHalfLeftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">uniquePowHalfLeftMoves</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L61-L63","name":"SetTheory.PGame.powHalf_succ_moveRight","line":61,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_succ_moveRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L58-L59","name":"SetTheory.PGame.powHalf_moveLeft","line":58,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_moveLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L55-L56","name":"SetTheory.PGame.powHalf_succ_rightMoves","line":55,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_rightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_rightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_succ_rightMoves</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u_1 + 1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L52-L53","name":"SetTheory.PGame.powHalf_zero_rightMoves","line":52,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_zero_rightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_zero_rightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_zero_rightMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">0</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#PEmpty\">PEmpty.{u_1 + 1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L50-L50","name":"SetTheory.PGame.powHalf_leftMoves","line":50,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_leftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_leftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_leftMoves</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u_1 + 1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L46-L48","name":"SetTheory.PGame.powHalf_zero","line":46,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">powHalf</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Dyadic.lean#L38-L44","name":"SetTheory.PGame.powHalf","line":38,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf","doc":"For a natural number `n`, the pre-game `powHalf (n + 1)` is recursively defined as\n`{0 | powHalf n}`. These are the explicit expressions of powers of `1 / 2`. By definition, we have\n`powHalf 0 = 1` and `powHalf 1 ≈ 1 / 2` and we prove later on that\n`powHalf (n + 1) + powHalf (n + 1) ≈ powHalf n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span></div></div>"}]}