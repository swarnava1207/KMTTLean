{"name":"Mathlib.Analysis.Complex.Isometry","instances":[],"imports":["Init","Mathlib.Analysis.Complex.Circle","Mathlib.LinearAlgebra.Determinant","Mathlib.LinearAlgebra.Matrix.GeneralLinearGroup.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L157-L160","name":"linearEquiv_det_rotation","line":157,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#linearEquiv_det_rotation","doc":"The determinant of `rotation` (as a linear equiv) is equal to `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#linearEquiv_det_rotation\"><span class=\"name\">linearEquiv_det_rotation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Analysis/Complex/Circle.html#Circle\">Circle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Determinant.html#LinearEquiv.det\">LinearEquiv.det</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv.toLinearEquiv\">toLinearEquiv</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L151-L155","name":"det_rotation","line":151,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#det_rotation","doc":"The determinant of `rotation` (as a linear map) is equal to `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#det_rotation\"><span class=\"name\">det_rotation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Analysis/Complex/Circle.html#Circle\">Circle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Determinant.html#LinearMap.det\">LinearMap.det</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv.toLinearEquiv\">toLinearEquiv</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L139-L149","name":"toMatrix_rotation","line":139,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#toMatrix_rotation","doc":"The matrix representation of `rotation a` is equal to the conformal matrix\n`!![re a, -im a; im a, re a]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#toMatrix_rotation\"><span class=\"name\">toMatrix_rotation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Analysis/Complex/Circle.html#Circle\">Circle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/ToLin.html#LinearMap.toMatrix\">LinearMap.toMatrix</a> <a href=\"./Mathlib/Data/Complex/Module.html#Complex.basisOneI\">Complex.basisOneI</a> <a href=\"./Mathlib/Data/Complex/Module.html#Complex.basisOneI\">Complex.basisOneI</a>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv.toLinearEquiv\">toLinearEquiv</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/GeneralLinearGroup/Basic.html#Matrix.planeConformalMatrix\">Matrix.planeConformalMatrix</a> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\">im</a></span> <span class=\"fn\">⋯</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L130-L137","name":"linear_isometry_complex","line":130,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#linear_isometry_complex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#linear_isometry_complex\"><span class=\"name\">linear_isometry_complex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv\">≃ₗᵢ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/Analysis/Complex/Circle.html#Circle\">Circle</a>), <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Basic.html#Complex.conjLIE\">Complex.conjLIE</a>.<a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a> <span class=\"fn\">a</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L114-L128","name":"linear_isometry_complex_aux","line":114,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#linear_isometry_complex_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#linear_isometry_complex_aux\"><span class=\"name\">linear_isometry_complex_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv\">≃ₗᵢ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv.refl\">LinearIsometryEquiv.refl</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Analysis/Complex/Basic.html#Complex.conjLIE\">Complex.conjLIE</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L109-L112","name":"LinearIsometry.re_apply_eq_re","line":109,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#LinearIsometry.re_apply_eq_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#LinearIsometry.re_apply_eq_re\"><span class=\"name\">LinearIsometry</span>.<span class=\"name\">re_apply_eq_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometry\">→ₗᵢ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometry\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">z</span>)</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L95-L107","name":"LinearIsometry.im_apply_eq_im","line":95,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#LinearIsometry.im_apply_eq_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#LinearIsometry.im_apply_eq_im\"><span class=\"name\">LinearIsometry</span>.<span class=\"name\">im_apply_eq_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometry\">→ₗᵢ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometry\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">z</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L88-L93","name":"LinearIsometry.im_apply_eq_im_or_neg_of_re_apply_eq_re","line":88,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#LinearIsometry.im_apply_eq_im_or_neg_of_re_apply_eq_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#LinearIsometry.im_apply_eq_im_or_neg_of_re_apply_eq_re\"><span class=\"name\">LinearIsometry</span>.<span class=\"name\">im_apply_eq_im_or_neg_of_re_apply_eq_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometry\">→ₗᵢ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometry\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">∀ (<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">z</span>)</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">z</span>)</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\">im</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">z</span>)</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L83-L86","name":"LinearIsometry.re_apply_eq_re_of_add_conj_eq","line":83,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#LinearIsometry.re_apply_eq_re_of_add_conj_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#LinearIsometry.re_apply_eq_re_of_add_conj_eq\"><span class=\"name\">LinearIsometry</span>.<span class=\"name\">re_apply_eq_re_of_add_conj_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometry\">→ₗᵢ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometry\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₃</span> : <span class=\"fn\">∀ (<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>), <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">z</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">z</span>)</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L80-L81","name":"rotation_injective","line":80,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#rotation_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation_injective\"><span class=\"name\">rotation_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L76-L78","name":"rotationOf_rotation","line":76,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#rotationOf_rotation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#rotationOf_rotation\"><span class=\"name\">rotationOf_rotation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Analysis/Complex/Circle.html#Circle\">Circle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotationOf\">rotationOf</a> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L72-L72","name":"rotationOf_coe","line":72,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#rotationOf_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#rotationOf_coe\"><span class=\"name\">rotationOf_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv\">≃ₗᵢ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotationOf\">rotationOf</a> <span class=\"fn\">e</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">1</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L70-L74","name":"rotationOf","line":70,"kind":"def","docLink":"./Mathlib/Analysis/Complex/Isometry.html#rotationOf","doc":"Takes an element of `ℂ ≃ₗᵢ[ℝ] ℂ` and checks if it is a rotation, returns an element of the\nunit circle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#rotationOf\"><span class=\"name\">rotationOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv\">≃ₗᵢ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Complex/Circle.html#Circle\">Circle</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L62-L68","name":"rotation_ne_conjLIE","line":62,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#rotation_ne_conjLIE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation_ne_conjLIE\"><span class=\"name\">rotation_ne_conjLIE</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Analysis/Complex/Circle.html#Circle\">Circle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Analysis/Complex/Basic.html#Complex.conjLIE\">Complex.conjLIE</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L57-L60","name":"rotation_trans","line":57,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#rotation_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation_trans\"><span class=\"name\">rotation_trans</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/Analysis/Complex/Circle.html#Circle\">Circle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L53-L55","name":"rotation_symm","line":53,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#rotation_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation_symm\"><span class=\"name\">rotation_symm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Analysis/Complex/Circle.html#Circle\">Circle</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv.symm\">symm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a> <span class=\"fn\">a</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L49-L51","name":"rotation_apply","line":49,"kind":"theorem","docLink":"./Mathlib/Analysis/Complex/Isometry.html#rotation_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation_apply\"><span class=\"name\">rotation_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/Analysis/Complex/Circle.html#Circle\">Circle</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\">rotation</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Analysis/Complex/Isometry.lean#L39-L47","name":"rotation","line":39,"kind":"def","docLink":"./Mathlib/Analysis/Complex/Isometry.html#rotation","doc":"An element of the unit circle defines a `LinearIsometryEquiv` from `ℂ` to itself, by\nrotation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Complex/Isometry.html#rotation\"><span class=\"name\">rotation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Complex/Circle.html#Circle\">Circle</a> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv\">≃ₗᵢ[</a><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a><a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv\">]</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"}]}