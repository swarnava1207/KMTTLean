{"name":"Mathlib.AlgebraicTopology.DoldKan.FunctorGamma","instances":[],"imports":["Init","Mathlib.AlgebraicTopology.SimplicialObject.Split","Mathlib.AlgebraicTopology.DoldKan.PInfty"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L326-L326","name":"AlgebraicTopology.DoldKan.PInfty_on_Γ₀_splitting_summand_eq_self_assoc","line":326,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.PInfty_on_Γ₀_splitting_summand_eq_self_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.PInfty_on_Γ₀_splitting_summand_eq_self_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">PInfty_on_Γ₀_splitting_summand_eq_self_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">Γ₀.obj</a> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">Γ₀.splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span>\n      <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.id\">SimplicialObject.Splitting.IndexSet.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/PInfty.html#AlgebraicTopology.DoldKan.PInfty\">PInfty</a>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">Γ₀.splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span>\n      <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.id\">SimplicialObject.Splitting.IndexSet.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span>)</span>\n    <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L326-L334","name":"AlgebraicTopology.DoldKan.PInfty_on_Γ₀_splitting_summand_eq_self","line":326,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.PInfty_on_Γ₀_splitting_summand_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.PInfty_on_Γ₀_splitting_summand_eq_self\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">PInfty_on_Γ₀_splitting_summand_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">Γ₀.splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span>\n      <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.id\">SimplicialObject.Splitting.IndexSet.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/PInfty.html#AlgebraicTopology.DoldKan.PInfty\">PInfty</a>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">Γ₀.splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.id\">SimplicialObject.Splitting.IndexSet.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L315-L324","name":"AlgebraicTopology.DoldKan.HigherFacesVanish.on_Γ₀_summand_id","line":315,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.HigherFacesVanish.on_Γ₀_summand_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.HigherFacesVanish.on_Γ₀_summand_id\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">HigherFacesVanish</span>.<span class=\"name\">on_Γ₀_summand_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Faces.html#AlgebraicTopology.DoldKan.HigherFacesVanish\">HigherFacesVanish</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">Γ₀.splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.id\">SimplicialObject.Splitting.IndexSet.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L311-L311","name":"AlgebraicTopology.DoldKan.Γ₂_map_f_app","line":311,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂_map_f_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂_map_f_app\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₂_map_f_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂\">Γ₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">Δ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">Γ₀.splitting</a> <span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.desc\">desc</a></span> <span class=\"fn\">Δ</span> <span class=\"fn\">fun (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet\">SimplicialObject.Splitting.IndexSet</a> <span class=\"fn\">Δ</span></span>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.Hom.f\">f</a></span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">Γ₀.splitting</a> <span class=\"fn\"><span class=\"fn\">Y✝</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">Δ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">A</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L311-L311","name":"AlgebraicTopology.DoldKan.Γ₂_obj_X_obj","line":311,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂_obj_X_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂_obj_X_obj\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₂_obj_X_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂\">Γ₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Δ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.obj₂\">Γ₀.Obj.obj₂</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <span class=\"fn\">Δ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L311-L311","name":"AlgebraicTopology.DoldKan.Γ₂_obj_p_app","line":311,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂_obj_p_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂_obj_p_app\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₂_obj_p_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂\">Γ₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">Δ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">Γ₀.splitting</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.desc\">desc</a></span> <span class=\"fn\">Δ</span> <span class=\"fn\">fun (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet\">SimplicialObject.Splitting.IndexSet</a> <span class=\"fn\">Δ</span></span>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.p\">p</a></span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">Γ₀.splitting</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">Δ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">A</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L311-L311","name":"AlgebraicTopology.DoldKan.Γ₂_obj_X_map","line":311,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂_obj_X_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂_obj_X_map\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₂_obj_X_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂\">Γ₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">θ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map\">Γ₀.Obj.map</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi.X\">X</a></span> <span class=\"fn\">θ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L308-L313","name":"AlgebraicTopology.DoldKan.Γ₂","line":308,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂","doc":"The extension of `Γ₀ : ChainComplex C ℕ ⥤ SimplicialObject C`\non the idempotent completions. It shall be an equivalence of categories\nfor any additive category `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₂\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Idempotents/Karoubi.html#CategoryTheory.Idempotents.Karoubi\">CategoryTheory.Idempotents.Karoubi</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L304-L304","name":"AlgebraicTopology.DoldKan.Γ₀_obj_obj","line":304,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀_obj_obj\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀_obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀\">Γ₀</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Δ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.obj₂\">Γ₀.Obj.obj₂</a> <span class=\"fn\">X</span> <span class=\"fn\">Δ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L304-L304","name":"AlgebraicTopology.DoldKan.Γ₀_map_app","line":304,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀_map_app\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀_map_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀\">Γ₀</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">Δ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">Γ₀.splitting</a> <span class=\"fn\">X✝</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.desc\">desc</a></span> <span class=\"fn\">Δ</span> <span class=\"fn\">fun (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet\">SimplicialObject.Splitting.IndexSet</a> <span class=\"fn\">Δ</span></span>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">Γ₀.splitting</a> <span class=\"fn\">Y✝</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">Δ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">A</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L304-L304","name":"AlgebraicTopology.DoldKan.Γ₀_obj_map","line":304,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀_obj_map\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀_obj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀\">Γ₀</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">θ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map\">Γ₀.Obj.map</a> <span class=\"fn\">X</span> <span class=\"fn\">θ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L301-L306","name":"AlgebraicTopology.DoldKan.Γ₀","line":301,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀","doc":"The functor `Γ₀ : ChainComplex C ℕ ⥤ SimplicialObject C`, which is\nthe inverse functor of the Dold-Kan equivalence when `C` is an abelian\ncategory, or more generally a pseudoabelian category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L290-L290","name":"AlgebraicTopology.DoldKan.Γ₀'_obj","line":290,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀'_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀'_obj\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀'_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀'\">Γ₀'</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Split.mk'\">SimplicialObject.Split.mk'</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">Γ₀.splitting</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L290-L290","name":"AlgebraicTopology.DoldKan.Γ₀'_map_f","line":290,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀'_map_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀'_map_f\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀'_map_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">K'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀'\">Γ₀'</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Split.Hom.f\">f</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L290-L290","name":"AlgebraicTopology.DoldKan.Γ₀'_map_F","line":290,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀'_map_F","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀'_map_F\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀'_map_F</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">K'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀'\">Γ₀'</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Split.Hom.F\">F</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.map\">Γ₀.map</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L286-L299","name":"AlgebraicTopology.DoldKan.Γ₀'","line":286,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀'","doc":"The functor `Γ₀' : ChainComplex C ℕ ⥤ SimplicialObject.Split C`\nthat induces `Γ₀ : ChainComplex C ℕ ⥤ SimplicialObject C`, which\nshall be the inverse functor of the Dold-Kan equivalence for\nabelian or pseudo-abelian categories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀'\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Split\">SimplicialObject.Split</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L271-L271","name":"AlgebraicTopology.DoldKan.Γ₀.map_app","line":271,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.map_app\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">map_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">K'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.map\">map</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">Δ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.desc\">desc</a></span> <span class=\"fn\">Δ</span> <span class=\"fn\">fun (<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet\">SimplicialObject.Splitting.IndexSet</a> <span class=\"fn\">Δ</span></span>) =&gt;\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K'</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">Δ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">A</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L270-L280","name":"AlgebraicTopology.DoldKan.Γ₀.map","line":270,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.map","doc":"The functor `Γ₀ : ChainComplex C ℕ ⥤ SimplicialObject C`, on morphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.map\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">K'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L262-L262","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.map_epi_on_summand_id_assoc","line":262,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_epi_on_summand_id_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_epi_on_summand_id_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">map_epi_on_summand_id_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">Δ'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">e</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ'</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.id\">SimplicialObject.Splitting.IndexSet.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ</span>)</span>)</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ'</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.mk\">SimplicialObject.Splitting.IndexSet.mk</a> <span class=\"fn\">e</span>)</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L262-L268","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.map_epi_on_summand_id","line":262,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_epi_on_summand_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_epi_on_summand_id\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">map_epi_on_summand_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">Δ'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">e</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.id\">SimplicialObject.Splitting.IndexSet.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ</span>)</span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ'</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.mk\">SimplicialObject.Splitting.IndexSet.mk</a> <span class=\"fn\">e</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L256-L256","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.mapMono_on_summand_id_assoc","line":256,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.mapMono_on_summand_id_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.mapMono_on_summand_id_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">mapMono_on_summand_id_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Δ'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ'</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.id\">SimplicialObject.Splitting.IndexSet.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ</span>)</span>)</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">Termwise.mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ'</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.id\">SimplicialObject.Splitting.IndexSet.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ'</span>)</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L256-L260","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.mapMono_on_summand_id","line":256,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.mapMono_on_summand_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.mapMono_on_summand_id\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">mapMono_on_summand_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Δ'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.id\">SimplicialObject.Splitting.IndexSet.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ</span>)</span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">Termwise.mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ'</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.id\">SimplicialObject.Splitting.IndexSet.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">Δ'</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L248-L248","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand'_assoc","line":248,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand'_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand'_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">map_on_summand'_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet\">SimplicialObject.Splitting.IndexSet</a> <span class=\"fn\">Δ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">Δ</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Δ'</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">Δ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">A</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">θ</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">Termwise.mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Images.html#CategoryTheory.Limits.image.ι\">CategoryTheory.Limits.image.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">θ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.e\">e</a></span>)</span>)</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">Δ'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.pull\">pull</a></span> <span class=\"fn\">θ</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L248-L254","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand'","line":248,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand'\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">map_on_summand'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet\">SimplicialObject.Splitting.IndexSet</a> <span class=\"fn\">Δ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">Δ</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">Δ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">A</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">θ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">Termwise.mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Images.html#CategoryTheory.Limits.image.ι\">CategoryTheory.Limits.image.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">θ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.e\">e</a></span>)</span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">Δ'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.pull\">pull</a></span> <span class=\"fn\">θ</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L229-L229","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand_assoc","line":229,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">map_on_summand_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet\">SimplicialObject.Splitting.IndexSet</a> <span class=\"fn\">Δ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">Δ</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ''</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">Δ'</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ''</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\">Δ''</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">e</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fac</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">e</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">θ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.e\">e</a></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Δ'</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">Δ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">A</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">θ</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">Termwise.mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">Δ'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.mk\">SimplicialObject.Splitting.IndexSet.mk</a> <span class=\"fn\">e</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L229-L246","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand","line":229,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">map_on_summand</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet\">SimplicialObject.Splitting.IndexSet</a> <span class=\"fn\">Δ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">Δ</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ''</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">Δ'</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ''</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\">Δ''</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">e</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fac</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">e</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">θ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.e\">e</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">Δ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">A</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">θ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">Termwise.mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\">splitting</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.cofan\">cofan</a></span> <span class=\"fn\">Δ'</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Cofan.inj\">inj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.mk\">SimplicialObject.Splitting.IndexSet.mk</a> <span class=\"fn\">e</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L216-L227","name":"AlgebraicTopology.DoldKan.Γ₀.splitting","line":216,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting","doc":"By construction, the simplicial `Γ₀.obj K` is equipped with a splitting. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.splitting\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">splitting</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting\">SimplicialObject.Splitting</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L197-L197","name":"AlgebraicTopology.DoldKan.Γ₀.obj_map","line":197,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj_map\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">obj_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">θ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map\">Obj.map</a> <span class=\"fn\">K</span> <span class=\"fn\">θ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L197-L197","name":"AlgebraicTopology.DoldKan.Γ₀.obj_obj","line":197,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj_obj\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\">obj</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Δ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.obj₂\">Obj.obj₂</a> <span class=\"fn\">K</span> <span class=\"fn\">Δ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L196-L214","name":"AlgebraicTopology.DoldKan.Γ₀.obj","line":196,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj","doc":"The functor `Γ₀ : ChainComplex C ℕ ⥤ SimplicialObject C`, on objects. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.obj\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L186-L186","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand₀'_assoc","line":186,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand₀'_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand₀'_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">map_on_summand₀'_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet\">SimplicialObject.Splitting.IndexSet</a> <span class=\"fn\">Δ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">Δ</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.obj₂\">obj₂</a> <span class=\"fn\">K</span> <span class=\"fn\">Δ'</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">CategoryTheory.Limits.Sigma.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.summand\">summand</a> <span class=\"fn\">K</span> <span class=\"fn\">Δ</span>)</span> <span class=\"fn\">A</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map\">map</a> <span class=\"fn\">K</span> <span class=\"fn\">θ</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">Termwise.mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Images.html#CategoryTheory.Limits.image.ι\">CategoryTheory.Limits.image.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">θ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.e\">e</a></span>)</span>)</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">CategoryTheory.Limits.Sigma.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.summand\">summand</a> <span class=\"fn\">K</span> <span class=\"fn\">Δ'</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.pull\">pull</a></span> <span class=\"fn\">θ</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L186-L190","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand₀'","line":186,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand₀'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand₀'\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">map_on_summand₀'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet\">SimplicialObject.Splitting.IndexSet</a> <span class=\"fn\">Δ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">Δ</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">CategoryTheory.Limits.Sigma.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.summand\">summand</a> <span class=\"fn\">K</span> <span class=\"fn\">Δ</span>)</span> <span class=\"fn\">A</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map\">map</a> <span class=\"fn\">K</span> <span class=\"fn\">θ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">Termwise.mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Images.html#CategoryTheory.Limits.image.ι\">CategoryTheory.Limits.image.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">θ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.e\">e</a></span>)</span>)</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">CategoryTheory.Limits.Sigma.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.summand\">summand</a> <span class=\"fn\">K</span> <span class=\"fn\">Δ'</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.pull\">pull</a></span> <span class=\"fn\">θ</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L171-L171","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand₀_assoc","line":171,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand₀_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand₀_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">map_on_summand₀_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet\">SimplicialObject.Splitting.IndexSet</a> <span class=\"fn\">Δ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">θ</span> : <span class=\"fn\">Δ</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ''</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">Δ'</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ''</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\">Δ''</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">e</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fac</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">e</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">θ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.e\">e</a></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.obj₂\">obj₂</a> <span class=\"fn\">K</span> <span class=\"fn\">Δ'</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">CategoryTheory.Limits.Sigma.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.summand\">summand</a> <span class=\"fn\">K</span> <span class=\"fn\">Δ</span>)</span> <span class=\"fn\">A</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map\">map</a> <span class=\"fn\">K</span> <span class=\"fn\">θ</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">Termwise.mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">CategoryTheory.Limits.Sigma.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.summand\">summand</a> <span class=\"fn\">K</span> <span class=\"fn\">Δ'</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.mk\">SimplicialObject.Splitting.IndexSet.mk</a> <span class=\"fn\">e</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L171-L184","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand₀","line":171,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map_on_summand₀\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">map_on_summand₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet\">SimplicialObject.Splitting.IndexSet</a> <span class=\"fn\">Δ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">θ</span> : <span class=\"fn\">Δ</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ''</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">Δ'</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ''</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\">Δ''</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">e</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fac</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">e</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">θ</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.e\">e</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">CategoryTheory.Limits.Sigma.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.summand\">summand</a> <span class=\"fn\">K</span> <span class=\"fn\">Δ</span>)</span> <span class=\"fn\">A</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map\">map</a> <span class=\"fn\">K</span> <span class=\"fn\">θ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">Termwise.mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.ι\">CategoryTheory.Limits.Sigma.ι</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.summand\">summand</a> <span class=\"fn\">K</span> <span class=\"fn\">Δ'</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet.mk\">SimplicialObject.Splitting.IndexSet.mk</a> <span class=\"fn\">e</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L163-L169","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.map","line":163,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map","doc":"The simplicial morphism on the simplicial object `Γ₀.obj K` induced by\na morphism `Δ' → Δ` in `SimplexCategory` is defined on each summand\nassociated to an `A : Splitting.IndexSet Δ` in terms of the epi-mono factorisation\nof `θ ≫ A.e`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.map\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ' </span><span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ</span> : <span class=\"fn\">Δ</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.obj₂\">obj₂</a> <span class=\"fn\">K</span> <span class=\"fn\">Δ</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.obj₂\">obj₂</a> <span class=\"fn\">K</span> <span class=\"fn\">Δ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L131-L131","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_comp_assoc","line":131,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_comp_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_comp_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">Termwise</span>.<span class=\"name\">mapMono_comp_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ' </span><span class=\"fn\">Δ''</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i'</span> : <span class=\"fn\">Δ''</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Δ'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Δ''</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i'</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">i'</span> <span class=\"fn\">i</span>)</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L131-L157","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_comp","line":131,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_comp\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">Termwise</span>.<span class=\"name\">mapMono_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ' </span><span class=\"fn\">Δ''</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i'</span> : <span class=\"fn\">Δ''</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Δ'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">i'</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L119-L119","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_naturality_assoc","line":119,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_naturality_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_naturality_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">Termwise</span>.<span class=\"name\">mapMono_naturality_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">K'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Δ</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K'</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Δ</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">Δ</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">Δ'</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K'</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L119-L127","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_naturality","line":119,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_naturality\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">Termwise</span>.<span class=\"name\">mapMono_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K </span><span class=\"fn\">K'</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Δ</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">Δ</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\"><span class=\"fn\">Δ'</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K'</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L111-L115","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_eq_zero","line":111,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_eq_zero\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">Termwise</span>.<span class=\"name\">mapMono_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Δ'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">Δ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">Δ'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Isδ₀\">Isδ₀</a> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L107-L109","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_δ₀","line":107,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_δ₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_δ₀\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">Termwise</span>.<span class=\"name\">mapMono_δ₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Basic.html#SimplexCategory.δ\">SimplexCategory.δ</a> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">d</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L100-L105","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_δ₀'","line":100,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_δ₀'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_δ₀'\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">Termwise</span>.<span class=\"name\">mapMono_δ₀'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Δ'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Isδ₀\">Isδ₀</a> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">d</a></span> <span class=\"fn\"><span class=\"fn\">Δ</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <span class=\"fn\"><span class=\"fn\">Δ'</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L96-L98","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_id","line":96,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono_id\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">Termwise</span>.<span class=\"name\">mapMono_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\">mapMono</a> <span class=\"fn\">K</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">Δ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Δ</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L84-L93","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono","line":84,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono","doc":"A monomorphism `i : Δ' ⟶ Δ` induces a morphism `K.X Δ.len ⟶ K.X Δ'.len` which\nis the identity if `Δ = Δ'`, the differential on the complex `K` if `i = δ 0`, and\nzero otherwise. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.Termwise.mapMono\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">Termwise</span>.<span class=\"name\">mapMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ' </span><span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Δ'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Δ</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">K</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Δ'</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L77-L80","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.obj₂","line":77,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.obj₂","doc":"The functor `Γ₀` sends a chain complex `K` to the simplicial object which\nsends `Δ` to the direct sum of the objects `summand K Δ A` for all `A : Splitting.IndexSet Δ` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.obj₂\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">obj₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/FiniteProducts.html#CategoryTheory.Limits.HasFiniteCoproducts\">CategoryTheory.Limits.HasFiniteCoproducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L72-L75","name":"AlgebraicTopology.DoldKan.Γ₀.Obj.summand","line":72,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.summand","doc":"In the definition of `(Γ₀.obj K).obj Δ` as a direct sum indexed by `A : Splitting.IndexSet Δ`,\nthe summand `summand K Δ A` is `K.X A.1.len`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Γ₀.Obj.summand\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Γ₀</span>.<span class=\"name\">Obj</span>.<span class=\"name\">summand</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Δ</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Split.html#SimplicialObject.Splitting.IndexSet\">SimplicialObject.Splitting.IndexSet</a> <span class=\"fn\">Δ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L60-L64","name":"AlgebraicTopology.DoldKan.Isδ₀.eq_δ₀","line":60,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Isδ₀.eq_δ₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Isδ₀.eq_δ₀\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Isδ₀</span>.<span class=\"name\">eq_δ₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hi</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Isδ₀\">Isδ₀</a> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Basic.html#SimplexCategory.δ\">SimplexCategory.δ</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L52-L58","name":"AlgebraicTopology.DoldKan.Isδ₀.iff","line":52,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Isδ₀.iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Isδ₀.iff\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Isδ₀</span>.<span class=\"name\">iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Isδ₀\">Isδ₀</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Basic.html#SimplexCategory.δ\">SimplexCategory.δ</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.lean#L44-L48","name":"AlgebraicTopology.DoldKan.Isδ₀","line":44,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Isδ₀","doc":"`Isδ₀ i` is a simple condition used to check whether a monomorphism `i` in\n`SimplexCategory` identifies to the coface map `δ 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/FunctorGamma.html#AlgebraicTopology.DoldKan.Isδ₀\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Isδ₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Δ </span><span class=\"fn\">Δ'</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Δ'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Δ</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">i</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}