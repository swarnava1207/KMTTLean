{"name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.TypeAnalysis","instances":[],"imports":["Init.Data.SInt.Basic","Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L221-L226","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.typeCasesRelevant","line":221,"kind":"opaque","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.typeCasesRelevant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.typeCasesRelevant\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">typeAnalysisPass</span>.<span class=\"name\">typeCasesRelevant</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.PreProcessM\">PreProcessM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L211-L219","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeStructure","line":211,"kind":"opaque","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeStructure","doc":"Returns true if the structure is appropriate for case splitting and contains fields of interest.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeStructure\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">typeAnalysisPass</span>.<span class=\"name\">analyzeStructure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.PreProcessM\">PreProcessM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L182-L206","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeConst","line":182,"kind":"opaque","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeConst","doc":"Returns true if the const is something that we would like to see revealed by case splitting on\nstructures that contain it.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeConst\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">typeAnalysisPass</span>.<span class=\"name\">analyzeConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.PreProcessM\">PreProcessM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L173-L176","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeType","line":173,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.analyzeType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">typeAnalysisPass</span>.<span class=\"name\">analyzeType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expr</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.PreProcessM\">PreProcessM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L167-L171","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.checkContext","line":167,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.checkContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass.checkContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">typeAnalysisPass</span>.<span class=\"name\">checkContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.PreProcessM\">PreProcessM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L157-L226","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass","line":157,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.typeAnalysisPass\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">typeAnalysisPass</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.Pass\">Pass</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L154-L155","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isBuiltIn","line":154,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isBuiltIn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isBuiltIn\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">isBuiltIn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L149-L152","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.builtinTypes","line":149,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.builtinTypes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.builtinTypes\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">builtinTypes</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L125-L147","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifyEnumWithDefault","line":125,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifyEnumWithDefault","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifyEnumWithDefault\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">isSupportedMatch</span>.<span class=\"name\">verifyEnumWithDefault</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">defnInfo</span> : <a href=\"./Lean/Declaration.html#Lean.DefinitionVal\">DefinitionVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inductiveInfo</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctors</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">ConstructorVal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L110-L123","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifySimpleEnum","line":110,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifySimpleEnum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifySimpleEnum\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">isSupportedMatch</span>.<span class=\"name\">verifySimpleEnum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">defnInfo</span> : <a href=\"./Lean/Declaration.html#Lean.DefinitionVal\">DefinitionVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inductiveInfo</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctors</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Declaration.html#Lean.ConstructorVal\">ConstructorVal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L93-L108","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifySimpleCasesOnApp","line":93,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifySimpleCasesOnApp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch.verifySimpleCasesOnApp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">isSupportedMatch</span>.<span class=\"name\">verifySimpleCasesOnApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inductiveInfo</span> : <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">InductiveVal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args </span><span class=\"fn\">params</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.lean#L21-L147","name":"Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch","line":21,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch","doc":"Determine whether `declName` is an enum inductive `.match_x` definition that is supported, see\n`MatchKind` for the supported shapes.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/TypeAnalysis.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.isSupportedMatch\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">Normalize</span>.<span class=\"name\">isSupportedMatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/Normalize/Basic.html#Lean.Elab.Tactic.BVDecide.Frontend.Normalize.MatchKind\">MatchKind</a>)</span></span></div></div>"}]}