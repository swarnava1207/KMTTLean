{"name":"Mathlib.SetTheory.Cardinal.Ordinal","instances":[],"imports":["Init","Mathlib.SetTheory.Cardinal.Arithmetic","Mathlib.SetTheory.Ordinal.Principal"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L185-L187","name":"Cardinal.principal_add_aleph","line":185,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.principal_add_aleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.principal_add_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">principal_add_aleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Principal.html#Ordinal.Principal\">Ordinal.Principal</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">aleph</a> <span class=\"fn\">o</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L182-L183","name":"Ordinal.principal_mul_omega","line":182,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.principal_mul_omega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.principal_mul_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">principal_mul_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Principal.html#Ordinal.Principal\">Principal</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L176-L180","name":"Ordinal.IsInitial.principal_mul","line":176,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.IsInitial.principal_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.IsInitial.principal_mul\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsInitial</span>.<span class=\"name\">principal_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Principal.html#Ordinal.Principal\">Principal</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L171-L174","name":"Ordinal.principal_mul_ord","line":171,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.principal_mul_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.principal_mul_ord\"><span class=\"name\">Ordinal</span>.<span class=\"name\">principal_mul_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Principal.html#Ordinal.Principal\">Principal</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L168-L169","name":"Ordinal.principal_add_omega","line":168,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.principal_add_omega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.principal_add_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">principal_add_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Principal.html#Ordinal.Principal\">Principal</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L162-L166","name":"Ordinal.IsInitial.principal_add","line":162,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.IsInitial.principal_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.IsInitial.principal_add\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsInitial</span>.<span class=\"name\">principal_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Principal.html#Ordinal.Principal\">Principal</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L157-L160","name":"Ordinal.principal_add_ord","line":157,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.principal_add_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.principal_add_ord\"><span class=\"name\">Ordinal</span>.<span class=\"name\">principal_add_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Principal.html#Ordinal.Principal\">Principal</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L151-L153","name":"Ordinal.principal_opow_ord","line":151,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.principal_opow_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.principal_opow_ord\"><span class=\"name\">Ordinal</span>.<span class=\"name\">principal_opow_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Principal.html#Ordinal.Principal\">Principal</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L146-L149","name":"Ordinal.IsInitial.principal_opow","line":146,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.IsInitial.principal_opow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.IsInitial.principal_opow\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsInitial</span>.<span class=\"name\">principal_opow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">IsInitial</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Principal.html#Ordinal.Principal\">Principal</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L137-L144","name":"Ordinal.principal_opow_omega","line":137,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.principal_opow_omega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.principal_opow_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">principal_opow_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Principal.html#Ordinal.Principal\">Principal</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">omega</a> <span class=\"fn\">o</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L134-L135","name":"Ordinal.card_opow_omega0","line":134,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_opow_omega0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_opow_omega0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_opow_omega0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a>).<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L131-L132","name":"Ordinal.card_omega0_opow","line":131,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_omega0_opow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_omega0_opow\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_omega0_opow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span>).<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L125-L129","name":"Ordinal.card_opow_eq_of_omega0_le_right","line":125,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_opow_eq_of_omega0_le_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_opow_eq_of_omega0_le_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_opow_eq_of_omega0_le_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L119-L123","name":"Ordinal.card_opow_eq_of_omega0_le_left","line":119,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_opow_eq_of_omega0_le_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_opow_eq_of_omega0_le_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_opow_eq_of_omega0_le_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L111-L117","name":"Ordinal.card_opow_le","line":111,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_opow_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_opow_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_opow_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> (<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L103-L109","name":"Ordinal.card_opow_le_of_omega0_le_right","line":103,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_opow_le_of_omega0_le_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_opow_le_of_omega0_le_right\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_opow_le_of_omega0_le_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L77-L101","name":"Ordinal.card_opow_le_of_omega0_le_left","line":77,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_opow_le_of_omega0_le_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_opow_le_of_omega0_le_left\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_opow_le_of_omega0_le_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L70-L75","name":"Ordinal.card_iSup_Iio_le_card_mul_iSup","line":70,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_iSup_Iio_le_card_mul_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_iSup_Iio_le_card_mul_iSup\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_iSup_Iio_le_card_mul_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(⨆ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">Cardinal.lift.{v, u}</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">⨆ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L65-L68","name":"Ordinal.card_iSup_Iio_le_sum_card","line":65,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_iSup_Iio_le_sum_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_iSup_Iio_le_sum_card\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_iSup_Iio_le_sum_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(⨆ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.sum\">Cardinal.sum</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.enumIsoToType\">enumIsoToType</a></span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span> <span class=\"fn\">i</span>)</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L60-L63","name":"Ordinal.card_iSup_le_sum_card","line":60,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_iSup_le_sum_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.card_iSup_le_sum_card\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_iSup_le_sum_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{max u v}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.sum\">Cardinal.sum</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L49-L58","name":"Ordinal.lift_card_iSup_le_sum_card","line":49,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.lift_card_iSup_le_sum_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.lift_card_iSup_le_sum_card\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_card_iSup_le_sum_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{v, u}</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{v}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">Cardinal.lift.{u, v}</a> <span class=\"fn\"><span class=\"fn\">(⨆ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.sum\">Cardinal.sum</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L42-L43","name":"Ordinal.Cardinal.mk_iUnion_Ordinal_le_of_le","line":42,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.Cardinal.mk_iUnion_Ordinal_le_of_le","doc":"**Alias** of `Cardinal.mk_iUnion_Ordinal_le_of_le`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Ordinal.Cardinal.mk_iUnion_Ordinal_le_of_le\"><span class=\"name\">Ordinal</span>.<span class=\"name\">Cardinal</span>.<span class=\"name\">mk_iUnion_Ordinal_le_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hA</span> : <span class=\"fn\">∀ <span class=\"fn\">j</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">A</span> <span class=\"fn\">j</span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">(⋃ (<span class=\"fn\">j</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span>), <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">j</span></span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L34-L38","name":"Cardinal.mk_iUnion_Ordinal_le_of_le","line":34,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.mk_iUnion_Ordinal_le_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.mk_iUnion_Ordinal_le_of_le\"><span class=\"name\">Cardinal</span>.<span class=\"name\">mk_iUnion_Ordinal_le_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hA</span> : <span class=\"fn\">∀ <span class=\"fn\">j</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">mk</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">A</span> <span class=\"fn\">j</span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">mk</a> <span class=\"fn\">↑<span class=\"fn\">(⋃ (<span class=\"fn\">j</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span>), <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">j</span></span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/Ordinal.lean#L22-L32","name":"Cardinal.mk_iUnion_Ordinal_lift_le_of_le","line":22,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.mk_iUnion_Ordinal_lift_le_of_le","doc":"Bounds the cardinal of an ordinal-indexed union of sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Ordinal.html#Cardinal.mk_iUnion_Ordinal_lift_le_of_le\"><span class=\"name\">Cardinal</span>.<span class=\"name\">mk_iUnion_Ordinal_lift_le_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{v}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ho</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">lift.{v, u}</a> <span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.card\">card</a></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.lift\">lift.{u, v}</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hA</span> : <span class=\"fn\">∀ <span class=\"fn\">j</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">mk</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">A</span> <span class=\"fn\">j</span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">mk</a> <span class=\"fn\">↑<span class=\"fn\">(⋃ (<span class=\"fn\">j</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span>), <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">j</span></span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></div></div>"}]}