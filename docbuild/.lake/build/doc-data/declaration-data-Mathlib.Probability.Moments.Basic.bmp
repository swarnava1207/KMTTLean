{"name":"Mathlib.Probability.Moments.Basic","instances":[],"imports":["Init","Mathlib.Probability.IdentDistrib"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L453-L458","name":"ProbabilityTheory.integrable_exp_mul_of_le","line":453,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.integrable_exp_mul_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.integrable_exp_mul_of_le\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">integrable_exp_mul_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L449-L451","name":"ProbabilityTheory.aemeasurable_exp_mul","line":449,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.aemeasurable_exp_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.aemeasurable_exp_mul\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">aemeasurable_exp_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L443-L445","name":"ProbabilityTheory.mgf_dirac'","line":443,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_dirac'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_dirac'\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_dirac'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSingletonClass\">MeasurableSingletonClass</a> <span class=\"fn\">Ω</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/Dirac.html#MeasureTheory.Measure.dirac\">MeasureTheory.Measure.dirac</a> <span class=\"fn\">ω</span>)</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L438-L441","name":"ProbabilityTheory.mgf_dirac","line":438,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_dirac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_dirac\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_dirac</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">MeasureTheory.Measure.map</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Dirac.html#MeasureTheory.Measure.dirac\">MeasureTheory.Measure.dirac</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">t</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L428-L434","name":"ProbabilityTheory.measure_le_le_exp_cgf","line":428,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.measure_le_le_exp_cgf","doc":"**Chernoff bound** on the lower tail of a real random variable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.measure_le_le_exp_cgf\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">measure_le_le_exp_cgf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ε</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">ω</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L420-L426","name":"ProbabilityTheory.measure_ge_le_exp_cgf","line":420,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.measure_ge_le_exp_cgf","doc":"**Chernoff bound** on the upper tail of a real random variable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.measure_ge_le_exp_cgf\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">measure_ge_le_exp_cgf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ε</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">ω</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L409-L418","name":"ProbabilityTheory.measure_le_le_exp_mul_mgf","line":409,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.measure_le_le_exp_mul_mgf","doc":"**Chernoff bound** on the lower tail of a real random variable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.measure_le_le_exp_mul_mgf\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">measure_le_le_exp_mul_mgf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ε</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">ω</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">ε</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ε</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L387-L407","name":"ProbabilityTheory.measure_ge_le_exp_mul_mgf","line":387,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.measure_ge_le_exp_mul_mgf","doc":"**Chernoff bound** on the upper tail of a real random variable. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.measure_ge_le_exp_mul_mgf\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">measure_ge_le_exp_mul_mgf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ε</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">ω</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">Ω</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\">ε</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ε</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L374-L383","name":"ProbabilityTheory.mgf_sum_of_identDistrib","line":374,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_sum_of_identDistrib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_sum_of_identDistrib\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_sum_of_identDistrib</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">j</span> : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_meas</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_indep</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.iIndepFun\">iIndepFun</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∀ <span class=\"fn\">j</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">μ</span> <span class=\"fn\">μ</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hj</span> : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">(∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L369-L372","name":"ProbabilityTheory.mgf_congr_of_identDistrib","line":369,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_congr_of_identDistrib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_congr_of_identDistrib\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_congr_of_identDistrib</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω'</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m'</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ'</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X'</span> : <span class=\"fn\"><span class=\"fn\">Ω'</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hident</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">X</span> <span class=\"fn\">X'</span> <span class=\"fn\">μ</span> <span class=\"fn\">μ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X'</span> <span class=\"fn\">μ'</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L357-L365","name":"ProbabilityTheory.iIndepFun.cgf_sum","line":357,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.iIndepFun.cgf_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.iIndepFun.cgf_sum\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">iIndepFun</span>.<span class=\"name\">cgf_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_indep</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.iIndepFun\">iIndepFun</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_meas</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int</span> : <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">(∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L343-L355","name":"ProbabilityTheory.iIndepFun.mgf_sum","line":343,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.iIndepFun.mgf_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.iIndepFun.mgf_sum\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">iIndepFun</span>.<span class=\"name\">mgf_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_indep</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.iIndepFun\">iIndepFun</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_meas</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">(∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L326-L339","name":"ProbabilityTheory.iIndepFun.integrable_exp_mul_sum","line":326,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.iIndepFun.integrable_exp_mul_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.iIndepFun.integrable_exp_mul_sum\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">iIndepFun</span>.<span class=\"name\">integrable_exp_mul_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_indep</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.iIndepFun\">iIndepFun</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_meas</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int</span> : <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L319-L324","name":"ProbabilityTheory.IndepFun.integrable_exp_mul_add","line":319,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.IndepFun.integrable_exp_mul_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.IndepFun.integrable_exp_mul_add\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IndepFun</span>.<span class=\"name\">integrable_exp_mul_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_indep</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int_X</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int_Y</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">Y</span>) <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L306-L317","name":"ProbabilityTheory.aestronglyMeasurable_exp_mul_sum","line":306,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.aestronglyMeasurable_exp_mul_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.aestronglyMeasurable_exp_mul_sum\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">aestronglyMeasurable_exp_mul_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int</span> : <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L299-L304","name":"ProbabilityTheory.aestronglyMeasurable_exp_mul_add","line":299,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.aestronglyMeasurable_exp_mul_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.aestronglyMeasurable_exp_mul_add\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">aestronglyMeasurable_exp_mul_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int_X</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int_Y</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">(<span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">Y</span>) <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L290-L297","name":"ProbabilityTheory.IndepFun.cgf_add","line":290,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.IndepFun.cgf_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.IndepFun.cgf_add\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IndepFun</span>.<span class=\"name\">cgf_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_indep</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int_X</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int_Y</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> (<span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">Y</span>) <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L281-L288","name":"ProbabilityTheory.IndepFun.mgf_add'","line":281,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.IndepFun.mgf_add'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.IndepFun.mgf_add'\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IndepFun</span>.<span class=\"name\">mgf_add'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_indep</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hY</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> (<span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">Y</span>) <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L274-L279","name":"ProbabilityTheory.IndepFun.mgf_add","line":274,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.IndepFun.mgf_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.IndepFun.mgf_add\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IndepFun</span>.<span class=\"name\">mgf_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_indep</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hY</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> (<span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">Y</span>) <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L267-L272","name":"ProbabilityTheory.IndepFun.exp_mul","line":267,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.IndepFun.exp_mul","doc":"This is a trivial application of `IndepFun.comp` but it will come up frequently. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.IndepFun.exp_mul\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">IndepFun</span>.<span class=\"name\">exp_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_indep</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Independence/Basic.html#ProbabilityTheory.IndepFun\">IndepFun</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L255-L263","name":"ProbabilityTheory.mgf_anti_of_nonpos","line":255,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_anti_of_nonpos","doc":"The moment generating function is antitone in the random variable for `t ≤ 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_anti_of_nonpos\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_anti_of_nonpos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hXY</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyLE\">≤ᵐ[</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyLE\">]</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">htX</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L245-L253","name":"ProbabilityTheory.mgf_mono_of_nonneg","line":245,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_mono_of_nonneg","doc":"The moment generating function is monotone in the random variable for `t ≥ 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_mono_of_nonneg\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_mono_of_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hXY</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyLE\">≤ᵐ[</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyLE\">]</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">htY</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L242-L243","name":"ProbabilityTheory.mgf_smul_measure","line":242,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_smul_measure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_smul_measure\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_smul_measure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> (<span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">μ</span>) <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L237-L240","name":"ProbabilityTheory.mgf_sum_measure","line":237,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_sum_measure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_sum_measure\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_sum_measure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.Measure.sum\">MeasureTheory.Measure.sum</a> <span class=\"fn\">μ</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpace.html#MeasureTheory.Measure.sum\">MeasureTheory.Measure.sum</a> <span class=\"fn\">μ</span>)</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#tsum\">∑'</a> (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)<a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#tsum\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\">μ</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L232-L235","name":"ProbabilityTheory.mgf_add_measure","line":232,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_add_measure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_add_measure\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_add_measure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hν</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">ν</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> (<span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">ν</span>) <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">ν</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L229-L230","name":"ProbabilityTheory.mgf_add_const","line":229,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_add_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_add_const\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_add_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">α</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L223-L227","name":"ProbabilityTheory.mgf_const_add","line":223,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_const_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_const_add\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_const_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">α</span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L220-L221","name":"ProbabilityTheory.mgf_smul_left","line":220,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_smul_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_smul_left\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_smul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">X</span>) <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">t</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L218-L218","name":"ProbabilityTheory.cgf_neg","line":218,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_neg\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">cgf_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">X</span>) <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">t</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L216-L216","name":"ProbabilityTheory.mgf_neg","line":216,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_neg\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">X</span>) <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">t</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L211-L214","name":"ProbabilityTheory.mgf_congr_identDistrib","line":211,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_congr_identDistrib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_congr_identDistrib\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_congr_identDistrib</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω'</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ'</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ'</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">Ω'</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Probability/IdentDistrib.html#ProbabilityTheory.IdentDistrib\">IdentDistrib</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span> <span class=\"fn\">μ'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">Y</span> <span class=\"fn\">μ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L208-L209","name":"ProbabilityTheory.mgf_congr","line":208,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_congr\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᵐ[</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L203-L206","name":"ProbabilityTheory.mgf_id_map","line":203,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_id_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_id_map\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_id_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">MeasureTheory.Measure.map</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L198-L201","name":"ProbabilityTheory.mgf_map","line":198,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_map\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω'</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">mΩ'</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">Ω'</span> → <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hY</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/StronglyMeasurable/AEStronglyMeasurable.html#MeasureTheory.AEStronglyMeasurable\">MeasureTheory.AEStronglyMeasurable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">MeasureTheory.Measure.map</a> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">MeasureTheory.Measure.map</a> <span class=\"fn\">Y</span> <span class=\"fn\">μ</span>)</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> (<span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">Y</span>) <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L195-L196","name":"ProbabilityTheory.exp_cgf_of_neZero","line":195,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.exp_cgf_of_neZero","doc":"**Alias** of `ProbabilityTheory.exp_cgf`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.exp_cgf_of_neZero\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">exp_cgf_of_neZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hμ</span> : <span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L192-L193","name":"ProbabilityTheory.exp_cgf","line":192,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.exp_cgf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.exp_cgf\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">exp_cgf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hμ</span> : <span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> <span class=\"fn\">(<a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L186-L190","name":"ProbabilityTheory.mgf_pos_iff","line":186,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_pos_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_pos_iff\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_pos_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hμ</span> : <span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L182-L184","name":"ProbabilityTheory.mgf_pos","line":182,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_pos\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int_X</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L164-L180","name":"ProbabilityTheory.mgf_pos'","line":164,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_pos'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_pos'\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_pos'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int_X</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L161-L162","name":"ProbabilityTheory.mgf_nonneg","line":161,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_nonneg\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L158-L159","name":"ProbabilityTheory.cgf_undef","line":158,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_undef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_undef\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">cgf_undef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L155-L156","name":"ProbabilityTheory.mgf_undef","line":155,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_undef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_undef\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_undef</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">(fun (<span class=\"fn\">ω</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">ω</span></span>)</span>)</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L151-L153","name":"ProbabilityTheory.cgf_zero","line":151,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_zero\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">cgf_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">MeasureTheory.IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L149-L149","name":"ProbabilityTheory.cgf_zero'","line":149,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_zero'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_zero'\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">cgf_zero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Log/Basic.html#Real.log\">Real.log</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L146-L147","name":"ProbabilityTheory.mgf_zero","line":146,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_zero\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L142-L144","name":"ProbabilityTheory.mgf_zero'","line":142,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_zero'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_zero'\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_zero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L138-L140","name":"ProbabilityTheory.cgf_const","line":138,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_const\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">cgf_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\">c</span>)</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L129-L136","name":"ProbabilityTheory.cgf_const'","line":129,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_const'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_const'\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">cgf_const'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμ</span> : <span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\">c</span>)</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Log/Basic.html#Real.log\">Real.log</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L126-L127","name":"ProbabilityTheory.mgf_const","line":126,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_const\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\">c</span>)</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L122-L124","name":"ProbabilityTheory.mgf_const'","line":122,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_const'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_const'\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_const'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Ω</span>) =&gt; <span class=\"fn\">c</span>)</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L119-L120","name":"ProbabilityTheory.cgf_zero_measure","line":119,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_zero_measure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_zero_measure\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">cgf_zero_measure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">X</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L116-L117","name":"ProbabilityTheory.mgf_zero_measure","line":116,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_zero_measure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_zero_measure\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_zero_measure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">X</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L113-L114","name":"ProbabilityTheory.cgf_zero_fun","line":113,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_zero_fun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf_zero_fun\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">cgf_zero_fun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\">cgf</a> <span class=\"fn\">0</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/SpecialFunctions/Log/Basic.html#Real.log\">Real.log</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L109-L111","name":"ProbabilityTheory.mgf_zero_fun","line":109,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_zero_fun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf_zero_fun\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf_zero_fun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\">mgf</a> <span class=\"fn\">0</span> <span class=\"fn\">μ</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L105-L107","name":"ProbabilityTheory.cgf","line":105,"kind":"def","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf","doc":"Cumulant generating function of a real random variable `X`: `fun t => log μ[exp(t*X)]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.cgf\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">cgf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L101-L103","name":"ProbabilityTheory.mgf","line":101,"kind":"def","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf","doc":"Moment generating function of a real random variable `X`: `fun t => μ[exp(t*X)]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.mgf\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">mgf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L94-L95","name":"ProbabilityTheory.centralMoment_two_eq_variance","line":94,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment_two_eq_variance","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment_two_eq_variance\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">centralMoment_two_eq_variance</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hX</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment\">centralMoment</a> <span class=\"fn\">X</span> <span class=\"fn\">2</span> <span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Probability/Variance.html#ProbabilityTheory.variance\">variance</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L79-L92","name":"ProbabilityTheory.centralMoment_one","line":79,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment_one\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">centralMoment_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">MeasureTheory.IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment\">centralMoment</a> <span class=\"fn\">X</span> <span class=\"fn\">1</span> <span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L73-L77","name":"ProbabilityTheory.centralMoment_one'","line":73,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment_one'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment_one'\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">centralMoment_one'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">MeasureTheory.IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_int</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Function/L1Space/Integrable.html#MeasureTheory.Integrable\">MeasureTheory.Integrable</a> <span class=\"fn\">X</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment\">centralMoment</a> <span class=\"fn\">X</span> <span class=\"fn\">1</span> <span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∫</a> (<span class=\"fn\">x</span> : <span class=\"fn\">Ω</span>)<a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/MeasureTheory/Integral/Bochner.html#MeasureTheory.integral\">∂</a><span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L69-L71","name":"ProbabilityTheory.centralMoment_zero_measure","line":69,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment_zero_measure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment_zero_measure\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">centralMoment_zero_measure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment\">centralMoment</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L64-L67","name":"ProbabilityTheory.centralMoment_zero","line":64,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment_zero\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">centralMoment_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment\">centralMoment</a> <span class=\"fn\">0</span> <span class=\"fn\">p</span> <span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L61-L62","name":"ProbabilityTheory.moment_zero_measure","line":61,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.moment_zero_measure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.moment_zero_measure\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">moment_zero_measure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.moment\">moment</a> <span class=\"fn\">X</span> <span class=\"fn\">p</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L56-L59","name":"ProbabilityTheory.moment_zero","line":56,"kind":"theorem","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.moment_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.moment_zero\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">moment_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.moment\">moment</a> <span class=\"fn\">0</span> <span class=\"fn\">p</span> <span class=\"fn\">μ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L51-L54","name":"ProbabilityTheory.centralMoment","line":51,"kind":"def","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment","doc":"Central moment of a real random variable, `μ[(X - μ[X]) ^ p]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.centralMoment\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">centralMoment</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Probability/Moments/Basic.lean#L47-L49","name":"ProbabilityTheory.moment","line":47,"kind":"def","docLink":"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.moment","doc":"Moment of a real random variable, `μ[X ^ p]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Probability/Moments/Basic.html#ProbabilityTheory.moment\"><span class=\"name\">ProbabilityTheory</span>.<span class=\"name\">moment</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Ω</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">Ω</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">Ω</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">Ω</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"}]}