{"name":"Mathlib.Algebra.FreeAbelianGroup.Finsupp","instances":[],"imports":["Init","Mathlib.Algebra.BigOperators.Finsupp.Basic","Mathlib.Algebra.Module.End","Mathlib.GroupTheory.FreeAbelianGroup"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L138-L140","name":"FreeAbelianGroup.support_add","line":138,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_add\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Core.html#Union.union\">∪</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L131-L135","name":"FreeAbelianGroup.support_nsmul","line":131,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_nsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_nsmul\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_nsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span>).<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L124-L129","name":"FreeAbelianGroup.support_zsmul","line":124,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_zsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_zsmul\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_zsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span>).<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L120-L122","name":"FreeAbelianGroup.support_neg","line":120,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_neg\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span>).<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L116-L118","name":"FreeAbelianGroup.support_of","line":116,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_of\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup.of\">of</a> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">x</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L112-L114","name":"FreeAbelianGroup.support_zero","line":112,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support_zero\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L108-L110","name":"FreeAbelianGroup.not_mem_support_iff","line":108,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.not_mem_support_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.not_mem_support_iff\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">not_mem_support_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.coeff\">coeff</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L104-L106","name":"FreeAbelianGroup.mem_support_iff","line":104,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.mem_support_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.mem_support_iff\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">mem_support_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\">support</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.coeff\">coeff</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L99-L102","name":"FreeAbelianGroup.support","line":99,"kind":"def","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support","doc":"`support a` for `a : FreeAbelianGroup X` is the finite set of `x : X`\nthat occur in the formal sum `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.support\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">support</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L94-L97","name":"FreeAbelianGroup.coeff","line":94,"kind":"def","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.coeff","doc":"`coeff x` is the additive group homomorphism `FreeAbelianGroup X →+ ℤ`\nthat sends `a` to the multiplicity of `x : X` in `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.coeff\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">coeff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L84-L84","name":"FreeAbelianGroup.equivFinsupp_symm_apply","line":84,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp_symm_apply\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">equivFinsupp_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp\">equivFinsupp</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv.symm\">symm</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\">Finsupp.toFreeAbelianGroup</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L84-L84","name":"FreeAbelianGroup.equivFinsupp_apply","line":84,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp_apply\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">equivFinsupp_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp\">equivFinsupp</a> <span class=\"fn\">X</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\">toFinsupp</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L83-L90","name":"FreeAbelianGroup.equivFinsupp","line":83,"kind":"def","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp","doc":"The additive equivalence between `FreeAbelianGroup X` and `(X →₀ ℤ)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.equivFinsupp\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">equivFinsupp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv\">≃+</a> (<span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L76-L79","name":"FreeAbelianGroup.toFinsupp_toFreeAbelianGroup","line":76,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp_toFreeAbelianGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp_toFreeAbelianGroup\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">toFinsupp_toFreeAbelianGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\">toFinsupp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\">Finsupp.toFreeAbelianGroup</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L72-L74","name":"FreeAbelianGroup.toFinsupp_of","line":72,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp_of\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">toFinsupp_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\">toFinsupp</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup.of\">of</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.single\">Finsupp.single</a> <span class=\"fn\">x</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L63-L66","name":"Finsupp.toFreeAbelianGroup_toFinsupp","line":63,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_toFinsupp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_toFinsupp\"><span class=\"name\">Finsupp</span>.<span class=\"name\">toFreeAbelianGroup_toFinsupp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\">toFreeAbelianGroup</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\">FreeAbelianGroup.toFinsupp</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L55-L61","name":"Finsupp.toFreeAbelianGroup_comp_toFinsupp","line":55,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_comp_toFinsupp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_comp_toFinsupp\"><span class=\"name\">Finsupp</span>.<span class=\"name\">toFreeAbelianGroup_comp_toFinsupp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\">toFreeAbelianGroup</a>.<a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">comp</a></span> <a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\">FreeAbelianGroup.toFinsupp</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.id\">AddMonoidHom.id</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L47-L53","name":"FreeAbelianGroup.toFinsupp_comp_toFreeAbelianGroup","line":47,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp_comp_toFreeAbelianGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp_comp_toFreeAbelianGroup\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">toFinsupp_comp_toFreeAbelianGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\">toFinsupp</a>.<a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">comp</a></span> <a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\">Finsupp.toFreeAbelianGroup</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.id\">AddMonoidHom.id</a> (<span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L39-L45","name":"Finsupp.toFreeAbelianGroup_comp_singleAddHom","line":39,"kind":"theorem","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_comp_singleAddHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup_comp_singleAddHom\"><span class=\"name\">Finsupp</span>.<span class=\"name\">toFreeAbelianGroup_comp_singleAddHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\">toFreeAbelianGroup</a>.<a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finsupp/Single.html#Finsupp.singleAddHom\">singleAddHom</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/End.html#smulAddHom\">smulAddHom</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span>)</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Hom/Instances.html#AddMonoidHom.flip\">flip</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup.of\">FreeAbelianGroup.of</a> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L33-L35","name":"Finsupp.toFreeAbelianGroup","line":33,"kind":"def","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup","doc":"The group homomorphism `(X →₀ ℤ) →+ FreeAbelianGroup X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#Finsupp.toFreeAbelianGroup\"><span class=\"name\">Finsupp</span>.<span class=\"name\">toFreeAbelianGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/FreeAbelianGroup/Finsupp.lean#L29-L31","name":"FreeAbelianGroup.toFinsupp","line":29,"kind":"def","docLink":"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp","doc":"The group homomorphism `FreeAbelianGroup X →+ (X →₀ ℤ)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/FreeAbelianGroup/Finsupp.html#FreeAbelianGroup.toFinsupp\"><span class=\"name\">FreeAbelianGroup</span>.<span class=\"name\">toFinsupp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeAbelianGroup.html#FreeAbelianGroup\">FreeAbelianGroup</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/Data/Finsupp/Defs.html#Finsupp\">→₀</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>"}]}