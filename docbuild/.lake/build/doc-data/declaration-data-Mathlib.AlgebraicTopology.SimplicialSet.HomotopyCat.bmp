{"name":"Mathlib.AlgebraicTopology.SimplicialSet.HomotopyCat","instances":[{"typeNames":["SSet.OneTruncation₂"],"name":"SSet.instReflQuiverOneTruncation₂","className":"CategoryTheory.ReflQuiver"},{"typeNames":["SSet.Truncated.HomotopyCategory"],"name":"SSet.Truncated.instCategoryHomotopyCategory","className":"CategoryTheory.Category"}],"imports":["Init","Mathlib.AlgebraicTopology.SimplicialObject.Basic","Mathlib.AlgebraicTopology.SimplicialSet.Coskeletal","Mathlib.CategoryTheory.Category.ReflQuiv","Mathlib.Combinatorics.Quiver.ReflQuiver"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L347-L349","name":"SSet.hoFunctor","line":347,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.hoFunctor","doc":"The functor that takes a simplicial set to its homotopy category by passing through the\n2-truncation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.hoFunctor\"><span class=\"name\">SSet</span>.<span class=\"name\">hoFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L341-L343","name":"SSet.Truncated.hoFunctor₂_naturality","line":341,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.hoFunctor₂_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.hoFunctor₂_naturality\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">hoFunctor₂_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">CategoryTheory.Functor.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂\">oneTruncation₂</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Category/ReflQuiv.html#CategoryTheory.Cat.freeRefl\">CategoryTheory.Cat.freeRefl</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory.quotientFunctor\">HomotopyCategory.quotientFunctor</a> <span class=\"fn\">Y</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory.quotientFunctor\">HomotopyCategory.quotientFunctor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.mapHomotopyCategory\">mapHomotopyCategory</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L327-L339","name":"SSet.Truncated.hoFunctor₂","line":327,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.hoFunctor₂","doc":"The functor that takes a 2-truncated simplicial set to its homotopy category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.hoFunctor₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">hoFunctor₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span>)</span> <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L312-L325","name":"SSet.Truncated.mapHomotopyCategory","line":312,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.mapHomotopyCategory","doc":"A map of 2-truncated simplicial sets induces a functor between homotopy categories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.mapHomotopyCategory\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">mapHomotopyCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V </span><span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">W</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory\">HomotopyCategory</a></span> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory\">HomotopyCategory</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L303-L310","name":"SSet.Truncated.HomotopyCategory.lift_unique'","line":303,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory.lift_unique'","doc":"By `Quotient.lift_unique'` (not `Quotient.lift`) we have that `quotientFunctor V` is an\nepimorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory.lift_unique'\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">HomotopyCategory</span>.<span class=\"name\">lift_unique'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F₁ </span><span class=\"fn\">F₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory\">HomotopyCategory</a></span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory.quotientFunctor\">quotientFunctor</a> <span class=\"fn\">V</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">F₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory.quotientFunctor\">quotientFunctor</a> <span class=\"fn\">V</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">F₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">F₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">F₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L297-L301","name":"SSet.Truncated.HomotopyCategory.quotientFunctor","line":297,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory.quotientFunctor","doc":"A canonical functor from the free category on the refl quiver underlying a 2-truncated\nsimplicial set `V` to its homotopy category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory.quotientFunctor\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">HomotopyCategory</span>.<span class=\"name\">quotientFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/ReflQuiv.html#CategoryTheory.Cat.FreeRefl\">CategoryTheory.Cat.FreeRefl</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">V</span>)</span>)</span> <span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory\">HomotopyCategory</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L294-L295","name":"SSet.Truncated.instCategoryHomotopyCategory","line":294,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.instCategoryHomotopyCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.instCategoryHomotopyCategory\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">instCategoryHomotopyCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u, u}</a> <span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory\">HomotopyCategory</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L290-L292","name":"SSet.Truncated.HomotopyCategory","line":290,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory","doc":"The type underlying the homotopy category of a 2-truncated simplicial set `V`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HomotopyCategory\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">HomotopyCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L268-L288","name":"SSet.Truncated.HoRel₂.mk'","line":268,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HoRel₂.mk'","doc":"A 2-simplex whose faces are identified with certain arrows in `OneTruncation₂ V` defines\na term of type `HoRel₂` between those arrows. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HoRel₂.mk'\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">HoRel₂</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₀ </span><span class=\"fn\">X₁ </span><span class=\"fn\">X₂</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₀₁</span> : <span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₁</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₁₂</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f₀₂</span> : <span class=\"fn\">X₀</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₀₁</span> : <span class=\"fn\"><span class=\"fn\">f₀₁</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\">φ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁₂</span> : <span class=\"fn\"><span class=\"fn\">f₁₂</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\">φ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₀₂</span> : <span class=\"fn\"><span class=\"fn\">f₀₂</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\">φ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HoRel₂\">HoRel₂</a> <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\">X₀</span> }</span> <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\">X₂</span> }</span>\n  <span class=\"fn\">(<a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient.CompClosure\">CategoryTheory.Quotient.CompClosure</a> <a href=\"./Mathlib/CategoryTheory/Category/ReflQuiv.html#CategoryTheory.Cat.FreeReflRel\">CategoryTheory.Cat.FreeReflRel</a>)</span> <span class=\"fn\"><span class=\"fn\">f₀₂</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Hom.toPath\">toPath</a></span>)</span>\n  <span class=\"fn\">(<a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient.CompClosure\">CategoryTheory.Quotient.CompClosure</a> <a href=\"./Mathlib/CategoryTheory/Category/ReflQuiv.html#CategoryTheory.Cat.FreeReflRel\">CategoryTheory.Cat.FreeReflRel</a>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f₀₁</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Hom.toPath\">toPath</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">f₁₂</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Hom.toPath\">toPath</a></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L262-L266","name":"SSet.Truncated.HoRel₂.mk","line":262,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HoRel₂.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HoRel₂.mk\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">HoRel₂</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HoRel₂\">HoRel₂</a> <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.toPrefunctor\">toPrefunctor</a></span>.2</span> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ι0₂\">ι0₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\">φ</span></span> }</span> <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.toPrefunctor\">toPrefunctor</a></span>.2</span> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ι2₂\">ι2₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\">φ</span></span> }</span>\n  <span class=\"fn\">(<a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient.CompClosure\">CategoryTheory.Quotient.CompClosure</a> <a href=\"./Mathlib/CategoryTheory/Category/ReflQuiv.html#CategoryTheory.Cat.FreeReflRel\">CategoryTheory.Cat.FreeReflRel</a>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev02₂\">ev02₂</a> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Hom.toPath\">toPath</a></span>)</span>\n  <span class=\"fn\">(<a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient.CompClosure\">CategoryTheory.Quotient.CompClosure</a> <a href=\"./Mathlib/CategoryTheory/Category/ReflQuiv.html#CategoryTheory.Cat.FreeReflRel\">CategoryTheory.Cat.FreeReflRel</a>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev01₂\">ev01₂</a> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Hom.toPath\">toPath</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.comp\">comp</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev12₂\">ev12₂</a> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Hom.toPath\">toPath</a></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L258-L266","name":"SSet.Truncated.HoRel₂","line":258,"kind":"inductive","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HoRel₂","doc":"The 2-simplices in a 2-truncated simplicial set `V` generate a hom relation on the free\ncategory on the underlying refl quiver of `V`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.HoRel₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">HoRel₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/ReflQuiv.html#CategoryTheory.Cat.FreeRefl\">CategoryTheory.Cat.FreeRefl</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">V</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L252-L255","name":"SSet.Truncated.ev01₂","line":252,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev01₂","doc":"The arrow in the ReflQuiver `OneTruncation₂ V` of a 2-truncated simplicial set arising from the\n2nd face of a 2-simplex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev01₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">ev01₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev0₂\">ev0₂</a> <span class=\"fn\">φ</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev1₂\">ev1₂</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L247-L250","name":"SSet.Truncated.ev02₂","line":247,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev02₂","doc":"The arrow in the ReflQuiver `OneTruncation₂ V` of a 2-truncated simplicial set arising from the\n1st face of a 2-simplex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev02₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">ev02₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev0₂\">ev0₂</a> <span class=\"fn\">φ</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev2₂\">ev2₂</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L240-L245","name":"SSet.Truncated.ev12₂","line":240,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev12₂","doc":"The arrow in the ReflQuiver `OneTruncation₂ V` of a 2-truncated simplicial set arising from the\n0th face of a 2-simplex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev12₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">ev12₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev1₂\">ev1₂</a> <span class=\"fn\">φ</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev2₂\">ev2₂</a> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L237-L238","name":"SSet.Truncated.δ2₂","line":237,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.δ2₂","doc":"The 2nd face of a 2-simplex, as a morphism in the 2-truncated simplex category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.δ2₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">δ2₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L234-L235","name":"SSet.Truncated.δ1₂","line":234,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.δ1₂","doc":"The 1st face of a 2-simplex, as a morphism in the 2-truncated simplex category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.δ1₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">δ1₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L231-L232","name":"SSet.Truncated.δ0₂","line":231,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.δ0₂","doc":"The 0th face of a 2-simplex, as a morphism in the 2-truncated simplex category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.δ0₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">δ0₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L228-L229","name":"SSet.Truncated.ev2₂","line":228,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev2₂","doc":"The final vertex of a 2-simplex in a 2-truncated simplicial set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev2₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">ev2₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L225-L226","name":"SSet.Truncated.ev1₂","line":225,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev1₂","doc":"The middle vertex of a 2-simplex in a 2-truncated simplicial set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev1₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">ev1₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L222-L223","name":"SSet.Truncated.ev0₂","line":222,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev0₂","doc":"The initial vertex of a 2-simplex in a 2-truncated simplicial set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ev0₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">ev0₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L218-L220","name":"SSet.Truncated.ι2₂","line":218,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ι2₂","doc":"The map that picks up the final vertex of a 2-simplex, as a morphism in the 2-truncated\nsimplex category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ι2₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">ι2₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L214-L216","name":"SSet.Truncated.ι1₂","line":214,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ι1₂","doc":"The map that picks up the middle vertex of a 2-simplex, as a morphism in the 2-truncated\nsimplex category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ι1₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">ι1₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L210-L212","name":"SSet.Truncated.ι0₂","line":210,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ι0₂","doc":"The map that picks up the initial vertex of a 2-simplex, as a morphism in the 2-truncated\nsimplex category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.Truncated.ι0₂\"><span class=\"name\">SSet</span>.<span class=\"name\">Truncated</span>.<span class=\"name\">ι0₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L177-L177","name":"SSet.OneTruncation₂.ofNerve₂.natIso_inv_app_obj_obj","line":177,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso_inv_app_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso_inv_app_obj_obj\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">ofNerve₂</span>.<span class=\"name\">natIso_inv_app_obj_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of\">CategoryTheory.Cat.of</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso\">natIso</a>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L177-L177","name":"SSet.OneTruncation₂.ofNerve₂.natIso_inv_app_obj_map","line":177,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso_inv_app_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso_inv_app_obj_map\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">ofNerve₂</span>.<span class=\"name\">natIso_inv_app_obj_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of\">CategoryTheory.Cat.of</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">1</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso\">natIso</a>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L177-L177","name":"SSet.OneTruncation₂.ofNerve₂.natIso_hom_app_map","line":177,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso_hom_app_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso_hom_app_map\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">ofNerve₂</span>.<span class=\"name\">natIso_hom_app_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> :\n  <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.of\">CategoryTheory.Quiv.of</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.truncation\">truncation</a> <span class=\"fn\">2</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Nerve.html#CategoryTheory.nerve\">CategoryTheory.nerve</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of\">CategoryTheory.Cat.of</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>)</span>)</span>)</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso\">natIso</a>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveHomEquiv\">nerveHomEquiv</a> <span class=\"fn\">X✝</span> <span class=\"fn\">Y✝</span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L177-L177","name":"SSet.OneTruncation₂.ofNerve₂.natIso_hom_app_obj","line":177,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso_hom_app_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso_hom_app_obj\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">ofNerve₂</span>.<span class=\"name\">natIso_hom_app_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.truncation\">truncation</a> <span class=\"fn\">2</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Nerve.html#CategoryTheory.nerve\">CategoryTheory.nerve</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of\">CategoryTheory.Cat.of</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso\">natIso</a>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L177-L177","name":"SSet.OneTruncation₂.ofNerve₂.natIso_inv_app_map","line":177,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso_inv_app_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso_inv_app_map\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">ofNerve₂</span>.<span class=\"name\">natIso_inv_app_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat\">CategoryTheory.Cat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Quiv.html#CategoryTheory.Quiv.of\">CategoryTheory.Quiv.of</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of\">CategoryTheory.Cat.of</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso\">natIso</a>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveHomEquiv\">nerveHomEquiv</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀\">CategoryTheory.ComposableArrows.mk₀</a> <span class=\"fn\">X✝</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀\">CategoryTheory.ComposableArrows.mk₀</a> <span class=\"fn\">Y</span>)</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L175-L194","name":"SSet.OneTruncation₂.ofNerve₂.natIso","line":175,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso","doc":"The refl quiver underlying a nerve is naturally isomorphic to the refl quiver underlying the\ncategory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂.natIso\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">ofNerve₂</span>.<span class=\"name\">natIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Coskeletal.html#CategoryTheory.Nerve.nerveFunctor₂\">CategoryTheory.Nerve.nerveFunctor₂</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂\">oneTruncation₂</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <a href=\"./Mathlib/CategoryTheory/Category/ReflQuiv.html#CategoryTheory.ReflQuiv.forget\">CategoryTheory.ReflQuiv.forget</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L157-L173","name":"SSet.OneTruncation₂.ofNerve₂","line":157,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂","doc":"The refl quiver underlying a nerve is isomorphic to the refl quiver underlying the category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.ofNerve₂\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">ofNerve₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/ReflQuiv.html#CategoryTheory.ReflQuiv.of\">CategoryTheory.ReflQuiv.of</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Coskeletal.html#CategoryTheory.Nerve.nerveFunctor₂\">CategoryTheory.Nerve.nerveFunctor₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Cat.html#CategoryTheory.Cat.of\">CategoryTheory.Cat.of</a> <span class=\"fn\">C</span>)</span>)</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/ReflQuiv.html#CategoryTheory.ReflQuiv.of\">CategoryTheory.ReflQuiv.of</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L142-L155","name":"SSet.OneTruncation₂.nerveHomEquiv","line":142,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveHomEquiv","doc":"A hom equivalence over the function `OneTruncation₂.nerveEquiv`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveHomEquiv\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">nerveHomEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.truncation\">truncation</a> <span class=\"fn\">2</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Nerve.html#CategoryTheory.nerve\">CategoryTheory.nerve</a> <span class=\"fn\">C</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>) <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveEquiv\">nerveEquiv</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveEquiv\">nerveEquiv</a> <span class=\"fn\">Y</span></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L134-L134","name":"SSet.OneTruncation₂.nerveEquiv_apply","line":134,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveEquiv_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">nerveEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.truncation\">truncation</a> <span class=\"fn\">2</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Nerve.html#CategoryTheory.nerve\">CategoryTheory.nerve</a> <span class=\"fn\">C</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveEquiv\">nerveEquiv</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.obj'\">CategoryTheory.ComposableArrows.obj'</a> <span class=\"fn\">X</span> <span class=\"fn\">0</span> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveEquiv._proof_28\">nerveEquiv._proof_28</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L134-L134","name":"SSet.OneTruncation₂.nerveEquiv_symm_apply","line":134,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveEquiv_symm_apply\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">nerveEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveEquiv\">nerveEquiv</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ComposableArrows.html#CategoryTheory.ComposableArrows.mk₀\">CategoryTheory.ComposableArrows.mk₀</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L132-L140","name":"SSet.OneTruncation₂.nerveEquiv","line":132,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveEquiv","doc":"An equivalence between the type of objects underlying a category and the type of 0-simplices in\nthe 2-truncated nerve. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.nerveEquiv\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">nerveEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.truncation\">truncation</a> <span class=\"fn\">2</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Nerve.html#CategoryTheory.nerve\">CategoryTheory.nerve</a> <span class=\"fn\">C</span>)</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L121-L127","name":"SSet.OneTruncation₂.homOfEq_edge","line":121,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.homOfEq_edge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.homOfEq_edge\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">homOfEq_edge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₁ </span><span class=\"fn\">y₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">y₂</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">x₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y₁</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₂</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\">y₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y₂</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.homOfEq\">Quiver.homOfEq</a> <span class=\"fn\">f</span> <span class=\"fn\">hx</span> <span class=\"fn\">hy</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L117-L117","name":"SSet.OneTruncation₂.hom_ext_iff","line":117,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.hom_ext_iff\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L117-L119","name":"SSet.OneTruncation₂.hom_ext","line":117,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.hom_ext\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span> → <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L104-L104","name":"SSet.oneTruncation₂_map_map_edge","line":104,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂_map_map_edge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂_map_map_edge\"><span class=\"name\">SSet</span>.<span class=\"name\">oneTruncation₂_map_map_edge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">S</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/ReflQuiv.html#CategoryTheory.ReflQuiv.of\">CategoryTheory.ReflQuiv.of</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">S</span>)</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂\">oneTruncation₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">property</span> := <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂._proof_10\">oneTruncation₂._proof_10</a> }</span>)</span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L104-L104","name":"SSet.oneTruncation₂_obj","line":104,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂_obj\"><span class=\"name\">SSet</span>.<span class=\"name\">oneTruncation₂_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂\">oneTruncation₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/ReflQuiv.html#CategoryTheory.ReflQuiv.of\">CategoryTheory.ReflQuiv.of</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">S</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L104-L104","name":"SSet.oneTruncation₂_map_obj","line":104,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂_map_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂_map_obj\"><span class=\"name\">SSet</span>.<span class=\"name\">oneTruncation₂_map_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S </span><span class=\"fn\">T</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">S</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">property</span> := <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂._proof_1\">OneTruncation₂._proof_1</a> }</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂\">oneTruncation₂</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">property</span> := <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂._proof_1\">OneTruncation₂._proof_1</a> }</span>)</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L103-L115","name":"SSet.oneTruncation₂","line":103,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂","doc":"The functor that carries a 2-truncated simplicial set to its underlying refl quiver. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.oneTruncation₂\"><span class=\"name\">SSet</span>.<span class=\"name\">oneTruncation₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span>)</span> <a href=\"./Mathlib/CategoryTheory/Category/ReflQuiv.html#CategoryTheory.ReflQuiv\">CategoryTheory.ReflQuiv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L99-L101","name":"SSet.OneTruncation₂.id_edge","line":99,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.id_edge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.id_edge\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">id_edge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/ReflQuiver.html#CategoryTheory.ReflQuiver.id\">CategoryTheory.ReflQuiver.id</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L87-L97","name":"SSet.instReflQuiverOneTruncation₂","line":87,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.instReflQuiverOneTruncation₂","doc":"A 2-truncated simplicial set `S` has an underlying refl quiver `SSet.OneTruncation₂ S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.instReflQuiverOneTruncation₂\"><span class=\"name\">SSet</span>.<span class=\"name\">instReflQuiverOneTruncation₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/ReflQuiver.html#CategoryTheory.ReflQuiver\">CategoryTheory.ReflQuiver</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">S</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L85-L85","name":"SSet.OneTruncation₂.Hom.tgt_eq","line":85,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.tgt_eq","doc":"An arrow in `OneTruncation₂.Hom X Y` includes a target equality. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.tgt_eq\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">Hom</span>.<span class=\"name\">tgt_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L83-L83","name":"SSet.OneTruncation₂.Hom.src_eq","line":83,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.src_eq","doc":"An arrow in `OneTruncation₂.Hom X Y` includes a source equality. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.src_eq\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">Hom</span>.<span class=\"name\">src_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L81-L81","name":"SSet.OneTruncation₂.Hom.edge","line":81,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge","doc":"An arrow in `OneTruncation₂.Hom X Y` includes the data of a 1-simplex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">Hom</span>.<span class=\"name\">edge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L79-L79","name":"SSet.OneTruncation₂.Hom.mk","line":79,"kind":"ctor","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.mk\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">edge</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">src_eq</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\">edge</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tgt_eq</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span> <span class=\"fn\">edge</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L78-L78","name":"SSet.OneTruncation₂.Hom.ext","line":78,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.ext\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">edge</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L78-L78","name":"SSet.OneTruncation₂.Hom.ext_iff","line":78,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.ext_iff\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom.edge\">edge</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L76-L85","name":"SSet.OneTruncation₂.Hom","line":76,"kind":"structure","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom","doc":"The hom-types of the refl quiver underlying a simplicial set `S` are types of edges in `S _⦋1⦌₂`\ntogether with source and target equalities. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂.Hom\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\">OneTruncation₂</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L72-L72","name":"SSet.δ₂_two_comp_σ₂_zero_assoc","line":72,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_two_comp_σ₂_zero_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_two_comp_σ₂_zero_assoc\"><span class=\"name\">SSet</span>.<span class=\"name\">δ₂_two_comp_σ₂_zero_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory\">CategoryTheory.FullSubcategory</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>) =&gt; <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L72-L74","name":"SSet.δ₂_two_comp_σ₂_zero","line":72,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_two_comp_σ₂_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_two_comp_σ₂_zero\"><span class=\"name\">SSet</span>.<span class=\"name\">δ₂_two_comp_σ₂_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L69-L69","name":"SSet.δ₂_two_comp_σ₂_one_assoc","line":69,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_two_comp_σ₂_one_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_two_comp_σ₂_one_assoc\"><span class=\"name\">SSet</span>.<span class=\"name\">δ₂_two_comp_σ₂_one_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory\">CategoryTheory.FullSubcategory</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>) =&gt; <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L69-L70","name":"SSet.δ₂_two_comp_σ₂_one","line":69,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_two_comp_σ₂_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_two_comp_σ₂_one\"><span class=\"name\">SSet</span>.<span class=\"name\">δ₂_two_comp_σ₂_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">2</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L65-L65","name":"SSet.δ₂_one_comp_σ₂_zero_assoc","line":65,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_one_comp_σ₂_zero_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_one_comp_σ₂_zero_assoc\"><span class=\"name\">SSet</span>.<span class=\"name\">δ₂_one_comp_σ₂_zero_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> := by decide)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> := by decide)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory\">CategoryTheory.FullSubcategory</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>) =&gt; <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">hn</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">1</span> <span class=\"fn\">hn</span> <span class=\"fn\">hn'</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">hn'</span> <span class=\"fn\">hn</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L65-L67","name":"SSet.δ₂_one_comp_σ₂_zero","line":65,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_one_comp_σ₂_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_one_comp_σ₂_zero\"><span class=\"name\">SSet</span>.<span class=\"name\">δ₂_one_comp_σ₂_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> := by decide)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> := by decide)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">1</span> <span class=\"fn\">hn</span> <span class=\"fn\">hn'</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">hn'</span> <span class=\"fn\">hn</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">hn</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L61-L61","name":"SSet.δ₂_zero_comp_σ₂_one_assoc","line":61,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_zero_comp_σ₂_one_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_zero_comp_σ₂_one_assoc\"><span class=\"name\">SSet</span>.<span class=\"name\">δ₂_zero_comp_σ₂_one_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory\">CategoryTheory.FullSubcategory</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>) =&gt; <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L61-L63","name":"SSet.δ₂_zero_comp_σ₂_one","line":61,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_zero_comp_σ₂_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_zero_comp_σ₂_one\"><span class=\"name\">SSet</span>.<span class=\"name\">δ₂_zero_comp_σ₂_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L57-L57","name":"SSet.δ₂_zero_comp_σ₂_zero_assoc","line":57,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_zero_comp_σ₂_zero_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_zero_comp_σ₂_zero_assoc\"><span class=\"name\">SSet</span>.<span class=\"name\">δ₂_zero_comp_σ₂_zero_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> := by decide)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> := by decide)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory\">CategoryTheory.FullSubcategory</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory\">SimplexCategory</a>) =&gt; <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">hn</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">hn</span> <span class=\"fn\">hn'</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">hn'</span> <span class=\"fn\">hn</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L57-L59","name":"SSet.δ₂_zero_comp_σ₂_zero","line":57,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_zero_comp_σ₂_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂_zero_comp_σ₂_zero\"><span class=\"name\">SSet</span>.<span class=\"name\">δ₂_zero_comp_σ₂_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> := by decide)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> := by decide)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\">δ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">hn</span> <span class=\"fn\">hn'</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\">σ₂</a> <span class=\"fn\">0</span> <span class=\"fn\">hn'</span> <span class=\"fn\">hn</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">hn</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L53-L55","name":"SSet.σ₂","line":53,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂","doc":"Abbreviations for degeneracy maps in the 2-truncated simplex category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.σ₂\"><span class=\"name\">SSet</span>.<span class=\"name\">σ₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> := by decide)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> := by decide)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hn</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">hn'</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L49-L51","name":"SSet.δ₂","line":49,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂","doc":"Abbreviations for face maps in the 2-truncated simplex category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.δ₂\"><span class=\"name\">SSet</span>.<span class=\"name\">δ₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> := by decide)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.len\">len</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> := by decide)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">hn</span> }</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\">property</span> := <span class=\"fn\">hn'</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L45-L47","name":"SSet.OneTruncation₂","line":45,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂","doc":"A 2-truncated simplicial set `S` has an underlying refl quiver with `S _⦋0⦌₂` as its underlying\ntype. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.html#SSet.OneTruncation₂\"><span class=\"name\">SSet</span>.<span class=\"name\">OneTruncation₂</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet.Truncated\">Truncated</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}