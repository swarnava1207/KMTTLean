{"name":"Mathlib.Combinatorics.Quiver.Arborescence","instances":[{"typeNames":["Quiver.Path"],"name":"Quiver.instUniquePathRoot","className":"Unique"},{"typeNames":["WideSubquiver.toType"],"name":"Quiver.geodesicArborescence","className":"Quiver.Arborescence"}],"imports":["Init","Mathlib.Combinatorics.Quiver.Path","Mathlib.Combinatorics.Quiver.Subquiver","Mathlib.Order.WellFounded"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L114-L128","name":"Quiver.geodesicArborescence","line":114,"kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.geodesicArborescence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.geodesicArborescence\"><span class=\"name\">Quiver</span>.<span class=\"name\">geodesicArborescence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\">RootedConnected</a> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Arborescence</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver.toType\">WideSubquiver.toType</a> <span class=\"fn\">V</span> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.geodesicSubtree\">geodesicSubtree</a> <span class=\"fn\">r</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L110-L112","name":"Quiver.geodesicSubtree","line":110,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.geodesicSubtree","doc":"A subquiver which by construction is an arborescence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.geodesicSubtree\"><span class=\"name\">Quiver</span>.<span class=\"name\">geodesicSubtree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\">RootedConnected</a> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver\">WideSubquiver</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L106-L108","name":"Quiver.shortest_path_spec","line":106,"kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.shortest_path_spec","doc":"The length of a path is at least the length of the shortest path "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.shortest_path_spec\"><span class=\"name\">Quiver</span>.<span class=\"name\">shortest_path_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\">RootedConnected</a> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Path</a> <span class=\"fn\">r</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.shortestPath\">shortestPath</a> <span class=\"fn\">r</span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.length\">length</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path.length\">length</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L102-L104","name":"Quiver.shortestPath","line":102,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.shortestPath","doc":"A path from `r` of minimal length. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.shortestPath\"><span class=\"name\">Quiver</span>.<span class=\"name\">shortestPath</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\">RootedConnected</a> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Path</a> <span class=\"fn\">r</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L94-L94","name":"Quiver.RootedConnected.nonempty_path","line":94,"kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected.nonempty_path","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected.nonempty_path\"><span class=\"name\">Quiver</span>.<span class=\"name\">RootedConnected</span>.<span class=\"name\">nonempty_path</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\">RootedConnected</a> <span class=\"fn\">r</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Path</a> <span class=\"fn\">r</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L93-L93","name":"Quiver.RootedConnected.mk","line":93,"kind":"ctor","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected.mk\"><span class=\"name\">Quiver</span>.<span class=\"name\">RootedConnected</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonempty_path</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\">V</span>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Path</a> <span class=\"fn\">r</span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\">RootedConnected</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L92-L94","name":"Quiver.RootedConnected","line":92,"kind":"class","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected","doc":"`RootedConnected r` means that there is a path from `r` to any other vertex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.RootedConnected\"><span class=\"name\">Quiver</span>.<span class=\"name\">RootedConnected</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L51-L90","name":"Quiver.arborescenceMk","line":51,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.arborescenceMk","doc":"To show that `[Quiver V]` is an arborescence with root `r : V`, it suffices to\n- provide a height function `V → ℕ` such that every arrow goes from a\n  lower vertex to a higher vertex,\n- show that every vertex has at most one arrow to it, and\n- show that every vertex other than `r` has an arrow to it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.arborescenceMk\"><span class=\"name\">Quiver</span>.<span class=\"name\">arborescenceMk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">height</span> : <span class=\"fn\"><span class=\"fn\">V</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">height_lt</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">V</span>⦄, <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>) → <span class=\"fn\"><span class=\"fn\">height</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">height</span> <span class=\"fn\">b</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">unique_arrow</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\">V</span>⦄ (<span class=\"fn\">e</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span>) (<span class=\"fn\">f</span> : <span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">e</span> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root_or_arrow</span> : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\">V</span>), <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\">V</span>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> (<span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Arborescence</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L48-L49","name":"Quiver.instUniquePathRoot","line":48,"kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.instUniquePathRoot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.instUniquePathRoot\"><span class=\"name\">Quiver</span>.<span class=\"name\">instUniquePathRoot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Arborescence</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Path</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.root\">root</a> <span class=\"fn\">V</span>)</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L44-L46","name":"Quiver.root","line":44,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.root","doc":"The root of an arborescence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.root\"><span class=\"name\">Quiver</span>.<span class=\"name\">root</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Arborescence</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">V</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L42-L42","name":"Quiver.Arborescence.uniquePath","line":42,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.uniquePath","doc":"There is a unique path from the root to any other vertex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.uniquePath\"><span class=\"name\">Quiver</span>.<span class=\"name\">Arborescence</span>.<span class=\"name\">uniquePath</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Arborescence</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Path</a> <a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.root\">root</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L40-L40","name":"Quiver.Arborescence.root","line":40,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.root","doc":"The root of the arborescence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.root\"><span class=\"name\">Quiver</span>.<span class=\"name\">Arborescence</span>.<span class=\"name\">root</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Arborescence</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">V</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L38-L38","name":"Quiver.Arborescence.mk","line":38,"kind":"ctor","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence.mk\"><span class=\"name\">Quiver</span>.<span class=\"name\">Arborescence</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">root</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">uniquePath</span> : <span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">V</span>) → <span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Path</a> <span class=\"fn\">root</span> <span class=\"fn\">b</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\">Arborescence</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/Arborescence.lean#L36-L42","name":"Quiver.Arborescence","line":36,"kind":"class","docLink":"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence","doc":"A quiver is an arborescence when there is a unique path from the default vertex\nto every other vertex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/Arborescence.html#Quiver.Arborescence\"><span class=\"name\">Quiver</span>.<span class=\"name\">Arborescence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>"}]}