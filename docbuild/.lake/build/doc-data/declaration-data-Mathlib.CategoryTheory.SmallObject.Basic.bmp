{"name":"Mathlib.CategoryTheory.SmallObject.Basic","instances":[{"typeNames":["Ordinal.toType"],"name":"CategoryTheory.MorphismProperty.instOrderBotToTypeOrdSmallObjectκ","className":"OrderBot"},{"typeNames":["CategoryTheory.MorphismProperty.smallObjectκ"],"name":"CategoryTheory.MorphismProperty.isCardinalForSmallObjectArgument_smallObjectκ","className":"CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument"},{"typeNames":["CategoryTheory.MorphismProperty.llp","CategoryTheory.MorphismProperty.rlp"],"name":"CategoryTheory.MorphismProperty.instHasFunctorialFactorizationLlpRlp","className":"CategoryTheory.MorphismProperty.HasFunctorialFactorization"}],"imports":["Init","Mathlib.CategoryTheory.SmallObject.IsCardinalForSmallObjectArgument"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Basic.lean#L118-L126","name":"CategoryTheory.MorphismProperty.llp_rlp_of_hasSmallObjectArgument","line":118,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.llp_rlp_of_hasSmallObjectArgument","doc":"If `I : MorphismProperty C` permits the small object argument,\nthen the class of morphism that have the left lifting property with respect to\nthe maps that have the right lifting property with respect to `I` are\nexactly the retracts of transfinite compositions\nof pushouts of coproducts of morphisms in `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.llp_rlp_of_hasSmallObjectArgument\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">llp_rlp_of_hasSmallObjectArgument</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument\">HasSmallObjectArgument</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.rlp\">rlp</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.llp\">llp</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/MorphismProperty/TransfiniteComposition.html#CategoryTheory.MorphismProperty.transfiniteCompositions\">transfiniteCompositions.{w, v, u}</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Limits.html#CategoryTheory.MorphismProperty.coproducts\">coproducts.{w, v, u}</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Limits.html#CategoryTheory.MorphismProperty.pushouts\">pushouts</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Retract.html#CategoryTheory.MorphismProperty.retracts\">retracts</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Basic.lean#L108-L116","name":"CategoryTheory.MorphismProperty.llp_rlp_of_hasSmallObjectArgument'","line":108,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.llp_rlp_of_hasSmallObjectArgument'","doc":"If `I : MorphismProperty C` permits the small object argument,\nthen the class of morphism that have the left lifting property with respect to\nthe maps that have the right lifting property with respect to `I` are\nexactly the retracts of transfinite compositions (indexed by `I.smallObjectκ.ord.toType`)\nof pushouts of coproducts of morphisms in `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.llp_rlp_of_hasSmallObjectArgument'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">llp_rlp_of_hasSmallObjectArgument'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument\">HasSmallObjectArgument</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.rlp\">rlp</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.llp\">llp</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Limits.html#CategoryTheory.MorphismProperty.coproducts\">coproducts.{w, v, u}</a> <span class=\"fn\">I</span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Limits.html#CategoryTheory.MorphismProperty.pushouts\">pushouts</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/TransfiniteComposition.html#CategoryTheory.MorphismProperty.transfiniteCompositionsOfShape\">transfiniteCompositionsOfShape</a></span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.smallObjectκ\">smallObjectκ</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Retract.html#CategoryTheory.MorphismProperty.retracts\">retracts</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Basic.lean#L105-L106","name":"CategoryTheory.MorphismProperty.instHasFunctorialFactorizationLlpRlp","line":105,"kind":"instance","docLink":"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.instHasFunctorialFactorizationLlpRlp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.instHasFunctorialFactorizationLlpRlp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">instHasFunctorialFactorizationLlpRlp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument\">HasSmallObjectArgument</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.rlp\">rlp</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.llp\">llp</a></span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Factorization.html#CategoryTheory.MorphismProperty.HasFunctorialFactorization\">HasFunctorialFactorization</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/LiftingProperty.html#CategoryTheory.MorphismProperty.rlp\">rlp</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Basic.lean#L101-L103","name":"CategoryTheory.MorphismProperty.isCardinalForSmallObjectArgument_smallObjectκ","line":101,"kind":"instance","docLink":"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.isCardinalForSmallObjectArgument_smallObjectκ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.isCardinalForSmallObjectArgument_smallObjectκ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">isCardinalForSmallObjectArgument_smallObjectκ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument\">HasSmallObjectArgument</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.smallObjectκ\">smallObjectκ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Basic.lean#L98-L99","name":"CategoryTheory.MorphismProperty.instOrderBotToTypeOrdSmallObjectκ","line":98,"kind":"instance","docLink":"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.instOrderBotToTypeOrdSmallObjectκ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.instOrderBotToTypeOrdSmallObjectκ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">instOrderBotToTypeOrdSmallObjectκ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument\">HasSmallObjectArgument</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.smallObjectκ\">smallObjectκ</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Basic.lean#L95-L96","name":"CategoryTheory.MorphismProperty.smallObjectκ_isRegular","line":95,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.smallObjectκ_isRegular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.smallObjectκ_isRegular\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">smallObjectκ_isRegular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument\">HasSmallObjectArgument</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.smallObjectκ\">smallObjectκ</a></span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Basic.lean#L90-L93","name":"CategoryTheory.MorphismProperty.smallObjectκ","line":90,"kind":"def","docLink":"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.smallObjectκ","doc":"When `I : MorphismProperty C` permits the small object argument,\nthis is a cardinal `κ` such that `IsCardinalForSmallObjectArgument I κ` holds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.smallObjectκ\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">smallObjectκ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument\">HasSmallObjectArgument</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Basic.lean#L85-L85","name":"CategoryTheory.MorphismProperty.HasSmallObjectArgument.exists_cardinal","line":85,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument.exists_cardinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument.exists_cardinal\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">HasSmallObjectArgument</span>.<span class=\"name\">exists_cardinal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument\">HasSmallObjectArgument</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>) (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>) (<span class=\"fn\">x_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Basic.lean#L84-L84","name":"CategoryTheory.MorphismProperty.HasSmallObjectArgument.mk","line":84,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">HasSmallObjectArgument</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exists_cardinal</span> :\n  <span class=\"fn\">∃ (<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>) (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span></span>) (<span class=\"fn\">x_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#OrderBot\">OrderBot</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">ord</a></span>.<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.toType\">toType</a></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/IsCardinalForSmallObjectArgument.html#CategoryTheory.MorphismProperty.IsCardinalForSmallObjectArgument\">IsCardinalForSmallObjectArgument</a></span> <span class=\"fn\">κ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument\">HasSmallObjectArgument</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/SmallObject/Basic.lean#L80-L86","name":"CategoryTheory.MorphismProperty.HasSmallObjectArgument","line":80,"kind":"class","docLink":"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument","doc":"A class of morphisms `I : MorphismProperty C` satisfies the property\n`HasSmallObjectArgument.{w} I` if it permits the small object argument,\ni.e. there exists a regular cardinal `κ : Cardinal.{w}` such that\n`IsCardinalForSmallObjectArgument I κ` holds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/SmallObject/Basic.html#CategoryTheory.MorphismProperty.HasSmallObjectArgument\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">MorphismProperty</span>.<span class=\"name\">HasSmallObjectArgument</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">MorphismProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}