{"name":"Mathlib.ModelTheory.Algebra.Field.IsAlgClosed","instances":[{"typeNames":["FirstOrder.Language.Theory.fieldOfChar"],"name":"FirstOrder.Field.instModelFieldOfCharOfACF","className":"FirstOrder.Language.Theory.Model"},{"typeNames":["FirstOrder.Language.Theory.ACF"],"name":"FirstOrder.Field.instModelACFOfCharPOfIsAlgClosed","className":"FirstOrder.Language.Theory.Model"}],"imports":["Init","Mathlib.Data.Nat.PrimeFin","Mathlib.FieldTheory.IsAlgClosed.AlgebraicClosure","Mathlib.FieldTheory.IsAlgClosed.Classification","Mathlib.ModelTheory.Algebra.Field.CharP","Mathlib.ModelTheory.Satisfiability"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L236-L244","name":"FirstOrder.Field.ACF_zero_realize_iff_finite_ACF_prime_not_realize","line":236,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.ACF_zero_realize_iff_finite_ACF_prime_not_realize","doc":"Another statement of the **Lefschetz principle**. A first order sentence is modeled by the\ntheory of algebraically closed fields of characteristic zero if and only if it is modeled by the\ntheory of algebraically closed fields of characteristic `p` for all but finitely many primes `p`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.ACF_zero_realize_iff_finite_ACF_prime_not_realize\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">ACF_zero_realize_iff_finite_ACF_prime_not_realize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">Language.ring</a>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Sentence\">Sentence</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">0</span></span> <a href=\"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.ModelsBoundedFormula\">⊨ᵇ</a> <span class=\"fn\">φ</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">p</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes\">Nat.Primes</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span> <a href=\"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.ModelsBoundedFormula\">⊨ᵇ</a> <span class=\"fn\">φ</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L224-L234","name":"FirstOrder.Field.ACF_zero_realize_iff_infinite_ACF_prime_realize","line":224,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.ACF_zero_realize_iff_infinite_ACF_prime_realize","doc":"The **Lefschetz principle**. A first order sentence is modeled by the theory\nof algebraically closed fields of characteristic zero if and only if it is modeled by\nthe theory of algebraically closed fields of characteristic `p` for infinitely many `p`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.ACF_zero_realize_iff_infinite_ACF_prime_realize\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">ACF_zero_realize_iff_infinite_ACF_prime_realize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">Language.ring</a>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Sentence\">Sentence</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">0</span></span> <a href=\"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.ModelsBoundedFormula\">⊨ᵇ</a> <span class=\"fn\">φ</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">p</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes\">Nat.Primes</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span> <a href=\"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.ModelsBoundedFormula\">⊨ᵇ</a> <span class=\"fn\">φ</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Infinite\">Infinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L185-L222","name":"FirstOrder.Field.finite_ACF_prime_not_realize_of_ACF_zero_realize","line":185,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.finite_ACF_prime_not_realize_of_ACF_zero_realize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.finite_ACF_prime_not_realize_of_ACF_zero_realize\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">finite_ACF_prime_not_realize_of_ACF_zero_realize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">Language.ring</a>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Sentence\">Sentence</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">0</span></span> <a href=\"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.ModelsBoundedFormula\">⊨ᵇ</a> <span class=\"fn\">φ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">p</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Primes\">Nat.Primes</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span> <a href=\"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.ModelsBoundedFormula\">⊨ᵇ</a> <span class=\"fn\">φ</span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L170-L183","name":"FirstOrder.Field.ACF_isComplete","line":170,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.ACF_isComplete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.ACF_isComplete\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">ACF_isComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">p</span>)</span>.<a href=\"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsComplete\">IsComplete</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L149-L168","name":"FirstOrder.Field.ACF_categorical","line":149,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.ACF_categorical","doc":"The Theory `Theory.ACF p` is `κ`-categorical whenever `κ` is an uncountable cardinal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.ACF_categorical\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">ACF_categorical</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u_2}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hκ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">κ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/ModelTheory/Satisfiability.html#Cardinal.Categorical\">Categorical</a></span> <span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">p</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L129-L145","name":"FirstOrder.Field.ACF_isSatisfiable","line":129,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.ACF_isSatisfiable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.ACF_isSatisfiable\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">ACF_isSatisfiable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">p</span>)</span>.<a href=\"./Mathlib/ModelTheory/Satisfiability.html#FirstOrder.Language.Theory.IsSatisfiable\">IsSatisfiable</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L115-L127","name":"FirstOrder.Field.isAlgClosed_of_model_ACF","line":115,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.isAlgClosed_of_model_ACF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.isAlgClosed_of_model_ACF\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">isAlgClosed_of_model_ACF</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Ring.CompatibleRing\">Ring.CompatibleRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L105-L113","name":"FirstOrder.Field.fieldOfModelACF","line":105,"kind":"def","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.fieldOfModelACF","doc":"A model for the Theory of algebraically closed fields is a Field. After introducing\nthis as a local instance on a particular Type, you should usually also introduce\n`modelField_of_modelACF p M`, `compatibleRingOfModelField` and `isAlgClosed_of_model_ACF` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.fieldOfModelACF\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">fieldOfModelACF</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">Language.ring</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L101-L103","name":"FirstOrder.Field.modelField_of_modelACF","line":101,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.modelField_of_modelACF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.modelField_of_modelACF\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">modelField_of_modelACF</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">Language.ring</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <a href=\"./Mathlib/ModelTheory/Algebra/Field/Basic.html#FirstOrder.Language.Theory.field\">Language.Theory.field</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L90-L99","name":"FirstOrder.Field.instModelACFOfCharPOfIsAlgClosed","line":90,"kind":"instance","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.instModelACFOfCharPOfIsAlgClosed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.instModelACFOfCharPOfIsAlgClosed\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">instModelACFOfCharPOfIsAlgClosed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Ring.CompatibleRing\">Ring.CompatibleRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">K</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/IsAlgClosed/Basic.html#IsAlgClosed\">IsAlgClosed</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L86-L88","name":"FirstOrder.Field.instModelFieldOfCharOfACF","line":86,"kind":"instance","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.instModelFieldOfCharOfACF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.instModelFieldOfCharOfACF\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">instModelFieldOfCharOfACF</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">Language.ring</a>.<a href=\"./Mathlib/ModelTheory/Basic.html#FirstOrder.Language.Structure\">Structure</a></span> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\">Language.Theory.ACF</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Language.Theory.fieldOfChar\">Language.Theory.fieldOfChar</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L81-L84","name":"FirstOrder.Language.Theory.ACF","line":81,"kind":"def","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF","doc":"The theory of algebraically closed fields of characteristic `p` as a theory over\nthe language of rings "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Language.Theory.ACF\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">ACF</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">ring</a>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L74-L79","name":"FirstOrder.Field.realize_genericMonicPolyHasRoot","line":74,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.realize_genericMonicPolyHasRoot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.realize_genericMonicPolyHasRoot\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">realize_genericMonicPolyHasRoot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Ring.CompatibleRing\">Ring.CompatibleRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Sentence.Realize\">⊨</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.genericMonicPolyHasRoot\">genericMonicPolyHasRoot</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.Monic\">Monic</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Algebra/Polynomial/Degree/Definitions.html#Polynomial.natDegree\">natDegree</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Subtype\">}</a>), <span class=\"fn\">∃ (<span class=\"fn\">x</span> : <span class=\"fn\">K</span>), <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">x</span> <span class=\"fn\">↑<span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L70-L72","name":"FirstOrder.Field.genericMonicPolyHasRoot","line":70,"kind":"def","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.genericMonicPolyHasRoot","doc":"A sentence saying every monic polynomial of degree `n` has a root. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.genericMonicPolyHasRoot\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">genericMonicPolyHasRoot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">Language.ring</a>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Sentence\">Sentence</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L61-L68","name":"FirstOrder.Field.lift_genericMonicPoly","line":61,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.lift_genericMonicPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.lift_genericMonicPoly\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">lift_genericMonicPoly</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> → <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/FreeCommRing.html#FreeCommRing.lift\">FreeCommRing.lift</a> <span class=\"fn\">v</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.genericMonicPoly\">genericMonicPoly</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Eval/Defs.html#Polynomial.eval\">Polynomial.eval</a> <span class=\"fn\">(<span class=\"fn\">v</span> <span class=\"fn\">(<a href=\"./Init/Data/Fin/Basic.html#Fin.last\">Fin.last</a> <span class=\"fn\">n</span>)</span>)</span>\n    <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Basic.html#Polynomial.monicEquivDegreeLT\">Polynomial.monicEquivDegreeLT</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.trans\">trans</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Basic.html#Polynomial.degreeLTEquiv\">Polynomial.degreeLTEquiv</a> <span class=\"fn\">K</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.toEquiv\">toEquiv</a></span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> (<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Init/Data/Fin/Basic.html#Fin.castSucc\">Fin.castSucc</a>))</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.lean#L54-L59","name":"FirstOrder.Field.genericMonicPoly","line":54,"kind":"def","docLink":"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.genericMonicPoly","doc":"A generic monic polynomial of degree `n` as an element of the\nfree commutative ring in `n + 1` variables, with a variable for each\nof the `n` non-leading coefficients of the polynomial and one variable (`Fin.last n`)\nfor `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/IsAlgClosed.html#FirstOrder.Field.genericMonicPoly\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">genericMonicPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/FreeCommRing.html#FreeCommRing\">FreeCommRing</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span></div></div>"}]}