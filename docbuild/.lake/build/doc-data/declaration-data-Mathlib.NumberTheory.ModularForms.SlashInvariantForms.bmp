{"name":"Mathlib.NumberTheory.ModularForms.SlashInvariantForms","instances":[{"typeNames":["SlashInvariantForm","UpperHalfPlane","Complex"],"name":"SlashInvariantForm.funLike","className":"DFunLike"},{"typeNames":["SlashInvariantForm"],"name":"SlashInvariantFormClass.slashInvariantForm","className":"SlashInvariantFormClass"},{"typeNames":["SlashInvariantForm"],"name":"SlashInvariantForm.instCoeTCOfSlashInvariantFormClass","className":"CoeTC"},{"typeNames":["SlashInvariantForm"],"name":"SlashInvariantForm.instAdd","className":"Add"},{"typeNames":["SlashInvariantForm"],"name":"SlashInvariantForm.instZero","className":"Zero"},{"typeNames":["SlashInvariantForm"],"name":"SlashInvariantForm.instSMul","className":"SMul"},{"typeNames":["SlashInvariantForm"],"name":"SlashInvariantForm.instNeg","className":"Neg"},{"typeNames":["SlashInvariantForm"],"name":"SlashInvariantForm.instSub","className":"Sub"},{"typeNames":["SlashInvariantForm"],"name":"SlashInvariantForm.instAddCommGroup","className":"AddCommGroup"},{"typeNames":["Complex","SlashInvariantForm"],"name":"SlashInvariantForm.instModuleComplex","className":"Module"},{"typeNames":["SlashInvariantForm"],"name":"SlashInvariantForm.instOneOfNatInt","className":"One"},{"typeNames":["SlashInvariantForm"],"name":"SlashInvariantForm.instInhabited","className":"Inhabited"},{"typeNames":["SlashInvariantForm"],"name":"SlashInvariantForm.instNatCastOfNatInt","className":"NatCast"},{"typeNames":["SlashInvariantForm"],"name":"SlashInvariantForm.instIntCastOfNatInt","className":"IntCast"}],"imports":["Init","Mathlib.NumberTheory.ModularForms.SlashActions"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L215-L216","name":"SlashInvariantForm.coe_intCast","line":215,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_intCast\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">coe_intCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L212-L213","name":"SlashInvariantForm.instIntCastOfNatInt","line":212,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instIntCastOfNatInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instIntCastOfNatInt\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">instIntCastOfNatInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#IntCast\">IntCast</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L209-L210","name":"SlashInvariantForm.coe_natCast","line":209,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_natCast\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">coe_natCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L206-L207","name":"SlashInvariantForm.instNatCastOfNatInt","line":206,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instNatCastOfNatInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instNatCastOfNatInt\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">instNatCastOfNatInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L201-L204","name":"SlashInvariantForm.coe_mul","line":201,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_mul\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">coe_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.mul\">mul</a></span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L193-L199","name":"SlashInvariantForm.mul","line":193,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.mul","doc":"The slash invariant form of weight `k₁ + k₂` given by the product of two modular forms of\nweights `k₁` and `k₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.mul\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k₁ </span><span class=\"fn\">k₂</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> (<span class=\"fn\">k₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k₂</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L190-L191","name":"SlashInvariantForm.instInhabited","line":190,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instInhabited\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L186-L188","name":"SlashInvariantForm.one_coe_eq_one","line":186,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.one_coe_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.one_coe_eq_one\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">one_coe_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L183-L184","name":"SlashInvariantForm.instOneOfNatInt","line":183,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instOneOfNatInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instOneOfNatInt\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">instOneOfNatInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L178-L178","name":"SlashInvariantForm.const_toFun","line":178,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.const_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.const_toFun\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">const_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.const\">const</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Function.const\">Function.const</a> <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L177-L181","name":"SlashInvariantForm.const","line":177,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.const","doc":"The `SlashInvariantForm` corresponding to `Function.const _ x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.const\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L174-L175","name":"SlashInvariantForm.instModuleComplex","line":174,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instModuleComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instModuleComplex\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">instModuleComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L171-L172","name":"SlashInvariantForm.coeHom_injective","line":171,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coeHom_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coeHom_injective\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">coeHom_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coeHom\">coeHom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L165-L169","name":"SlashInvariantForm.coeHom","line":165,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coeHom","doc":"Additive coercion from `SlashInvariantForm` to `ℍ → ℂ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coeHom\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">coeHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L162-L163","name":"SlashInvariantForm.instAddCommGroup","line":162,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instAddCommGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instAddCommGroup\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">instAddCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L158-L160","name":"SlashInvariantForm.sub_apply","line":158,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.sub_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.sub_apply\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">sub_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span>) <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L154-L156","name":"SlashInvariantForm.coe_sub","line":154,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_sub\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">coe_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L151-L152","name":"SlashInvariantForm.instSub","line":151,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instSub\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">instSub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L147-L149","name":"SlashInvariantForm.neg_apply","line":147,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.neg_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.neg_apply\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">neg_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span>) <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L143-L145","name":"SlashInvariantForm.coe_neg","line":143,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_neg\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">coe_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">⇑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L138-L141","name":"SlashInvariantForm.instNeg","line":138,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instNeg\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">instNeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L132-L134","name":"SlashInvariantForm.smul_apply","line":132,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.smul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.smul_apply\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">smul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span>) <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L128-L130","name":"SlashInvariantForm.coe_smul","line":128,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_smul\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">coe_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑(<span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L122-L126","name":"SlashInvariantForm.instSMul","line":122,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instSMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instSMul\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">instSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">α</span> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L114-L116","name":"SlashInvariantForm.coe_zero","line":114,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_zero\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">coe_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L110-L112","name":"SlashInvariantForm.instZero","line":110,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instZero\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">instZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L106-L108","name":"SlashInvariantForm.add_apply","line":106,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.add_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.add_apply\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">add_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span>) <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L102-L104","name":"SlashInvariantForm.coe_add","line":102,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_add\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">coe_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L96-L100","name":"SlashInvariantForm.instAdd","line":96,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instAdd\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">instAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L93-L94","name":"SlashInvariantForm.instCoeTCOfSlashInvariantFormClass","line":93,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instCoeTCOfSlashInvariantFormClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.instCoeTCOfSlashInvariantFormClass\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">instCoeTCOfSlashInvariantFormClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass\">SlashInvariantFormClass</a> <span class=\"fn\">F</span> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeTC\">CoeTC</a> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L87-L91","name":"SlashInvariantForm.slash_action_eqn''","line":87,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.slash_action_eqn''","doc":"Every `SlashInvariantForm` `f` satisfies ` f (γ • z) = (denom γ z) ^ k * f z`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.slash_action_eqn''\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">slash_action_eqn''</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass\">SlashInvariantFormClass</a> <span class=\"fn\">F</span> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ</span> : <span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">γ</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">z</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane.denom\">UpperHalfPlane.denom</a> <span class=\"fn\">(↑<span class=\"fn\">γ</span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L82-L85","name":"SlashInvariantForm.slash_action_eqn'","line":82,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.slash_action_eqn'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.slash_action_eqn'\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">slash_action_eqn'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass\">SlashInvariantFormClass</a> <span class=\"fn\">F</span> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ</span> : <span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">γ</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">z</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">γ</span></span> <span class=\"fn\">1</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">γ</span></span> <span class=\"fn\">1</span> <span class=\"fn\">1</span>)</span></span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L78-L80","name":"SlashInvariantForm.slash_action_eqn","line":78,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.slash_action_eqn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.slash_action_eqn\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">slash_action_eqn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass\">SlashInvariantFormClass</a> <span class=\"fn\">F</span> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ</span> : <span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">Γ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashActions.html#SlashAction.map\">SlashAction.map</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">k</span> <span class=\"fn\">γ</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L61-L66","name":"SlashInvariantForm.copy","line":61,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.copy","doc":"Copy of a `SlashInvariantForm` with a new `toFun` equal to the old one.\nUseful to fix definitional equalities. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.copy\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">copy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f'</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">f'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L57-L57","name":"SlashInvariantForm.ext_iff","line":57,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.ext_iff\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L57-L59","name":"SlashInvariantForm.ext","line":57,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.ext\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L54-L55","name":"SlashInvariantForm.coe_mk","line":54,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.coe_mk\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">∀ <span class=\"fn\">γ</span> ∈ <span class=\"fn\">Γ</span>, <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashActions.html#SlashAction.map\">SlashAction.map</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">k</span> <span class=\"fn\">γ</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">f</span>, <span class=\"fn\">slash_action_eq'</span> := <span class=\"fn\">hf</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L50-L52","name":"SlashInvariantForm.toFun_eq_coe","line":50,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.toFun_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.toFun_eq_coe\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">toFun_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.toFun\">toFun</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L44-L46","name":"SlashInvariantFormClass.slashInvariantForm","line":44,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass.slashInvariantForm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass.slashInvariantForm\"><span class=\"name\">SlashInvariantFormClass</span>.<span class=\"name\">slashInvariantForm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass\">SlashInvariantFormClass</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L39-L42","name":"SlashInvariantForm.funLike","line":39,"kind":"instance","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.funLike","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.funLike\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">funLike</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span>)</span> <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L37-L37","name":"SlashInvariantFormClass.slash_action_eq","line":37,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass.slash_action_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass.slash_action_eq\"><span class=\"name\">SlashInvariantFormClass</span>.<span class=\"name\">slash_action_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass\">SlashInvariantFormClass</a> <span class=\"fn\">F</span> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">Γ</span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashActions.html#SlashAction.map\">SlashAction.map</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">k</span> <span class=\"fn\">γ</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L36-L36","name":"SlashInvariantFormClass.mk","line":36,"kind":"ctor","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass.mk\"><span class=\"name\">SlashInvariantFormClass</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">slash_action_eq</span> : <span class=\"fn\">∀ (<span class=\"fn\">f</span> : <span class=\"fn\">F</span>), <span class=\"fn\">∀ <span class=\"fn\">γ</span> ∈ <span class=\"fn\">Γ</span>, <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashActions.html#SlashAction.map\">SlashAction.map</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">k</span> <span class=\"fn\">γ</span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass\">SlashInvariantFormClass</a> <span class=\"fn\">F</span> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L34-L37","name":"SlashInvariantFormClass","line":34,"kind":"class","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass","doc":"`SlashInvariantFormClass F Γ k` asserts `F` is a type of bundled functions that are invariant\nunder the `SlashAction`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantFormClass\"><span class=\"name\">SlashInvariantFormClass</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L32-L32","name":"SlashInvariantForm.slash_action_eq'","line":32,"kind":"theorem","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.slash_action_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.slash_action_eq'\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">slash_action_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">Γ</span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashActions.html#SlashAction.map\">SlashAction.map</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">k</span> <span class=\"fn\">γ</span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.toFun\">toFun</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.toFun\">toFun</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L31-L31","name":"SlashInvariantForm.toFun","line":31,"kind":"def","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.toFun\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L30-L30","name":"SlashInvariantForm.mk","line":30,"kind":"ctor","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm.mk\"><span class=\"name\">SlashInvariantForm</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toFun</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Complex/UpperHalfPlane/Basic.html#UpperHalfPlane\">UpperHalfPlane</a> → <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">slash_action_eq'</span> : <span class=\"fn\">∀ <span class=\"fn\">γ</span> ∈ <span class=\"fn\">Γ</span>, <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashActions.html#SlashAction.map\">SlashAction.map</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <span class=\"fn\">k</span> <span class=\"fn\">γ</span> <span class=\"fn\">toFun</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">toFun</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\">SlashInvariantForm</a> <span class=\"fn\">Γ</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/ModularForms/SlashInvariantForms.lean#L29-L32","name":"SlashInvariantForm","line":29,"kind":"structure","docLink":"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm","doc":"Functions `ℍ → ℂ` that are invariant under the `SlashAction`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/ModularForms/SlashInvariantForms.html#SlashInvariantForm\"><span class=\"name\">SlashInvariantForm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Matrix/SpecialLinearGroup.html#Matrix.SpecialLinearGroup\">Matrix.SpecialLinearGroup</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">2</span>)</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}