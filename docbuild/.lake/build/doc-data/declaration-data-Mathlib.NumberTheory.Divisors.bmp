{"name":"Mathlib.NumberTheory.Divisors","instances":[],"imports":["Init","Mathlib.Algebra.IsPrimePow","Mathlib.Algebra.Order.BigOperators.Group.Finset","Mathlib.Algebra.Order.Ring.Int","Mathlib.Algebra.Ring.CharZero","Mathlib.Data.Nat.Cast.Order.Ring","Mathlib.Data.Nat.PrimeFin","Mathlib.Order.Interval.Finset.Nat"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L670-L680","name":"Int.mul_mem_zero_one_two_three_four_iff","line":670,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.mul_mem_zero_one_two_three_four_iff","doc":"This lemma justifies its existence from its utility in crystallographic root system theory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.mul_mem_zero_one_two_three_four_iff\"><span class=\"name\">Int</span>.<span class=\"name\">mul_mem_zero_one_two_three_four_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₀</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">0</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">3</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">4</span><a href=\"./Init/Core.html#Insert.insert\">}</a> <a href=\"./Init/Core.html#Iff\">↔</a>   <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>     <a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">3</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">3</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">3</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">3</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">4</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">4</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a>       <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">4</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">4</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L660-L668","name":"Int.mul_mem_one_two_three_iff","line":660,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.mul_mem_one_two_three_iff","doc":"This lemma justifies its existence from its utility in crystallographic root system theory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.mul_mem_one_two_three_iff\"><span class=\"name\">Int</span>.<span class=\"name\">mul_mem_one_two_three_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">3</span><a href=\"./Init/Core.html#Insert.insert\">}</a> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">a</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">3</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">3</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">3</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">3</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L654-L658","name":"Int.divisorsAntidiag_ofNat","line":654,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_ofNat\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiag_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span>.<a href=\"./Mathlib/Data/Finset/Disjoint.html#Finset.disjUnion\">disjUnion</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span>)</span>\n      <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span>\n    <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L648-L652","name":"Int.divisorsAntidiag_neg_natCast","line":648,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_neg_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_neg_natCast\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiag_neg_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">n</span></span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span>)</span>\n        <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span>.<a href=\"./Mathlib/Data/Finset/Disjoint.html#Finset.disjUnion\">disjUnion</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>)</span>\n      <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span>\n    <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L642-L646","name":"Int.divisorsAntidiag_natCast","line":642,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_natCast\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiag_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span>.<a href=\"./Mathlib/Data/Finset/Disjoint.html#Finset.disjUnion\">disjUnion</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a>\n      <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span>\n        <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">Nat.castEmbedding</a>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.trans\">trans</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span>)</span>\n      <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span>\n    <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L637-L640","name":"Int.divisorsAntidiag_neg","line":637,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_neg\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiag_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">z</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.refl\">Function.Embedding.refl</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Function.Embedding.prodMap\">prodMap</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span>)</span> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L632-L635","name":"Int.map_neg_divisorsAntidiag","line":632,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.map_neg_divisorsAntidiag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.map_neg_divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">map_neg_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">Equiv.toEmbedding</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#Equiv.neg\">Equiv.neg</a> (<a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>))</span>)</span> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L627-L630","name":"Int.map_prodComm_divisorsAntidiag","line":627,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.map_prodComm_divisorsAntidiag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.map_prodComm_divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">map_prodComm_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Prod.html#Equiv.prodComm\">Equiv.prodComm</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L625-L625","name":"Int.neg_mem_divisorsAntidiag","line":625,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.neg_mem_divisorsAntidiag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.neg_mem_divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">neg_mem_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xy</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">xy</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">xy</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L621-L623","name":"Int.swap_mem_divisorsAntidiag","line":621,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.swap_mem_divisorsAntidiag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.swap_mem_divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">swap_mem_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xy</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">xy</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">xy</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L618-L619","name":"Int.prodMk_mem_divisorsAntidiag","line":618,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.prodMk_mem_divisorsAntidiag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.prodMk_mem_divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">prodMk_mem_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L613-L616","name":"Int.divisorsAntidiagonal_four","line":613,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_four","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_four\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiagonal_four</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">4</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">4</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">4</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">4</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L608-L611","name":"Int.divisorsAntidiagonal_three","line":608,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_three","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_three\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiagonal_three</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a> <span class=\"fn\">3</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">3</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">3</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">3</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">3</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L603-L606","name":"Int.divisorsAntidiagonal_two","line":603,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_two\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiagonal_two</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L598-L601","name":"Int.divisorsAntidiagonal_one","line":598,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiagonal_one\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiagonal_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">,</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L594-L594","name":"Int.divisorsAntidiag_zero","line":594,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag_zero\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiag_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L555-L592","name":"Int.mem_divisorsAntidiag","line":555,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.mem_divisorsAntidiag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.mem_divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">mem_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xy</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">xy</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\">divisorsAntidiag</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">xy</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">xy</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">z</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L539-L553","name":"Int.divisorsAntidiag","line":539,"kind":"def","docLink":"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag","doc":"Pairs of divisors of an integer as a finset.\n\n`z.divisorsAntidiag` is the finset of pairs `(a, b) : ℤ × ℤ` such that `a * b = z`.\nBy convention, we set `Int.divisorsAntidiag 0 = ∅`.\n\nO(|z|). Computed from `Nat.divisorsAntidiagonal`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Int.divisorsAntidiag\"><span class=\"name\">Int</span>.<span class=\"name\">divisorsAntidiag</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> (<a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L523-L527","name":"Nat.disjoint_divisors_filter_isPrimePow","line":523,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.disjoint_divisors_filter_isPrimePow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.disjoint_divisors_filter_isPrimePow\"><span class=\"name\">Nat</span>.<span class=\"name\">disjoint_divisors_filter_isPrimePow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hab</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Batteries/Data/Nat/Gcd.html#Nat.Coprime\">Coprime</a></span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Filter.html#Finset.filter\">Finset.filter</a> <a href=\"./Mathlib/Algebra/IsPrimePow.html#IsPrimePow\">IsPrimePow</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Filter.html#Finset.filter\">Finset.filter</a> <a href=\"./Mathlib/Algebra/IsPrimePow.html#IsPrimePow\">IsPrimePow</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L513-L513","name":"Nat.sum_div_divisors","line":513,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_div_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_div_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_div_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">d</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">d</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/Finset/Defs.html#Finset.sum\">sum</a></span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L513-L521","name":"Nat.prod_div_divisors","line":513,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.prod_div_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.prod_div_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_div_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">d</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">d</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>.<a href=\"./Mathlib/Algebra/BigOperators/Group/Finset/Defs.html#Finset.prod\">prod</a></span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L493-L508","name":"Nat.image_div_divisors_eq_divisors","line":493,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.image_div_divisors_eq_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.image_div_divisors_eq_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">image_div_divisors_eq_divisors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">Finset.image</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L488-L491","name":"Nat.primeFactors_filter_dvd_of_dvd","line":488,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.primeFactors_filter_dvd_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.primeFactors_filter_dvd_of_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">primeFactors_filter_dvd_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hmn</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">p</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> | <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L480-L486","name":"Nat.primeFactors_eq_to_filter_divisors_prime","line":480,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.primeFactors_eq_to_filter_divisors_prime","doc":"The factors of `n` are the prime divisors "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.primeFactors_eq_to_filter_divisors_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">primeFactors_eq_to_filter_divisors_prime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/PrimeFin.html#Nat.primeFactors\">primeFactors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">p</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> | <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>}</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L474-L474","name":"Nat.sum_divisorsAntidiagonal'","line":474,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisorsAntidiagonal'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisorsAntidiagonal'\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_divisorsAntidiagonal'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">i</span>.1</span> <span class=\"fn\"><span class=\"fn\">i</span>.2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">i</span>) <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L474-L478","name":"Nat.prod_divisorsAntidiagonal'","line":474,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.prod_divisorsAntidiagonal'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.prod_divisorsAntidiagonal'\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_divisorsAntidiagonal'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">i</span>.1</span> <span class=\"fn\"><span class=\"fn\">i</span>.2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">i</span>) <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L468-L468","name":"Nat.sum_divisorsAntidiagonal","line":468,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisorsAntidiagonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">i</span>.1</span> <span class=\"fn\"><span class=\"fn\">i</span>.2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L468-L472","name":"Nat.prod_divisorsAntidiagonal","line":468,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.prod_divisorsAntidiagonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.prod_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">i</span>.1</span> <span class=\"fn\"><span class=\"fn\">i</span>.2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L463-L463","name":"Nat.sum_divisors_prime_pow","line":463,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisors_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_divisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L463-L466","name":"Nat.prod_divisors_prime_pow","line":463,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.prod_divisors_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.prod_divisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_divisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L458-L458","name":"Nat.sum_properDivisors_prime_nsmul","line":458,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_properDivisors_prime_nsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_properDivisors_prime_nsmul\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_properDivisors_prime_nsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L458-L461","name":"Nat.prod_properDivisors_prime_pow","line":458,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.prod_properDivisors_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.prod_properDivisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">prod_properDivisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L446-L456","name":"Nat.properDivisors_prime_pow","line":446,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> }</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L432-L444","name":"Nat.mem_properDivisors_prime_pow","line":432,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_properDivisors_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_properDivisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_properDivisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">j</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (_ : <span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L418-L430","name":"Nat.sum_properDivisors_eq_one_iff_prime","line":418,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_properDivisors_eq_one_iff_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_properDivisors_eq_one_iff_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_properDivisors_eq_one_iff_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L402-L416","name":"Nat.properDivisors_eq_singleton_one_iff_prime","line":402,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_eq_singleton_one_iff_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_eq_singleton_one_iff_prime\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors_eq_singleton_one_iff_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L397-L397","name":"Nat.Prime.sum_divisors","line":397,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.sum_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.sum_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">sum_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L397-L400","name":"Nat.Prime.prod_divisors","line":397,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.prod_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.prod_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">prod_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L393-L393","name":"Nat.Prime.sum_properDivisors","line":393,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.sum_properDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.sum_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">sum_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L393-L395","name":"Nat.Prime.prod_properDivisors","line":393,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.prod_properDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.prod_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">prod_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L378-L391","name":"Nat.sum_properDivisors_dvd","line":378,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_properDivisors_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_properDivisors_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_properDivisors_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L358-L376","name":"Nat.eq_properDivisors_of_subset_of_sum_eq_sum","line":358,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.eq_properDivisors_of_subset_of_sum_eq_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.eq_properDivisors_of_subset_of_sum_eq_sum\"><span class=\"name\">Nat</span>.<span class=\"name\">eq_properDivisors_of_subset_of_sum_eq_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hsub</span> : <span class=\"fn\">s</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">x</span></span> → <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L354-L356","name":"Nat.divisors_inj","line":354,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_inj\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L351-L352","name":"Nat.divisors_injective","line":351,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_injective\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L345-L349","name":"Nat.divisors_prime_pow","line":345,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> }</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L341-L343","name":"Nat.Prime.properDivisors","line":341,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.properDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L337-L339","name":"Nat.Prime.divisors","line":337,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Prime.divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">Prime</span>.<span class=\"name\">divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">p</span><a href=\"./Init/Core.html#Insert.insert\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L333-L335","name":"Nat.mem_divisors_prime_pow","line":333,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisors_prime_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisors_prime_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_divisors_prime_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pp</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">j</span> ≤ <span class=\"fn\">k</span>, <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L326-L331","name":"Nat.perfect_iff_sum_divisors_eq_two_mul","line":326,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.perfect_iff_sum_divisors_eq_two_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.perfect_iff_sum_divisors_eq_two_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">perfect_iff_sum_divisors_eq_two_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Perfect\">Perfect</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L323-L324","name":"Nat.perfect_iff_sum_properDivisors","line":323,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.perfect_iff_sum_properDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.perfect_iff_sum_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">perfect_iff_sum_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Perfect\">Perfect</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L318-L321","name":"Nat.Perfect","line":318,"kind":"def","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.Perfect","doc":"`n : ℕ` is perfect if and only the sum of the proper divisors of `n` is `n` and `n`\nis positive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.Perfect\"><span class=\"name\">Nat</span>.<span class=\"name\">Perfect</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L312-L316","name":"Nat.sum_divisors_eq_sum_properDivisors_add_self","line":312,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisors_eq_sum_properDivisors_add_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sum_divisors_eq_sum_properDivisors_add_self\"><span class=\"name\">Nat</span>.<span class=\"name\">sum_divisors_eq_sum_properDivisors_add_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>, <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>, <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L304-L310","name":"Nat.map_div_left_divisors","line":304,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.map_div_left_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.map_div_left_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">map_div_left_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">d</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">d</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> }</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L291-L302","name":"Nat.map_div_right_divisors","line":291,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.map_div_right_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.map_div_right_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">map_div_right_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">d</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">d</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> }</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L286-L289","name":"Nat.image_snd_divisorsAntidiagonal","line":286,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.image_snd_divisorsAntidiagonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.image_snd_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">image_snd_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">Finset.image</a> <a href=\"./Init/Prelude.html#Prod.snd\">Prod.snd</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L281-L284","name":"Nat.image_fst_divisorsAntidiagonal","line":281,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.image_fst_divisorsAntidiagonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.image_fst_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">image_fst_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">Finset.image</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L273-L279","name":"Nat.map_swap_divisorsAntidiagonal","line":273,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.map_swap_divisorsAntidiagonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.map_swap_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">map_swap_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Prod.html#Equiv.prodComm\">Equiv.prodComm</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>.<a href=\"./Mathlib/Logic/Embedding/Basic.html#Equiv.toEmbedding\">toEmbedding</a></span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L268-L271","name":"Nat.snd_mem_divisors_of_mem_antidiagonal","line":268,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.snd_mem_divisors_of_mem_antidiagonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.snd_mem_divisors_of_mem_antidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">snd_mem_divisors_of_mem_antidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L263-L266","name":"Nat.fst_mem_divisors_of_mem_antidiagonal","line":263,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.fst_mem_divisors_of_mem_antidiagonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.fst_mem_divisors_of_mem_antidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">fst_mem_divisors_of_mem_antidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L260-L261","name":"Nat.prodMk_mem_divisorsAntidiag","line":260,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.prodMk_mem_divisorsAntidiag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.prodMk_mem_divisorsAntidiag\"><span class=\"name\">Nat</span>.<span class=\"name\">prodMk_mem_divisorsAntidiag</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">x</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L254-L258","name":"Nat.swap_mem_divisorsAntidiagonal_aux","line":254,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.swap_mem_divisorsAntidiagonal_aux","doc":"`Nat.swap_mem_divisorsAntidiagonal` with the LHS in simp normal form. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.swap_mem_divisorsAntidiagonal_aux\"><span class=\"name\">Nat</span>.<span class=\"name\">swap_mem_divisorsAntidiagonal_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L249-L252","name":"Nat.swap_mem_divisorsAntidiagonal","line":249,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.swap_mem_divisorsAntidiagonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.swap_mem_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">swap_mem_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Data/Prod.html#Prod.swap\">swap</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L244-L247","name":"Nat.divisorsAntidiagonal_one","line":244,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal_one\"><span class=\"name\">Nat</span>.<span class=\"name\">divisorsAntidiagonal_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L239-L242","name":"Nat.divisorsAntidiagonal_zero","line":239,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">divisorsAntidiagonal_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L235-L237","name":"Nat.properDivisors_eq_empty","line":235,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_eq_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_eq_empty\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors_eq_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L230-L233","name":"Nat.nonempty_properDivisors","line":230,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.nonempty_properDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.nonempty_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">nonempty_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L221-L228","name":"Nat.mem_properDivisors_iff_exists","line":221,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_properDivisors_iff_exists","doc":"See also `Nat.mem_properDivisors`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_properDivisors_iff_exists\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_properDivisors_iff_exists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">k</span> &gt; <span class=\"fn\">1</span>, <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L216-L219","name":"Nat.one_lt_div_of_mem_properDivisors","line":216,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.one_lt_div_of_mem_properDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.one_lt_div_of_mem_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">one_lt_div_of_mem_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">m</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L213-L214","name":"Nat.one_lt_of_mem_properDivisors","line":213,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.one_lt_of_mem_properDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.one_lt_of_mem_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">one_lt_of_mem_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L206-L211","name":"Nat.sup_divisors_id","line":206,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.sup_divisors_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.sup_divisors_id\"><span class=\"name\">Nat</span>.<span class=\"name\">sup_divisors_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>.<a href=\"./Mathlib/Data/Finset/Lattice/Fold.html#Finset.sup\">sup</a></span> <a href=\"./Init/Prelude.html#id\">id</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L203-L204","name":"Nat.one_mem_properDivisors_iff_one_lt","line":203,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.one_mem_properDivisors_iff_one_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.one_mem_properDivisors_iff_one_lt\"><span class=\"name\">Nat</span>.<span class=\"name\">one_mem_properDivisors_iff_one_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L200-L201","name":"Nat.pos_of_mem_properDivisors","line":200,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.pos_of_mem_properDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.pos_of_mem_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">pos_of_mem_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L194-L198","name":"Nat.pos_of_mem_divisors","line":194,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.pos_of_mem_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.pos_of_mem_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">pos_of_mem_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L191-L192","name":"Nat.properDivisors_one","line":191,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_one\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L186-L189","name":"Nat.divisors_one","line":186,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_one\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L183-L184","name":"Nat.properDivisors_subset_divisors","line":183,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_subset_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_subset_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors_subset_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L179-L181","name":"Nat.divisors_eq_empty","line":179,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_eq_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_eq_empty\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_eq_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L175-L177","name":"Nat.nonempty_divisors","line":175,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.nonempty_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.nonempty_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">nonempty_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>.<a href=\"./Mathlib/Data/Finset/Empty.html#Finset.Nonempty\">Nonempty</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L170-L173","name":"Nat.properDivisors_zero","line":170,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L165-L168","name":"Nat.divisors_zero","line":165,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L159-L163","name":"Nat.divisors_filter_dvd_of_dvd","line":159,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_filter_dvd_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_filter_dvd_of_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_filter_dvd_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">d</span> ∈ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> | <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L149-L157","name":"Nat.divisors_subset_properDivisors","line":149,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_subset_properDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_subset_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_subset_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hzero</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hdiff</span> : <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L143-L147","name":"Nat.card_divisors_le_self","line":143,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.card_divisors_le_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.card_divisors_le_self\"><span class=\"name\">Nat</span>.<span class=\"name\">card_divisors_le_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L140-L141","name":"Nat.divisors_subset_of_dvd","line":140,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_subset_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors_subset_of_dvd\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors_subset_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hzero</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L134-L138","name":"Nat.divisor_le","line":134,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisor_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisor_le\"><span class=\"name\">Nat</span>.<span class=\"name\">divisor_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> → <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L130-L132","name":"Nat.right_ne_zero_of_mem_divisorsAntidiagonal","line":130,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.right_ne_zero_of_mem_divisorsAntidiagonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.right_ne_zero_of_mem_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">right_ne_zero_of_mem_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L126-L128","name":"Nat.left_ne_zero_of_mem_divisorsAntidiagonal","line":126,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.left_ne_zero_of_mem_divisorsAntidiagonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.left_ne_zero_of_mem_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">left_ne_zero_of_mem_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L121-L124","name":"Nat.ne_zero_of_mem_divisorsAntidiagonal","line":121,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.ne_zero_of_mem_divisorsAntidiagonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.ne_zero_of_mem_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">ne_zero_of_mem_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L107-L119","name":"Nat.mem_divisorsAntidiagonal","line":107,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisorsAntidiagonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_divisorsAntidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\">divisorsAntidiagonal</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L102-L105","name":"Nat.dvd_of_mem_divisors","line":102,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.dvd_of_mem_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.dvd_of_mem_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">dvd_of_mem_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L99-L100","name":"Nat.mem_divisors_self","line":99,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisors_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisors_self\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_divisors_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L97-L97","name":"Nat.one_mem_divisors","line":97,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.one_mem_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.one_mem_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">one_mem_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L90-L95","name":"Nat.mem_divisors","line":90,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L86-L88","name":"Nat.cons_self_properDivisors","line":86,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.cons_self_properDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.cons_self_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">cons_self_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Insert.html#Finset.cons\">Finset.cons</a> <span class=\"fn\">n</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L82-L84","name":"Nat.insert_self_properDivisors","line":82,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.insert_self_properDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.insert_self_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">insert_self_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">n</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L77-L80","name":"Nat.mem_properDivisors","line":77,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.mem_properDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.mem_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">mem_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L75-L75","name":"Nat.properDivisors.not_self_mem","line":75,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors.not_self_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors.not_self_mem\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors</span>.<span class=\"name\">not_self_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> ∉ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L69-L73","name":"Nat.filter_dvd_eq_properDivisors","line":69,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.filter_dvd_eq_properDivisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.filter_dvd_eq_properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">filter_dvd_eq_properDivisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">d</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span> | <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\">properDivisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L63-L67","name":"Nat.filter_dvd_eq_divisors","line":63,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.filter_dvd_eq_divisors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.filter_dvd_eq_divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">filter_dvd_eq_divisors</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">d</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Prelude.html#Nat.succ\">succ</a></span></span> | <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\">divisors</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L51-L59","name":"Nat.divisorsAntidiagonal","line":51,"kind":"def","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal","doc":"Pairs of divisors of a natural number as a finset.\n\n`n.divisorsAntidiagonal` is the finset of pairs `(a, b) : ℕ × ℕ` such that `a * b = n`.\nBy convention, we set `Nat.divisorsAntidiagonal 0 = ∅`.\n\nO(n). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisorsAntidiagonal\"><span class=\"name\">Nat</span>.<span class=\"name\">divisorsAntidiagonal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> (<a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L47-L49","name":"Nat.properDivisors","line":47,"kind":"def","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors","doc":"`properDivisors n` is the `Finset` of divisors of `n`, other than `n`.\nBy convention, we set `properDivisors 0 = ∅`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.properDivisors\"><span class=\"name\">Nat</span>.<span class=\"name\">properDivisors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Divisors.lean#L44-L45","name":"Nat.divisors","line":44,"kind":"def","docLink":"./Mathlib/NumberTheory/Divisors.html#Nat.divisors","doc":"`divisors n` is the `Finset` of divisors of `n`. By convention, we set `divisors 0 = ∅`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Divisors.html#Nat.divisors\"><span class=\"name\">Nat</span>.<span class=\"name\">divisors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"}]}