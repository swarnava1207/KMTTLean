{"name":"Mathlib.SetTheory.Cardinal.HasCardinalLT","instances":[],"imports":["Init","Mathlib.SetTheory.Cardinal.Regular"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/HasCardinalLT.lean#L112-L118","name":"HasCardinalLT.exists_regular_cardinal_forall","line":112,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT.exists_regular_cardinal_forall","doc":"For any `w`-small family `X : ι → Type u` of `w`-small types, there exists\na regular cardinal `κ : Cardinal.{w}` such that `HasCardinalLT (X i) κ` for all `i : ι`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT.exists_regular_cardinal_forall\"><span class=\"name\">HasCardinalLT</span>.<span class=\"name\">exists_regular_cardinal_forall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{w, v}</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{w, u}</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>), <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">κ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/HasCardinalLT.lean#L103-L110","name":"HasCardinalLT.exists_regular_cardinal","line":103,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT.exists_regular_cardinal","doc":"For any `w`-small type `X`, there exists a regular cardinal `κ : Cardinal.{w}`\nsuch that `HasCardinalLT X κ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT.exists_regular_cardinal\"><span class=\"name\">HasCardinalLT</span>.<span class=\"name\">exists_regular_cardinal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{w, u}</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>), <span class=\"fn\"><span class=\"fn\">κ</span>.<a href=\"./Mathlib/SetTheory/Cardinal/Regular.html#Cardinal.IsRegular\">IsRegular</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">X</span> <span class=\"fn\">κ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/HasCardinalLT.lean#L92-L99","name":"hasCardinalLT_option_iff","line":92,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#hasCardinalLT_option_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#hasCardinalLT_option_iff\"><span class=\"name\">hasCardinalLT_option_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hκ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">κ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">X</span>)</span> <span class=\"fn\">κ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">X</span> <span class=\"fn\">κ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/HasCardinalLT.lean#L78-L90","name":"hasCardinalLT_sum_iff","line":78,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#hasCardinalLT_sum_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#hasCardinalLT_sum_iff\"><span class=\"name\">hasCardinalLT_sum_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u')</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{w}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hκ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">κ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> (<span class=\"fn\">X</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">Y</span>) <span class=\"fn\">κ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">X</span> <span class=\"fn\">κ</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">Y</span> <span class=\"fn\">κ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/HasCardinalLT.lean#L73-L76","name":"hasCardinalLT_aleph0_iff","line":73,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#hasCardinalLT_aleph0_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#hasCardinalLT_aleph0_iff\"><span class=\"name\">hasCardinalLT_aleph0_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.aleph0\">Cardinal.aleph0</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/HasCardinalLT.lean#L68-L71","name":"hasCardinalLT_iff_of_equiv","line":68,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#hasCardinalLT_iff_of_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#hasCardinalLT_iff_of_equiv\"><span class=\"name\">hasCardinalLT_iff_of_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{v}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">X</span> <span class=\"fn\">κ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">Y</span> <span class=\"fn\">κ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/HasCardinalLT.lean#L55-L62","name":"HasCardinalLT.of_surjective","line":55,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT.of_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT.of_surjective\"><span class=\"name\">HasCardinalLT</span>.<span class=\"name\">of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{v}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">X</span> <span class=\"fn\">κ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">Y</span> <span class=\"fn\">κ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/HasCardinalLT.lean#L46-L53","name":"HasCardinalLT.of_injective","line":46,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT.of_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT.of_injective\"><span class=\"name\">HasCardinalLT</span>.<span class=\"name\">of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{v}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">X</span> <span class=\"fn\">κ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">Y</span> → <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">Y</span> <span class=\"fn\">κ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/HasCardinalLT.lean#L40-L42","name":"HasCardinalLT.of_le","line":40,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT.of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT.of_le\"><span class=\"name\">HasCardinalLT</span>.<span class=\"name\">of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{v}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">X</span> <span class=\"fn\">κ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ'</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{v}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hκ'</span> : <span class=\"fn\">κ</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">κ'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">X</span> <span class=\"fn\">κ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/HasCardinalLT.lean#L35-L38","name":"HasCardinalLT.small","line":35,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT.small","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT.small\"><span class=\"name\">HasCardinalLT</span>.<span class=\"name\">small</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{v}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">X</span> <span class=\"fn\">κ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{v, u}</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/HasCardinalLT.lean#L23-L25","name":"hasCardinalLT_iff_cardinal_mk_lt","line":23,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#hasCardinalLT_iff_cardinal_mk_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#hasCardinalLT_iff_cardinal_mk_lt\"><span class=\"name\">hasCardinalLT_iff_cardinal_mk_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\">HasCardinalLT</a> <span class=\"fn\">X</span> <span class=\"fn\">κ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">κ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Cardinal/HasCardinalLT.lean#L19-L21","name":"HasCardinalLT","line":19,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT","doc":"The property that the cardinal of a type `X : Type u` is less than `κ : Cardinal.{v}`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/HasCardinalLT.html#HasCardinalLT\"><span class=\"name\">HasCardinalLT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">κ</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Defs.html#Cardinal\">Cardinal.{v}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}