{"name":"Aesop.Index.RulePattern","instances":[{"typeNames":["Aesop.RulePatternIndex.Entry"],"name":"Aesop.RulePatternIndex.instInhabitedEntry","className":"Inhabited"},{"typeNames":["Aesop.RulePatternIndex.Entry"],"name":"Aesop.instBEqEntry","className":"BEq"},{"typeNames":["Aesop.RulePatternIndex"],"name":"Aesop.instInhabitedRulePatternIndex","className":"Inhabited"},{"typeNames":["Aesop.RulePatternIndex"],"name":"Aesop.RulePatternIndex.instEmptyCollection","className":"EmptyCollection"}],"imports":["Init","Aesop.Index.Basic","Aesop.RuleTac.GoalDiff","Batteries.Lean.Meta.DiscrTree"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L147-L160","name":"Aesop.RulePatternIndex.getInGoal","line":147,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getInGoal","doc":"Get all substitutions of the rule patterns that match a subexpression of\na hypothesis or the target. Subexpressions containing bound variables are not\nconsidered. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getInGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">getInGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goal</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L142-L145","name":"Aesop.RulePatternIndex.getInLocalDecl","line":142,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getInLocalDecl","doc":"Get all substitutions of the rule patterns that match a subexpression of\nthe given local declaration. Subexpressions containing bound variables are not\nconsidered. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getInLocalDecl\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">getInLocalDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ldecl</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L128-L140","name":"Aesop.RulePatternIndex.getInLocalDeclCore","line":128,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getInLocalDeclCore","doc":"Get all substitutions of the rule patterns that match a subexpression of\nthe given local declaration. Subexpressions containing bound variables are not\nconsidered. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getInLocalDeclCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">getInLocalDeclCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">acc</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ldecl</span> : <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L124-L126","name":"Aesop.RulePatternIndex.get","line":124,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.get","doc":"Get all substitutions of the rule patterns that match a subexpression of\n`e`. Subexpressions containing bound variables are not considered. The returned\narray may contain duplicates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.get\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">get</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L112-L122","name":"Aesop.RulePatternIndex.getCore.getSubexpr","line":112,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getCore.getSubexpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getCore.getSubexpr\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">getCore</span>.<span class=\"name\">getSubexpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>))</span> <a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L100-L122","name":"Aesop.RulePatternIndex.getCore","line":100,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getCore","doc":"Get all substitutions of the rule patterns that match a subexpression of\n`e`. Subexpressions containing bound variables are not considered. The returned\narray may contain duplicates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">getCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L89-L98","name":"Aesop.RulePatternIndex.getSingle","line":89,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getSingle","doc":"Get rule pattern substitutions for the patterns that match `e`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.getSingle\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">getSingle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L77-L85","name":"Aesop.RulePatternIndex.merge","line":77,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.merge","doc":"Merge two rule pattern indices. Patterns that appear in both indices appear\ntwice in the result. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.merge\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx₁ </span><span class=\"fn\">idx₂</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L72-L75","name":"Aesop.RulePatternIndex.add","line":72,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.add","doc":"Add a rule pattern to the index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.add\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pattern</span> : <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">RulePattern</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L69-L70","name":"Aesop.RulePatternIndex.instEmptyCollection","line":69,"kind":"instance","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.instEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.instEmptyCollection\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L65-L65","name":"Aesop.instInhabitedRulePatternIndex","line":65,"kind":"instance","docLink":"./Aesop/Index/RulePattern.html#Aesop.instInhabitedRulePatternIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.instInhabitedRulePatternIndex\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRulePatternIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L64-L64","name":"Aesop.RulePatternIndex.isEmpty","line":64,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.isEmpty","doc":"`true` iff the index contains no patterns. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.isEmpty\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L62-L62","name":"Aesop.RulePatternIndex.tree","line":62,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.tree","doc":"The index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.tree\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">tree</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">Entry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L60-L60","name":"Aesop.RulePatternIndex.mk","line":60,"kind":"ctor","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tree</span> : <span class=\"fn\"><a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">Entry</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isEmpty</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\">RulePatternIndex</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L58-L65","name":"Aesop.RulePatternIndex","line":58,"kind":"structure","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex","doc":"A rule pattern index. Maps expressions `e` to rule patterns that likely\nunify with `e`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L54-L55","name":"Aesop.instBEqEntry","line":54,"kind":"instance","docLink":"./Aesop/Index/RulePattern.html#Aesop.instBEqEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.instBEqEntry\"><span class=\"name\">Aesop</span>.<span class=\"name\">instBEqEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">RulePatternIndex.Entry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L52-L52","name":"Aesop.RulePatternIndex.instInhabitedEntry","line":52,"kind":"instance","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.instInhabitedEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.instInhabitedEntry\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">instInhabitedEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">Entry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L51-L51","name":"Aesop.RulePatternIndex.Entry.pattern","line":51,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry.pattern","doc":"The rule's pattern. We assume that there is at most one pattern per\nrule. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry.pattern\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">Entry</span>.<span class=\"name\">pattern</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">Entry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">RulePattern</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L48-L48","name":"Aesop.RulePatternIndex.Entry.name","line":48,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry.name","doc":"The name of the rule to which the pattern belongs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry.name\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">Entry</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">Entry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L46-L46","name":"Aesop.RulePatternIndex.Entry.mk","line":46,"kind":"ctor","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">Entry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pattern</span> : <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">RulePattern</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\">Entry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L45-L52","name":"Aesop.RulePatternIndex.Entry","line":45,"kind":"structure","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry","doc":"An entry of the rule pattern index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternIndex.Entry\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternIndex</span>.<span class=\"name\">Entry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L36-L40","name":"Aesop.RulePatternSubstMap.toFlatArray","line":36,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap.toFlatArray","doc":"Convert a rule pattern substitution map to a flat array of substitutions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap.toFlatArray\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternSubstMap</span>.<span class=\"name\">toFlatArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L32-L34","name":"Aesop.RulePatternSubstMap.ofArray","line":32,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap.ofArray","doc":"Build a rule pattern substitution map from an array of substitutions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap.ofArray\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternSubstMap</span>.<span class=\"name\">ofArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L23-L30","name":"Aesop.RulePatternSubstMap.insertArray","line":23,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap.insertArray","doc":"Insert an array of rule pattern substitutions into a rule pattern\nsubstitution map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap.insertArray\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternSubstMap</span>.<span class=\"name\">insertArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">RuleName</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Forward/Substitution.html#Aesop.Substitution\">Substitution</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\">RulePatternSubstMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Index/RulePattern.lean#L17-L19","name":"Aesop.RulePatternSubstMap","line":17,"kind":"def","docLink":"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap","doc":"A map from rule names to rule pattern substitutions. When run on a goal,\nthe rule pattern index returns such a map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Index/RulePattern.html#Aesop.RulePatternSubstMap\"><span class=\"name\">Aesop</span>.<span class=\"name\">RulePatternSubstMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}