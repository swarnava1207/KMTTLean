{"name":"Mathlib.CategoryTheory.Abelian.Indization","instances":[{"typeNames":["CategoryTheory.Abelian.coimageImageComparison"],"name":"CategoryTheory.instIsIsoIndCoimageImageComparison","className":"CategoryTheory.IsIso"},{"typeNames":["CategoryTheory.Ind"],"name":"CategoryTheory.instAbelianInd","className":"CategoryTheory.Abelian"}],"imports":["Init","Mathlib.CategoryTheory.Preadditive.Indization","Mathlib.CategoryTheory.Abelian.FunctorCategory","Mathlib.CategoryTheory.Limits.Preserves.Shapes.AbelianImages"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/Indization.lean#L35-L36","name":"CategoryTheory.instAbelianInd","line":35,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Indization.html#CategoryTheory.instAbelianInd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/Indization.html#CategoryTheory.instAbelianInd\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instAbelianInd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/Indization.lean#L27-L33","name":"CategoryTheory.instIsIsoIndCoimageImageComparison","line":27,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/Indization.html#CategoryTheory.instIsIsoIndCoimageImageComparison","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/Indization.html#CategoryTheory.instIsIsoIndCoimageImageComparison\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instIsIsoIndCoimageImageComparison</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Indization/Category.html#CategoryTheory.Ind\">Ind</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">IsIso</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Abelian/Images.html#CategoryTheory.Abelian.coimageImageComparison\">Abelian.coimageImageComparison</a> <span class=\"fn\">f</span>)</span></span></div></div>"}]}