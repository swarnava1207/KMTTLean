{"name":"Mathlib.Topology.MetricSpace.Kuratowski","instances":[],"imports":["Init","Mathlib.Analysis.Normed.Lp.lpSpace","Mathlib.Topology.Sets.Compacts"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/Kuratowski.lean#L117-L150","name":"LipschitzOnWith.extend_lp_infty","line":117,"kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Kuratowski.html#LipschitzOnWith.extend_lp_infty","doc":"A function `f : α → ℓ^∞(ι, ℝ)` which is `K`-Lipschitz on a subset `s` admits a `K`-Lipschitz\nextension to the whole space.\n\nTheorem 2.2 of [Assaf Naor, *Metric Embeddings and Lipschitz Extensions*][Naor-2015]\n\nThe same result for the case of a finite type `ι` is implemented in\n`LipschitzOnWith.extend_pi`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#LipschitzOnWith.extend_lp_infty\"><span class=\"name\">LipschitzOnWith</span>.<span class=\"name\">extend_lp_infty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#PseudoMetricSpace\">PseudoMetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Lp/lpSpace.html#lp\">lp</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hfl</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/EMetricSpace/Lipschitz.html#LipschitzOnWith\">LipschitzOnWith</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Lp/lpSpace.html#lp\">lp</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/EMetricSpace/Lipschitz.html#LipschitzWith\">LipschitzWith</a> <span class=\"fn\">K</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/Kuratowski.lean#L110-L115","name":"NonemptyCompacts.kuratowskiEmbedding","line":110,"kind":"def","docLink":"./Mathlib/Topology/MetricSpace/Kuratowski.html#NonemptyCompacts.kuratowskiEmbedding","doc":"Version of the Kuratowski embedding for nonempty compacts "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#NonemptyCompacts.kuratowskiEmbedding\"><span class=\"name\">NonemptyCompacts</span>.<span class=\"name\">kuratowskiEmbedding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Compacts.html#TopologicalSpace.NonemptyCompacts\">TopologicalSpace.NonemptyCompacts</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Lp/lpSpace.html#lp\">lp</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/Kuratowski.lean#L103-L108","name":"kuratowskiEmbedding.isometry","line":103,"kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Kuratowski.html#kuratowskiEmbedding.isometry","doc":"The Kuratowski embedding is an isometry.\nTheorem 2.1 of [Assaf Naor, *Metric Embeddings and Lipschitz Extensions*][Naor-2015]. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#kuratowskiEmbedding.isometry\"><span class=\"name\">kuratowskiEmbedding</span>.<span class=\"name\">isometry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#TopologicalSpace.SeparableSpace\">TopologicalSpace.SeparableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#kuratowskiEmbedding\">kuratowskiEmbedding</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/Kuratowski.lean#L98-L101","name":"kuratowskiEmbedding","line":98,"kind":"def","docLink":"./Mathlib/Topology/MetricSpace/Kuratowski.html#kuratowskiEmbedding","doc":"The Kuratowski embedding is an isometric embedding of a separable metric space in `ℓ^∞(ℕ, ℝ)`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#kuratowskiEmbedding\"><span class=\"name\">kuratowskiEmbedding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#TopologicalSpace.SeparableSpace\">TopologicalSpace.SeparableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Lp/lpSpace.html#lp\">lp</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/Kuratowski.lean#L80-L92","name":"KuratowskiEmbedding.exists_isometric_embedding","line":80,"kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.exists_isometric_embedding","doc":"Every separable metric space embeds isometrically in `ℓ^∞(ℕ)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.exists_isometric_embedding\"><span class=\"name\">KuratowskiEmbedding</span>.<span class=\"name\">exists_isometric_embedding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#TopologicalSpace.SeparableSpace\">TopologicalSpace.SeparableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Lp/lpSpace.html#lp\">lp</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/Kuratowski.lean#L54-L78","name":"KuratowskiEmbedding.embeddingOfSubset_isometry","line":54,"kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.embeddingOfSubset_isometry","doc":"When the reference set is dense, the embedding map is an isometry on its image. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.embeddingOfSubset_isometry\"><span class=\"name\">KuratowskiEmbedding</span>.<span class=\"name\">embeddingOfSubset_isometry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#DenseRange\">DenseRange</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.embeddingOfSubset\">embeddingOfSubset</a> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/Kuratowski.lean#L46-L52","name":"KuratowskiEmbedding.embeddingOfSubset_dist_le","line":46,"kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.embeddingOfSubset_dist_le","doc":"The embedding map is always a semi-contraction. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.embeddingOfSubset_dist_le\"><span class=\"name\">KuratowskiEmbedding</span>.<span class=\"name\">embeddingOfSubset_dist_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.embeddingOfSubset\">embeddingOfSubset</a> <span class=\"fn\">x</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.embeddingOfSubset\">embeddingOfSubset</a> <span class=\"fn\">x</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/Kuratowski.lean#L43-L44","name":"KuratowskiEmbedding.embeddingOfSubset_coe","line":43,"kind":"theorem","docLink":"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.embeddingOfSubset_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.embeddingOfSubset_coe\"><span class=\"name\">KuratowskiEmbedding</span>.<span class=\"name\">embeddingOfSubset_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.embeddingOfSubset\">embeddingOfSubset</a> <span class=\"fn\">x</span> <span class=\"fn\">a</span>)</span></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<span class=\"fn\">x</span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/MetricSpace/Kuratowski.lean#L33-L41","name":"KuratowskiEmbedding.embeddingOfSubset","line":33,"kind":"def","docLink":"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.embeddingOfSubset","doc":"A metric space can be embedded in `l^∞(ℝ)` via the distances to points in\na fixed countable set, if this set is dense. This map is given in `kuratowskiEmbedding`,\nwithout density assumptions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/MetricSpace/Kuratowski.html#KuratowskiEmbedding.embeddingOfSubset\"><span class=\"name\">KuratowskiEmbedding</span>.<span class=\"name\">embeddingOfSubset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Defs.html#MetricSpace\">MetricSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Lp/lpSpace.html#lp\">lp</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span></div></div>"}]}