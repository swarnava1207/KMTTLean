{"name":"Mathlib.Topology.Category.LightProfinite.Basic","instances":[{"typeNames":[],"name":"LightProfinite.instHasPropAndTotallyDisconnectedSpaceCarrierSecondCountableTopology","className":"CompHausLike.HasProp"},{"typeNames":["LightProfinite"],"name":"LightProfinite.instInhabited","className":"Inhabited"},{"typeNames":["TopCat.carrier"],"name":"LightProfinite.instTotallyDisconnectedSpaceCarrierToTopAndSecondCountableTopology","className":"TotallyDisconnectedSpace"},{"typeNames":["TopCat.carrier"],"name":"LightProfinite.instSecondCountableTopologyCarrierToTopAndTotallyDisconnectedSpace","className":"SecondCountableTopology"},{"typeNames":["FintypeCat.toLightProfinite"],"name":"instFaithfulFintypeCatLightProfiniteToLightProfinite","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["FintypeCat.toLightProfinite"],"name":"instFullFintypeCatLightProfiniteToLightProfinite","className":"CategoryTheory.Functor.Full"},{"typeNames":["TopCat.carrier"],"name":"instFintypeCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopologyObjFintypeCatLightProfiniteToLightProfinite","className":"Fintype"},{"typeNames":["TopCat.carrier"],"name":"instFintypeCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopologyOfCarrier","className":"Fintype"},{"typeNames":["TopCat.carrier"],"name":"LightProfinite.instTotallyDisconnectedSpaceCarrierToTopTruePtCompHausLimitConeCompLightProfiniteToCompHaus","className":"TotallyDisconnectedSpace"},{"typeNames":["lightToProfinite"],"name":"LightProfinite.createsCountableLimits","className":"CategoryTheory.CreatesLimitsOfShape"},{"typeNames":["LightProfinite"],"name":"LightProfinite.instHasCountableLimits","className":"CategoryTheory.Limits.HasCountableLimits"},{"typeNames":["Opposite","CategoryTheory.forget"],"name":"LightProfinite.instPreservesLimitsOfShapeOppositeNatForget","className":"CategoryTheory.Limits.PreservesLimitsOfShape"},{"typeNames":["CategoryTheory.forget"],"name":"LightProfinite.forget_reflectsIsomorphisms","className":"CategoryTheory.Functor.ReflectsIsomorphisms"},{"typeNames":["lightToProfinite"],"name":"LightProfinite.instPreservesEpimorphismsProfiniteLightToProfinite","className":"CategoryTheory.Functor.PreservesEpimorphisms"},{"typeNames":["LightDiagram"],"name":"LightDiagram.instCategory","className":"CategoryTheory.Category"},{"typeNames":["LightDiagram"],"name":"LightDiagram.hasForget","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["lightDiagramToProfinite"],"name":"instFaithfulLightDiagramProfiniteLightDiagramToProfinite","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["lightDiagramToProfinite"],"name":"instFullLightDiagramProfiniteLightDiagramToProfinite","className":"CategoryTheory.Functor.Full"},{"typeNames":["TopologicalSpace.Clopens"],"name":"LightProfinite.instCountableClopensCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopology","className":"Countable"},{"typeNames":["DiscreteQuotient"],"name":"LightProfinite.instCountableDiscreteQuotient","className":"Countable"},{"typeNames":["TopCat.carrier"],"name":"instSecondCountableTopologyCarrierToTopTotallyDisconnectedSpacePtOppositeNatProfiniteCone","className":"SecondCountableTopology"},{"typeNames":["lightProfiniteToLightDiagram"],"name":"instIsEquivalenceLightProfiniteLightDiagramLightProfiniteToLightDiagram","className":"CategoryTheory.Functor.IsEquivalence"},{"typeNames":["lightDiagramToLightProfinite"],"name":"instIsEquivalenceLightDiagramLightProfiniteLightDiagramToLightProfinite","className":"CategoryTheory.Functor.IsEquivalence"},{"typeNames":["LightDiagram'"],"name":"instCategoryLightDiagram'","className":"CategoryTheory.Category"},{"typeNames":["LightDiagram'.toLightFunctor"],"name":"instFaithfulLightDiagram'LightDiagramToLightFunctor","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["LightDiagram'.toLightFunctor"],"name":"instFullLightDiagram'LightDiagramToLightFunctor","className":"CategoryTheory.Functor.Full"},{"typeNames":["LightDiagram'.toLightFunctor"],"name":"instEssSurjLightDiagram'LightDiagramToLightFunctor","className":"CategoryTheory.Functor.EssSurj"},{"typeNames":["LightDiagram'.toLightFunctor"],"name":"instIsEquivalenceLightDiagram'LightDiagramToLightFunctor","className":"CategoryTheory.Functor.IsEquivalence"},{"typeNames":["LightDiagram"],"name":"instEssentiallySmallLightDiagram","className":"CategoryTheory.EssentiallySmall"},{"typeNames":["LightProfinite"],"name":"instEssentiallySmallLightProfinite","className":"CategoryTheory.EssentiallySmall"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Shapes.Countable","Mathlib.Topology.Category.Profinite.AsLimit","Mathlib.Topology.Category.Profinite.CofilteredLimit","Mathlib.Topology.ClopenBox"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L378-L380","name":"instEssentiallySmallLightProfinite","line":378,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssentiallySmallLightProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssentiallySmallLightProfinite\"><span class=\"name\">instEssentiallySmallLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall\">CategoryTheory.EssentiallySmall.{u, u, u + 1}</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L375-L376","name":"instEssentiallySmallLightDiagram","line":375,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssentiallySmallLightDiagram","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssentiallySmallLightDiagram\"><span class=\"name\">instEssentiallySmallLightDiagram</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall\">CategoryTheory.EssentiallySmall.{u, u, u + 1}</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L371-L373","name":"LightDiagram.equivSmall","line":371,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.equivSmall","doc":"The equivalence between `LightDiagram` and a small category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.equivSmall\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">equivSmall</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\">LightDiagram'</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L369-L369","name":"instIsEquivalenceLightDiagram'LightDiagramToLightFunctor","line":369,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightDiagram'LightDiagramToLightFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightDiagram'LightDiagramToLightFunctor\"><span class=\"name\">instIsEquivalenceLightDiagram'LightDiagramToLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toLightFunctor\">LightDiagram'.toLightFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Functor.IsEquivalence\">IsEquivalence</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L362-L367","name":"instEssSurjLightDiagram'LightDiagramToLightFunctor","line":362,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssSurjLightDiagram'LightDiagramToLightFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssSurjLightDiagram'LightDiagramToLightFunctor\"><span class=\"name\">instEssSurjLightDiagram'LightDiagramToLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toLightFunctor\">LightDiagram'.toLightFunctor</a>.<a href=\"./Mathlib/CategoryTheory/EssentialImage.html#CategoryTheory.Functor.EssSurj\">EssSurj</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L359-L360","name":"instFullLightDiagram'LightDiagramToLightFunctor","line":359,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightDiagram'LightDiagramToLightFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightDiagram'LightDiagramToLightFunctor\"><span class=\"name\">instFullLightDiagram'LightDiagramToLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toLightFunctor\">LightDiagram'.toLightFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L357-L357","name":"instFaithfulLightDiagram'LightDiagramToLightFunctor","line":357,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightDiagram'LightDiagramToLightFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightDiagram'LightDiagramToLightFunctor\"><span class=\"name\">instFaithfulLightDiagram'LightDiagramToLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toLightFunctor\">LightDiagram'.toLightFunctor</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L352-L355","name":"LightDiagram'.toLightFunctor","line":352,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toLightFunctor","doc":"The functor part of the equivalence of categories `LightDiagram' ≌ LightDiagram`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toLightFunctor\"><span class=\"name\">LightDiagram'</span>.<span class=\"name\">toLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\">LightDiagram'</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L350-L350","name":"instCategoryLightDiagram'","line":350,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instCategoryLightDiagram'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instCategoryLightDiagram'\"><span class=\"name\">instCategoryLightDiagram'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_1, u_1}</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\">LightDiagram'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L346-L348","name":"LightDiagram'.toProfinite","line":346,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toProfinite","doc":"A `LightDiagram'` yields a `Profinite`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toProfinite\"><span class=\"name\">LightDiagram'</span>.<span class=\"name\">toProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\">LightDiagram'</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L344-L344","name":"LightDiagram'.diagram","line":344,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.diagram","doc":"The diagram takes values in a small category equivalent to `FintypeCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.diagram\"><span class=\"name\">LightDiagram'</span>.<span class=\"name\">diagram</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\">LightDiagram'</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L342-L342","name":"LightDiagram'.mk","line":342,"kind":"ctor","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.mk\"><span class=\"name\">LightDiagram'</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diagram</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\">LightDiagram'</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L335-L344","name":"LightDiagram'","line":335,"kind":"structure","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'","doc":"This is an auxiliary definition used to show that `LightDiagram` is essentially small.\n\nNote that below we put a category instance on this structure which is completely different from the\ncategory instance on `ℕᵒᵖ ⥤ FintypeCat.Skeleton.{u}`. Neither the morphisms nor the objects are the\nsame.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\"><span class=\"name\">LightDiagram'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L328-L329","name":"instIsEquivalenceLightDiagramLightProfiniteLightDiagramToLightProfinite","line":328,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightDiagramLightProfiniteLightDiagramToLightProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightDiagramLightProfiniteLightDiagramToLightProfinite\"><span class=\"name\">instIsEquivalenceLightDiagramLightProfiniteLightDiagramToLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite\">lightDiagramToLightProfinite</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Functor.IsEquivalence\">IsEquivalence</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L325-L326","name":"instIsEquivalenceLightProfiniteLightDiagramLightProfiniteToLightDiagram","line":325,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightProfiniteLightDiagramLightProfiniteToLightDiagram","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightProfiniteLightDiagramLightProfiniteToLightDiagram\"><span class=\"name\">instIsEquivalenceLightProfiniteLightDiagramLightProfiniteToLightDiagram</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram\">lightProfiniteToLightDiagram</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Functor.IsEquivalence\">IsEquivalence</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L309-L323","name":"LightProfinite.equivDiagram","line":309,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.equivDiagram","doc":"The equivalence of categories `LightProfinite ≌ LightDiagram` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.equivDiagram\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">equivDiagram</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L304-L304","name":"lightDiagramToLightProfinite_obj","line":304,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite_obj\"><span class=\"name\">lightDiagramToLightProfinite_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite\">lightDiagramToLightProfinite</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of\">LightProfinite.of</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.cone\">cone</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L304-L304","name":"lightDiagramToLightProfinite_map","line":304,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite_map\"><span class=\"name\">lightDiagramToLightProfinite_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite\">lightDiagramToLightProfinite</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L303-L307","name":"lightDiagramToLightProfinite","line":303,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite","doc":"The inverse part of the equivalence `LightProfinite ≌ LightDiagram` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite\"><span class=\"name\">lightDiagramToLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L285-L301","name":"instSecondCountableTopologyCarrierToTopTotallyDisconnectedSpacePtOppositeNatProfiniteCone","line":285,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instSecondCountableTopologyCarrierToTopTotallyDisconnectedSpacePtOppositeNatProfiniteCone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instSecondCountableTopologyCarrierToTopTotallyDisconnectedSpacePtOppositeNatProfiniteCone\"><span class=\"name\">instSecondCountableTopologyCarrierToTopTotallyDisconnectedSpacePtOppositeNatProfiniteCone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.cone\">cone</a></span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L279-L279","name":"lightProfiniteToLightDiagram_map","line":279,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram_map\"><span class=\"name\">lightProfiniteToLightDiagram_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram\">lightProfiniteToLightDiagram</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L279-L279","name":"lightProfiniteToLightDiagram_obj","line":279,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram_obj\"><span class=\"name\">lightProfiniteToLightDiagram_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram\">lightProfiniteToLightDiagram</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toLightDiagram\">toLightDiagram</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L278-L282","name":"lightProfiniteToLightDiagram","line":278,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram","doc":"The functor part of the equivalence `LightProfinite ≌ LightDiagram` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram\"><span class=\"name\">lightProfiniteToLightDiagram</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L268-L274","name":"LightProfinite.toLightDiagram","line":268,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toLightDiagram","doc":"A profinite space which is light gives rise to a light profinite space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toLightDiagram\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">toLightDiagram</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L264-L266","name":"LightProfinite.instCountableDiscreteQuotient","line":264,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCountableDiscreteQuotient","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCountableDiscreteQuotient\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instCountableDiscreteQuotient</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/DiscreteQuotient.html#DiscreteQuotient\">DiscreteQuotient</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite\">lightToProfinite</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">S</span>)</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L260-L262","name":"LightProfinite.instCountableClopensCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopology","line":260,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCountableClopensCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopology","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCountableClopensCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopology\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instCountableClopensCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopology</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Sets/Closeds.html#TopologicalSpace.Clopens\">TopologicalSpace.Clopens</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L256-L256","name":"instFullLightDiagramProfiniteLightDiagramToProfinite","line":256,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightDiagramProfiniteLightDiagramToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightDiagramProfiniteLightDiagramToProfinite\"><span class=\"name\">instFullLightDiagramProfiniteLightDiagramToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite\">lightDiagramToProfinite</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L254-L254","name":"instFaithfulLightDiagramProfiniteLightDiagramToProfinite","line":254,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightDiagramProfiniteLightDiagramToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightDiagramProfiniteLightDiagramToProfinite\"><span class=\"name\">instFaithfulLightDiagramProfiniteLightDiagramToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite\">lightDiagramToProfinite</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L251-L251","name":"lightDiagramToProfinite_obj","line":251,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite_obj\"><span class=\"name\">lightDiagramToProfinite_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite\">lightDiagramToProfinite</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">toProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L251-L251","name":"lightDiagramToProfinite_map","line":251,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite_map\"><span class=\"name\">lightDiagramToProfinite_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">LightDiagram.toProfinite</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite\">lightDiagramToProfinite</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L250-L252","name":"lightDiagramToProfinite","line":250,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite","doc":"The fully faithful embedding `LightDiagram ⥤ Profinite` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite\"><span class=\"name\">lightDiagramToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L245-L246","name":"LightDiagram.hasForget","line":245,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.hasForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.hasForget\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">hasForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> <span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>) =&gt; <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L242-L242","name":"LightDiagram.instCategory_comp_hom_apply","line":242,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.instCategory_comp_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.instCategory_comp_hom_apply\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">instCategory_comp_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝ </span><span class=\"fn\">Z✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">toProfinite</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">toProfinite</a> <span class=\"fn\">X✝</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">toProfinite</a> <span class=\"fn\">Y✝</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">toProfinite</a> <span class=\"fn\">Y✝</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">toProfinite</a> <span class=\"fn\">Z✝</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">toProfinite</a> <span class=\"fn\">X✝</span>)</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.Hom.hom\">TopCat.Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.Hom.hom'\">hom'</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.Hom.hom'\">hom'</a></span> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L242-L242","name":"LightDiagram.instCategory_id_hom_apply","line":242,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.instCategory_id_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.instCategory_id_hom_apply\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">instCategory_id_hom_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">toProfinite</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">toProfinite</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.Hom.hom\">TopCat.Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L242-L243","name":"LightDiagram.instCategory","line":242,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.instCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.instCategory\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">instCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_1, u_1 + 1}</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L239-L240","name":"LightDiagram.toProfinite","line":239,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite","doc":"The underlying `Profinite` of a `LightDiagram`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">toProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L235-L235","name":"LightDiagram.isLimit","line":235,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.isLimit","doc":"The limit cone is limiting. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.isLimit\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">isLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.cone\">cone</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L233-L233","name":"LightDiagram.cone","line":233,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.cone","doc":"The limit cone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.cone\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">cone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.diagram\">diagram</a></span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite\">FintypeCat.toProfinite</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L231-L231","name":"LightDiagram.diagram","line":231,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.diagram","doc":"The indexing diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.diagram\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">diagram</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L229-L229","name":"LightDiagram.mk","line":229,"kind":"ctor","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.mk\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diagram</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cone</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">diagram</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite\">FintypeCat.toProfinite</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isLimit</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">cone</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L228-L235","name":"LightDiagram","line":228,"kind":"structure","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram","doc":"A structure containing the data of sequential limit in `Profinite` of finite sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\"><span class=\"name\">LightDiagram</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L223-L224","name":"LightProfinite.instPreservesEpimorphismsProfiniteLightToProfinite","line":223,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instPreservesEpimorphismsProfiniteLightToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instPreservesEpimorphismsProfiniteLightToProfinite\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instPreservesEpimorphismsProfiniteLightToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite\">lightToProfinite</a>.<a href=\"./Mathlib/CategoryTheory/Functor/EpiMono.html#CategoryTheory.Functor.PreservesEpimorphisms\">PreservesEpimorphisms</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L187-L221","name":"LightProfinite.epi_iff_surjective","line":187,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.epi_iff_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.epi_iff_surjective\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">epi_iff_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L181-L185","name":"LightProfinite.forget_reflectsIsomorphisms","line":181,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.forget_reflectsIsomorphisms","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.forget_reflectsIsomorphisms\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">forget_reflectsIsomorphisms</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/ReflectsIso/Basic.html#CategoryTheory.Functor.ReflectsIsomorphisms\">ReflectsIsomorphisms</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L176-L179","name":"LightProfinite.isoOfBijective","line":176,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoOfBijective","doc":"Any continuous bijection of light profinite spaces induces an isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoOfBijective\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isoOfBijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bij</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L171-L174","name":"LightProfinite.isIso_of_bijective","line":171,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isIso_of_bijective","doc":"Any continuous bijection of light profinite spaces induces an isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isIso_of_bijective\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isIso_of_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bij</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L167-L169","name":"LightProfinite.isClosedMap","line":167,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isClosedMap","doc":"Any morphism of light profinite spaces is a closed map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isClosedMap\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isClosedMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosedMap\">IsClosedMap</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L161-L163","name":"LightProfinite.instPreservesLimitsOfShapeOppositeNatForget","line":161,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instPreservesLimitsOfShapeOppositeNatForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instPreservesLimitsOfShapeOppositeNatForget\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instPreservesLimitsOfShapeOppositeNatForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimitsOfShape\">CategoryTheory.Limits.PreservesLimitsOfShape</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L158-L159","name":"LightProfinite.instHasCountableLimits","line":158,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instHasCountableLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instHasCountableLimits\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instHasCountableLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Countable.html#CategoryTheory.Limits.HasCountableLimits\">CategoryTheory.Limits.HasCountableLimits</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L151-L156","name":"LightProfinite.createsCountableLimits","line":151,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.createsCountableLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.createsCountableLimits\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">createsCountableLimits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Countable.html#CategoryTheory.CountableCategory\">CategoryTheory.CountableCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimitsOfShape\">CategoryTheory.CreatesLimitsOfShape</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite\">lightToProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L142-L149","name":"LightProfinite.limitConeIsLimit","line":142,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.limitConeIsLimit","doc":"The limit cone `LightProfinite.limitCone F` is indeed a limit cone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.limitConeIsLimit\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">limitConeIsLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Countable.html#CategoryTheory.CountableCategory\">CategoryTheory.CountableCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.limitCone\">limitCone</a> <span class=\"fn\">F</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L123-L140","name":"LightProfinite.limitCone","line":123,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.limitCone","doc":"An explicit limit cone for a functor `F : J ⥤ LightProfinite`, for a countable category `J`\ndefined in terms of `CompHaus.limitCone`, which is defined in terms of `TopCat.limitCone`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.limitCone\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">limitCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Countable.html#CategoryTheory.CountableCategory\">CategoryTheory.CountableCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L117-L121","name":"LightProfinite.instTotallyDisconnectedSpaceCarrierToTopTruePtCompHausLimitConeCompLightProfiniteToCompHaus","line":117,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTotallyDisconnectedSpaceCarrierToTopTruePtCompHausLimitConeCompLightProfiniteToCompHaus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTotallyDisconnectedSpaceCarrierToTopTruePtCompHausLimitConeCompLightProfiniteToCompHaus\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instTotallyDisconnectedSpaceCarrierToTopTruePtCompHausLimitConeCompLightProfiniteToCompHaus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus.limitCone\">CompHaus.limitCone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\">lightProfiniteToCompHaus</a>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L111-L111","name":"instFintypeCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopologyOfCarrier","line":111,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFintypeCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopologyOfCarrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFintypeCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopologyOfCarrier\"><span class=\"name\">instFintypeCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopologyOfCarrier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of\">LightProfinite.of</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.carrier\">carrier</a></span>)</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L108-L109","name":"instFintypeCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopologyObjFintypeCatLightProfiniteToLightProfinite","line":108,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFintypeCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopologyObjFintypeCatLightProfiniteToLightProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFintypeCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopologyObjFintypeCatLightProfiniteToLightProfinite\"><span class=\"name\">instFintypeCarrierToTopAndTotallyDisconnectedSpaceSecondCountableTopologyObjFintypeCatLightProfiniteToLightProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite\">FintypeCat.toLightProfinite</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L105-L106","name":"instFullFintypeCatLightProfiniteToLightProfinite","line":105,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullFintypeCatLightProfiniteToLightProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullFintypeCatLightProfiniteToLightProfinite\"><span class=\"name\">instFullFintypeCatLightProfiniteToLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite\">FintypeCat.toLightProfinite</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Full\">Full</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L102-L103","name":"instFaithfulFintypeCatLightProfiniteToLightProfinite","line":102,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulFintypeCatLightProfiniteToLightProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulFintypeCatLightProfiniteToLightProfinite\"><span class=\"name\">instFaithfulFintypeCatLightProfiniteToLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite\">FintypeCat.toLightProfinite</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L96-L100","name":"FintypeCat.toLightProfiniteFullyFaithful","line":96,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfiniteFullyFaithful","doc":"`FintypeCat.toLightProfinite` is fully faithful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfiniteFullyFaithful\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">toLightProfiniteFullyFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite\">toLightProfinite</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.FullyFaithful\">FullyFaithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L91-L91","name":"FintypeCat.toLightProfinite_map_hom_apply","line":91,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite_map_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite_map_hom_apply\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">toLightProfinite_map_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\">X✝</span>.<a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.carrier\">carrier</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat.Hom.hom\">TopCat.Hom.hom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite\">toLightProfinite</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L89-L94","name":"FintypeCat.toLightProfinite","line":89,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite","doc":"The natural functor from `Fintype` to `LightProfinite`, endowing a finite type with the\ndiscrete topology. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">toLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L79-L82","name":"LightProfinite.toTopCat","line":79,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat","doc":"The fully faithful embedding of `LightProfinite` in `TopCat`.\nThis is definitionally the same as the obvious composite. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">toTopCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L75-L77","name":"lightProfiniteToCompHaus","line":75,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus","doc":"The fully faithful embedding of `LightProfinite` in `CompHaus`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\"><span class=\"name\">lightProfiniteToCompHaus</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L71-L73","name":"lightToProfiniteFullyFaithful","line":71,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfiniteFullyFaithful","doc":"`lightToProfinite` is fully faithful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfiniteFullyFaithful\"><span class=\"name\">lightToProfiniteFullyFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite\">lightToProfinite</a>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.FullyFaithful\">FullyFaithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L67-L69","name":"lightToProfinite","line":67,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite","doc":"The fully faithful embedding of `LightProfinite` in `Profinite`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite\"><span class=\"name\">lightToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L62-L63","name":"LightProfinite.instSecondCountableTopologyCarrierToTopAndTotallyDisconnectedSpace","line":62,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instSecondCountableTopologyCarrierToTopAndTotallyDisconnectedSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instSecondCountableTopologyCarrierToTopAndTotallyDisconnectedSpace\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instSecondCountableTopologyCarrierToTopAndTotallyDisconnectedSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L59-L60","name":"LightProfinite.instTotallyDisconnectedSpaceCarrierToTopAndSecondCountableTopology","line":59,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTotallyDisconnectedSpaceCarrierToTopAndSecondCountableTopology","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTotallyDisconnectedSpaceCarrierToTopAndSecondCountableTopology\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instTotallyDisconnectedSpaceCarrierToTopAndSecondCountableTopology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L56-L57","name":"LightProfinite.instInhabited","line":56,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instInhabited\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L48-L54","name":"LightProfinite.of","line":48,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of","doc":"Construct a term of `LightProfinite` from a type endowed with the structure of a compact,\nHausdorff, totally disconnected and second countable topological space.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L43-L46","name":"LightProfinite.instHasPropAndTotallyDisconnectedSpaceCarrierSecondCountableTopology","line":43,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instHasPropAndTotallyDisconnectedSpaceCarrierSecondCountableTopology","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instHasPropAndTotallyDisconnectedSpaceCarrierSecondCountableTopology\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instHasPropAndTotallyDisconnectedSpaceCarrierSecondCountableTopology</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.HasProp\">CompHausLike.HasProp</a> <span class=\"fn\">(fun (<span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>)</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Category/LightProfinite/Basic.lean#L37-L39","name":"LightProfinite","line":37,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite","doc":"`LightProfinite` is the category of second countable profinite spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\"><span class=\"name\">LightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}