{"name":"Mathlib.Data.ZMod.QuotientGroup","instances":[{"typeNames":["Function.minimalPeriod"],"name":"MulAction.minimalPeriod_pos","className":"NeZero"},{"typeNames":["Function.minimalPeriod"],"name":"AddAction.minimalPeriod_pos","className":"NeZero"}],"imports":["Init","Mathlib.Data.ZMod.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L190-L193","name":"Subgroup.quotientEquivSigmaZMod_apply","line":190,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#Subgroup.quotientEquivSigmaZMod_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#Subgroup.quotientEquivSigmaZMod_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientEquivSigmaZMod_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.orbitRel.Quotient\">MulAction.orbitRel.Quotient</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">zpowers</a> <span class=\"fn\">g</span>)</span>)</span> (<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">H</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Data/ZMod/QuotientGroup.html#Subgroup.quotientEquivSigmaZMod\">quotientEquivSigmaZMod</a></span> <span class=\"fn\">g</span>)</span> (<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">q</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟨<span class=\"fn\">q</span>, <span class=\"fn\">↑<span class=\"fn\">k</span></span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L186-L188","name":"Subgroup.quotientEquivSigmaZMod_symm_apply","line":186,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#Subgroup.quotientEquivSigmaZMod_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#Subgroup.quotientEquivSigmaZMod_symm_apply\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientEquivSigmaZMod_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.orbitRel.Quotient\">MulAction.orbitRel.Quotient</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">zpowers</a> <span class=\"fn\">g</span>)</span>)</span> (<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">H</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">H</span>) =&gt; <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">q</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">H</span>.<a href=\"./Mathlib/Data/ZMod/QuotientGroup.html#Subgroup.quotientEquivSigmaZMod\">quotientEquivSigmaZMod</a></span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">⟨<span class=\"fn\">q</span>, <span class=\"fn\">k</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.cast\">cast</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L180-L184","name":"Subgroup.quotientEquivSigmaZMod","line":180,"kind":"def","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#Subgroup.quotientEquivSigmaZMod","doc":"Partition `G ⧸ H` into orbits of the action of `g : G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#Subgroup.quotientEquivSigmaZMod\"><span class=\"name\">Subgroup</span>.<span class=\"name\">quotientEquivSigmaZMod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">H</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a>   <span class=\"fn\">(<span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.orbitRel.Quotient\">MulAction.orbitRel.Quotient</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">zpowers</a> <span class=\"fn\">g</span>)</span>)</span> (<span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">H</span>)</span>) ×\n    <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\">H</span>) =&gt; <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Quot.html#Quotient.out\">Quotient.out</a> <span class=\"fn\">q</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L170-L170","name":"IsOfFinAddOrder.finite_zmultiples","line":170,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#IsOfFinAddOrder.finite_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#IsOfFinAddOrder.finite_zmultiples\"><span class=\"name\">IsOfFinAddOrder</span>.<span class=\"name\">finite_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#IsOfFinAddOrder\">IsOfFinAddOrder</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span>)</span>)</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L170-L171","name":"IsOfFinOrder.finite_zpowers","line":170,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#IsOfFinOrder.finite_zpowers","doc":"**Alias** of the reverse direction of `finite_zpowers`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#IsOfFinOrder.finite_zpowers\"><span class=\"name\">IsOfFinOrder</span>.<span class=\"name\">finite_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#IsOfFinOrder\">IsOfFinOrder</a> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">a</span>)</span>)</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L167-L167","name":"infinite_zmultiples","line":167,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#infinite_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#infinite_zmultiples\"><span class=\"name\">infinite_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span>)</span>)</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Infinite\">Infinite</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#IsOfFinAddOrder\">IsOfFinAddOrder</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L167-L168","name":"infinite_zpowers","line":167,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#infinite_zpowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#infinite_zpowers\"><span class=\"name\">infinite_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">a</span>)</span>)</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Infinite\">Infinite</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#IsOfFinOrder\">IsOfFinOrder</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L162-L162","name":"finite_zmultiples","line":162,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#finite_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#finite_zmultiples\"><span class=\"name\">finite_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span>)</span>)</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#IsOfFinAddOrder\">IsOfFinAddOrder</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L162-L165","name":"finite_zpowers","line":162,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#finite_zpowers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#finite_zpowers\"><span class=\"name\">finite_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">a</span>)</span>)</span>.<a href=\"./Mathlib/Data/Finite/Defs.html#Set.Finite\">Finite</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#IsOfFinOrder\">IsOfFinOrder</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L155-L155","name":"Nat.card_zmultiples","line":155,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#Nat.card_zmultiples","doc":"See also `Fintype.card_zmultiples`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#Nat.card_zmultiples\"><span class=\"name\">Nat</span>.<span class=\"name\">card_zmultiples</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#addOrderOf\">addOrderOf</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L154-L158","name":"Nat.card_zpowers","line":154,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#Nat.card_zpowers","doc":"See also `Fintype.card_zpowers`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#Nat.card_zpowers\"><span class=\"name\">Nat</span>.<span class=\"name\">card_zpowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">a</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L137-L137","name":"AddAction.minimalPeriod_pos","line":137,"kind":"instance","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.minimalPeriod_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.minimalPeriod_pos\"><span class=\"name\">AddAction</span>.<span class=\"name\">minimalPeriod_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#AddAction\">AddAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.orbit\">orbit</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">b</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">(<a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L137-L144","name":"MulAction.minimalPeriod_pos","line":137,"kind":"instance","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.minimalPeriod_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.minimalPeriod_pos\"><span class=\"name\">MulAction</span>.<span class=\"name\">minimalPeriod_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.orbit\">orbit</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">b</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">(<a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L132-L132","name":"AddAction.minimalPeriod_eq_card","line":132,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.minimalPeriod_eq_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.minimalPeriod_eq_card\"><span class=\"name\">AddAction</span>.<span class=\"name\">minimalPeriod_eq_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#AddAction\">AddAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.orbit\">orbit</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">b</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.orbit\">orbit</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">b</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L132-L135","name":"MulAction.minimalPeriod_eq_card","line":132,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.minimalPeriod_eq_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.minimalPeriod_eq_card\"><span class=\"name\">MulAction</span>.<span class=\"name\">minimalPeriod_eq_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.orbit\">orbit</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">b</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.orbit\">orbit</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">b</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L121-L127","name":"AddAction.orbitZMultiplesEquiv_symm_apply'","line":121,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.orbitZMultiplesEquiv_symm_apply'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.orbitZMultiplesEquiv_symm_apply'\"><span class=\"name\">AddAction</span>.<span class=\"name\">orbitZMultiplesEquiv_symm_apply'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#AddAction\">AddAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.orbitZMultiplesEquiv\">orbitZMultiplesEquiv</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">⟨<span class=\"fn\">a</span>, <span class=\"fn\">⋯</span>⟩</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">⟨<span class=\"fn\">b</span>, <span class=\"fn\">⋯</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L115-L119","name":"MulAction.orbitZPowersEquiv_symm_apply'","line":115,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.orbitZPowersEquiv_symm_apply'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.orbitZPowersEquiv_symm_apply'\"><span class=\"name\">MulAction</span>.<span class=\"name\">orbitZPowersEquiv_symm_apply'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.orbitZPowersEquiv\">orbitZPowersEquiv</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟨<span class=\"fn\">a</span>, <span class=\"fn\">⋯</span>⟩</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">⟨<span class=\"fn\">b</span>, <span class=\"fn\">⋯</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L109-L109","name":"AddAction.orbitZMultiplesEquiv_symm_apply","line":109,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.orbitZMultiplesEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.orbitZMultiplesEquiv_symm_apply\"><span class=\"name\">AddAction</span>.<span class=\"name\">orbitZMultiplesEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#AddAction\">AddAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.orbitZMultiplesEquiv\">orbitZMultiplesEquiv</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.cast\">cast</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">⟨<span class=\"fn\">a</span>, <span class=\"fn\">⋯</span>⟩</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">⟨<span class=\"fn\">b</span>, <span class=\"fn\">⋯</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L109-L113","name":"MulAction.orbitZPowersEquiv_symm_apply","line":109,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.orbitZPowersEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.orbitZPowersEquiv_symm_apply\"><span class=\"name\">MulAction</span>.<span class=\"name\">orbitZPowersEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.orbitZPowersEquiv\">orbitZPowersEquiv</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟨<span class=\"fn\">a</span>, <span class=\"fn\">⋯</span>⟩</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.cast\">cast</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">⟨<span class=\"fn\">b</span>, <span class=\"fn\">⋯</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L100-L105","name":"AddAction.orbitZMultiplesEquiv","line":100,"kind":"def","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.orbitZMultiplesEquiv","doc":"The orbit `(ℤ • a) +ᵥ b` is a cycle of order `minimalPeriod (a +ᵥ ·) b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.orbitZMultiplesEquiv\"><span class=\"name\">AddAction</span>.<span class=\"name\">orbitZMultiplesEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#AddAction\">AddAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.orbit\">orbit</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L96-L98","name":"MulAction.orbitZPowersEquiv","line":96,"kind":"def","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.orbitZPowersEquiv","doc":"The orbit `(a ^ ℤ) • b` is a cycle of order `minimalPeriod ((•) a) b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.orbitZPowersEquiv\"><span class=\"name\">MulAction</span>.<span class=\"name\">orbitZPowersEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.orbit\">orbit</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L92-L94","name":"MulAction.zpowersQuotientStabilizerEquiv_symm_apply","line":92,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.zpowersQuotientStabilizerEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.zpowersQuotientStabilizerEquiv_symm_apply\"><span class=\"name\">MulAction</span>.<span class=\"name\">zpowersQuotientStabilizerEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.zpowersQuotientStabilizerEquiv\">zpowersQuotientStabilizerEquiv</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv.symm\">symm</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">⟨<span class=\"fn\">a</span>, <span class=\"fn\">⋯</span>⟩</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.cast\">cast</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L86-L90","name":"MulAction.zpowersQuotientStabilizerEquiv","line":86,"kind":"def","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.zpowersQuotientStabilizerEquiv","doc":"The quotient `(a ^ ℤ) ⧸ (stabilizer b)` is cyclic of order `minimalPeriod ((•) a) b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#MulAction.zpowersQuotientStabilizerEquiv\"><span class=\"name\">MulAction</span>.<span class=\"name\">zpowersQuotientStabilizerEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction.stabilizer\">stabilizer</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L73-L76","name":"AddAction.zmultiplesQuotientStabilizerEquiv_symm_apply","line":73,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.zmultiplesQuotientStabilizerEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.zmultiplesQuotientStabilizerEquiv_symm_apply\"><span class=\"name\">AddAction</span>.<span class=\"name\">zmultiplesQuotientStabilizerEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#AddAction\">AddAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.zmultiplesQuotientStabilizerEquiv\">zmultiplesQuotientStabilizerEquiv</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv.symm\">symm</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.cast\">cast</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">⟨<span class=\"fn\">a</span>, <span class=\"fn\">⋯</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L55-L71","name":"AddAction.zmultiplesQuotientStabilizerEquiv","line":55,"kind":"def","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.zmultiplesQuotientStabilizerEquiv","doc":"The quotient `(ℤ ∙ a) ⧸ (stabilizer b)` is cyclic of order `minimalPeriod (a +ᵥ ·) b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#AddAction.zmultiplesQuotientStabilizerEquiv\"><span class=\"name\">AddAction</span>.<span class=\"name\">zmultiplesQuotientStabilizerEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#AddAction\">AddAction</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#AddAction.stabilizer\">stabilizer</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv\">≃+</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">(<a href=\"./Mathlib/Dynamics/PeriodicPts/Defs.html#Function.minimalPeriod\">Function.minimalPeriod</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HVAdd.hVAdd\">+ᵥ</a> <span class=\"fn\">x</span>)</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L42-L44","name":"Int.index_zmultiples","line":42,"kind":"theorem","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#Int.index_zmultiples","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#Int.index_zmultiples\"><span class=\"name\">Int</span>.<span class=\"name\">index_zmultiples</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/GroupTheory/Index.html#AddSubgroup.index\">index</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L38-L40","name":"Int.quotientZMultiplesEquivZMod","line":38,"kind":"def","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#Int.quotientZMultiplesEquivZMod","doc":"`ℤ` modulo multiples of `a : ℤ` is `ZMod a.natAbs`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#Int.quotientZMultiplesEquivZMod\"><span class=\"name\">Int</span>.<span class=\"name\">quotientZMultiplesEquivZMod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv\">≃+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/ZMod/QuotientGroup.lean#L33-L36","name":"Int.quotientZMultiplesNatEquivZMod","line":33,"kind":"def","docLink":"./Mathlib/Data/ZMod/QuotientGroup.html#Int.quotientZMultiplesNatEquivZMod","doc":"`ℤ` modulo multiples of `n : ℕ` is `ZMod n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/ZMod/QuotientGroup.html#Int.quotientZMultiplesNatEquivZMod\"><span class=\"name\">Int</span>.<span class=\"name\">quotientZMultiplesNatEquivZMod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#AddSubgroup.zmultiples\">AddSubgroup.zmultiples</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#AddEquiv\">≃+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span></div></div>"}]}