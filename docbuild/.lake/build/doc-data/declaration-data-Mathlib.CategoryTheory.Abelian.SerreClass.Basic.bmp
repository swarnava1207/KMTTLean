{"name":"Mathlib.CategoryTheory.Abelian.SerreClass.Basic","instances":[{"typeNames":["Top.top"],"name":"CategoryTheory.ObjectProperty.instIsSerreClassTop","className":"CategoryTheory.ObjectProperty.IsSerreClass"},{"typeNames":["CategoryTheory.Limits.IsZero"],"name":"CategoryTheory.ObjectProperty.instIsSerreClassIsZero","className":"CategoryTheory.ObjectProperty.IsSerreClass"},{"typeNames":["CategoryTheory.ObjectProperty.inverseImage"],"name":"CategoryTheory.ObjectProperty.instIsSerreClassInverseImageOfPreservesFiniteLimitsOfPreservesFiniteColimits","className":"CategoryTheory.ObjectProperty.IsSerreClass"}],"imports":["Init","Mathlib.CategoryTheory.Abelian.Basic","Mathlib.CategoryTheory.ObjectProperty.ContainsZero","Mathlib.CategoryTheory.ObjectProperty.EpiMono","Mathlib.CategoryTheory.ObjectProperty.Extensions","Mathlib.Algebra.Homology.ShortComplex.ShortExact"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/SerreClass/Basic.lean#L68-L70","name":"CategoryTheory.ObjectProperty.instIsSerreClassInverseImageOfPreservesFiniteLimitsOfPreservesFiniteColimits","line":68,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.instIsSerreClassInverseImageOfPreservesFiniteLimitsOfPreservesFiniteColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.instIsSerreClassInverseImageOfPreservesFiniteLimitsOfPreservesFiniteColimits\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ObjectProperty</span>.<span class=\"name\">instIsSerreClassInverseImageOfPreservesFiniteLimitsOfPreservesFiniteColimits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v', u'}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass\">IsSerreClass</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">D</span> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Finite.html#CategoryTheory.Limits.PreservesFiniteLimits\">Limits.PreservesFiniteLimits</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Finite.html#CategoryTheory.Limits.PreservesFiniteColimits\">Limits.PreservesFiniteColimits</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty.inverseImage\">inverseImage</a></span> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass\">IsSerreClass</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/SerreClass/Basic.lean#L60-L66","name":"CategoryTheory.ObjectProperty.prop_X₂_of_exact","line":60,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.prop_X₂_of_exact","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.prop_X₂_of_exact\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ObjectProperty</span>.<span class=\"name\">prop_X₂_of_exact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass\">IsSerreClass</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex\">ShortComplex</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hS</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Exact.html#CategoryTheory.ShortComplex.Exact\">Exact</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.X₁\">X₁</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₃</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.X₃\">X₃</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.X₂\">X₂</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/SerreClass/Basic.lean#L55-L58","name":"CategoryTheory.ObjectProperty.prop_iff_of_shortExact","line":55,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.prop_iff_of_shortExact","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.prop_iff_of_shortExact\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ObjectProperty</span>.<span class=\"name\">prop_iff_of_shortExact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass\">IsSerreClass</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex\">ShortComplex</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hS</span> : <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/ShortExact.html#CategoryTheory.ShortComplex.ShortExact\">ShortExact</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.X₂\">X₂</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.X₁\">X₁</a></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.X₃\">X₃</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/SerreClass/Basic.lean#L53-L53","name":"CategoryTheory.ObjectProperty.instIsSerreClassIsZero","line":53,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.instIsSerreClassIsZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.instIsSerreClassIsZero\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ObjectProperty</span>.<span class=\"name\">instIsSerreClassIsZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass\">IsSerreClass</a> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/ZeroObjects.html#CategoryTheory.Limits.IsZero\">Limits.IsZero</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/SerreClass/Basic.lean#L51-L51","name":"CategoryTheory.ObjectProperty.instIsSerreClassTop","line":51,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.instIsSerreClassTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.instIsSerreClassTop\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ObjectProperty</span>.<span class=\"name\">instIsSerreClassTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>.<a href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass\">IsSerreClass</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/SerreClass/Basic.lean#L43-L43","name":"CategoryTheory.ObjectProperty.IsSerreClass.mk","line":43,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ObjectProperty</span>.<span class=\"name\">IsSerreClass</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toContainsZero</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/ContainsZero.html#CategoryTheory.ObjectProperty.ContainsZero\">ContainsZero</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toIsClosedUnderSubobjects</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/EpiMono.html#CategoryTheory.ObjectProperty.IsClosedUnderSubobjects\">IsClosedUnderSubobjects</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toIsClosedUnderQuotients</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/EpiMono.html#CategoryTheory.ObjectProperty.IsClosedUnderQuotients\">IsClosedUnderQuotients</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">toIsClosedUnderExtensions</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/Extensions.html#CategoryTheory.ObjectProperty.IsClosedUnderExtensions\">IsClosedUnderExtensions</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass\">IsSerreClass</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/SerreClass/Basic.lean#L43-L45","name":"CategoryTheory.ObjectProperty.IsSerreClass.toIsClosedUnderExtensions","line":43,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass.toIsClosedUnderExtensions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass.toIsClosedUnderExtensions\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ObjectProperty</span>.<span class=\"name\">IsSerreClass</span>.<span class=\"name\">toIsClosedUnderExtensions</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass\">IsSerreClass</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/Extensions.html#CategoryTheory.ObjectProperty.IsClosedUnderExtensions\">IsClosedUnderExtensions</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/SerreClass/Basic.lean#L43-L45","name":"CategoryTheory.ObjectProperty.IsSerreClass.toIsClosedUnderQuotients","line":43,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass.toIsClosedUnderQuotients","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass.toIsClosedUnderQuotients\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ObjectProperty</span>.<span class=\"name\">IsSerreClass</span>.<span class=\"name\">toIsClosedUnderQuotients</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass\">IsSerreClass</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/EpiMono.html#CategoryTheory.ObjectProperty.IsClosedUnderQuotients\">IsClosedUnderQuotients</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/SerreClass/Basic.lean#L43-L45","name":"CategoryTheory.ObjectProperty.IsSerreClass.toIsClosedUnderSubobjects","line":43,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass.toIsClosedUnderSubobjects","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass.toIsClosedUnderSubobjects\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ObjectProperty</span>.<span class=\"name\">IsSerreClass</span>.<span class=\"name\">toIsClosedUnderSubobjects</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass\">IsSerreClass</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/EpiMono.html#CategoryTheory.ObjectProperty.IsClosedUnderSubobjects\">IsClosedUnderSubobjects</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/SerreClass/Basic.lean#L43-L45","name":"CategoryTheory.ObjectProperty.IsSerreClass.toContainsZero","line":43,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass.toContainsZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass.toContainsZero\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ObjectProperty</span>.<span class=\"name\">IsSerreClass</span>.<span class=\"name\">toContainsZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass\">IsSerreClass</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/ContainsZero.html#CategoryTheory.ObjectProperty.ContainsZero\">ContainsZero</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Abelian/SerreClass/Basic.lean#L41-L45","name":"CategoryTheory.ObjectProperty.IsSerreClass","line":41,"kind":"class","docLink":"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass","doc":"A Serre class in an abelian category consists of predicate which\nhold for the zero object and is closed under subobjects, quotients, extensions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Abelian/SerreClass/Basic.html#CategoryTheory.ObjectProperty.IsSerreClass\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">ObjectProperty</span>.<span class=\"name\">IsSerreClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ObjectProperty/Basic.html#CategoryTheory.ObjectProperty\">ObjectProperty</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/ContainsZero.html#CategoryTheory.ObjectProperty.ContainsZero\">ContainsZero</a></span>, <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/EpiMono.html#CategoryTheory.ObjectProperty.IsClosedUnderSubobjects\">IsClosedUnderSubobjects</a></span>, <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/EpiMono.html#CategoryTheory.ObjectProperty.IsClosedUnderQuotients\">IsClosedUnderQuotients</a></span>, <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/CategoryTheory/ObjectProperty/Extensions.html#CategoryTheory.ObjectProperty.IsClosedUnderExtensions\">IsClosedUnderExtensions</a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}