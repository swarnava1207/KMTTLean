{"name":"Mathlib.CategoryTheory.Monoidal.Free.Coherence","instances":[{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.FreeMonoidalCategory.instSubsingletonHomCompDiscreteNormalMonoidalObject","className":"Subsingleton"},{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.FreeMonoidalCategory.subsingleton_hom","className":"Subsingleton"},{"typeNames":["CategoryTheory.FreeMonoidalCategory"],"name":"CategoryTheory.FreeMonoidalCategory.instGroupoid","className":"CategoryTheory.Groupoid"}],"imports":["Init","Mathlib.CategoryTheory.Monoidal.Free.Basic","Mathlib.CategoryTheory.Discrete.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L327-L329","name":"CategoryTheory.FreeMonoidalCategory.instGroupoid","line":327,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.instGroupoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.instGroupoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">instGroupoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L310-L323","name":"CategoryTheory.FreeMonoidalCategory.inverseAux","line":310,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inverseAux","doc":"Auxiliary construction for showing that the free monoidal category is a groupoid. Do not use\nthis, use `IsIso.inv` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inverseAux\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">inverseAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory.Hom\">Hom</a></span> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L296-L302","name":"CategoryTheory.FreeMonoidalCategory.subsingleton_hom","line":296,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.subsingleton_hom","doc":"The monoidal coherence theorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.subsingleton_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">subsingleton_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.IsThin\">Quiver.IsThin</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L282-L292","name":"CategoryTheory.FreeMonoidalCategory.fullNormalizeIso","line":282,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.fullNormalizeIso","doc":"The isomorphism between an object and its normal form is natural. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.fullNormalizeIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">fullNormalizeIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.fullNormalize\">fullNormalize</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion\">inclusion</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L271-L280","name":"CategoryTheory.FreeMonoidalCategory.normalizeIso","line":271,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIso","doc":"The isomorphism between `n ⊗ X` and `normalize X n` is natural (in both `X` and `n`, but\nnaturality in `n` is trivial and was \"proved\" in `normalizeIsoAux`). This is the real heart\nof our proof of the coherence theorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIso\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc\">tensorFunc</a> <span class=\"fn\">C</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize'\">normalize'</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L247-L267","name":"CategoryTheory.FreeMonoidalCategory.normalize_naturality","line":247,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize_naturality\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalize_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusionObj\">inclusionObj</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'\">normalizeIsoApp'</a> <span class=\"fn\">C</span> <span class=\"fn\">Y</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'\">normalizeIsoApp'</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion\">inclusion</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">⋯</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L233-L245","name":"CategoryTheory.FreeMonoidalCategory.normalizeObj_congr","line":233,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj_congr\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeObj_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">normalizeObj</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">normalizeObj</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L218-L218","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoAux_inv_app","line":218,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoAux_inv_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoAux_inv_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoAux_inv_app</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X✝</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoAux\">normalizeIsoAux</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\">normalizeIsoApp</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span> <span class=\"fn\">X✝</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L218-L218","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoAux_hom_app","line":218,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoAux_hom_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoAux_hom_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoAux_hom_app</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X✝</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoAux\">normalizeIsoAux</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">X✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\">normalizeIsoApp</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span> <span class=\"fn\">X✝</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L217-L226","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoAux","line":217,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoAux","doc":"Auxiliary definition for `normalizeIso`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoAux\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc\">tensorFunc</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize'\">normalize'</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L213-L215","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_unitor","line":213,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_unitor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_unitor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoApp_unitor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\">normalizeIsoApp</a> <span class=\"fn\">C</span> <span class=\"fn\">(𝟙_ <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span>)</span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion\">inclusion</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete.as\">as</a></span> }</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L207-L211","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_tensor","line":207,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_tensor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_tensor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoApp_tensor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\">normalizeIsoApp</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">MonoidalCategoryStruct.associator</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion\">inclusion</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete.as\">as</a></span> }</span>)</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.symm\">symm</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.trans\">≪≫</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory.whiskerRightIso\">MonoidalCategory.whiskerRightIso</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\">normalizeIsoApp</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">Y</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.trans\">≪≫</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\">normalizeIsoApp</a> <span class=\"fn\">C</span> <span class=\"fn\">Y</span> <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">normalizeObj</a></span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete.as\">as</a></span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L197-L205","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_eq","line":197,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp_eq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoApp_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\">normalizeIsoApp</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'\">normalizeIsoApp'</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete.as\">as</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L187-L195","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'","line":187,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'","doc":"Almost non-definitionally equal to `normalizeIsoApp`, but has a better definitional property\nin the proof of `normalize_naturality`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoApp'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusionObj\">inclusionObj</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusionObj\">inclusionObj</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">normalizeObj</a></span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L177-L185","name":"CategoryTheory.FreeMonoidalCategory.normalizeIsoApp","line":177,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp","doc":"Auxiliary definition for `normalizeIso`. Here we construct the isomorphism between\n`n ⊗ X` and `normalize X n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeIsoApp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeIsoApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc\">tensorFunc</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize'\">normalize'</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L168-L175","name":"CategoryTheory.FreeMonoidalCategory.tensorFunc_obj_map","line":168,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc_obj_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc_obj_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">tensorFunc_obj_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">n'</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">n</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">n'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc\">tensorFunc</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Z</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion\">inclusion</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">Z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L165-L166","name":"CategoryTheory.FreeMonoidalCategory.tensorFunc_map_app","line":165,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc_map_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc_map_app\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">tensorFunc_map_app</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc\">tensorFunc</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion\">inclusion</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">{ <span class=\"fn\">as</span> := <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete.as\">as</a></span> }</span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L158-L163","name":"CategoryTheory.FreeMonoidalCategory.tensorFunc","line":158,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc","doc":"Given an object `X` of the free monoidal category and an object `n` in normal form, taking\nthe tensor product `n ⊗ X` in the free monoidal category is functorial in both `X` and `n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.tensorFunc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">tensorFunc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">((<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L153-L156","name":"CategoryTheory.FreeMonoidalCategory.fullNormalize","line":153,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.fullNormalize","doc":"The normalization functor for the free monoidal category over `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.fullNormalize\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">fullNormalize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">((<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L146-L151","name":"CategoryTheory.FreeMonoidalCategory.normalize'","line":146,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize'","doc":"A variant of the normalization functor where we consider the result as an object in the free\nmonoidal category (rather than an object of the discrete subcategory of objects in normal\nform). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalize'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">((<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L138-L144","name":"CategoryTheory.FreeMonoidalCategory.normalize","line":138,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize","doc":"Our normalization procedure works by first defining a functor `F C ⥤ (N C ⥤ N C)` (which turns\nout to be very easy), and then obtain a functor `F C ⥤ N C` by plugging in the normal object\n`𝟙_ C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalize\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">((<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span>)</span> <span class=\"fn\">((<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L112-L130","name":"CategoryTheory.FreeMonoidalCategory.normalizeMapAux","line":112,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeMapAux","doc":"Auxiliary definition for `normalize`. Here we prove that objects that are related by\nassociators and unitors map to the same normal form. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeMapAux\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeMapAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span> → (<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj'\">normalizeObj'</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj'\">normalizeObj'</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L105-L106","name":"CategoryTheory.FreeMonoidalCategory.normalizeObj'","line":105,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj'","doc":"Auxiliary definition for `normalize`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeObj'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">((<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span>)</span> <span class=\"fn\">((<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L100-L103","name":"CategoryTheory.FreeMonoidalCategory.normalizeObj_tensor","line":100,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj_tensor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj_tensor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeObj_tensor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">normalizeObj</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">normalizeObj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">normalizeObj</a></span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L96-L98","name":"CategoryTheory.FreeMonoidalCategory.normalizeObj_unitor","line":96,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj_unitor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj_unitor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeObj_unitor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(𝟙_ <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\">normalizeObj</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L90-L94","name":"CategoryTheory.FreeMonoidalCategory.normalizeObj","line":90,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj","doc":"Auxiliary definition for `normalize`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.normalizeObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">normalizeObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a> <span class=\"fn\">C</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L83-L88","name":"CategoryTheory.FreeMonoidalCategory.inclusion_map","line":83,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">inclusion_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion\">inclusion</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">eqToHom</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L78-L81","name":"CategoryTheory.FreeMonoidalCategory.inclusion_obj","line":78,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">inclusion_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion\">inclusion</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusionObj\">inclusionObj</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete.as\">as</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L74-L76","name":"CategoryTheory.FreeMonoidalCategory.inclusion","line":74,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion","doc":"The discrete subcategory of objects in normal form includes into the free monoidal category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusion\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">((<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L68-L72","name":"CategoryTheory.FreeMonoidalCategory.inclusionObj","line":68,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusionObj","doc":"Auxiliary definition for `inclusion`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.inclusionObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">inclusionObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a> <span class=\"fn\">C</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Basic.html#CategoryTheory.FreeMonoidalCategory\">FreeMonoidalCategory</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L66-L66","name":"CategoryTheory.FreeMonoidalCategory.instSubsingletonHomCompDiscreteNormalMonoidalObject","line":66,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.instSubsingletonHomCompDiscreteNormalMonoidalObject","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.instSubsingletonHomCompDiscreteNormalMonoidalObject\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">instSubsingletonHomCompDiscreteNormalMonoidalObject</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Discrete/Basic.html#CategoryTheory.Discrete\">Discrete</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a>) <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> (<span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L55-L55","name":"CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject.tensor","line":55,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject.tensor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject.tensor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">NormalMonoidalObject</span>.<span class=\"name\">tensor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a> <span class=\"fn\">C</span></span> → <span class=\"fn\"><span class=\"fn\">C</span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L54-L54","name":"CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject.unit","line":54,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject.unit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject.unit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">NormalMonoidalObject</span>.<span class=\"name\">unit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\">NormalMonoidalObject</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Free/Coherence.lean#L51-L55","name":"CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject","line":51,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject","doc":"We say an object in the free monoidal category is in normal form if it is of the form\n`(((𝟙_ C) ⊗ X₁) ⊗ X₂) ⊗ ⋯`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Free/Coherence.html#CategoryTheory.FreeMonoidalCategory.NormalMonoidalObject\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeMonoidalCategory</span>.<span class=\"name\">NormalMonoidalObject</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}