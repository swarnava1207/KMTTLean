{"name":"Mathlib.AlgebraicGeometry.Cover.Open","instances":[{"typeNames":["AlgebraicGeometry.Scheme.Cover.map"],"name":"AlgebraicGeometry.Scheme.instIsOpenImmersionMap","className":"AlgebraicGeometry.PresheafedSpace.IsOpenImmersion"},{"typeNames":["AlgebraicGeometry.Scheme.OpenCover"],"name":"AlgebraicGeometry.Scheme.instInhabitedOpenCover","className":"Inhabited"},{"typeNames":["AlgebraicGeometry.Scheme.Cover.J"],"name":"AlgebraicGeometry.Scheme.instFintypeJIsOpenImmersionFiniteSubcover","className":"Fintype"},{"typeNames":["AlgebraicGeometry.Scheme.AffineCover.map"],"name":"AlgebraicGeometry.Scheme.AffineOpenCover.instIsOpenImmersionMap","className":"AlgebraicGeometry.PresheafedSpace.IsOpenImmersion"}],"imports":["Init","Mathlib.AlgebraicGeometry.Cover.MorphismProperty"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L288-L305","name":"AlgebraicGeometry.Scheme.affineBasisCover_is_basis","line":288,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover_is_basis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover_is_basis\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineBasisCover_is_basis</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#TopologicalSpace.IsTopologicalBasis\">TopologicalSpace.IsTopologicalBasis</a>\n  <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/SheafedSpace.html#AlgebraicGeometry.SheafedSpace.toPresheafedSpace\">toPresheafedSpace</a></span></span></span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a>     <span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover\">affineBasisCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover\">affineBasisCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">a</span>)</span>.<a href=\"./Mathlib/Geometry/RingedSpace/PresheafedSpace.html#AlgebraicGeometry.PresheafedSpace.Hom.base\">base</a></span>)</span></span></span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L278-L286","name":"AlgebraicGeometry.Scheme.affineBasisCover_map_range","line":278,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover_map_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover_map_range\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineBasisCover_map_range</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/SheafedSpace.html#AlgebraicGeometry.SheafedSpace.toPresheafedSpace\">toPresheafedSpace</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Init/Classical.html#Exists.choose\">choose</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover\">affineBasisCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">r</span>⟩</span>)</span>.<a href=\"./Mathlib/Geometry/RingedSpace/PresheafedSpace.html#AlgebraicGeometry.PresheafedSpace.Hom.base\">base</a></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover\">affineCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/Geometry/RingedSpace/PresheafedSpace.html#AlgebraicGeometry.PresheafedSpace.Hom.base\">base</a></span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Spectrum/Prime/Topology.html#PrimeSpectrum.basicOpen\">PrimeSpectrum.basicOpen</a> <span class=\"fn\">r</span>)</span>.<a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens.carrier\">carrier</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L274-L276","name":"AlgebraicGeometry.Scheme.affineBasisCover_obj","line":274,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover_obj\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineBasisCover_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover\">affineBasisCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover\">affineBasisCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">Spec</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCoverRing\">affineBasisCoverRing</a></span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L270-L272","name":"AlgebraicGeometry.Scheme.affineBasisCoverRing","line":270,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCoverRing","doc":"The coordinate ring of a component in the `affine_basis_cover`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCoverRing\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineBasisCoverRing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover\">affineBasisCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L265-L268","name":"AlgebraicGeometry.Scheme.affineBasisCover","line":265,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover","doc":"We may bind the basic open sets of an open affine cover to form an affine cover that is also\na basis. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineBasisCover</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L253-L263","name":"AlgebraicGeometry.Scheme.affineBasisCoverOfAffine","line":253,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCoverOfAffine","doc":"The basic open sets form an affine open cover of `Spec R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineBasisCoverOfAffine\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineBasisCoverOfAffine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">Spec</a> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L235-L249","name":"AlgebraicGeometry.Scheme.isNilpotent_of_isNilpotent_cover","line":235,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.isNilpotent_of_isNilpotent_cover","doc":"If a global section is nilpotent on each member of a finite open cover, then `f` is\nnilpotent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.isNilpotent_of_isNilpotent_cover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">isNilpotent_of_isNilpotent_cover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Opens\">Opens</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/PresheafedSpace.html#AlgebraicGeometry.PresheafedSpace.presheaf\">presheaf</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Nilpotent/Defs.html#IsNilpotent\">IsNilpotent</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">Hom.app</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">U</span>)</span>)</span> <span class=\"fn\">s</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Nilpotent/Defs.html#IsNilpotent\">IsNilpotent</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L229-L233","name":"AlgebraicGeometry.Scheme.zero_of_zero_cover","line":229,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.zero_of_zero_cover","doc":"If the restriction of a global section to each member of an open cover is zero, then it is\nglobally zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.zero_of_zero_cover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">zero_of_zero_cover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Opens\">Opens</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/PresheafedSpace.html#AlgebraicGeometry.PresheafedSpace.presheaf\">presheaf</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>), <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">Hom.app</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">U</span>)</span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L213-L227","name":"AlgebraicGeometry.Scheme.OpenCover.ext_elem","line":213,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.ext_elem","doc":"If two global sections agree after restriction to each member of an open cover, then\nthey agree globally. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.ext_elem\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">ext_elem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Opens\">Opens</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/PresheafedSpace.html#AlgebraicGeometry.PresheafedSpace.presheaf\">presheaf</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>),\n    <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">Hom.app</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">U</span>)</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme.Hom.app\">Hom.app</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">U</span>)</span>)</span> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L207-L211","name":"AlgebraicGeometry.Scheme.OpenCover.fromAffineRefinement","line":207,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.fromAffineRefinement","doc":"Given any open cover `𝓤`, this is an affine open cover which refines it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.fromAffineRefinement\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">fromAffineRefinement</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝓤</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝓤</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement\">affineRefinement</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">𝓤</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L190-L190","name":"AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop_J","line":190,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop_J","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop_J\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineOpenCoverOfSpanRangeEqTop_J</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop\">affineOpenCoverOfSpanRangeEqTop</a> <span class=\"fn\">s</span> <span class=\"fn\">hs</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.J\">J</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ι</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L190-L190","name":"AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop_f","line":190,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop_f\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineOpenCoverOfSpanRangeEqTop_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">Spec</a> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Geometry/RingedSpace/SheafedSpace.html#AlgebraicGeometry.SheafedSpace.toPresheafedSpace\">toPresheafedSpace</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop\">affineOpenCoverOfSpanRangeEqTop</a> <span class=\"fn\">s</span> <span class=\"fn\">hs</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.f\">f</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">let_fun <span class=\"fn\">this</span> := <span class=\"fn\">⋯</span>;\n  <span class=\"fn\"><span class=\"fn\">this</span>.<a href=\"./Init/Classical.html#Exists.choose\">choose</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L190-L190","name":"AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop_obj_carrier","line":190,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop_obj_carrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop_obj_carrier\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineOpenCoverOfSpanRangeEqTop_obj_carrier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop\">affineOpenCoverOfSpanRangeEqTop</a> <span class=\"fn\">s</span> <span class=\"fn\">hs</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.obj\">obj</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization/Away.html#Localization.Away\">Localization.Away</a> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L190-L190","name":"AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop_map","line":190,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop_map\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineOpenCoverOfSpanRangeEqTop_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop\">affineOpenCoverOfSpanRangeEqTop</a> <span class=\"fn\">s</span> <span class=\"fn\">hs</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.map\">map</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec.map\">Spec.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat.ofHom\">CommRingCat.ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">(↑<span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/MonoidLocalization/Away.html#Localization.Away\">Localization.Away</a> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L189-L205","name":"AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop","line":189,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop","doc":"A family of elements spanning the unit ideal of `R` gives a affine open cover of `Spec R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCoverOfSpanRangeEqTop\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineOpenCoverOfSpanRangeEqTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./Mathlib/Algebra/Category/Ring/Basic.html#CommRingCat\">CommRingCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">↑<span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">Spec</a> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover\">AffineOpenCover</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L176-L176","name":"AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso_inv_pullbackHom_assoc","line":176,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso_inv_pullbackHom_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso_inv_pullbackHom_assoc\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">pullbackCoverAffineRefinementObjIso_inv_pullbackHom_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackCover\">Cover.pullbackCover</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement\">affineRefinement</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement\">affineRefinement</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso\">pullbackCoverAffineRefinementObjIso</a> <span class=\"fn\">f</span> <span class=\"fn\">𝒰</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackHom\">Cover.pullbackHom</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement\">affineRefinement</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span> <span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackHom\">Cover.pullbackHom</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover\">affineCover</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackHom\">Cover.pullbackHom</a> <span class=\"fn\">𝒰</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L176-L187","name":"AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso_inv_pullbackHom","line":176,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso_inv_pullbackHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso_inv_pullbackHom\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">pullbackCoverAffineRefinementObjIso_inv_pullbackHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackCover\">Cover.pullbackCover</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement\">affineRefinement</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso\">pullbackCoverAffineRefinementObjIso</a> <span class=\"fn\">f</span> <span class=\"fn\">𝒰</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackHom\">Cover.pullbackHom</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement\">affineRefinement</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span> <span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackHom\">Cover.pullbackHom</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover\">affineCover</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackHom\">Cover.pullbackHom</a> <span class=\"fn\">𝒰</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L162-L162","name":"AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso_inv_map_assoc","line":162,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso_inv_map_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso_inv_map_assoc\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">pullbackCoverAffineRefinementObjIso_inv_map_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackCover\">Cover.pullbackCover</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement\">affineRefinement</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso\">pullbackCoverAffineRefinementObjIso</a> <span class=\"fn\">f</span> <span class=\"fn\">𝒰</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackCover\">Cover.pullbackCover</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement\">affineRefinement</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackCover\">Cover.pullbackCover</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover\">affineCover</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackHom\">Cover.pullbackHom</a> <span class=\"fn\">𝒰</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackCover\">Cover.pullbackCover</a> <span class=\"fn\">𝒰</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L162-L174","name":"AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso_inv_map","line":162,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso_inv_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso_inv_map\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">pullbackCoverAffineRefinementObjIso_inv_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackCover\">Cover.pullbackCover</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement\">affineRefinement</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso\">pullbackCoverAffineRefinementObjIso</a> <span class=\"fn\">f</span> <span class=\"fn\">𝒰</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackCover\">Cover.pullbackCover</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement\">affineRefinement</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackCover\">Cover.pullbackCover</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover\">affineCover</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackHom\">Cover.pullbackHom</a> <span class=\"fn\">𝒰</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackCover\">Cover.pullbackCover</a> <span class=\"fn\">𝒰</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L154-L160","name":"AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso","line":154,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso","doc":"The pullback of the affine refinement is the pullback of the affine cover. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.pullbackCoverAffineRefinementObjIso\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">pullbackCoverAffineRefinementObjIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackCover\">Cover.pullbackCover</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement\">affineRefinement</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackCover\">Cover.pullbackCover</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement\">affineRefinement</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackCover\">Cover.pullbackCover</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover\">affineCover</a></span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.pullbackHom\">Cover.pullbackHom</a> <span class=\"fn\">𝒰</span> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L143-L152","name":"AlgebraicGeometry.Scheme.OpenCover.affineRefinement","line":143,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement","doc":"Given any open cover `𝓤`, this is an affine open cover which refines it.\nThe morphism in the category of open covers which proves that this is indeed a refinement, see\n`AlgebraicGeometry.Scheme.OpenCover.fromAffineRefinement`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.affineRefinement\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">affineRefinement</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝓤</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover\">AffineOpenCover</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L139-L141","name":"AlgebraicGeometry.Scheme.openCover_affineOpenCover","line":139,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.openCover_affineOpenCover","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.openCover_affineOpenCover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">openCover_affineOpenCover</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover\">affineOpenCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover\">affineCover</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L131-L131","name":"AlgebraicGeometry.Scheme.affineOpenCover_f","line":131,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover_f\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineOpenCover_f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/SheafedSpace.html#AlgebraicGeometry.SheafedSpace.toPresheafedSpace\">toPresheafedSpace</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover\">affineOpenCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.f\">f</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover\">affineCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.f\">f</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L131-L131","name":"AlgebraicGeometry.Scheme.affineOpenCover_obj","line":131,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover_obj\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineOpenCover_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover\">affineCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover\">affineOpenCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.obj\">obj</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Init/Classical.html#Exists.choose\">choose</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L131-L131","name":"AlgebraicGeometry.Scheme.affineOpenCover_J","line":131,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover_J","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover_J\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineOpenCover_J</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover\">affineOpenCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.J\">J</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover\">affineCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L131-L131","name":"AlgebraicGeometry.Scheme.affineOpenCover_map","line":131,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover_map\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineOpenCover_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover\">affineCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover\">affineOpenCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.map\">map</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover\">affineCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L130-L137","name":"AlgebraicGeometry.Scheme.affineOpenCover","line":130,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover","doc":"A choice of an affine open cover of a scheme. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineOpenCover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineOpenCover</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover\">AffineOpenCover</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L124-L124","name":"AlgebraicGeometry.Scheme.AffineOpenCover.openCover_obj","line":124,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover_obj\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">AffineOpenCover</span>.<span class=\"name\">openCover_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover\">AffineOpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Spec\">Spec</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.obj\">obj</a></span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L124-L124","name":"AlgebraicGeometry.Scheme.AffineOpenCover.openCover_f","line":124,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover_f\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">AffineOpenCover</span>.<span class=\"name\">openCover_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover\">AffineOpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/SheafedSpace.html#AlgebraicGeometry.SheafedSpace.toPresheafedSpace\">toPresheafedSpace</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.f\">f</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.f\">f</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L124-L124","name":"AlgebraicGeometry.Scheme.AffineOpenCover.openCover_map","line":124,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover_map\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">AffineOpenCover</span>.<span class=\"name\">openCover_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover\">AffineOpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.map\">map</a></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L124-L124","name":"AlgebraicGeometry.Scheme.AffineOpenCover.openCover_J","line":124,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover_J","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover_J\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">AffineOpenCover</span>.<span class=\"name\">openCover_J</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover\">AffineOpenCover</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\">openCover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.J\">J</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L123-L126","name":"AlgebraicGeometry.Scheme.AffineOpenCover.openCover","line":123,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover","doc":"The open cover associated to an affine open cover. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.openCover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">AffineOpenCover</span>.<span class=\"name\">openCover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover\">AffineOpenCover</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L120-L121","name":"AlgebraicGeometry.Scheme.AffineOpenCover.instIsOpenImmersionMap","line":120,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.instIsOpenImmersionMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover.instIsOpenImmersionMap\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">AffineOpenCover</span>.<span class=\"name\">instIsOpenImmersionMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover\">AffineOpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.IsOpenImmersion\">IsOpenImmersion</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.AffineCover.map\">map</a></span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L111-L116","name":"AlgebraicGeometry.Scheme.AffineOpenCover","line":111,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover","doc":"An affine open cover of `X` consists of a family of open immersions into `X` from\nspectra of rings.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.AffineOpenCover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">AffineOpenCover</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (v + 1) (u + 1))</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L97-L110","name":"AlgebraicGeometry.Scheme.OpenCover.compactSpace","line":97,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.compactSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.compactSpace\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">compactSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Geometry/RingedSpace/SheafedSpace.html#AlgebraicGeometry.SheafedSpace.toPresheafedSpace\">toPresheafedSpace</a></span></span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/SheafedSpace.html#AlgebraicGeometry.SheafedSpace.toPresheafedSpace\">toPresheafedSpace</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L94-L95","name":"AlgebraicGeometry.Scheme.instFintypeJIsOpenImmersionFiniteSubcover","line":94,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.instFintypeJIsOpenImmersionFiniteSubcover","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.instFintypeJIsOpenImmersionFiniteSubcover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">instFintypeJIsOpenImmersionFiniteSubcover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/SheafedSpace.html#AlgebraicGeometry.SheafedSpace.toPresheafedSpace\">toPresheafedSpace</a></span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.finiteSubcover\">finiteSubcover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L74-L74","name":"AlgebraicGeometry.Scheme.OpenCover.finiteSubcover_map","line":74,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.finiteSubcover_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.finiteSubcover_map\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">finiteSubcover_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/SheafedSpace.html#AlgebraicGeometry.SheafedSpace.toPresheafedSpace\">toPresheafedSpace</a></span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/SheafedSpace.html#AlgebraicGeometry.SheafedSpace.toPresheafedSpace\">toPresheafedSpace</a></span></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Init/Classical.html#Exists.choose\">choose</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.finiteSubcover\">finiteSubcover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.f\">f</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L74-L74","name":"AlgebraicGeometry.Scheme.OpenCover.finiteSubcover_obj","line":74,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.finiteSubcover_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.finiteSubcover_obj\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">finiteSubcover_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/SheafedSpace.html#AlgebraicGeometry.SheafedSpace.toPresheafedSpace\">toPresheafedSpace</a></span></span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/SheafedSpace.html#AlgebraicGeometry.SheafedSpace.toPresheafedSpace\">toPresheafedSpace</a></span></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Init/Classical.html#Exists.choose\">choose</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.finiteSubcover\">finiteSubcover</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.obj\">obj</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.f\">f</a></span> <span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L72-L92","name":"AlgebraicGeometry.Scheme.OpenCover.finiteSubcover","line":72,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.finiteSubcover","doc":"Every open cover of a quasi-compact scheme can be refined into a finite subcover.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.finiteSubcover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">finiteSubcover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Geometry/RingedSpace/SheafedSpace.html#AlgebraicGeometry.SheafedSpace.toPresheafedSpace\">toPresheafedSpace</a></span></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L67-L70","name":"AlgebraicGeometry.Scheme.OpenCover.isOpenCover_opensRange","line":67,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.isOpenCover_opensRange","doc":"The ranges of the maps in a scheme-theoretic open cover are a topological open cover. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.isOpenCover_opensRange\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">isOpenCover_opensRange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/OpenCover.html#TopologicalSpace.IsOpenCover\">TopologicalSpace.IsOpenCover</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.Scheme.Hom.opensRange\">Hom.opensRange</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">i</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L63-L65","name":"AlgebraicGeometry.Scheme.OpenCover.iSup_opensRange","line":63,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.iSup_opensRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.iSup_opensRange\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">iSup_opensRange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⨆ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>), <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.Scheme.Hom.opensRange\">Hom.opensRange</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">i</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L60-L61","name":"AlgebraicGeometry.Scheme.instInhabitedOpenCover","line":60,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.instInhabitedOpenCover","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.instInhabitedOpenCover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">instInhabitedOpenCover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L42-L58","name":"AlgebraicGeometry.Scheme.affineCover","line":42,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover","doc":"The affine cover of a scheme. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.affineCover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">affineCover</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L40-L40","name":"AlgebraicGeometry.Scheme.instIsOpenImmersionMap","line":40,"kind":"instance","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.instIsOpenImmersionMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.instIsOpenImmersionMap\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">instIsOpenImmersionMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">𝒰</span> : <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\">OpenCover</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/OpenImmersion.html#AlgebraicGeometry.IsOpenImmersion\">IsOpenImmersion</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">𝒰</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L35-L35","name":"AlgebraicGeometry.Scheme.OpenCover.IsOpen","line":35,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.IsOpen","doc":"**Alias** of `AlgebraicGeometry.Scheme.Cover.map_prop`.\n\n---\n\nthe component maps satisfy `P` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover.IsOpen\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span>.<span class=\"name\">IsOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover\">Cover</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.J\">J</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/AlgebraicGeometry/Cover/MorphismProperty.html#AlgebraicGeometry.Scheme.Cover.map\">map</a></span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/Cover/Open.lean#L32-L33","name":"AlgebraicGeometry.Scheme.OpenCover","line":32,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover","doc":"An open cover of a scheme `X` is a cover where all component maps are open immersions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/Cover/Open.html#AlgebraicGeometry.Scheme.OpenCover\"><span class=\"name\">AlgebraicGeometry</span>.<span class=\"name\">Scheme</span>.<span class=\"name\">OpenCover</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/AlgebraicGeometry/Scheme.html#AlgebraicGeometry.Scheme\">Scheme</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (v + 1) (u + 1))</div></div>"}]}