{"name":"Mathlib.Combinatorics.Quiver.ConnectedComponent","instances":[{"typeNames":["Quiver.WeaklyConnectedComponent"],"name":"Quiver.WeaklyConnectedComponent.instCoeTC","className":"CoeTC"},{"typeNames":["Quiver.WeaklyConnectedComponent"],"name":"Quiver.WeaklyConnectedComponent.instInhabited","className":"Inhabited"}],"imports":["Init","Mathlib.Combinatorics.Quiver.Subquiver","Mathlib.Combinatorics.Quiver.Path","Mathlib.Combinatorics.Quiver.Symmetric"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/ConnectedComponent.lean#L62-L65","name":"Quiver.wideSubquiverSymmetrify","line":62,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.wideSubquiverSymmetrify","doc":"A wide subquiver `H` of `Symmetrify V` determines a wide subquiver of `V`, containing an\narrow `e` if either `e` or its reversal is in `H`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.wideSubquiverSymmetrify\"><span class=\"name\">Quiver</span>.<span class=\"name\">wideSubquiverSymmetrify</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver\">WideSubquiver</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.Symmetrify\">Symmetrify</a> <span class=\"fn\">V</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Subquiver.html#WideSubquiver\">WideSubquiver</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/ConnectedComponent.lean#L52-L54","name":"Quiver.WeaklyConnectedComponent.eq","line":52,"kind":"theorem","docLink":"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent.eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent.eq\"><span class=\"name\">Quiver</span>.<span class=\"name\">WeaklyConnectedComponent</span>.<span class=\"name\">eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent.mk\">WeaklyConnectedComponent.mk</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent.mk\">WeaklyConnectedComponent.mk</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Path\">Path</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/ConnectedComponent.lean#L49-L50","name":"Quiver.WeaklyConnectedComponent.instInhabited","line":49,"kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent.instInhabited\"><span class=\"name\">Quiver</span>.<span class=\"name\">WeaklyConnectedComponent</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent\">WeaklyConnectedComponent</a> <span class=\"fn\">V</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/ConnectedComponent.lean#L46-L47","name":"Quiver.WeaklyConnectedComponent.instCoeTC","line":46,"kind":"instance","docLink":"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent.instCoeTC","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent.instCoeTC\"><span class=\"name\">Quiver</span>.<span class=\"name\">WeaklyConnectedComponent</span>.<span class=\"name\">instCoeTC</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeTC\">CoeTC</a> <span class=\"fn\">V</span> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent\">WeaklyConnectedComponent</a> <span class=\"fn\">V</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/ConnectedComponent.lean#L42-L44","name":"Quiver.WeaklyConnectedComponent.mk","line":42,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent.mk","doc":"The weakly connected component corresponding to a vertex. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent.mk\"><span class=\"name\">Quiver</span>.<span class=\"name\">WeaklyConnectedComponent</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">V</span> → <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent\">WeaklyConnectedComponent</a> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/ConnectedComponent.lean#L32-L36","name":"Quiver.WeaklyConnectedComponent","line":32,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent","doc":"The type of weakly connected components of a directed graph. Two vertices are\nin the same weakly connected component if there is a zigzag of arrows from one\nto the other. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.WeaklyConnectedComponent\"><span class=\"name\">Quiver</span>.<span class=\"name\">WeaklyConnectedComponent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Quiver/ConnectedComponent.lean#L26-L30","name":"Quiver.zigzagSetoid","line":26,"kind":"def","docLink":"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.zigzagSetoid","doc":"Two vertices are related in the zigzag setoid if there is a\nzigzag of arrows from one to the other. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Quiver/ConnectedComponent.html#Quiver.zigzagSetoid\"><span class=\"name\">Quiver</span>.<span class=\"name\">zigzagSetoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid\">Setoid</a> <span class=\"fn\">V</span></span></div></div>"}]}