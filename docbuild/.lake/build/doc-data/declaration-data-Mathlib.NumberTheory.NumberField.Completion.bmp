{"name":"Mathlib.NumberTheory.NumberField.Completion","instances":[{"typeNames":["NumberField.InfinitePlace.Completion"],"name":"NumberField.InfinitePlace.Completion.instNormedField","className":"NormedField"},{"typeNames":["NumberField.InfinitePlace.Completion"],"name":"NumberField.InfinitePlace.Completion.instAlgebra","className":"Algebra"},{"typeNames":["NumberField.InfinitePlace.Completion"],"name":"NumberField.InfinitePlace.Completion.locallyCompactSpace","className":"LocallyCompactSpace"}],"imports":["Init","Mathlib.Algebra.Field.Subfield.Basic","Mathlib.Analysis.Normed.Module.Completion","Mathlib.Analysis.Normed.Field.WithAbs","Mathlib.NumberTheory.NumberField.Embeddings"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L198-L199","name":"NumberField.InfinitePlace.Completion.isometryEquiv_real_of_isReal","line":198,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isometryEquiv_real_of_isReal","doc":"**Alias** of `NumberField.InfinitePlace.Completion.isometryEquivRealOfIsReal`.\n\n---\n\nIf the infinite place `v` is real, then `v.Completion` is isometric to `ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isometryEquiv_real_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">isometryEquiv_real_of_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span> <a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#IsometryEquiv\">≃ᵢ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L193-L196","name":"NumberField.InfinitePlace.Completion.isometryEquivRealOfIsReal","line":193,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isometryEquivRealOfIsReal","doc":"If the infinite place `v` is real, then `v.Completion` is isometric to `ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isometryEquivRealOfIsReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">isometryEquivRealOfIsReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span> <a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#IsometryEquiv\">≃ᵢ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L190-L191","name":"NumberField.InfinitePlace.Completion.ringEquiv_real_of_isReal","line":190,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.ringEquiv_real_of_isReal","doc":"**Alias** of `NumberField.InfinitePlace.Completion.ringEquivRealOfIsReal`.\n\n---\n\nThe ring isomorphism `v.Completion ≃+* ℝ`, when `v` is real, given by the bijection\n`v.Completion →+* ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.ringEquiv_real_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">ringEquiv_real_of_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span> <a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv\">≃+*</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L185-L188","name":"NumberField.InfinitePlace.Completion.ringEquivRealOfIsReal","line":185,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.ringEquivRealOfIsReal","doc":"The ring isomorphism `v.Completion ≃+* ℝ`, when `v` is real, given by the bijection\n`v.Completion →+* ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.ringEquivRealOfIsReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">ringEquivRealOfIsReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span> <a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv\">≃+*</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L180-L183","name":"NumberField.InfinitePlace.Completion.bijective_extensionEmbedding_of_isReal","line":180,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.bijective_extensionEmbedding_of_isReal","doc":"If `v` is a real infinite place, then the embedding `v.Completion →+* ℝ` is bijective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.bijective_extensionEmbedding_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">bijective_extensionEmbedding_of_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbeddingOfIsReal\">extensionEmbeddingOfIsReal</a> <span class=\"fn\">hv</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L174-L178","name":"NumberField.InfinitePlace.Completion.surjective_extensionEmbedding_of_isReal","line":174,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.surjective_extensionEmbedding_of_isReal","doc":"If `v` is a real infinite place, then the embedding `v.Completion →+* ℝ` is surjective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.surjective_extensionEmbedding_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">surjective_extensionEmbedding_of_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbeddingOfIsReal\">extensionEmbeddingOfIsReal</a> <span class=\"fn\">hv</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L171-L172","name":"NumberField.InfinitePlace.Completion.isometryEquiv_complex_of_isComplex","line":171,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isometryEquiv_complex_of_isComplex","doc":"**Alias** of `NumberField.InfinitePlace.Completion.isometryEquivComplexOfIsComplex`.\n\n---\n\nIf the infinite place `v` is complex, then `v.Completion` is isometric to `ℂ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isometryEquiv_complex_of_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">isometryEquiv_complex_of_isComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span> <a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#IsometryEquiv\">≃ᵢ</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L165-L169","name":"NumberField.InfinitePlace.Completion.isometryEquivComplexOfIsComplex","line":165,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isometryEquivComplexOfIsComplex","doc":"If the infinite place `v` is complex, then `v.Completion` is isometric to `ℂ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isometryEquivComplexOfIsComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">isometryEquivComplexOfIsComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span> <a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#IsometryEquiv\">≃ᵢ</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L162-L163","name":"NumberField.InfinitePlace.Completion.ringEquiv_complex_of_isComplex","line":162,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.ringEquiv_complex_of_isComplex","doc":"**Alias** of `NumberField.InfinitePlace.Completion.ringEquivComplexOfIsComplex`.\n\n---\n\nThe ring isomorphism `v.Completion ≃+* ℂ`, when `v` is complex, given by the bijection\n`v.Completion →+* ℂ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.ringEquiv_complex_of_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">ringEquiv_complex_of_isComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span> <a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv\">≃+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L156-L160","name":"NumberField.InfinitePlace.Completion.ringEquivComplexOfIsComplex","line":156,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.ringEquivComplexOfIsComplex","doc":"The ring isomorphism `v.Completion ≃+* ℂ`, when `v` is complex, given by the bijection\n`v.Completion →+* ℂ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.ringEquivComplexOfIsComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">ringEquivComplexOfIsComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span> <a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv\">≃+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L151-L154","name":"NumberField.InfinitePlace.Completion.bijective_extensionEmbedding_of_isComplex","line":151,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.bijective_extensionEmbedding_of_isComplex","doc":"If `v` is a complex infinite place, then the embedding `v.Completion →+* ℂ` is bijective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.bijective_extensionEmbedding_of_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">bijective_extensionEmbedding_of_isComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding\">extensionEmbedding</a> <span class=\"fn\">v</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L144-L149","name":"NumberField.InfinitePlace.Completion.surjective_extensionEmbedding_of_isComplex","line":144,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.surjective_extensionEmbedding_of_isComplex","doc":"If `v` is a complex infinite place, then the embedding `v.Completion →+* ℂ` is surjective. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.surjective_extensionEmbedding_of_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">surjective_extensionEmbedding_of_isComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding\">extensionEmbedding</a> <span class=\"fn\">v</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L136-L142","name":"NumberField.InfinitePlace.Completion.subfield_ne_real_of_isComplex","line":136,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.subfield_ne_real_of_isComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.subfield_ne_real_of_isComplex\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">subfield_ne_real_of_isComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsComplex\">IsComplex</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding\">extensionEmbedding</a> <span class=\"fn\">v</span>)</span>.<a href=\"./Mathlib/Algebra/Field/Subfield/Basic.html#RingHom.fieldRange\">fieldRange</a></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofRealHom\">Complex.ofRealHom</a>.<a href=\"./Mathlib/Algebra/Field/Subfield/Basic.html#RingHom.fieldRange\">fieldRange</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L130-L134","name":"NumberField.InfinitePlace.Completion.isClosed_image_extensionEmbedding_of_isReal","line":130,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isClosed_image_extensionEmbedding_of_isReal","doc":"The embedding `v.Completion →+* ℝ` associated to a real infinite place has closed image\ninside `ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isClosed_image_extensionEmbedding_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">isClosed_image_extensionEmbedding_of_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbeddingOfIsReal\">extensionEmbeddingOfIsReal</a> <span class=\"fn\">hv</span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L126-L128","name":"NumberField.InfinitePlace.Completion.isClosed_image_extensionEmbedding","line":126,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isClosed_image_extensionEmbedding","doc":"The embedding `v.Completion →+* ℂ` has closed image inside `ℂ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isClosed_image_extensionEmbedding\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">isClosed_image_extensionEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding\">extensionEmbedding</a> <span class=\"fn\">v</span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L121-L124","name":"NumberField.InfinitePlace.Completion.isometry_extensionEmbedding_of_isReal","line":121,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isometry_extensionEmbedding_of_isReal","doc":"The embedding `v.Completion →+* ℝ` at a real infinite place is an isometry. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isometry_extensionEmbedding_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">isometry_extensionEmbedding_of_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbeddingOfIsReal\">extensionEmbeddingOfIsReal</a> <span class=\"fn\">hv</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L117-L119","name":"NumberField.InfinitePlace.Completion.isometry_extensionEmbedding","line":117,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isometry_extensionEmbedding","doc":"The embedding `v.Completion →+* ℂ` is an isometry. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.isometry_extensionEmbedding\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">isometry_extensionEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding\">extensionEmbedding</a> <span class=\"fn\">v</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L112-L115","name":"NumberField.InfinitePlace.Completion.extensionEmbedding_of_isReal_coe","line":112,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding_of_isReal_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding_of_isReal_coe\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">extensionEmbedding_of_isReal_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbeddingOfIsReal\">extensionEmbeddingOfIsReal</a> <span class=\"fn\">hv</span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding_of_isReal\">embedding_of_isReal</a> <span class=\"fn\">hv</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L108-L110","name":"NumberField.InfinitePlace.Completion.extensionEmbedding_coe","line":108,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding_coe\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">extensionEmbedding_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding\">extensionEmbedding</a> <span class=\"fn\">v</span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.embedding\">embedding</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L105-L106","name":"NumberField.InfinitePlace.Completion.extensionEmbedding_of_isReal","line":105,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding_of_isReal","doc":"**Alias** of `NumberField.InfinitePlace.Completion.extensionEmbeddingOfIsReal`.\n\n---\n\nThe embedding `K →+* ℝ` associated to a real infinite place extended to `v.Completion →+* ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding_of_isReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">extensionEmbedding_of_isReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L101-L103","name":"NumberField.InfinitePlace.Completion.extensionEmbeddingOfIsReal","line":101,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbeddingOfIsReal","doc":"The embedding `K →+* ℝ` associated to a real infinite place extended to `v.Completion →+* ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbeddingOfIsReal\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">extensionEmbeddingOfIsReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace.IsReal\">IsReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L98-L99","name":"NumberField.InfinitePlace.Completion.extensionEmbedding","line":98,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding","doc":"The embedding associated to an infinite place extended to an embedding `v.Completion →+* ℂ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.extensionEmbedding\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">extensionEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L94-L96","name":"NumberField.InfinitePlace.Completion.locallyCompactSpace","line":94,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.locallyCompactSpace","doc":"The completion of a number field at an infinite place is locally compact. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.locallyCompactSpace\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">locallyCompactSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L88-L92","name":"NumberField.InfinitePlace.Completion.Rat.norm_infinitePlace_completion","line":88,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.Rat.norm_infinitePlace_completion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.Rat.norm_infinitePlace_completion\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">Rat</span>.<span class=\"name\">norm_infinitePlace_completion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Order/Group/Unbundled/Abs.html#abs\">|</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L82-L86","name":"NumberField.InfinitePlace.Completion.WithAbs.ratCast_equiv","line":82,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.WithAbs.ratCast_equiv","doc":"The coercion from the rationals to its completion along an infinite place is `Rat.cast`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.WithAbs.ratCast_equiv\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">WithAbs</span>.<span class=\"name\">ratCast_equiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Ring/WithAbs.html#WithAbs\">WithAbs</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Ring/WithAbs.html#WithAbs.equiv\">WithAbs.equiv</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L79-L80","name":"NumberField.InfinitePlace.Completion.instAlgebra","line":79,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.instAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.instAlgebra\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">instAlgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L75-L77","name":"NumberField.InfinitePlace.Completion.norm_coe","line":75,"kind":"theorem","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.norm_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.norm_coe\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">norm_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Ring/WithAbs.html#WithAbs\">WithAbs</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Ring/WithAbs.html#WithAbs.equiv\">WithAbs.equiv</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span>)</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L71-L73","name":"NumberField.InfinitePlace.Completion.instNormedField","line":71,"kind":"instance","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.instNormedField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion.instNormedField\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span>.<span class=\"name\">instNormedField</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\">Completion</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L67-L67","name":"NumberField.InfinitePlace.completion","line":67,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.completion","doc":"**Alias** of `NumberField.InfinitePlace.Completion`.\n\n---\n\nThe completion of a number field at an infinite place. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.completion\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">completion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/NumberField/Completion.lean#L64-L65","name":"NumberField.InfinitePlace.Completion","line":64,"kind":"def","docLink":"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion","doc":"The completion of a number field at an infinite place. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/NumberField/Completion.html#NumberField.InfinitePlace.Completion\"><span class=\"name\">NumberField</span>.<span class=\"name\">InfinitePlace</span>.<span class=\"name\">Completion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Embeddings.html#NumberField.InfinitePlace\">InfinitePlace</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}