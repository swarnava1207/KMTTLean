{"name":"Mathlib.Topology.UniformSpace.Ascoli","instances":[],"imports":["Init","Mathlib.Topology.UniformSpace.CompactConvergence","Mathlib.Topology.UniformSpace.Equicontinuity","Mathlib.Topology.UniformSpace.Equiv"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L509-L523","name":"ArzelaAscoli.isCompact_of_equicontinuous","line":509,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.isCompact_of_equicontinuous","doc":"A version of the **Arzela-Ascoli theorem**.\n\nIf an equicontinuous family of continuous functions is compact in the pointwise topology, then it\nis compact in the compact open topology. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.isCompact_of_equicontinuous\"><span class=\"name\">ArzelaAscoli</span>.<span class=\"name\">isCompact_of_equicontinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Œ±</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hS1</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> (<a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap.toFun\">ContinuousMap.toFun</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">S</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hS2</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">‚Üë<span class=\"fn\">S</span></span>) =&gt; <span class=\"fn\">‚áë<span class=\"fn\">‚Üë<span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L505-L507","name":"ArzelaAscoli.isCompact_closure_of_closedEmbedding","line":505,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.isCompact_closure_of_closedEmbedding","doc":"**Alias** of `ArzelaAscoli.isCompact_closure_of_isClosedEmbedding`.\n\n---\n\nA version of the **Arzela-Ascoli theorem**.\n\nLet `X, Œπ` be topological spaces, `ùîñ` a covering of `X` by compact subsets, `Œ±` a T2 uniform space,\n`F : Œπ ‚Üí (X ‚Üí Œ±)`, and `s` a subset of `Œπ`. Assume that:\n* `F`, viewed as a function `Œπ ‚Üí (X ‚Üí·µ§[ùîñ] Œ±)`, is a closed embedding (in other words, `Œπ`\n  identifies to a closed subset of `X ‚Üí·µ§[ùîñ] Œ±` through `F`)\n* `F '' s` is equicontinuous on each `K ‚àà ùîñ`\n* For all `x ‚àà ‚ãÉ‚ÇÄ ùîñ`, the image of `s` under `i ‚Ü¶ F i x` is contained in some fixed compact subset.\n\nThen `s` has compact closure in `Œπ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.isCompact_closure_of_closedEmbedding\"><span class=\"name\">ArzelaAscoli</span>.<span class=\"name\">isCompact_closure_of_closedEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_clemb</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsClosedEmbedding\">Topology.IsClosedEmbedding</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> (<span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <a href=\"./Init/Prelude.html#Subtype.val\">Subtype.val</a>) <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s_pointwiseCompact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">K</span>, <span class=\"fn\">‚àÉ (<span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ <span class=\"fn\">i</span> ‚àà <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">Q</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L474-L503","name":"ArzelaAscoli.isCompact_closure_of_isClosedEmbedding","line":474,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.isCompact_closure_of_isClosedEmbedding","doc":"A version of the **Arzela-Ascoli theorem**.\n\nLet `X, Œπ` be topological spaces, `ùîñ` a covering of `X` by compact subsets, `Œ±` a T2 uniform space,\n`F : Œπ ‚Üí (X ‚Üí Œ±)`, and `s` a subset of `Œπ`. Assume that:\n* `F`, viewed as a function `Œπ ‚Üí (X ‚Üí·µ§[ùîñ] Œ±)`, is a closed embedding (in other words, `Œπ`\n  identifies to a closed subset of `X ‚Üí·µ§[ùîñ] Œ±` through `F`)\n* `F '' s` is equicontinuous on each `K ‚àà ùîñ`\n* For all `x ‚àà ‚ãÉ‚ÇÄ ùîñ`, the image of `s` under `i ‚Ü¶ F i x` is contained in some fixed compact subset.\n\nThen `s` has compact closure in `Œπ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.isCompact_closure_of_isClosedEmbedding\"><span class=\"name\">ArzelaAscoli</span>.<span class=\"name\">isCompact_closure_of_isClosedEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_clemb</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsClosedEmbedding\">Topology.IsClosedEmbedding</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> (<span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <a href=\"./Init/Prelude.html#Subtype.val\">Subtype.val</a>) <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s_pointwiseCompact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">K</span>, <span class=\"fn\">‚àÉ (<span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ <span class=\"fn\">i</span> ‚àà <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">Q</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L471-L472","name":"ArzelaAscoli.compactSpace_of_closedEmbedding","line":471,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.compactSpace_of_closedEmbedding","doc":"**Alias** of `ArzelaAscoli.compactSpace_of_isClosedEmbedding`.\n\n---\n\nA version of the **Arzela-Ascoli theorem**.\n\nLet `X, Œπ` be topological spaces, `ùîñ` a covering of `X` by compact subsets, `Œ±` a uniform space,\nand `F : Œπ ‚Üí (X ‚Üí Œ±)`. Assume that:\n* `F`, viewed as a function `Œπ ‚Üí (X ‚Üí·µ§[ùîñ] Œ±)`, is a closed embedding (in other words, `Œπ`\n  identifies to a closed subset of `X ‚Üí·µ§[ùîñ] Œ±` through `F`)\n* `F` is equicontinuous on each `K ‚àà ùîñ`\n* For all `x`, the range of `i ‚Ü¶ F i x` is contained in some fixed compact subset.\n\nThen `Œπ` is compact. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.compactSpace_of_closedEmbedding\"><span class=\"name\">ArzelaAscoli</span>.<span class=\"name\">compactSpace_of_closedEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_clemb</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsClosedEmbedding\">Topology.IsClosedEmbedding</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_pointwiseCompact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">K</span>, <span class=\"fn\">‚àÉ (<span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">Q</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Œπ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L453-L469","name":"ArzelaAscoli.compactSpace_of_isClosedEmbedding","line":453,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.compactSpace_of_isClosedEmbedding","doc":"A version of the **Arzela-Ascoli theorem**.\n\nLet `X, Œπ` be topological spaces, `ùîñ` a covering of `X` by compact subsets, `Œ±` a uniform space,\nand `F : Œπ ‚Üí (X ‚Üí Œ±)`. Assume that:\n* `F`, viewed as a function `Œπ ‚Üí (X ‚Üí·µ§[ùîñ] Œ±)`, is a closed embedding (in other words, `Œπ`\n  identifies to a closed subset of `X ‚Üí·µ§[ùîñ] Œ±` through `F`)\n* `F` is equicontinuous on each `K ‚àà ùîñ`\n* For all `x`, the range of `i ‚Ü¶ F i x` is contained in some fixed compact subset.\n\nThen `Œπ` is compact. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.compactSpace_of_isClosedEmbedding\"><span class=\"name\">ArzelaAscoli</span>.<span class=\"name\">compactSpace_of_isClosedEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_clemb</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsClosedEmbedding\">Topology.IsClosedEmbedding</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_pointwiseCompact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">K</span>, <span class=\"fn\">‚àÉ (<span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">Q</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Œπ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L419-L451","name":"ArzelaAscoli.compactSpace_of_closed_inducing'","line":419,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.compactSpace_of_closed_inducing'","doc":"A version of the **Arzela-Ascoli theorem**.\n\nLet `X` be a topological space, `ùîñ` a family of compact subsets of `X`, `Œ±` a uniform space,\nand `F : Œπ ‚Üí (X ‚Üí Œ±)`. Assume that:\n* `F`, viewed as a function `Œπ ‚Üí (X ‚Üí·µ§[ùîñ] Œ±)`, is closed and inducing\n* `F` is equicontinuous on each `K ‚àà ùîñ`\n* For all `x ‚àà ‚ãÉ‚ÇÄ ùîñ`, the range of `i ‚Ü¶ F i x` is contained in some fixed compact subset.\n\nThen `Œπ` is compact. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.compactSpace_of_closed_inducing'\"><span class=\"name\">ArzelaAscoli</span>.<span class=\"name\">compactSpace_of_closed_inducing'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_ind</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_cl</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>))</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_pointwiseCompact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">K</span>, <span class=\"fn\">‚àÉ (<span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">Q</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Œπ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L416-L417","name":"EquicontinuousOn.isClosed_range_pi_of_uniformOnFun","line":416,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isClosed_range_pi_of_uniformOnFun","doc":"**Alias** of the forward direction of `EquicontinuousOn.isClosed_range_uniformOnFun_iff_pi`.\n\n---\n\nLet `X` be a topological space, `ùîñ` a covering of `X` by compact subsets, and\n`Œ±` a uniform space. An equicontinuous subset of `X ‚Üí Œ±` is closed in the topology of uniform\nconvergence on all `K ‚àà ùîñ` iff it is closed in the topology of pointwise convergence.\n\nThis is a specialization of `EquicontinuousOn.isClosed_range_pi_of_uniformOnFun'` to the case where\n`ùîñ` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isClosed_range_pi_of_uniformOnFun\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">isClosed_range_pi_of_uniformOnFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_covers</span> : <a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>))</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">F</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L399-L414","name":"EquicontinuousOn.isClosed_range_uniformOnFun_iff_pi","line":399,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isClosed_range_uniformOnFun_iff_pi","doc":"Let `X` be a topological space, `ùîñ` a covering of `X` by compact subsets, and\n`Œ±` a uniform space. An equicontinuous subset of `X ‚Üí Œ±` is closed in the topology of uniform\nconvergence on all `K ‚àà ùîñ` iff it is closed in the topology of pointwise convergence.\n\nThis is a specialization of `EquicontinuousOn.isClosed_range_pi_of_uniformOnFun'` to the case where\n`ùîñ` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isClosed_range_uniformOnFun_iff_pi\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">isClosed_range_uniformOnFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_covers</span> : <a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>))</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">F</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L381-L397","name":"EquicontinuousOn.isClosed_range_pi_of_uniformOnFun'","line":381,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isClosed_range_pi_of_uniformOnFun'","doc":"Let `X` be a topological space, `ùîñ` a family of compact subsets of `X` and\n`Œ±` a uniform space. An equicontinuous subset of `X ‚Üí Œ±` is closed in the topology of uniform\nconvergence on all `K ‚àà ùîñ` iff it is closed in the topology of pointwise convergence on `‚ãÉ‚ÇÄ ùîñ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isClosed_range_pi_of_uniformOnFun'\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">isClosed_range_pi_of_uniformOnFun'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>))</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> (<span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span>).<a href=\"./Mathlib/Data/Set/Restrict.html#Set.restrict\">restrict</a></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L362-L379","name":"EquicontinuousOn.tendsto_uniformOnFun_iff_pi","line":362,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.tendsto_uniformOnFun_iff_pi","doc":"Let `X` be a topological space, `ùîñ` a covering of `X` by compact subsets,\n`Œ±` a uniform space, `F : Œπ ‚Üí (X ‚Üí Œ±)` a family equicontinuous on each `K ‚àà ùîñ`, and `‚Ñ±` a filter\non `Œπ`. Then, `F` tends to `f : X ‚Üí Œ±` along `‚Ñ±` *uniformly on each `K ‚àà ùîñ`* iff it tends to `f`\n*pointwise* along `‚Ñ±`.\n\nThis is a specialization of `EquicontinuousOn.tendsto_uniformOnFun_iff_pi'` to the case\nwhere `ùîñ` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.tendsto_uniformOnFun_iff_pi\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">tendsto_uniformOnFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_covers</span> : <a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">‚Ñ±</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>) <span class=\"fn\">‚Ñ±</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span> <span class=\"fn\">f</span>)</span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">F</span> <span class=\"fn\">‚Ñ±</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L338-L360","name":"EquicontinuousOn.tendsto_uniformOnFun_iff_pi'","line":338,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.tendsto_uniformOnFun_iff_pi'","doc":"Let `X` be a topological space, `ùîñ` a family of compact subsets of `X`,\n`Œ±` a uniform space, `F : Œπ ‚Üí (X ‚Üí Œ±)` a family equicontinuous on each `K ‚àà ùîñ`, and `‚Ñ±` a filter\non `Œπ`. Then, `F` tends to `f : X ‚Üí Œ±` along `‚Ñ±` *uniformly on each `K ‚àà ùîñ`* iff it tends to `f`\n*pointwise on `‚ãÉ‚ÇÄ ùîñ`* along `‚Ñ±`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.tendsto_uniformOnFun_iff_pi'\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">tendsto_uniformOnFun_iff_pi'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">‚Ñ±</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>) <span class=\"fn\">‚Ñ±</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span> <span class=\"fn\">f</span>)</span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> (<span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span>).<a href=\"./Mathlib/Data/Set/Restrict.html#Set.restrict\">restrict</a></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>) <span class=\"fn\">‚Ñ±</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span>).<a href=\"./Mathlib/Data/Set/Restrict.html#Set.restrict\">restrict</a></span> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L332-L334","name":"EquicontinuousOn.inducing_uniformOnFun_iff_pi","line":332,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.inducing_uniformOnFun_iff_pi","doc":"**Alias** of `EquicontinuousOn.isInducing_uniformOnFun_iff_pi`.\n\n---\n\nLet `X` be a topological space, `ùîñ` a covering of `X` by compact subsets, `Œ±` a uniform space,\nand `F : Œπ ‚Üí (X ‚Üí Œ±)` a family which is equicontinuous on each `K ‚àà ùîñ`. Then, the topologies\nof uniform convergence on `ùîñ` and pointwise convergence induce the same topology on `Œπ`.\n\nThis is a specialization of `EquicontinuousOn.inducing_uniformOnFun_iff_pi'` to\nthe case where `ùîñ` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.inducing_uniformOnFun_iff_pi\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">inducing_uniformOnFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_covers</span> : <a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L312-L330","name":"EquicontinuousOn.isInducing_uniformOnFun_iff_pi","line":312,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isInducing_uniformOnFun_iff_pi","doc":"Let `X` be a topological space, `ùîñ` a covering of `X` by compact subsets, `Œ±` a uniform space,\nand `F : Œπ ‚Üí (X ‚Üí Œ±)` a family which is equicontinuous on each `K ‚àà ùîñ`. Then, the topologies\nof uniform convergence on `ùîñ` and pointwise convergence induce the same topology on `Œπ`.\n\nThis is a specialization of `EquicontinuousOn.inducing_uniformOnFun_iff_pi'` to\nthe case where `ùîñ` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isInducing_uniformOnFun_iff_pi\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">isInducing_uniformOnFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_covers</span> : <a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L293-L310","name":"EquicontinuousOn.inducing_uniformOnFun_iff_pi'","line":293,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.inducing_uniformOnFun_iff_pi'","doc":"Let `X` be a topological space, `ùîñ` a family of compact subsets of `X`, `Œ±` a uniform space,\nand `F : Œπ ‚Üí (X ‚Üí Œ±)` a family which is equicontinuous on each `K ‚àà ùîñ`. Then, the topologies\nof uniform convergence on `ùîñ` and pointwise convergence on `‚ãÉ‚ÇÄ ùîñ` induce the same topology on  `Œπ`.\n\nIn particular, pointwise convergence and compact convergence coincide on an equicontinuous\nsubset of `X ‚Üí Œ±`.\n\nThis is a consequence of `EquicontinuousOn.comap_uniformOnFun_eq` stated in terms of `IsInducing`\nfor convenience. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.inducing_uniformOnFun_iff_pi'\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">inducing_uniformOnFun_iff_pi'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> (<span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span>).<a href=\"./Mathlib/Data/Set/Restrict.html#Set.restrict\">restrict</a></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L289-L291","name":"EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi","line":289,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi","doc":"**Alias** of `EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi`.\n\n---\n\nLet `X` be a topological space, `ùîñ` a covering of `X` by compact subsets, `Œ±` a uniform space,\nand `F : Œπ ‚Üí (X ‚Üí Œ±)` a family which is equicontinuous on each `K ‚àà ùîñ`. Then, the uniform\nstructures of uniform convergence on `ùîñ` and pointwise convergence induce the same\nuniform structure on `Œπ`.\n\nThis is a specialization of `EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi'` to\nthe case where `ùîñ` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">uniformInducing_uniformOnFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_covers</span> : <a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L268-L287","name":"EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi","line":268,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi","doc":"Let `X` be a topological space, `ùîñ` a covering of `X` by compact subsets, `Œ±` a uniform space,\nand `F : Œπ ‚Üí (X ‚Üí Œ±)` a family which is equicontinuous on each `K ‚àà ùîñ`. Then, the uniform\nstructures of uniform convergence on `ùîñ` and pointwise convergence induce the same\nuniform structure on `Œπ`.\n\nThis is a specialization of `EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi'` to\nthe case where `ùîñ` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">isUniformInducing_uniformOnFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_covers</span> : <a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L264-L266","name":"EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi'","line":264,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi'","doc":"**Alias** of `EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi'`.\n\n---\n\nLet `X` be a topological space, `ùîñ` a family of compact subsets of `X`, `Œ±` a uniform space,\nand `F : Œπ ‚Üí (X ‚Üí Œ±)` a family which is equicontinuous on each `K ‚àà ùîñ`. Then, the uniform\nstructures of uniform convergence on `ùîñ` and pointwise convergence on `‚ãÉ‚ÇÄ ùîñ` induce the same\nuniform structure on `Œπ`.\n\nIn particular, pointwise convergence and compact convergence coincide on an equicontinuous\nsubset of `X ‚Üí Œ±`.\n\nThis is a version of `EquicontinuousOn.comap_uniformOnFun_eq` stated in terms of `IsUniformInducing`\nfor convenuence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi'\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">uniformInducing_uniformOnFun_iff_pi'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> (<span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span>).<a href=\"./Mathlib/Data/Set/Restrict.html#Set.restrict\">restrict</a></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L245-L262","name":"EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi'","line":245,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi'","doc":"Let `X` be a topological space, `ùîñ` a family of compact subsets of `X`, `Œ±` a uniform space,\nand `F : Œπ ‚Üí (X ‚Üí Œ±)` a family which is equicontinuous on each `K ‚àà ùîñ`. Then, the uniform\nstructures of uniform convergence on `ùîñ` and pointwise convergence on `‚ãÉ‚ÇÄ ùîñ` induce the same\nuniform structure on `Œπ`.\n\nIn particular, pointwise convergence and compact convergence coincide on an equicontinuous\nsubset of `X ‚Üí Œ±`.\n\nThis is a version of `EquicontinuousOn.comap_uniformOnFun_eq` stated in terms of `IsUniformInducing`\nfor convenuence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi'\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">isUniformInducing_uniformOnFun_iff_pi'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> (<span class=\"fn\">‚áë<span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> (<span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span>).<a href=\"./Mathlib/Data/Set/Restrict.html#Set.restrict\">restrict</a></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L204-L243","name":"EquicontinuousOn.comap_uniformOnFun_eq","line":204,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.comap_uniformOnFun_eq","doc":"Let `X` be a topological space, `ùîñ` a family of compact subsets of `X`, `Œ±` a uniform space,\nand `F : Œπ ‚Üí (X ‚Üí Œ±)` a family which is equicontinuous on each `K ‚àà ùîñ`. Then, the uniform\nstructures of uniform convergence on `ùîñ` and pointwise convergence on `‚ãÉ‚ÇÄ ùîñ` induce the same\nuniform structure on `Œπ`.\n\nIn particular, pointwise convergence and compact convergence coincide on an equicontinuous\nsubset of `X ‚Üí Œ±`.\n\nConsider using `EquicontinuousOn.isUniformInducing_uniformOnFun_iff_pi'` and\n`EquicontinuousOn.inducing_uniformOnFun_iff_pi'` instead to avoid rewriting instances,\nas well as their unprimed versions in case `ùîñ` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.comap_uniformOnFun_eq\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">comap_uniformOnFun_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ùîñ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">X</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ùîñ_compact</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\">‚àÄ <span class=\"fn\">K</span> ‚àà <span class=\"fn\">ùîñ</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.uniformSpace\">UniformOnFun.uniformSpace</a> <span class=\"fn\">X</span> <span class=\"fn\">Œ±</span> <span class=\"fn\">ùîñ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> (<span class=\"fn\">(<a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span>).<a href=\"./Mathlib/Data/Set/Restrict.html#Set.restrict\">restrict</a></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>) <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace\">Pi.uniformSpace</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">‚Üë(<a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">ùîñ</span>)</span>) =&gt; <span class=\"fn\">Œ±</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L163-L202","name":"Equicontinuous.tendsto_uniformFun_iff_pi","line":163,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.tendsto_uniformFun_iff_pi","doc":"Let `X` be a compact topological space, `Œ±` a uniform space, `F : Œπ ‚Üí (X ‚Üí Œ±)` an\nequicontinuous family, and `‚Ñ±` a filter on `Œπ`. Then, `F` tends *uniformly* to `f : X ‚Üí Œ±` along\n`‚Ñ±` iff it tends to `f` *pointwise* along `‚Ñ±`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.tendsto_uniformFun_iff_pi\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">tendsto_uniformFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">‚Ñ±</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> (<span class=\"fn\">‚áë<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformFun.ofFun\">UniformFun.ofFun</a></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>) <span class=\"fn\">‚Ñ±</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformFun.ofFun\">UniformFun.ofFun</a> <span class=\"fn\">f</span>)</span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">F</span> <span class=\"fn\">‚Ñ±</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L146-L161","name":"Equicontinuous.inducing_uniformFun_iff_pi","line":146,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.inducing_uniformFun_iff_pi","doc":"Let `X` be a compact topological space, `Œ±` a uniform space, and `F : Œπ ‚Üí (X ‚Üí Œ±)` an\nequicontinuous family. Then, the topologies of uniform convergence and pointwise convergence induce\nthe same topology on `Œπ`.\n\nIn other words, pointwise convergence and uniform convergence coincide on an equicontinuous\nsubset of `X ‚Üí Œ±`.\n\nThis is a consequence of `Equicontinuous.comap_uniformFun_eq`, stated in terms of `IsInducing`\nfor convenuence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.inducing_uniformFun_iff_pi\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">inducing_uniformFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> (<span class=\"fn\">‚áë<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformFun.ofFun\">UniformFun.ofFun</a></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsInducing\">Topology.IsInducing</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L142-L144","name":"Equicontinuous.uniformInducing_uniformFun_iff_pi","line":142,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.uniformInducing_uniformFun_iff_pi","doc":"**Alias** of `Equicontinuous.isUniformInducing_uniformFun_iff_pi`.\n\n---\n\nLet `X` be a compact topological space, `Œ±` a uniform space, and `F : Œπ ‚Üí (X ‚Üí Œ±)` an\nequicontinuous family. Then, the uniform structures of uniform convergence and pointwise\nconvergence induce the same uniform structure on `Œπ`.\n\nIn other words, pointwise convergence and uniform convergence coincide on an equicontinuous\nsubset of `X ‚Üí Œ±`.\n\nThis is a version of `Equicontinuous.comap_uniformFun_eq` stated in terms of `IsUniformInducing`\nfor convenuence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.uniformInducing_uniformFun_iff_pi\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">uniformInducing_uniformFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> (<span class=\"fn\">‚áë<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformFun.ofFun\">UniformFun.ofFun</a></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L126-L140","name":"Equicontinuous.isUniformInducing_uniformFun_iff_pi","line":126,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.isUniformInducing_uniformFun_iff_pi","doc":"Let `X` be a compact topological space, `Œ±` a uniform space, and `F : Œπ ‚Üí (X ‚Üí Œ±)` an\nequicontinuous family. Then, the uniform structures of uniform convergence and pointwise\nconvergence induce the same uniform structure on `Œπ`.\n\nIn other words, pointwise convergence and uniform convergence coincide on an equicontinuous\nsubset of `X ‚Üí Œ±`.\n\nThis is a version of `Equicontinuous.comap_uniformFun_eq` stated in terms of `IsUniformInducing`\nfor convenuence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.isUniformInducing_uniformFun_iff_pi\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">isUniformInducing_uniformFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> (<span class=\"fn\">‚áë<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformFun.ofFun\">UniformFun.ofFun</a></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/UniformSpace/Ascoli.lean#L75-L124","name":"Equicontinuous.comap_uniformFun_eq","line":75,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.comap_uniformFun_eq","doc":"Let `X` be a compact topological space, `Œ±` a uniform space, and `F : Œπ ‚Üí (X ‚Üí Œ±)` an\nequicontinuous family. Then, the uniform structures of uniform convergence and pointwise\nconvergence induce the same uniform structure on `Œπ`.\n\nIn other words, pointwise convergence and uniform convergence coincide on an equicontinuous\nsubset of `X ‚Üí Œ±`.\n\nConsider using `Equicontinuous.isUniformInducing_uniformFun_iff_pi` and\n`Equicontinuous.inducing_uniformFun_iff_pi` instead, to avoid rewriting instances. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.comap_uniformFun_eq\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">comap_uniformFun_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œπ</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Œ±</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F_eqcont</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformFun.uniformSpace\">UniformFun.uniformSpace</a> <span class=\"fn\">X</span> <span class=\"fn\">Œ±</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace\">Pi.uniformSpace</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">X</span>) =&gt; <span class=\"fn\">Œ±</span></span>)</span></span></div></div>"}]}