{"name":"Mathlib.Util.Export","instances":[{"typeNames":["Lean.Export.Entry"],"name":"Lean.Export.instInhabitedEntry","className":"Inhabited"},{"typeNames":["Lean.Name","Lean.Export.Entry"],"name":"Lean.Export.instCoeNameEntry","className":"Coe"},{"typeNames":["Lean.Level","Lean.Export.Entry"],"name":"Lean.Export.instCoeLevelEntry","className":"Coe"},{"typeNames":["Lean.Expr","Lean.Export.Entry"],"name":"Lean.Export.instCoeExprEntry","className":"Coe"},{"typeNames":["Lean.Export.Alloc"],"name":"Lean.Export.instInhabitedAlloc","className":"Inhabited"},{"typeNames":["Lean.Export.State"],"name":"Lean.Export.instInhabitedState","className":"Inhabited"},{"typeNames":["Lean.Name"],"name":"Lean.Export.instOfStateName","className":"Lean.Export.OfState"},{"typeNames":["Lean.Level"],"name":"Lean.Export.instOfStateLevel","className":"Lean.Export.OfState"},{"typeNames":["Lean.Expr"],"name":"Lean.Export.instOfStateExpr","className":"Lean.Export.OfState"}],"imports":["Init","Mathlib.Init","Lean.CoreM","Lean.Util.FoldConsts"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L199-L199","name":"Lean.Export.runExportM","line":199,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.runExportM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.runExportM\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">runExportM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.ExportM\">ExportM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L190-L195","name":"Lean.Export.exportDef.indbody","line":190,"kind":"opaque","docLink":"./Mathlib/Util/Export.html#Lean.Export.exportDef.indbody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.exportDef.indbody\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">exportDef</span>.<span class=\"name\">indbody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ind</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.ExportM\">ExportM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L173-L189","name":"Lean.Export.exportDef.ind","line":173,"kind":"opaque","docLink":"./Mathlib/Util/Export.html#Lean.Export.exportDef.ind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.exportDef.ind\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">exportDef</span>.<span class=\"name\">ind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span> → <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.ExportM\">ExportM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L168-L172","name":"Lean.Export.exportDef.axdef","line":168,"kind":"opaque","docLink":"./Mathlib/Util/Export.html#Lean.Export.exportDef.axdef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.exportDef.axdef\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">exportDef</span>.<span class=\"name\">axdef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.ExportM\">ExportM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L163-L167","name":"Lean.Export.exportDef.defn","line":163,"kind":"opaque","docLink":"./Mathlib/Util/Export.html#Lean.Export.exportDef.defn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.exportDef.defn\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">exportDef</span>.<span class=\"name\">defn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ty</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t </span><span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.ExportM\">ExportM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L161-L162","name":"Lean.Export.exportDef.insert","line":161,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.exportDef.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.exportDef.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">exportDef</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.ExportM\">ExportM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L142-L195","name":"Lean.Export.exportDef","line":142,"kind":"opaque","docLink":"./Mathlib/Util/Export.html#Lean.Export.exportDef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.exportDef\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">exportDef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.ExportM\">ExportM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L111-L140","name":"Lean.Export.exportExpr","line":111,"kind":"opaque","docLink":"./Mathlib/Util/Export.html#Lean.Export.exportExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.exportExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">exportExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">E</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.ExportM\">ExportM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L102-L106","name":"Lean.Export.biStr","line":102,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.biStr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.biStr\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">biStr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.BinderInfo\">BinderInfo</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L87-L100","name":"Lean.Export.exportLevel","line":87,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.exportLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.exportLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">exportLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <a href=\"./Lean/Level.html#Lean.Level\">Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.ExportM\">ExportM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L79-L85","name":"Lean.Export.exportName","line":79,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.exportName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.exportName\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">exportName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.ExportM\">ExportM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L74-L77","name":"Lean.Export.alloc","line":74,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.alloc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.alloc\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">alloc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.OfState\">OfState</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.ExportM\">ExportM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L70-L70","name":"Lean.ExportM","line":70,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.ExportM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.ExportM\"><span class=\"name\">Lean</span>.<span class=\"name\">ExportM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L64-L66","name":"Lean.Export.instOfStateExpr","line":64,"kind":"instance","docLink":"./Mathlib/Util/Export.html#Lean.Export.instOfStateExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.instOfStateExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">instOfStateExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.OfState\">OfState</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L60-L62","name":"Lean.Export.instOfStateLevel","line":60,"kind":"instance","docLink":"./Mathlib/Util/Export.html#Lean.Export.instOfStateLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.instOfStateLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">instOfStateLevel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.OfState\">OfState</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L56-L58","name":"Lean.Export.instOfStateName","line":56,"kind":"instance","docLink":"./Mathlib/Util/Export.html#Lean.Export.instOfStateName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.instOfStateName\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">instOfStateName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.OfState\">OfState</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L54-L54","name":"Lean.Export.OfState.modify","line":54,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.OfState.modify","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.OfState.modify\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">OfState</span>.<span class=\"name\">modify</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.OfState\">OfState</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.State\">State</a> → <a href=\"./Mathlib/Util/Export.html#Lean.Export.State\">State</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L53-L53","name":"Lean.Export.OfState.get","line":53,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.OfState.get","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.OfState.get\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">OfState</span>.<span class=\"name\">get</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.OfState\">OfState</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.State\">State</a> → <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L52-L52","name":"Lean.Export.OfState.mk","line":52,"kind":"ctor","docLink":"./Mathlib/Util/Export.html#Lean.Export.OfState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.OfState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">OfState</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">get</span> : <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.State\">State</a> → <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modify</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.State\">State</a> → <a href=\"./Mathlib/Util/Export.html#Lean.Export.State\">State</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.OfState\">OfState</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L52-L54","name":"Lean.Export.OfState","line":52,"kind":"class","docLink":"./Mathlib/Util/Export.html#Lean.Export.OfState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.OfState\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">OfState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L50-L50","name":"Lean.Export.instInhabitedState","line":50,"kind":"instance","docLink":"./Mathlib/Util/Export.html#Lean.Export.instInhabitedState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.instInhabitedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">instInhabitedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Util/Export.html#Lean.Export.State\">State</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L49-L49","name":"Lean.Export.State.stk","line":49,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.State.stk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.State.stk\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">State</span>.<span class=\"name\">stk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Util/Export.html#Lean.Export.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Util/Export.html#Lean.Export.Entry\">Entry</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L48-L48","name":"Lean.Export.State.defs","line":48,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.State.defs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.State.defs\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">State</span>.<span class=\"name\">defs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Util/Export.html#Lean.Export.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L47-L47","name":"Lean.Export.State.exprs","line":47,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.State.exprs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.State.exprs\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">State</span>.<span class=\"name\">exprs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Util/Export.html#Lean.Export.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L46-L46","name":"Lean.Export.State.levels","line":46,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.State.levels","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.State.levels\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">State</span>.<span class=\"name\">levels</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Util/Export.html#Lean.Export.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L45-L45","name":"Lean.Export.State.names","line":45,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.State.names","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.State.names\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">State</span>.<span class=\"name\">names</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Util/Export.html#Lean.Export.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L44-L44","name":"Lean.Export.State.mk","line":44,"kind":"ctor","docLink":"./Mathlib/Util/Export.html#Lean.Export.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">names</span> : <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">levels</span> : <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exprs</span> : <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">defs</span> : <span class=\"fn\"><a href=\"./Std/Data/HashSet/Basic.html#Std.HashSet\">Std.HashSet</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stk</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Util/Export.html#Lean.Export.Entry\">Entry</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.State\">State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L44-L50","name":"Lean.Export.State","line":44,"kind":"structure","docLink":"./Mathlib/Util/Export.html#Lean.Export.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L42-L42","name":"Lean.Export.instInhabitedAlloc","line":42,"kind":"instance","docLink":"./Mathlib/Util/Export.html#Lean.Export.instInhabitedAlloc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.instInhabitedAlloc\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">instInhabitedAlloc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝¹</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">a✝</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝²</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">a✝</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L41-L41","name":"Lean.Export.Alloc.next","line":41,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.Alloc.next","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc.next\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">Alloc</span>.<span class=\"name\">next</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L40-L40","name":"Lean.Export.Alloc.map","line":40,"kind":"def","docLink":"./Mathlib/Util/Export.html#Lean.Export.Alloc.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc.map\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">Alloc</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L39-L39","name":"Lean.Export.Alloc.mk","line":39,"kind":"ctor","docLink":"./Mathlib/Util/Export.html#Lean.Export.Alloc.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">Alloc</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">map</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">next</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\">Alloc</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L39-L42","name":"Lean.Export.Alloc","line":39,"kind":"structure","docLink":"./Mathlib/Util/Export.html#Lean.Export.Alloc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.Alloc\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">Alloc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L37-L37","name":"Lean.Export.instCoeExprEntry","line":37,"kind":"instance","docLink":"./Mathlib/Util/Export.html#Lean.Export.instCoeExprEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.instCoeExprEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">instCoeExprEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a> <a href=\"./Mathlib/Util/Export.html#Lean.Export.Entry\">Entry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L36-L36","name":"Lean.Export.instCoeLevelEntry","line":36,"kind":"instance","docLink":"./Mathlib/Util/Export.html#Lean.Export.instCoeLevelEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.instCoeLevelEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">instCoeLevelEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lean/Level.html#Lean.Level\">Level</a> <a href=\"./Mathlib/Util/Export.html#Lean.Export.Entry\">Entry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L35-L35","name":"Lean.Export.instCoeNameEntry","line":35,"kind":"instance","docLink":"./Mathlib/Util/Export.html#Lean.Export.instCoeNameEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.instCoeNameEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">instCoeNameEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> <a href=\"./Mathlib/Util/Export.html#Lean.Export.Entry\">Entry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L33-L33","name":"Lean.Export.instInhabitedEntry","line":33,"kind":"instance","docLink":"./Mathlib/Util/Export.html#Lean.Export.instInhabitedEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.instInhabitedEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">instInhabitedEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Util/Export.html#Lean.Export.Entry\">Entry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L32-L32","name":"Lean.Export.Entry.defn","line":32,"kind":"ctor","docLink":"./Mathlib/Util/Export.html#Lean.Export.Entry.defn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.Entry.defn\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">Entry</span>.<span class=\"name\">defn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Entry\">Entry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L31-L31","name":"Lean.Export.Entry.expr","line":31,"kind":"ctor","docLink":"./Mathlib/Util/Export.html#Lean.Export.Entry.expr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.Entry.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">Entry</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Entry\">Entry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L30-L30","name":"Lean.Export.Entry.level","line":30,"kind":"ctor","docLink":"./Mathlib/Util/Export.html#Lean.Export.Entry.level","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.Entry.level\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">Entry</span>.<span class=\"name\">level</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Lean/Level.html#Lean.Level\">Level</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Entry\">Entry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L29-L29","name":"Lean.Export.Entry.name","line":29,"kind":"ctor","docLink":"./Mathlib/Util/Export.html#Lean.Export.Entry.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.Entry.name\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">Entry</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Util/Export.html#Lean.Export.Entry\">Entry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/Export.lean#L28-L33","name":"Lean.Export.Entry","line":28,"kind":"inductive","docLink":"./Mathlib/Util/Export.html#Lean.Export.Entry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/Export.html#Lean.Export.Entry\"><span class=\"name\">Lean</span>.<span class=\"name\">Export</span>.<span class=\"name\">Entry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}