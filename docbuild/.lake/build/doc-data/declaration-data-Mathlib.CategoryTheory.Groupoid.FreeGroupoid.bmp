{"name":"Mathlib.CategoryTheory.Groupoid.FreeGroupoid","instances":[{"typeNames":["CategoryTheory.FreeGroupoid"],"name":"CategoryTheory.Groupoid.Free.instNonemptyFreeGroupoid","className":"Nonempty"},{"typeNames":["CategoryTheory.FreeGroupoid"],"name":"CategoryTheory.Groupoid.Free.instCategoryFreeGroupoid","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.FreeGroupoid"],"name":"CategoryTheory.FreeGroupoid.instGroupoid","className":"CategoryTheory.Groupoid"}],"imports":["Init","Mathlib.CategoryTheory.Groupoid","Mathlib.CategoryTheory.PathCategory.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L182-L185","name":"CategoryTheory.Groupoid.Free.freeGroupoidFunctor_comp","line":182,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.freeGroupoidFunctor_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.freeGroupoidFunctor_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">freeGroupoidFunctor_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V'</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V''</span> : <a href=\"./foundational_types.html\">Type</a> u''}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V''</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÜ</span> : <span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">‚•§q</a> <span class=\"fn\">V'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÜ'</span> : <span class=\"fn\">V'</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">‚•§q</a> <span class=\"fn\">V''</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.freeGroupoidFunctor\">freeGroupoidFunctor</a> (<span class=\"fn\">œÜ</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.comp\">‚ãôq</a> <span class=\"fn\">œÜ'</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.freeGroupoidFunctor\">freeGroupoidFunctor</a> <span class=\"fn\">œÜ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.freeGroupoidFunctor\">freeGroupoidFunctor</a> <span class=\"fn\">œÜ'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L177-L180","name":"CategoryTheory.Groupoid.Free.freeGroupoidFunctor_id","line":177,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.freeGroupoidFunctor_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.freeGroupoidFunctor_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">freeGroupoidFunctor_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.freeGroupoidFunctor\">freeGroupoidFunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.id\">ùü≠q</a> <span class=\"fn\">V</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">Functor.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid\">FreeGroupoid</a> <span class=\"fn\">V</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L173-L175","name":"CategoryTheory.freeGroupoidFunctor","line":173,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.freeGroupoidFunctor","doc":"The functor of free groupoid induced by a prefunctor of quivers "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.freeGroupoidFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">freeGroupoidFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V'</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÜ</span> : <span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">‚•§q</a> <span class=\"fn\">V'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid\">FreeGroupoid</a> <span class=\"fn\">V</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid\">FreeGroupoid</a> <span class=\"fn\">V'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L153-L165","name":"CategoryTheory.Groupoid.Free.lift_unique","line":153,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.lift_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.lift_unique\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">lift_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V'</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">V'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÜ</span> : <span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">‚•§q</a> <span class=\"fn\">V'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Œ¶</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid\">FreeGroupoid</a> <span class=\"fn\">V</span>)</span> <span class=\"fn\">V'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hŒ¶</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.of\">of</a> <span class=\"fn\">V</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.comp\">‚ãôq</a> <span class=\"fn\"><span class=\"fn\">Œ¶</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.toPrefunctor\">toPrefunctor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">œÜ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ¶</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.lift\">lift</a> <span class=\"fn\">œÜ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L148-L151","name":"CategoryTheory.Groupoid.Free.lift_spec","line":148,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.lift_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.lift_spec\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">lift_spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V'</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">V'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÜ</span> : <span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">‚•§q</a> <span class=\"fn\">V'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.of\">of</a> <span class=\"fn\">V</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.comp\">‚ãôq</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.lift\">lift</a> <span class=\"fn\">œÜ</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.toPrefunctor\">toPrefunctor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">œÜ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L138-L146","name":"CategoryTheory.Groupoid.Free.lift","line":138,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.lift","doc":"The lift of a prefunctor to a groupoid, to a functor from `FreeGroupoid V` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.lift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V'</span> : <a href=\"./foundational_types.html\">Type</a> u'}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">V'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">œÜ</span> : <span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">‚•§q</a> <span class=\"fn\">V'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid\">FreeGroupoid</a> <span class=\"fn\">V</span>)</span> <span class=\"fn\">V'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L130-L132","name":"CategoryTheory.Groupoid.Free.of_eq","line":130,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.of_eq\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.of\">of</a> <span class=\"fn\">V</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.Symmetrify.of\">Quiver.Symmetrify.of</a> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.comp\">‚ãôq</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">Paths.of</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.Symmetrify\">Quiver.Symmetrify</a> <span class=\"fn\">V</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.comp\">‚ãôq</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient.functor\">Quotient.functor</a> <a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.redStep\">redStep</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.toPrefunctor\">toPrefunctor</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L125-L128","name":"CategoryTheory.Groupoid.Free.of","line":125,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.of","doc":"The inclusion of the quiver on `V` to the underlying quiver on `FreeGroupoid V` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.of\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">‚•§q</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid\">FreeGroupoid</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L120-L123","name":"CategoryTheory.FreeGroupoid.instGroupoid","line":120,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid.instGroupoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid.instGroupoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeGroupoid</span>.<span class=\"name\">instGroupoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid.html#CategoryTheory.Groupoid\">Groupoid</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid\">FreeGroupoid</a> <span class=\"fn\">V</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L115-L118","name":"CategoryTheory.Groupoid.Free.quotInv","line":115,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.quotInv","doc":"The inverse of an arrow in the free groupoid "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.quotInv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">quotInv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid\">FreeGroupoid</a> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L112-L113","name":"CategoryTheory.Groupoid.Free.instCategoryFreeGroupoid","line":112,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.instCategoryFreeGroupoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.instCategoryFreeGroupoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">instCategoryFreeGroupoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{max u v, u}</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid\">FreeGroupoid</a> <span class=\"fn\">V</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L106-L110","name":"CategoryTheory.Groupoid.Free.congr_reverse_comp","line":106,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.congr_reverse_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.congr_reverse_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">congr_reverse_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths\">Paths</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.Symmetrify\">Quiver.Symmetrify</a> <span class=\"fn\">V</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient.CompClosure\">Quotient.CompClosure</a> <a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.redStep\">redStep</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.Path.reverse\">Quiver.Path.reverse</a> <span class=\"fn\">p</span>)</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient.CompClosure\">Quotient.CompClosure</a> <a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.redStep\">redStep</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">Y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L79-L104","name":"CategoryTheory.Groupoid.Free.congr_comp_reverse","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.congr_comp_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.congr_comp_reverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">congr_comp_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths\">Paths</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.Symmetrify\">Quiver.Symmetrify</a> <span class=\"fn\">V</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient.CompClosure\">Quotient.CompClosure</a> <a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.redStep\">redStep</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">p</span> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.Path.reverse\">Quiver.Path.reverse</a> <span class=\"fn\">p</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient.CompClosure\">Quotient.CompClosure</a> <a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.redStep\">redStep</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L67-L76","name":"CategoryTheory.Groupoid.Free.congr_reverse","line":67,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.congr_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.congr_reverse\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">congr_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths\">Paths</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.Symmetrify\">Quiver.Symmetrify</a> <span class=\"fn\">V</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient.CompClosure\">Quotient.CompClosure</a> <a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.redStep\">redStep</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Quotient.html#CategoryTheory.Quotient.CompClosure\">Quotient.CompClosure</a> <a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.redStep\">redStep</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.Path.reverse\">Quiver.Path.reverse</a> <span class=\"fn\">p</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.Path.reverse\">Quiver.Path.reverse</a> <span class=\"fn\">q</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L64-L65","name":"CategoryTheory.Groupoid.Free.instNonemptyFreeGroupoid","line":64,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.instNonemptyFreeGroupoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.instNonemptyFreeGroupoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">instNonemptyFreeGroupoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid\">FreeGroupoid</a> <span class=\"fn\">V</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L60-L62","name":"CategoryTheory.FreeGroupoid","line":60,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid","doc":"The underlying vertices of the free groupoid "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.FreeGroupoid\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeGroupoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L57-L58","name":"CategoryTheory.Groupoid.Free.redStep.step","line":57,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.redStep.step","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.redStep.step\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">redStep</span>.<span class=\"name\">step</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.Symmetrify\">Quiver.Symmetrify</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.redStep\">redStep</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths.of\">Paths.of</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.Symmetrify\">Quiver.Symmetrify</a> <span class=\"fn\">V</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Hom.toPath\">toPath</a></span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.reverse\">Quiver.reverse</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Path.html#Quiver.Hom.toPath\">toPath</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L55-L58","name":"CategoryTheory.Groupoid.Free.redStep","line":55,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.redStep","doc":"The \"reduction\" relation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#CategoryTheory.Groupoid.Free.redStep\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Groupoid</span>.<span class=\"name\">Free</span>.<span class=\"name\">redStep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Quotient.html#HomRel\">HomRel</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/PathCategory/Basic.html#CategoryTheory.Paths\">Paths</a> <span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Quiver/Symmetric.html#Quiver.Symmetrify\">Quiver.Symmetrify</a> <span class=\"fn\">V</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L50-L53","name":"Quiver.Hom.toNegPath","line":50,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#Quiver.Hom.toNegPath","doc":"Shorthand for the \"forward\" arrow corresponding to `f` in `paths <| symmetrify V` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#Quiver.Hom.toNegPath\"><span class=\"name\">Quiver</span>.<span class=\"name\">Hom</span>.<span class=\"name\">toNegPath</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Groupoid/FreeGroupoid.lean#L45-L48","name":"Quiver.Hom.toPosPath","line":45,"kind":"def","docLink":"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#Quiver.Hom.toPosPath","doc":"Shorthand for the \"forward\" arrow corresponding to `f` in `paths <| symmetrify V` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Groupoid/FreeGroupoid.html#Quiver.Hom.toPosPath\"><span class=\"name\">Quiver</span>.<span class=\"name\">Hom</span>.<span class=\"name\">toPosPath</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">‚ü∂</a> <span class=\"fn\">Y</span></div></div>"}]}