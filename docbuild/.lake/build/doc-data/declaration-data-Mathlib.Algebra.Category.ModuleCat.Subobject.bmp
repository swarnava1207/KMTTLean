{"name":"Mathlib.Algebra.Category.ModuleCat.Subobject","instances":[{"typeNames":["ModuleCat"],"name":"ModuleCat.wellPowered_moduleCat","className":"CategoryTheory.WellPowered"}],"imports":["Init","Mathlib.Algebra.Category.ModuleCat.EpiMono","Mathlib.Algebra.Category.ModuleCat.Kernels","Mathlib.CategoryTheory.Subobject.WellPowered","Mathlib.CategoryTheory.Subobject.Limits"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/ModuleCat/Subobject.lean#L86-L96","name":"ModuleCat.cokernel_π_imageSubobject_ext","line":86,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Subobject.html#ModuleCat.cokernel_π_imageSubobject_ext","doc":"An extensionality lemma showing that two elements of a cokernel by an image\nare equal if they differ by an element of the image.\n\nThe application is for homology:\ntwo elements in homology are equal if they differ by a boundary.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Subobject.html#ModuleCat.cokernel_π_imageSubobject_ext\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">cokernel_π_imageSubobject_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L </span><span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">L</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">M</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Images.html#CategoryTheory.Limits.HasImage\">CategoryTheory.Limits.HasImage</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/Basic.html#CategoryTheory.Subobject.underlying\">CategoryTheory.Subobject.underlying</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Subobject/Limits.html#CategoryTheory.Limits.imageSubobject\">CategoryTheory.Limits.imageSubobject</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.HasCokernel\">CategoryTheory.Limits.HasCokernel</a> <span class=\"fn\">g</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">↑<span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">l</span> : <span class=\"fn\">↑<span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> :\n  <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>       <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span>\n        <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Subobject/Limits.html#CategoryTheory.Limits.factorThruImageSubobject\">CategoryTheory.Limits.factorThruImageSubobject</a> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">l</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.π\">CategoryTheory.Limits.cokernel.π</a> <span class=\"fn\">g</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.cokernel.π\">CategoryTheory.Limits.cokernel.π</a> <span class=\"fn\">g</span>)</span>)</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/ModuleCat/Subobject.lean#L80-L84","name":"ModuleCat.toKernelSubobject_arrow","line":80,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/ModuleCat/Subobject.html#ModuleCat.toKernelSubobject_arrow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Subobject.html#ModuleCat.toKernelSubobject_arrow\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">toKernelSubobject_arrow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Submodule/Ker.html#LinearMap.ker\">LinearMap.ker</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Subobject/Limits.html#CategoryTheory.Limits.kernelSubobject\">CategoryTheory.Limits.kernelSubobject</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Subobject/Basic.html#CategoryTheory.Subobject.arrow\">arrow</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Subobject.html#ModuleCat.toKernelSubobject\">toKernelSubobject</a> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/ModuleCat/Subobject.lean#L75-L78","name":"ModuleCat.toKernelSubobject","line":75,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Subobject.html#ModuleCat.toKernelSubobject","doc":"Bundle an element `m : M` such that `f m = 0` as a term of `kernelSubobject f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Subobject.html#ModuleCat.toKernelSubobject\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">toKernelSubobject</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Submodule/Ker.html#LinearMap.ker\">LinearMap.ker</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/Basic.html#CategoryTheory.Subobject.underlying\">CategoryTheory.Subobject.underlying</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Subobject/Limits.html#CategoryTheory.Limits.kernelSubobject\">CategoryTheory.Limits.kernelSubobject</a> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/ModuleCat/Subobject.lean#L70-L71","name":"ModuleCat.wellPowered_moduleCat","line":70,"kind":"instance","docLink":"./Mathlib/Algebra/Category/ModuleCat/Subobject.html#ModuleCat.wellPowered_moduleCat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Subobject.html#ModuleCat.wellPowered_moduleCat\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">wellPowered_moduleCat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/WellPowered.html#CategoryTheory.WellPowered\">CategoryTheory.WellPowered.{v, v, max (v + 1) u}</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/ModuleCat/Subobject.lean#L34-L68","name":"ModuleCat.subobjectModule","line":34,"kind":"def","docLink":"./Mathlib/Algebra/Category/ModuleCat/Subobject.html#ModuleCat.subobjectModule","doc":"The categorical subobjects of a module `M` are in one-to-one correspondence with its\nsubmodules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/ModuleCat/Subobject.html#ModuleCat.subobjectModule\"><span class=\"name\">ModuleCat</span>.<span class=\"name\">subobjectModule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Subobject/Basic.html#CategoryTheory.Subobject\">CategoryTheory.Subobject</a> <span class=\"fn\">M</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">R</span> <span class=\"fn\">↑<span class=\"fn\">M</span></span></span></div></div>"}]}