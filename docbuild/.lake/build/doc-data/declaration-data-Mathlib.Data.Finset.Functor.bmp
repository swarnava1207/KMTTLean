{"name":"Mathlib.Data.Finset.Functor","instances":[{"typeNames":["Finset"],"name":"Finset.functor","className":"Functor"},{"typeNames":["Finset"],"name":"Finset.lawfulFunctor","className":"LawfulFunctor"},{"typeNames":["Finset"],"name":"Finset.pure","className":"Pure"},{"typeNames":["Finset"],"name":"Finset.applicative","className":"Applicative"},{"typeNames":["Finset"],"name":"Finset.lawfulApplicative","className":"LawfulApplicative"},{"typeNames":["Finset"],"name":"Finset.commApplicative","className":"CommApplicative"},{"typeNames":["Finset"],"name":"Finset.instMonad","className":"Monad"},{"typeNames":["Finset"],"name":"Finset.instLawfulMonad","className":"LawfulMonad"},{"typeNames":["Finset"],"name":"Finset.instAlternative","className":"Alternative"}],"imports":["Init","Mathlib.Data.Finset.Lattice.Union","Mathlib.Data.Finset.NAry","Mathlib.Data.Multiset.Functor"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L207-L211","name":"Finset.map_traverse","line":207,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.map_traverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.map_traverse\"><span class=\"name\">Finset</span>.<span class=\"name\">map_traverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Applicative\">Applicative</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Control/Basic.html#CommApplicative\">CommApplicative</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">G</span> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Functor.map\">Functor.map</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Functor.html#Finset.traverse\">traverse</a> <span class=\"fn\">g</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Functor.html#Finset.traverse\">traverse</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Functor.map\">Functor.map</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">g</span>) <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L201-L204","name":"Finset.map_comp_coe_apply","line":201,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.map_comp_coe_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.map_comp_coe_apply\"><span class=\"name\">Finset</span>.<span class=\"name\">map_comp_coe_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Defs.html#Multiset\">Multiset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">image</a> <span class=\"fn\">h</span> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Finset/Dedup.html#Multiset.toFinset\">toFinset</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\">s</span>).<a href=\"./Mathlib/Data/Finset/Dedup.html#Multiset.toFinset\">toFinset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L195-L198","name":"Finset.map_comp_coe","line":195,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.map_comp_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.map_comp_coe\"><span class=\"name\">Finset</span>.<span class=\"name\">map_comp_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Functor.map\">Functor.map</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/Data/Finset/Dedup.html#Multiset.toFinset\">Multiset.toFinset</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Finset/Dedup.html#Multiset.toFinset\">Multiset.toFinset</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Functor.map\">Functor.map</a> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L189-L192","name":"Finset.id_traverse","line":189,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.id_traverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.id_traverse\"><span class=\"name\">Finset</span>.<span class=\"name\">id_traverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Functor.html#Finset.traverse\">traverse</a> <a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L185-L187","name":"Finset.traverse","line":185,"kind":"def","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.traverse","doc":"Traverse function for `Finset`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.traverse\"><span class=\"name\">Finset</span>.<span class=\"name\">traverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> u</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Applicative\">Applicative</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Control/Basic.html#CommApplicative\">CommApplicative</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L170-L173","name":"Finset.instAlternative","line":170,"kind":"instance","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.instAlternative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.instAlternative\"><span class=\"name\">Finset</span>.<span class=\"name\">instAlternative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Basic.html#Alternative\">Alternative</a> <a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L154-L159","name":"Finset.instLawfulMonad","line":154,"kind":"instance","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.instLawfulMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.instLawfulMonad\"><span class=\"name\">Finset</span>.<span class=\"name\">instLawfulMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/Basic.html#LawfulMonad\">LawfulMonad</a> <a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L150-L152","name":"Finset.bind_def","line":150,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.bind_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.bind_def\"><span class=\"name\">Finset</span>.<span class=\"name\">bind_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(fun (<span class=\"fn\">x1</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">β</span></span>) (<span class=\"fn\">x2</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span></span>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#Bind.bind\">&gt;&gt;=</a> <span class=\"fn\">x2</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Finset/Lattice/Fold.html#Finset.sup\">sup</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L147-L148","name":"Finset.instMonad","line":147,"kind":"instance","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.instMonad","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.instMonad\"><span class=\"name\">Finset</span>.<span class=\"name\">instMonad</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L130-L136","name":"Finset.commApplicative","line":130,"kind":"instance","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.commApplicative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.commApplicative\"><span class=\"name\">Finset</span>.<span class=\"name\">commApplicative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Control/Basic.html#CommApplicative\">CommApplicative</a> <a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L90-L128","name":"Finset.lawfulApplicative","line":90,"kind":"instance","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.lawfulApplicative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.lawfulApplicative\"><span class=\"name\">Finset</span>.<span class=\"name\">lawfulApplicative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/Basic.html#LawfulApplicative\">LawfulApplicative</a> <a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L83-L88","name":"Finset.image₂_def","line":83,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.image₂_def","doc":"`Finset.image₂` in terms of monadic operations. Note that this can't be taken as the definition\nbecause of the lack of universe polymorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.image₂_def\"><span class=\"name\">Finset</span>.<span class=\"name\">image₂_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β </span><span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/NAry.html#Finset.image₂\">image₂</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\">s</span> &lt;*&gt; <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L79-L81","name":"Finset.seqRight_def","line":79,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.seqRight_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.seqRight_def\"><span class=\"name\">Finset</span>.<span class=\"name\">seqRight_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span> *&gt; <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Prelude.html#ite\">then</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">t</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L75-L77","name":"Finset.seqLeft_def","line":75,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.seqLeft_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.seqLeft_def\"><span class=\"name\">Finset</span>.<span class=\"name\">seqLeft_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span> &lt;* <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Prelude.html#ite\">then</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L71-L73","name":"Finset.seq_def","line":71,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.seq_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.seq_def\"><span class=\"name\">Finset</span>.<span class=\"name\">seq_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<span class=\"fn\">α</span> → <span class=\"fn\">β</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">t</span> &lt;*&gt; <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.<a href=\"./Mathlib/Data/Finset/Lattice/Fold.html#Finset.sup\">sup</a></span> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">image</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L65-L69","name":"Finset.applicative","line":65,"kind":"instance","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.applicative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.applicative\"><span class=\"name\">Finset</span>.<span class=\"name\">applicative</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Applicative\">Applicative</a> <a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L55-L56","name":"Finset.pure_def","line":55,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.pure_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.pure_def\"><span class=\"name\">Finset</span>.<span class=\"name\">pure_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#Singleton.singleton\">singleton</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L52-L53","name":"Finset.pure","line":52,"kind":"instance","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.pure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.pure\"><span class=\"name\">Finset</span>.<span class=\"name\">pure</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Pure\">Pure</a> <a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L44-L45","name":"Finset.fmap_def","line":44,"kind":"theorem","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.fmap_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.fmap_def\"><span class=\"name\">Finset</span>.<span class=\"name\">fmap_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.image\">image</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L39-L42","name":"Finset.lawfulFunctor","line":39,"kind":"instance","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.lawfulFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.lawfulFunctor\"><span class=\"name\">Finset</span>.<span class=\"name\">lawfulFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful/Basic.html#LawfulFunctor\">LawfulFunctor</a> <a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Finset/Functor.lean#L35-L37","name":"Finset.functor","line":35,"kind":"instance","docLink":"./Mathlib/Data/Finset/Functor.html#Finset.functor","doc":"Because `Finset.image` requires a `DecidableEq` instance for the target type, we can only\nconstruct `Functor Finset` when working classically. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Finset/Functor.html#Finset.functor\"><span class=\"name\">Finset</span>.<span class=\"name\">functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">P</span> : <a href=\"./foundational_types.html\">Prop</a>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">P</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Functor\">Functor</a> <a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a></span></div></div>"}]}