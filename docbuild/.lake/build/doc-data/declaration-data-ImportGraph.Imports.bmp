{"name":"ImportGraph.Imports","instances":[{"typeNames":["GoToModuleLinkProps"],"name":"instRpcEncodableGoToModuleLinkProps","className":"Lean.Server.RpcEncodable"}],"imports":["Init","Lean.Elab.Command","Lean.Util.SearchPath","Lean.Server.GoTo","Lean.Widget.UserWidget","ImportGraph.RequiredModules"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L307-L333","name":"«command#find_home!_»","line":307,"kind":"def","docLink":"./ImportGraph/Imports.html#«command#find_home!_»","doc":"Find locations as high as possible in the import hierarchy\nwhere the named declaration could live.\nUsing `#find_home!` will forcefully remove the current file.\nNote that this works best if used in a file with `import Mathlib`.\n\nThe current file could still be the only suggestion, even using `#find_home! lemma`.\nThe reason is that `#find_home!` scans the import graph below the current file,\nselects all the files containing declarations appearing in `lemma`, excluding\nthe current file itself and looks for all least upper bounds of such files.\n\nFor a simple example, if `lemma` is in a file importing only `A.lean` and `B.lean` and\nuses one lemma from each, then `#find_home! lemma` returns the current file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#«command#find_home!_»\"><span class=\"name\">«command#find_home!_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L281-L304","name":"GoToModuleLink","line":281,"kind":"def","docLink":"./ImportGraph/Imports.html#GoToModuleLink","doc":"When clicked, this widget component jumps to the source of the module `modName`,\nassuming a source URI can be found for the module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#GoToModuleLink\"><span class=\"name\">GoToModuleLink</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Widget/UserWidget.html#Lean.Widget.Module\">Lean.Widget.Module</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L279-L279","name":"instRpcEncodableGoToModuleLinkProps","line":279,"kind":"instance","docLink":"./ImportGraph/Imports.html#instRpcEncodableGoToModuleLinkProps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#instRpcEncodableGoToModuleLinkProps\"><span class=\"name\">instRpcEncodableGoToModuleLinkProps</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> <a href=\"./ImportGraph/Imports.html#GoToModuleLinkProps\">GoToModuleLinkProps</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L278-L278","name":"GoToModuleLinkProps.modName","line":278,"kind":"def","docLink":"./ImportGraph/Imports.html#GoToModuleLinkProps.modName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#GoToModuleLinkProps.modName\"><span class=\"name\">GoToModuleLinkProps</span>.<span class=\"name\">modName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./ImportGraph/Imports.html#GoToModuleLinkProps\">GoToModuleLinkProps</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L277-L277","name":"GoToModuleLinkProps.mk","line":277,"kind":"ctor","docLink":"./ImportGraph/Imports.html#GoToModuleLinkProps.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#GoToModuleLinkProps.mk\"><span class=\"name\">GoToModuleLinkProps</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./ImportGraph/Imports.html#GoToModuleLinkProps\">GoToModuleLinkProps</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L277-L279","name":"GoToModuleLinkProps","line":277,"kind":"structure","docLink":"./ImportGraph/Imports.html#GoToModuleLinkProps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#GoToModuleLinkProps\"><span class=\"name\">GoToModuleLinkProps</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L266-L275","name":"getModuleUri","line":266,"kind":"def","docLink":"./ImportGraph/Imports.html#getModuleUri","doc":"Tries to resolve the module `modName` to a source file URI.\nThis has to be done in the Lean server\nsince the `Environment` does not keep track of source URIs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#getModuleUri\"><span class=\"name\">getModuleUri</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Requests.html#Lean.Server.RequestM\">Lean.Server.RequestM</a> <span class=\"fn\">(<a href=\"./Lean/Server/Requests.html#Lean.Server.RequestTask\">Lean.Server.RequestTask</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.DocumentUri\">Lean.Lsp.DocumentUri</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L247-L263","name":"Lean.Name.findHome","line":247,"kind":"def","docLink":"./ImportGraph/Imports.html#Lean.Name.findHome","doc":"Find locations as high as possible in the import hierarchy\nwhere the named declaration could live.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.Name.findHome\"><span class=\"name\">Lean</span>.<span class=\"name\">Name</span>.<span class=\"name\">findHome</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L243-L245","name":"«command#minimize_imports»","line":243,"kind":"def","docLink":"./ImportGraph/Imports.html#«command#minimize_imports»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#«command#minimize_imports»\"><span class=\"name\">«command#minimize_imports»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L229-L240","name":"«command#min_imports»","line":229,"kind":"def","docLink":"./ImportGraph/Imports.html#«command#min_imports»","doc":"Try to compute a minimal set of imports for this file,\nby analyzing the declarations.\n\nThis must be run at the end of the file,\nand is not aware of syntax and tactics,\nso the results will likely need to be adjusted by hand.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#«command#min_imports»\"><span class=\"name\">«command#min_imports»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L217-L227","name":"Lean.Environment.minimalRequiredModules","line":217,"kind":"def","docLink":"./ImportGraph/Imports.html#Lean.Environment.minimalRequiredModules","doc":"Return the names of the modules in which constants used in the current file were defined,\nwith modules already transitively imported removed.\n\nNote that this will *not* account for tactics and syntax used in the file,\nso the results may not suffice as imports.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.Environment.minimalRequiredModules\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">minimalRequiredModules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L205-L215","name":"«command#redundant_imports»","line":205,"kind":"def","docLink":"./ImportGraph/Imports.html#«command#redundant_imports»","doc":"List the imports in this file which can be removed\nbecause they are transitively implied by another import.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#«command#redundant_imports»\"><span class=\"name\">«command#redundant_imports»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L196-L203","name":"redundantImports","line":196,"kind":"def","docLink":"./ImportGraph/Imports.html#redundantImports","doc":"Return the redundant imports (i.e. those transitively implied by another import)\nof a specified module (or the current module if `none` is specified).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#redundantImports\"><span class=\"name\">redundantImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L190-L194","name":"Core.withImportModules","line":190,"kind":"def","docLink":"./ImportGraph/Imports.html#Core.withImportModules","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Core.withImportModules\"><span class=\"name\">Core</span>.<span class=\"name\">withImportModules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modules</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L177-L188","name":"unusedTransitiveImports","line":177,"kind":"def","docLink":"./ImportGraph/Imports.html#unusedTransitiveImports","doc":"Returns a `List (Name × List Name)` with a key for each module `n` in `amongst`,\nwhose corresponding value is the list of modules `m` in `amongst` which are transitively imported by `n`,\nbut no declaration in `n` makes use of a declaration in `m`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#unusedTransitiveImports\"><span class=\"name\">unusedTransitiveImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">amongst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">verbose</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> (<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L146-L173","name":"Lean.NameMap.filterGraph","line":146,"kind":"def","docLink":"./ImportGraph/Imports.html#Lean.NameMap.filterGraph","doc":"Filters the `graph` removing all nodes where `filter n` returns false. Additionally,\nreplace edges from removed nodes by all the transitive edges.\n\nThis means there is a path between two nodes in the filtered graph iff there exists\nsuch a path in the original graph.\n\nIf the optional `(replacement : Name)` is provided, a corresponding node will be\nadded together with edges to all nodes which had an incoming edge from any\nfiltered node.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.NameMap.filterGraph\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">filterGraph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">graph</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filter</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">replacement</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L122-L144","name":"Lean.NameMap.transitiveFilteredUpstream","line":122,"kind":"opaque","docLink":"./ImportGraph/Imports.html#Lean.NameMap.transitiveFilteredUpstream","doc":"Filter the list of edges `… → node` inside `graph` by the function `filter`.\n\nAny such upstream node `source` where `filter source` returns true will be replaced\nby all its upstream nodes. This results in a list of all unfiltered nodes\nin the `graph` that either had an edge to `node`\nor had an indirect edge to `node` going through filtered nodes.\n\nWill panic if the `node` is not in the `graph`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.NameMap.transitiveFilteredUpstream\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">transitiveFilteredUpstream</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">node</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">graph</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">filter</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">replacement</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L112-L120","name":"Lean.NameMap.upstreamOf","line":112,"kind":"def","docLink":"./ImportGraph/Imports.html#Lean.NameMap.upstreamOf","doc":"Restrict an import graph to only the transitive imports of some set of modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.NameMap.upstreamOf\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">upstreamOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">targets</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L102-L110","name":"Lean.NameMap.downstreamOf","line":102,"kind":"def","docLink":"./ImportGraph/Imports.html#Lean.NameMap.downstreamOf","doc":"Restrict an import graph to only the downstream dependencies of some set of modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.NameMap.downstreamOf\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">downstreamOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">targets</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L92-L100","name":"Lean.NameMap.transitiveReduction","line":92,"kind":"def","docLink":"./ImportGraph/Imports.html#Lean.NameMap.transitiveReduction","doc":"Compute the transitive reduction of an import graph.\n\nTypical usage is `transitiveReduction (← importGraph)`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.NameMap.transitiveReduction\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">transitiveReduction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L82-L90","name":"Lean.NameMap.transitiveClosure.process","line":82,"kind":"opaque","docLink":"./ImportGraph/Imports.html#Lean.NameMap.transitiveClosure.process","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.NameMap.transitiveClosure.process\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">transitiveClosure</span>.<span class=\"name\">process</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L76-L90","name":"Lean.NameMap.transitiveClosure","line":76,"kind":"def","docLink":"./ImportGraph/Imports.html#Lean.NameMap.transitiveClosure","doc":"Compute the transitive closure of an import graph.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.NameMap.transitiveClosure\"><span class=\"name\">Lean</span>.<span class=\"name\">NameMap</span>.<span class=\"name\">transitiveClosure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L63-L70","name":"Lean.Environment.findRedundantImports.visit","line":63,"kind":"opaque","docLink":"./ImportGraph/Imports.html#Lean.Environment.findRedundantImports.visit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.Environment.findRedundantImports.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">findRedundantImports</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">targets</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">visited </span><span class=\"fn\">seen</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L54-L70","name":"Lean.Environment.findRedundantImports","line":54,"kind":"def","docLink":"./ImportGraph/Imports.html#Lean.Environment.findRedundantImports","doc":"Return the redundant imports (i.e. those transitively implied by another import)\namongst a candidate list of imports.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.Environment.findRedundantImports\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">findRedundantImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">imports</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L47-L52","name":"Lean.Environment.importGraph.process","line":47,"kind":"opaque","docLink":"./ImportGraph/Imports.html#Lean.Environment.importGraph.process","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.Environment.importGraph.process\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">importGraph</span>.<span class=\"name\">process</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L38-L52","name":"Lean.Environment.importGraph","line":38,"kind":"def","docLink":"./ImportGraph/Imports.html#Lean.Environment.importGraph","doc":"Construct the import graph of the current file.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.Environment.importGraph\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">importGraph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">NameMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/import-graph/blob/c20832d6f0b3186a97ea9361cec0a5b87dd152a3/ImportGraph/Imports.lean#L28-L36","name":"Lean.Environment.importsOf","line":28,"kind":"def","docLink":"./ImportGraph/Imports.html#Lean.Environment.importsOf","doc":"Find the imports of a given module.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ImportGraph/Imports.html#Lean.Environment.importsOf\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">importsOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span></div></div>"}]}