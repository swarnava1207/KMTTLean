{"name":"Aesop.Builder.Tactic","instances":[],"imports":["Init","Aesop.Builder.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Builder/Tactic.lean#L47-L56","name":"Aesop.RuleBuilder.tactic","line":47,"kind":"def","docLink":"./Aesop/Builder/Tactic.html#Aesop.RuleBuilder.tactic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Tactic.html#Aesop.RuleBuilder.tactic\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">tactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilder\">RuleBuilder</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Builder/Tactic.lean#L24-L45","name":"Aesop.RuleBuilder.tacticCore","line":24,"kind":"def","docLink":"./Aesop/Builder/Tactic.html#Aesop.RuleBuilder.tacticCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Tactic.html#Aesop.RuleBuilder.tacticCore\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">tacticCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Core.html#Sum\">⊕</a> <a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">imode?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">IndexingMode</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">phase</span> : <a href=\"./Aesop/Builder/Basic.html#Aesop.PhaseSpec\">PhaseSpec</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/RuleSet/Member.html#Aesop.LocalRuleSetMember\">LocalRuleSetMember</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Builder/Tactic.lean#L21-L22","name":"Aesop.RuleBuilder.tacticIMode","line":21,"kind":"def","docLink":"./Aesop/Builder/Tactic.html#Aesop.RuleBuilder.tacticIMode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Tactic.html#Aesop.RuleBuilder.tacticIMode\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">tacticIMode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">imode?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">IndexingMode</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">IndexingMode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Builder/Tactic.lean#L15-L17","name":"Aesop.matchByTactic?","line":15,"kind":"def","docLink":"./Aesop/Builder/Tactic.html#Aesop.matchByTactic?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Tactic.html#Aesop.matchByTactic?\"><span class=\"name\">Aesop</span>.<span class=\"name\">matchByTactic?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span>)</span></span></div></div>"}]}