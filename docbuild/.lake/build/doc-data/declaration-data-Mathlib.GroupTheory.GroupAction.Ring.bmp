{"name":"Mathlib.GroupTheory.GroupAction.Ring","instances":[{"typeNames":[],"name":"NonUnitalNonAssocSemiring.toDistribSMul","className":"DistribSMul"},{"typeNames":["Nat"],"name":"NonUnitalNonAssocSemiring.nat_smulCommClass","className":"SMulCommClass"},{"typeNames":["Nat"],"name":"NonUnitalNonAssocSemiring.nat_isScalarTower","className":"IsScalarTower"},{"typeNames":["Int"],"name":"NonUnitalNonAssocRing.int_smulCommClass","className":"SMulCommClass"},{"typeNames":["Int"],"name":"NonUnitalNonAssocRing.int_isScalarTower","className":"IsScalarTower"}],"imports":["Init","Mathlib.Algebra.GroupWithZero.Action.Defs","Mathlib.Algebra.Ring.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/GroupAction/Ring.lean#L51-L57","name":"NonUnitalNonAssocRing.int_isScalarTower","line":51,"kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Ring.html#NonUnitalNonAssocRing.int_isScalarTower","doc":"Note that `AddCommGroup.int_isScalarTower` requires stronger assumptions on `α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/GroupAction/Ring.html#NonUnitalNonAssocRing.int_isScalarTower\"><span class=\"name\">NonUnitalNonAssocRing</span>.<span class=\"name\">int_isScalarTower</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocRing\">NonUnitalNonAssocRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/GroupAction/Ring.lean#L43-L49","name":"NonUnitalNonAssocRing.int_smulCommClass","line":43,"kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Ring.html#NonUnitalNonAssocRing.int_smulCommClass","doc":"Note that `AddMonoid.int_smulCommClass` requires stronger assumptions on `α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/GroupAction/Ring.html#NonUnitalNonAssocRing.int_smulCommClass\"><span class=\"name\">NonUnitalNonAssocRing</span>.<span class=\"name\">int_smulCommClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocRing\">NonUnitalNonAssocRing</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/GroupAction/Ring.lean#L35-L41","name":"NonUnitalNonAssocSemiring.nat_isScalarTower","line":35,"kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Ring.html#NonUnitalNonAssocSemiring.nat_isScalarTower","doc":"Note that `AddCommMonoid.nat_isScalarTower` requires stronger assumptions on `α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/GroupAction/Ring.html#NonUnitalNonAssocSemiring.nat_isScalarTower\"><span class=\"name\">NonUnitalNonAssocSemiring</span>.<span class=\"name\">nat_isScalarTower</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocSemiring\">NonUnitalNonAssocSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/GroupAction/Ring.lean#L27-L33","name":"NonUnitalNonAssocSemiring.nat_smulCommClass","line":27,"kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Ring.html#NonUnitalNonAssocSemiring.nat_smulCommClass","doc":"Note that `AddMonoid.nat_smulCommClass` requires stronger assumptions on `α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/GroupAction/Ring.html#NonUnitalNonAssocSemiring.nat_smulCommClass\"><span class=\"name\">NonUnitalNonAssocSemiring</span>.<span class=\"name\">nat_smulCommClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocSemiring\">NonUnitalNonAssocSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/GroupAction/Ring.lean#L24-L25","name":"NonUnitalNonAssocSemiring.toDistribSMul","line":24,"kind":"instance","docLink":"./Mathlib/GroupTheory/GroupAction/Ring.html#NonUnitalNonAssocSemiring.toDistribSMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/GroupAction/Ring.html#NonUnitalNonAssocSemiring.toDistribSMul\"><span class=\"name\">NonUnitalNonAssocSemiring</span>.<span class=\"name\">toDistribSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocSemiring\">NonUnitalNonAssocSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribSMul\">DistribSMul</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span></div></div>"}]}