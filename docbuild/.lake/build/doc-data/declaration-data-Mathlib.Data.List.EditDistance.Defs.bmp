{"name":"Mathlib.Data.List.EditDistance.Defs","instances":[{"typeNames":["Levenshtein.Cost"],"name":"Levenshtein.instInhabitedCostNatOfDecidableEq","className":"Inhabited"}],"imports":["Init","Mathlib.Algebra.Group.Defs","Batteries.Data.List.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L293-L300","name":"levenshtein_cons_cons","line":293,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein_cons_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein_cons_cons\"><span class=\"name\">levenshtein_cons_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\">levenshtein</a> <span class=\"fn\">C</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>) (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ys</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.delete\">delete</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\">levenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ys</span>)</span>)\n    <span class=\"fn\">(<a href=\"./Init/Prelude.html#Min.min\">min</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.insert\">insert</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\">levenshtein</a> <span class=\"fn\">C</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>) <span class=\"fn\">ys</span></span>) (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.substitute\">substitute</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\">levenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span></span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L288-L291","name":"levenshtein_cons_nil","line":288,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein_cons_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein_cons_nil\"><span class=\"name\">levenshtein_cons_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\">levenshtein</a> <span class=\"fn\">C</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>) <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.delete\">delete</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\">levenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L278-L286","name":"levenshtein_nil_cons","line":278,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein_nil_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein_nil_cons\"><span class=\"name\">levenshtein_nil_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\">levenshtein</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ys</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.insert\">insert</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\">levenshtein</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">ys</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L274-L276","name":"levenshtein_nil_nil","line":274,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein_nil_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein_nil_nil\"><span class=\"name\">levenshtein_nil_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\">levenshtein</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L266-L272","name":"suffixLevenshtein_eq_tails_map","line":266,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_eq_tails_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_eq_tails_map\"><span class=\"name\">suffixLevenshtein_eq_tails_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span>)</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">xs'</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\">levenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs'</span> <span class=\"fn\">ys</span></span>)</span> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Batteries/Data/List/Basic.html#List.tails\">tails</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L248-L264","name":"suffixLevenshtein_cons_cons_fst_get_zero","line":248,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_cons_cons_fst_get_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_cons_cons_fst_get_zero\"><span class=\"name\">suffixLevenshtein_cons_cons_fst_get_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>) (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ys</span>))</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>) (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ys</span>))</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">0</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ys</span>)</span> with\n  | <span class=\"fn\">⟨<span class=\"fn\">dx</span>, <span class=\"fn\">property</span>⟩</span> =&gt;\n    <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>) <span class=\"fn\">ys</span></span> with\n    | <span class=\"fn\">⟨<span class=\"fn\">dy</span>, <span class=\"fn\">property_1</span>⟩</span> =&gt;\n      <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span></span> with\n      | <span class=\"fn\">⟨<span class=\"fn\">dxy</span>, <span class=\"fn\">property_2</span>⟩</span> =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.delete\">delete</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">dx</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">0</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>) <span class=\"fn\">(<a href=\"./Init/Prelude.html#Min.min\">min</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.insert\">insert</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">dy</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">0</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>) (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.substitute\">substitute</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">dxy</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">0</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>))</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L242-L246","name":"suffixLevenshtein_cons₁_fst","line":242,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_cons₁_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_cons₁_fst\"><span class=\"name\">suffixLevenshtein_cons₁_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>) <span class=\"fn\">ys</span>)</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\">levenshtein</a> <span class=\"fn\">C</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>) <span class=\"fn\">ys</span></span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span>)</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L227-L240","name":"suffixLevenshtein_cons₁","line":227,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_cons₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_cons₁\"><span class=\"name\">suffixLevenshtein_cons₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>) <span class=\"fn\">ys</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\">levenshtein</a> <span class=\"fn\">C</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>) <span class=\"fn\">ys</span></span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span>)</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>, <span class=\"fn\">⋯</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L222-L225","name":"suffixLevenshtein_cons₁_aux","line":222,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_cons₁_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_cons₁_aux\"><span class=\"name\">suffixLevenshtein_cons₁_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">l</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w₀</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">0</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">0</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Init/Data/List/Basic.html#List.tail\">tail</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Init/Data/List/Basic.html#List.tail\">tail</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L218-L220","name":"suffixLevenshtein_cons₂","line":218,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_cons₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_cons₂\"><span class=\"name\">suffixLevenshtein_cons₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ys</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl\">Levenshtein.impl</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <span class=\"fn\">y</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L214-L216","name":"suffixLevenshtein_nil'","line":214,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_nil'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_nil'\"><span class=\"name\">suffixLevenshtein_nil'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">ys</span>)</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\">levenshtein</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <span class=\"fn\">ys</span></span><a href=\"./Init/Prelude.html#List.cons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L208-L212","name":"List.eq_of_length_one","line":208,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#List.eq_of_length_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#List.eq_of_length_one\"><span class=\"name\">List</span>.<span class=\"name\">eq_of_length_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let_fun <span class=\"fn\">this</span> := <span class=\"fn\">⋯</span>;\n<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">x</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">0</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a><a href=\"./Init/Prelude.html#List.cons\">]</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L204-L205","name":"suffixLevenshtein_nil_nil","line":204,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_nil_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_nil_nil\"><span class=\"name\">suffixLevenshtein_nil_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a>)</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#List.cons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L186-L200","name":"levenshtein","line":186,"kind":"def","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein","doc":"`levenshtein C xs ys` computes the Levenshtein distance\n(using the cost functions provided by a `C : Cost α β δ`)\nfrom the list `xs` to the list `ys`.\n\nNote that if the cost functions do not satisfy the inequalities\n* `C.delete a + C.insert b ≥ C.substitute a b`\n* `C.substitute a b + C.substitute b c ≥ C.substitute a c`\n(or if any values are negative)\nthen the edit distance calculated here may not agree with the general\ngeodesic distance on the edit graph.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#levenshtein\"><span class=\"name\">levenshtein</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">δ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L180-L182","name":"suffixLevenshtein_eq","line":180,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_eq\"><span class=\"name\">suffixLevenshtein_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl\">Levenshtein.impl</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <span class=\"fn\">y</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ys</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L165-L177","name":"suffixLevenshtein_length","line":165,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_length","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein_length\"><span class=\"name\">suffixLevenshtein_length</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\">suffixLevenshtein</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <span class=\"fn\">ys</span>)</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L144-L161","name":"suffixLevenshtein","line":144,"kind":"def","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein","doc":"`suffixLevenshtein C xs ys` computes the Levenshtein distance\n(using the cost functions provided by a `C : Cost α β δ`)\nfrom each suffix of the list `xs` to the list `ys`.\n\nThe first element of this list is the Levenshtein distance from `xs` to `ys`.\n\nNote that if the cost functions do not satisfy the inequalities\n* `C.delete a + C.insert b ≥ C.substitute a b`\n* `C.substitute a b + C.substitute b c ≥ C.substitute a c`\n(or if any values are negative)\nthen the edit distances calculated here may not agree with the general\ngeodesic distance on the edit graph.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#suffixLevenshtein\"><span class=\"name\">suffixLevenshtein</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Levenshtein.Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">δ</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L126-L136","name":"Levenshtein.impl_length","line":126,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl_length","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl_length\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">impl_length</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">δ</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl\">impl</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <span class=\"fn\">y</span> <span class=\"fn\">d</span>)</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L120-L124","name":"Levenshtein.impl_cons_fst_zero","line":120,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl_cons_fst_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl_cons_fst_zero\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">impl_cons_fst_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\">δ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">δ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">(<span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ds</span>).<a href=\"./Init/Prelude.html#List.length\">length</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl\">impl</a> <span class=\"fn\">C</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>) <span class=\"fn\">y</span> <span class=\"fn\">⟨<span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ds</span>, <span class=\"fn\">w</span>⟩</span>)</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w'</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">ds</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl\">impl</a> <span class=\"fn\">C</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>) <span class=\"fn\">y</span> <span class=\"fn\">⟨<span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ds</span>, <span class=\"fn\">w</span>⟩</span>)</span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">0</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl\">impl</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <span class=\"fn\">y</span> <span class=\"fn\">⟨<span class=\"fn\">ds</span>, <span class=\"fn\">w'</span>⟩</span></span> with\n  | <span class=\"fn\">⟨<span class=\"fn\">r</span>, <span class=\"fn\">w</span>⟩</span> =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.delete\">delete</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">0</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>) <span class=\"fn\">(<a href=\"./Init/Prelude.html#Min.min\">min</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.insert\">insert</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span>) (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.substitute\">substitute</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">ds</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">0</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>))</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L112-L116","name":"Levenshtein.impl_cons","line":112,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl_cons\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">impl_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\">δ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">δ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">(<span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ds</span>).<a href=\"./Init/Prelude.html#List.length\">length</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w'</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">ds</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl\">impl</a> <span class=\"fn\">C</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>) <span class=\"fn\">y</span> <span class=\"fn\">⟨<span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ds</span>, <span class=\"fn\">w</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl\">impl</a> <span class=\"fn\">C</span> <span class=\"fn\">xs</span> <span class=\"fn\">y</span> <span class=\"fn\">⟨<span class=\"fn\">ds</span>, <span class=\"fn\">w'</span>⟩</span></span> with\n  | <span class=\"fn\">⟨<span class=\"fn\">r</span>, <span class=\"fn\">w</span>⟩</span> =&gt; <span class=\"fn\">⟨<span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.delete\">delete</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">r</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">0</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>) <span class=\"fn\">(<a href=\"./Init/Prelude.html#Min.min\">min</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.insert\">insert</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span>) (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.substitute\">substitute</a></span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">ds</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">0</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a>))</span></span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">r</span>, <span class=\"fn\">⋯</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L87-L105","name":"Levenshtein.impl","line":87,"kind":"def","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl","doc":"(Implementation detail for `levenshtein`)\n\nGiven a list `xs` and the Levenshtein distances from each suffix of `xs` to some other list `ys`,\ncompute the Levenshtein distances from each suffix of `xs` to `y :: ys`.\n\n(Note that we don't actually need to know `ys` itself here, so it is not an argument.)\n\nThe return value is a list of length `x.length + 1`,\nand it is convenient for the recursive calls that we bundle this list\nwith a proof that it is non-empty.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.impl\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">impl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Min\">Min</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">δ</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">δ</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L82-L82","name":"Levenshtein.stringLogLengthCost_substitute","line":82,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLogLengthCost_substitute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLogLengthCost_substitute\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">stringLogLengthCost_substitute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLogLengthCost\">stringLogLengthCost</a>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.substitute\">substitute</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/String/Basic.html#String.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Init/Data/Nat/Log2.html#Nat.log2\">log2</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/String/Basic.html#String.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Init/Data/Nat/Log2.html#Nat.log2\">log2</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L82-L82","name":"Levenshtein.stringLogLengthCost_insert","line":82,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLogLengthCost_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLogLengthCost_insert\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">stringLogLengthCost_insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLogLengthCost\">stringLogLengthCost</a>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.insert\">insert</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/String/Basic.html#String.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Init/Data/Nat/Log2.html#Nat.log2\">log2</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L82-L82","name":"Levenshtein.stringLogLengthCost_delete","line":82,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLogLengthCost_delete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLogLengthCost_delete\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">stringLogLengthCost_delete</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLogLengthCost\">stringLogLengthCost</a>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.delete\">delete</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/String/Basic.html#String.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Init/Data/Nat/Log2.html#Nat.log2\">log2</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L79-L83","name":"Levenshtein.stringLogLengthCost","line":79,"kind":"def","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLogLengthCost","doc":"Cost structure for strings, where cost is the log base 2 length of the token.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLogLengthCost\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">stringLogLengthCost</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Cost</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L76-L76","name":"Levenshtein.stringLengthCost_substitute","line":76,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLengthCost_substitute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLengthCost_substitute\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">stringLengthCost_substitute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLengthCost\">stringLengthCost</a>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.substitute\">substitute</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/String/Basic.html#String.length\">length</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/String/Basic.html#String.length\">length</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L76-L76","name":"Levenshtein.stringLengthCost_delete","line":76,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLengthCost_delete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLengthCost_delete\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">stringLengthCost_delete</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLengthCost\">stringLengthCost</a>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.delete\">delete</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/String/Basic.html#String.length\">length</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L76-L76","name":"Levenshtein.stringLengthCost_insert","line":76,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLengthCost_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLengthCost_insert\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">stringLengthCost_insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLengthCost\">stringLengthCost</a>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.insert\">insert</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/String/Basic.html#String.length\">length</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L73-L77","name":"Levenshtein.stringLengthCost","line":73,"kind":"def","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLengthCost","doc":"Cost structure for strings, where cost is the length of the token.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.stringLengthCost\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">stringLengthCost</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Cost</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L67-L67","name":"Levenshtein.weightCost_insert","line":67,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.weightCost_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.weightCost_insert\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">weightCost_insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.weightCost\">weightCost</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.insert\">insert</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L67-L67","name":"Levenshtein.weightCost_delete","line":67,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.weightCost_delete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.weightCost_delete\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">weightCost_delete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.weightCost\">weightCost</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.delete\">delete</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L67-L67","name":"Levenshtein.weightCost_substitute","line":67,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.weightCost_substitute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.weightCost_substitute\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">weightCost_substitute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.weightCost\">weightCost</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.substitute\">substitute</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L63-L71","name":"Levenshtein.weightCost","line":63,"kind":"def","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.weightCost","doc":"Cost structure given by a function.\nDelete and insert cost the same, and substitution costs the greater value.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.weightCost\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">weightCost</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L61-L61","name":"Levenshtein.instInhabitedCostNatOfDecidableEq","line":61,"kind":"instance","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.instInhabitedCostNatOfDecidableEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.instInhabitedCostNatOfDecidableEq\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">instInhabitedCostNatOfDecidableEq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L55-L55","name":"Levenshtein.defaultCost_substitute","line":55,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.defaultCost_substitute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.defaultCost_substitute\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">defaultCost_substitute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.defaultCost\">defaultCost</a>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.substitute\">substitute</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L55-L55","name":"Levenshtein.defaultCost_delete","line":55,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.defaultCost_delete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.defaultCost_delete\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">defaultCost_delete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.defaultCost\">defaultCost</a>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.delete\">delete</a></span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L55-L55","name":"Levenshtein.defaultCost_insert","line":55,"kind":"theorem","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.defaultCost_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.defaultCost_insert\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">defaultCost_insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.defaultCost\">defaultCost</a>.<a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.insert\">insert</a></span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L54-L59","name":"Levenshtein.defaultCost","line":54,"kind":"def","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.defaultCost","doc":"The default cost structure, for which all operations cost `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.defaultCost\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">defaultCost</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L52-L52","name":"Levenshtein.Cost.substitute","line":52,"kind":"def","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.substitute","doc":"Cost to substitute one element for another in a list. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.substitute\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">Cost</span>.<span class=\"name\">substitute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">δ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L50-L50","name":"Levenshtein.Cost.insert","line":50,"kind":"def","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.insert","doc":"Cost in insert an element into a list. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.insert\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">Cost</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">δ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L48-L48","name":"Levenshtein.Cost.delete","line":48,"kind":"def","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.delete","doc":"Cost to delete an element from a list. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.delete\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">Cost</span>.<span class=\"name\">delete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">δ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L46-L46","name":"Levenshtein.Cost.mk","line":46,"kind":"ctor","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost.mk\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">Cost</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">delete</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">δ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">insert</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">δ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">substitute</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">δ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\">Cost</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">δ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/EditDistance/Defs.lean#L45-L52","name":"Levenshtein.Cost","line":45,"kind":"structure","docLink":"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost","doc":"A cost structure for Levenshtein edit distance. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/EditDistance/Defs.html#Levenshtein.Cost\"><span class=\"name\">Levenshtein</span>.<span class=\"name\">Cost</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_5)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max u_4 u_5) u_6)</div></div>"}]}