{"name":"Mathlib.RepresentationTheory.GroupCohomology.LowDegree","instances":[{"typeNames":["Subtype","ModuleCat.carrier"],"name":"groupCohomology.instFunLikeSubtypeForallCarrierVModuleCatMemSubmoduleOneCocycles","className":"DFunLike"},{"typeNames":["Subtype","Prod","ModuleCat.carrier"],"name":"groupCohomology.instFunLikeSubtypeForallProdCarrierVModuleCatMemSubmoduleTwoCocycles","className":"DFunLike"},{"typeNames":["Subtype","ModuleCat.carrier"],"name":"groupCohomology.instFunLikeSubtypeForallCarrierVModuleCatMemSubmoduleOneCoboundaries","className":"DFunLike"},{"typeNames":["Subtype","Prod","ModuleCat.carrier"],"name":"groupCohomology.instFunLikeSubtypeForallProdCarrierVModuleCatMemSubmoduleTwoCoboundaries","className":"DFunLike"},{"typeNames":["CategoryTheory.ShortComplex.f"],"name":"groupCohomology.instMonoModuleCatFShortComplexH0","className":"CategoryTheory.Mono"}],"imports":["Init","Mathlib.Algebra.Homology.ShortComplex.ModuleCat","Mathlib.RepresentationTheory.GroupCohomology.Basic","Mathlib.RepresentationTheory.Invariants"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L911-L911","name":"groupCohomology.groupCohomologyπ_comp_isoH2_hom_apply","line":911,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH2_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH2_hom_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">groupCohomologyπ_comp_isoH2_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ToType\">CategoryTheory.ToType</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.cocycles\">cocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">2</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH2\">isoH2</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomologyπ\">groupCohomologyπ</a> <span class=\"fn\">A</span> <span class=\"fn\">2</span>)</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Quotient/Defs.html#Submodule.Quotient.mk\">Submodule.Quotient.mk</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles\">isoTwoCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L911-L911","name":"groupCohomology.groupCohomologyπ_comp_isoH2_hom_assoc","line":911,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH2_hom_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH2_hom_assoc\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">groupCohomologyπ_comp_isoH2_hom_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H2\">H2</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomologyπ\">groupCohomologyπ</a> <span class=\"fn\">A</span> <span class=\"fn\">2</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH2\">isoH2</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles\">isoTwoCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H2π\">H2π</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L911-L914","name":"groupCohomology.groupCohomologyπ_comp_isoH2_hom","line":911,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH2_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH2_hom\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">groupCohomologyπ_comp_isoH2_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomologyπ\">groupCohomologyπ</a> <span class=\"fn\">A</span> <span class=\"fn\">2</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH2\">isoH2</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles\">isoTwoCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H2π\">H2π</a> <span class=\"fn\">A</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L905-L909","name":"groupCohomology.isoH2","line":905,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH2","doc":"The 2nd group cohomology of `A`, defined as the 2nd cohomology of the complex of inhomogeneous\ncochains, is isomorphic to `twoCocycles A ⧸ twoCoboundaries A`, which is a simpler type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH2\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoH2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology\">groupCohomology</a> <span class=\"fn\">A</span> <span class=\"fn\">2</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H2\">H2</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L898-L898","name":"groupCohomology.toCocycles_comp_isoTwoCocycles_hom_apply","line":898,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.toCocycles_comp_isoTwoCocycles_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.toCocycles_comp_isoTwoCocycles_hom_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">toCocycles_comp_isoTwoCocycles_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ToType\">CategoryTheory.ToType</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">1</span></span> → <span class=\"fn\">G</span>)</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles\">isoTwoCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.toCocycles\">toCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span>)</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2\">shortComplexH2</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/ModuleCat.html#CategoryTheory.ShortComplex.moduleCatToCycles\">moduleCatToCycles</a></span>)</span>)</span>\n    <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L898-L898","name":"groupCohomology.toCocycles_comp_isoTwoCocycles_hom_assoc","line":898,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.toCocycles_comp_isoTwoCocycles_hom_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.toCocycles_comp_isoTwoCocycles_hom_assoc\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">toCocycles_comp_isoTwoCocycles_hom_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">k</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.toCocycles\">toCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles\">isoTwoCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#LinearEquiv.toModuleIso\">toModuleIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2\">shortComplexH2</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/ModuleCat.html#CategoryTheory.ShortComplex.moduleCatToCycles\">moduleCatToCycles</a></span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L898-L903","name":"groupCohomology.toCocycles_comp_isoTwoCocycles_hom","line":898,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.toCocycles_comp_isoTwoCocycles_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.toCocycles_comp_isoTwoCocycles_hom\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">toCocycles_comp_isoTwoCocycles_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.toCocycles\">toCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles\">isoTwoCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#LinearEquiv.toModuleIso\">toModuleIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2\">shortComplexH2</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/ModuleCat.html#CategoryTheory.ShortComplex.moduleCatToCycles\">moduleCatToCycles</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L891-L891","name":"groupCohomology.isoTwoCocycles_hom_comp_subtype_apply","line":891,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles_hom_comp_subtype_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles_hom_comp_subtype_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoTwoCocycles_hom_comp_subtype_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ToType\">CategoryTheory.ToType</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.cocycles\">cocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">2</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles\">isoTwoCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCochainsLequiv\">twoCochainsLequiv</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.iCocycles\">iCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">2</span>)</span>)</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L891-L891","name":"groupCohomology.isoTwoCocycles_hom_comp_subtype_assoc","line":891,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles_hom_comp_subtype_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles_hom_comp_subtype_assoc\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoTwoCocycles_hom_comp_subtype_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles\">isoTwoCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Submodule/LinearMap.html#Submodule.subtype\">subtype</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.iCocycles\">iCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">2</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCochainsLequiv\">twoCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#LinearEquiv.toModuleIso\">toModuleIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L891-L896","name":"groupCohomology.isoTwoCocycles_hom_comp_subtype","line":891,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles_hom_comp_subtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles_hom_comp_subtype\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoTwoCocycles_hom_comp_subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles\">isoTwoCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Submodule/LinearMap.html#Submodule.subtype\">subtype</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.iCocycles\">iCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">2</span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCochainsLequiv\">twoCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#LinearEquiv.toModuleIso\">toModuleIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L885-L889","name":"groupCohomology.isoTwoCocycles","line":885,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles","doc":"The 2-cocycles of the complex of inhomogeneous cochains of `A` are isomorphic to\n`twoCocycles A`, which is a simpler type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoTwoCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoTwoCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.cocycles\">cocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">2</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">k</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L877-L877","name":"groupCohomology.shortComplexH2Iso_hom","line":877,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2Iso_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2Iso_hom\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">shortComplexH2Iso_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2Iso\">shortComplexH2Iso</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">{ <span class=\"fn\">τ₁</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span></span>, <span class=\"fn\">τ₂</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCochainsLequiv\">twoCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span></span>,\n    <span class=\"fn\">τ₃</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.threeCochainsLequiv\">threeCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span></span>, <span class=\"fn\">comm₁₂</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">comm₂₃</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L877-L877","name":"groupCohomology.shortComplexH2Iso_inv","line":877,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2Iso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2Iso_inv\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">shortComplexH2Iso_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2Iso\">shortComplexH2Iso</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.homMk\">CategoryTheory.ShortComplex.homMk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span></span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCochainsLequiv\">twoCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.threeCochainsLequiv\">threeCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L875-L883","name":"groupCohomology.shortComplexH2Iso","line":875,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2Iso","doc":"The short complex `Fun(G, A) --dOne--> Fun(G × G, A) --dTwo--> Fun(G × G × G, A)` is\nisomorphic to the 2nd short complex associated to the complex of inhomogeneous cochains of `A`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2Iso\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">shortComplexH2Iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.sc'\">HomologicalComplex.sc'</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.inhomogeneousCochains\">inhomogeneousCochains</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span> <span class=\"fn\">3</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2\">shortComplexH2</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L866-L866","name":"groupCohomology.groupCohomologyπ_comp_isoH1_hom_apply","line":866,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH1_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH1_hom_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">groupCohomologyπ_comp_isoH1_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ToType\">CategoryTheory.ToType</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.cocycles\">cocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">1</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH1\">isoH1</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomologyπ\">groupCohomologyπ</a> <span class=\"fn\">A</span> <span class=\"fn\">1</span>)</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Quotient/Defs.html#Submodule.Quotient.mk\">Submodule.Quotient.mk</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles\">isoOneCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L866-L866","name":"groupCohomology.groupCohomologyπ_comp_isoH1_hom_assoc","line":866,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH1_hom_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH1_hom_assoc\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">groupCohomologyπ_comp_isoH1_hom_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1\">H1</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomologyπ\">groupCohomologyπ</a> <span class=\"fn\">A</span> <span class=\"fn\">1</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH1\">isoH1</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles\">isoOneCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1π\">H1π</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L866-L869","name":"groupCohomology.groupCohomologyπ_comp_isoH1_hom","line":866,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH1_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH1_hom\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">groupCohomologyπ_comp_isoH1_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomologyπ\">groupCohomologyπ</a> <span class=\"fn\">A</span> <span class=\"fn\">1</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH1\">isoH1</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles\">isoOneCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1π\">H1π</a> <span class=\"fn\">A</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L860-L864","name":"groupCohomology.isoH1","line":860,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH1","doc":"The 1st group cohomology of `A`, defined as the 1st cohomology of the complex of inhomogeneous\ncochains, is isomorphic to `oneCocycles A ⧸ oneCoboundaries A`, which is a simpler type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH1\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoH1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology\">groupCohomology</a> <span class=\"fn\">A</span> <span class=\"fn\">1</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1\">H1</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L853-L853","name":"groupCohomology.toCocycles_comp_isoOneCocycles_hom_apply","line":853,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.toCocycles_comp_isoOneCocycles_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.toCocycles_comp_isoOneCocycles_hom_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">toCocycles_comp_isoOneCocycles_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ToType\">CategoryTheory.ToType</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">G</span>)</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles\">isoOneCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.toCocycles\">toCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1\">shortComplexH1</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/ModuleCat.html#CategoryTheory.ShortComplex.moduleCatToCycles\">moduleCatToCycles</a></span>)</span>)</span>\n    <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L853-L853","name":"groupCohomology.toCocycles_comp_isoOneCocycles_hom_assoc","line":853,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.toCocycles_comp_isoOneCocycles_hom_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.toCocycles_comp_isoOneCocycles_hom_assoc\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">toCocycles_comp_isoOneCocycles_hom_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">k</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.toCocycles\">toCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles\">isoOneCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#LinearEquiv.toModuleIso\">toModuleIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1\">shortComplexH1</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/ModuleCat.html#CategoryTheory.ShortComplex.moduleCatToCycles\">moduleCatToCycles</a></span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L853-L858","name":"groupCohomology.toCocycles_comp_isoOneCocycles_hom","line":853,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.toCocycles_comp_isoOneCocycles_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.toCocycles_comp_isoOneCocycles_hom\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">toCocycles_comp_isoOneCocycles_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.toCocycles\">toCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles\">isoOneCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#LinearEquiv.toModuleIso\">toModuleIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1\">shortComplexH1</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/ModuleCat.html#CategoryTheory.ShortComplex.moduleCatToCycles\">moduleCatToCycles</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L846-L846","name":"groupCohomology.isoOneCocycles_hom_comp_subtype_apply","line":846,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles_hom_comp_subtype_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles_hom_comp_subtype_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoOneCocycles_hom_comp_subtype_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ToType\">CategoryTheory.ToType</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.cocycles\">cocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">1</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles\">isoOneCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.iCocycles\">iCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">1</span>)</span>)</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L846-L846","name":"groupCohomology.isoOneCocycles_hom_comp_subtype_assoc","line":846,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles_hom_comp_subtype_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles_hom_comp_subtype_assoc\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoOneCocycles_hom_comp_subtype_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles\">isoOneCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Submodule/LinearMap.html#Submodule.subtype\">subtype</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.iCocycles\">iCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">1</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#LinearEquiv.toModuleIso\">toModuleIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L846-L851","name":"groupCohomology.isoOneCocycles_hom_comp_subtype","line":846,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles_hom_comp_subtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles_hom_comp_subtype\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoOneCocycles_hom_comp_subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles\">isoOneCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Submodule/LinearMap.html#Submodule.subtype\">subtype</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.iCocycles\">iCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">1</span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#LinearEquiv.toModuleIso\">toModuleIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L840-L844","name":"groupCohomology.isoOneCocycles","line":840,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles","doc":"The 1-cocycles of the complex of inhomogeneous cochains of `A` are isomorphic to\n`oneCocycles A`, which is a simpler type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoOneCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoOneCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.cocycles\">cocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">1</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">k</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L833-L833","name":"groupCohomology.shortComplexH1Iso_inv","line":833,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1Iso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1Iso_inv\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">shortComplexH1Iso_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1Iso\">shortComplexH1Iso</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.homMk\">CategoryTheory.ShortComplex.homMk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span></span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCochainsLequiv\">twoCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L833-L833","name":"groupCohomology.shortComplexH1Iso_hom","line":833,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1Iso_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1Iso_hom\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">shortComplexH1Iso_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1Iso\">shortComplexH1Iso</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">{ <span class=\"fn\">τ₁</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span></span>, <span class=\"fn\">τ₂</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span></span>,\n    <span class=\"fn\">τ₃</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCochainsLequiv\">twoCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span></span>, <span class=\"fn\">comm₁₂</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">comm₂₃</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L831-L838","name":"groupCohomology.shortComplexH1Iso","line":831,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1Iso","doc":"The short complex `A --dZero--> Fun(G, A) --dOne--> Fun(G × G, A)` is isomorphic to the 1st\nshort complex associated to the complex of inhomogeneous cochains of `A`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1Iso\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">shortComplexH1Iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/HomologicalComplex.html#HomologicalComplex.sc'\">HomologicalComplex.sc'</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.inhomogeneousCochains\">inhomogeneousCochains</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">0</span> <span class=\"fn\">1</span> <span class=\"fn\">2</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1\">shortComplexH1</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L822-L822","name":"groupCohomology.groupCohomologyπ_comp_isoH0_hom_apply","line":822,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH0_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH0_hom_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">groupCohomologyπ_comp_isoH0_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ToType\">CategoryTheory.ToType</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.cocycles\">cocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH0\">isoH0</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomologyπ\">groupCohomologyπ</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span>)</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles\">isoZeroCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L822-L822","name":"groupCohomology.groupCohomologyπ_comp_isoH0_hom_assoc","line":822,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH0_hom_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH0_hom_assoc\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">groupCohomologyπ_comp_isoH0_hom_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0\">H0</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomologyπ\">groupCohomologyπ</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH0\">isoH0</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles\">isoZeroCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L822-L825","name":"groupCohomology.groupCohomologyπ_comp_isoH0_hom","line":822,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH0_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.groupCohomologyπ_comp_isoH0_hom\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">groupCohomologyπ_comp_isoH0_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomologyπ\">groupCohomologyπ</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH0\">isoH0</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles\">isoZeroCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L817-L820","name":"groupCohomology.isoH0","line":817,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH0","doc":"The 0th group cohomology of `A`, defined as the 0th cohomology of the complex of inhomogeneous\ncochains, is isomorphic to the invariants of the representation on `A`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoH0\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoH0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology\">groupCohomology</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0\">H0</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L811-L811","name":"groupCohomology.isoZeroCocycles_inv_comp_iCocycles_apply","line":811,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles_inv_comp_iCocycles_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles_inv_comp_iCocycles_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoZeroCocycles_inv_comp_iCocycles_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ToType\">CategoryTheory.ToType</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0\">H0</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.iCocycles\">iCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span>)</span>)</span>\n    <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles\">isoZeroCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span>.<a href=\"./Mathlib/RepresentationTheory/Invariants.html#Representation.invariants\">invariants</a></span>.<a href=\"./Mathlib/Algebra/Module/Submodule/LinearMap.html#Submodule.subtype\">subtype</a></span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span></span>)</span>)</span>\n    <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L811-L811","name":"groupCohomology.isoZeroCocycles_inv_comp_iCocycles_assoc","line":811,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles_inv_comp_iCocycles_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles_inv_comp_iCocycles_assoc\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoZeroCocycles_inv_comp_iCocycles_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">0</span></span> → <span class=\"fn\">G</span>)</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles\">isoZeroCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.iCocycles\">iCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span>.<a href=\"./Mathlib/RepresentationTheory/Invariants.html#Representation.invariants\">invariants</a></span>.<a href=\"./Mathlib/Algebra/Module/Submodule/LinearMap.html#Submodule.subtype\">subtype</a></span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#LinearEquiv.toModuleIso\">toModuleIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L811-L815","name":"groupCohomology.isoZeroCocycles_inv_comp_iCocycles","line":811,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles_inv_comp_iCocycles","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles_inv_comp_iCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoZeroCocycles_inv_comp_iCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles\">isoZeroCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.iCocycles\">iCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span>.<a href=\"./Mathlib/RepresentationTheory/Invariants.html#Representation.invariants\">invariants</a></span>.<a href=\"./Mathlib/Algebra/Module/Submodule/LinearMap.html#Submodule.subtype\">subtype</a></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#LinearEquiv.toModuleIso\">toModuleIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L804-L804","name":"groupCohomology.isoZeroCocycles_hom_comp_subtype_apply","line":804,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles_hom_comp_subtype_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles_hom_comp_subtype_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoZeroCocycles_hom_comp_subtype_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ToType\">CategoryTheory.ToType</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.cocycles\">cocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles\">isoZeroCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.iCocycles\">iCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span>)</span>)</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L804-L804","name":"groupCohomology.isoZeroCocycles_hom_comp_subtype_assoc","line":804,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles_hom_comp_subtype_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles_hom_comp_subtype_assoc\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoZeroCocycles_hom_comp_subtype_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">k</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles\">isoZeroCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span>.<a href=\"./Mathlib/RepresentationTheory/Invariants.html#Representation.invariants\">invariants</a></span>.<a href=\"./Mathlib/Algebra/Module/Submodule/LinearMap.html#Submodule.subtype\">subtype</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.iCocycles\">iCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#LinearEquiv.toModuleIso\">toModuleIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L804-L809","name":"groupCohomology.isoZeroCocycles_hom_comp_subtype","line":804,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles_hom_comp_subtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles_hom_comp_subtype\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoZeroCocycles_hom_comp_subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles\">isoZeroCocycles</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span>.<a href=\"./Mathlib/RepresentationTheory/Invariants.html#Representation.invariants\">invariants</a></span>.<a href=\"./Mathlib/Algebra/Module/Submodule/LinearMap.html#Submodule.subtype\">subtype</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.iCocycles\">iCocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#LinearEquiv.toModuleIso\">toModuleIso</a></span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L797-L802","name":"groupCohomology.isoZeroCocycles","line":797,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles","doc":"The 0-cocycles of the complex of inhomogeneous cochains of `A` are isomorphic to\n`A.ρ.invariants`, which is a simpler type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isoZeroCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isoZeroCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.cocycles\">cocycles</a> <span class=\"fn\">A</span> <span class=\"fn\">0</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0\">H0</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L791-L791","name":"groupCohomology.dZeroArrowIso_inv_left","line":791,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso_inv_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso_inv_left\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dZeroArrowIso_inv_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso\">dZeroArrowIso</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L791-L791","name":"groupCohomology.dZeroArrowIso_hom_right","line":791,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso_hom_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso_hom_right\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dZeroArrowIso_hom_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso\">dZeroArrowIso</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L791-L791","name":"groupCohomology.dZeroArrowIso_hom_left","line":791,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso_hom_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso_hom_left\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dZeroArrowIso_hom_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso\">dZeroArrowIso</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.left\">left</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L791-L791","name":"groupCohomology.dZeroArrowIso_inv_right","line":791,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso_inv_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso_inv_right\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dZeroArrowIso_inv_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso\">dZeroArrowIso</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Comma/Basic.html#CategoryTheory.CommaMorphism.right\">right</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L789-L795","name":"groupCohomology.dZeroArrowIso","line":789,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso","doc":"The arrow `A --dZero--> Fun(G, A)` is isomorphic to the differential\n`(inhomogeneousCochains A).d 0 1` of the complex of inhomogeneous cochains of `A`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZeroArrowIso\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dZeroArrowIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">CategoryTheory.Arrow.mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.inhomogeneousCochains\">inhomogeneousCochains</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">d</a></span> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Arrow.html#CategoryTheory.Arrow.mk\">CategoryTheory.Arrow.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.ofHom\">ModuleCat.ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero\">dZero</a> <span class=\"fn\">A</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L782-L787","name":"groupCohomology.shortComplexH0_exact","line":782,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH0_exact","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH0_exact\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">shortComplexH0_exact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH0\">shortComplexH0</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Exact.html#CategoryTheory.ShortComplex.Exact\">Exact</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L778-L780","name":"groupCohomology.instMonoModuleCatFShortComplexH0","line":778,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.instMonoModuleCatFShortComplexH0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.instMonoModuleCatFShortComplexH0\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">instMonoModuleCatFShortComplexH0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH0\">shortComplexH0</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.f\">f</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L766-L768","name":"groupCohomology.H1LequivOfIsTrivial_symm_apply","line":766,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1LequivOfIsTrivial_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1LequivOfIsTrivial_symm_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H1LequivOfIsTrivial_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive\">Additive</a> <span class=\"fn\">G</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1LequivOfIsTrivial\">H1LequivOfIsTrivial</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1π\">H1π</a> <span class=\"fn\">A</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesLequivOfIsTrivial\">oneCocyclesLequivOfIsTrivial</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L762-L764","name":"groupCohomology.H1LequivOfIsTrivial_H1_π_apply_apply","line":762,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1LequivOfIsTrivial_H1_π_apply_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1LequivOfIsTrivial_H1_π_apply_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H1LequivOfIsTrivial_H1_π_apply_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive\">Additive</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1LequivOfIsTrivial\">H1LequivOfIsTrivial</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/LinearAlgebra/Quotient/Defs.html#Submodule.Quotient.mk\">Submodule.Quotient.mk</a> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive.toMul\">Additive.toMul</a> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L758-L760","name":"groupCohomology.H1LequivOfIsTrivial_comp_H1π","line":758,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1LequivOfIsTrivial_comp_H1π","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1LequivOfIsTrivial_comp_H1π\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H1LequivOfIsTrivial_comp_H1π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1LequivOfIsTrivial\">H1LequivOfIsTrivial</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.comp\">∘ₗ</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.Hom.hom\">ModuleCat.Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1π\">H1π</a> <span class=\"fn\">A</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesLequivOfIsTrivial\">oneCocyclesLequivOfIsTrivial</a> <span class=\"fn\">A</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L750-L756","name":"groupCohomology.H1LequivOfIsTrivial","line":750,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1LequivOfIsTrivial","doc":"When `A : Rep k G` is a trivial representation of `G`, `H¹(G, A)` is isomorphic to the\ngroup homs `G → A`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1LequivOfIsTrivial\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H1LequivOfIsTrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1\">H1</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive\">Additive</a> <span class=\"fn\">G</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L743-L744","name":"groupCohomology.H0LequivOfIsTrivial_symm_apply","line":743,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0LequivOfIsTrivial_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0LequivOfIsTrivial_symm_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H0LequivOfIsTrivial_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0LequivOfIsTrivial\">H0LequivOfIsTrivial</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L740-L741","name":"groupCohomology.H0LequivOfIsTrivial_apply","line":740,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0LequivOfIsTrivial_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0LequivOfIsTrivial_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H0LequivOfIsTrivial_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0\">H0</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0LequivOfIsTrivial\">H0LequivOfIsTrivial</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L737-L738","name":"groupCohomology.H0LequivOfIsTrivial_eq_subtype","line":737,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0LequivOfIsTrivial_eq_subtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0LequivOfIsTrivial_eq_subtype\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H0LequivOfIsTrivial_eq_subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0LequivOfIsTrivial\">H0LequivOfIsTrivial</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span>.<a href=\"./Mathlib/RepresentationTheory/Invariants.html#Representation.invariants\">invariants</a></span>.<a href=\"./Mathlib/Algebra/Module/Submodule/LinearMap.html#Submodule.subtype\">subtype</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L733-L735","name":"groupCohomology.H0LequivOfIsTrivial","line":733,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0LequivOfIsTrivial","doc":"When the representation on `A` is trivial, then `H⁰(G, A)` is all of `A.` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0LequivOfIsTrivial\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H0LequivOfIsTrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0\">H0</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L725-L727","name":"groupCohomology.H2π_eq_zero_iff","line":725,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H2π_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H2π_eq_zero_iff\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H2π_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H2π\">H2π</a> <span class=\"fn\">A</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">⇑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\">twoCoboundaries</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L721-L722","name":"groupCohomology.H2π","line":721,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H2π","doc":"The quotient map `Z²(G, A) → H²(G, A).` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H2π\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H2π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">k</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H2\">H2</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L716-L719","name":"groupCohomology.H2","line":716,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H2","doc":"We define the 2nd group cohomology of a `k`-linear `G`-representation `A`, `H²(G, A)`, to be\n2-cocycles (i.e. `Z²(G, A) := Ker(d² : Fun(G², A) → Fun(G³, A)`) modulo 2-coboundaries\n(i.e. `B²(G, A) := Im(d¹: Fun(G, A) → Fun(G², A))`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H2\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L712-L714","name":"groupCohomology.H1π_eq_zero_iff","line":712,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1π_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1π_eq_zero_iff\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H1π_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1π\">H1π</a> <span class=\"fn\">A</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">⇑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L708-L709","name":"groupCohomology.H1π","line":708,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1π","doc":"The quotient map `Z¹(G, A) → H¹(G, A).` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1π\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H1π</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.of\">ModuleCat.of</a> <span class=\"fn\">k</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1\">H1</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L703-L706","name":"groupCohomology.H1","line":703,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1","doc":"We define the 1st group cohomology of a `k`-linear `G`-representation `A`, `H¹(G, A)`, to be\n1-cocycles (i.e. `Z¹(G, A) := Ker(d¹ : Fun(G, A) → Fun(G², A)`) modulo 1-coboundaries\n(i.e. `B¹(G, A) := Im(d⁰: A → Fun(G, A))`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H1\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L699-L701","name":"groupCohomology.H0","line":699,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0","doc":"We define the 0th group cohomology of a `k`-linear `G`-representation `A`, `H⁰(G, A)`, to be\nthe invariants of the representation, `Aᴳ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.H0\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">H0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L689-L693","name":"groupCohomology.isMulTwoCoboundary_of_mem_twoCoboundaries","line":689,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isMulTwoCoboundary_of_mem_twoCoboundaries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isMulTwoCoboundary_of_mem_twoCoboundaries\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isMulTwoCoboundary_of_mem_twoCoboundaries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulDistribMulAction\">MulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\">twoCoboundaries</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofMulDistribMulAction\">Rep.ofMulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulTwoCoboundary\">IsMulTwoCoboundary</a> (<span class=\"fn\">⇑<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive.toMul\">Additive.toMul</a></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L682-L687","name":"groupCohomology.twoCoboundariesOfIsMulTwoCoboundary","line":682,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundariesOfIsMulTwoCoboundary","doc":"Given an abelian group `M` with a `MulDistribMulAction` of `G`, and a function\n`f : G × G → M` satisfying the multiplicative 2-coboundary condition, produces a\n2-coboundary for the representation on `M` induced by the `MulDistribMulAction`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundariesOfIsMulTwoCoboundary\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCoboundariesOfIsMulTwoCoboundary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulDistribMulAction\">MulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulTwoCoboundary\">IsMulTwoCoboundary</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\">twoCoboundaries</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofMulDistribMulAction\">Rep.ofMulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L677-L680","name":"groupCohomology.isMulTwoCocycle_of_mem_twoCocycles","line":677,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isMulTwoCocycle_of_mem_twoCocycles","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isMulTwoCocycle_of_mem_twoCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isMulTwoCocycle_of_mem_twoCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulDistribMulAction\">MulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofMulDistribMulAction\">Rep.ofMulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulTwoCocycle\">IsMulTwoCocycle</a> (<span class=\"fn\">⇑<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive.toMul\">Additive.toMul</a></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L672-L672","name":"groupCohomology.twoCocyclesOfIsMulTwoCocycle_coe","line":672,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocyclesOfIsMulTwoCocycle_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocyclesOfIsMulTwoCocycle_coe\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCocyclesOfIsMulTwoCocycle_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulDistribMulAction\">MulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulTwoCocycle\">IsMulTwoCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocyclesOfIsMulTwoCocycle\">twoCocyclesOfIsMulTwoCocycle</a> <span class=\"fn\">hf</span>)</span></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">⇑<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive.ofMul\">Additive.ofMul</a></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>) <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L669-L675","name":"groupCohomology.twoCocyclesOfIsMulTwoCocycle","line":669,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocyclesOfIsMulTwoCocycle","doc":"Given an abelian group `M` with a `MulDistribMulAction` of `G`, and a function\n`f : G × G → M` satisfying the multiplicative 2-cocycle condition, produces a 2-cocycle for the\nrepresentation on `Additive M` induced by the `MulDistribMulAction`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocyclesOfIsMulTwoCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCocyclesOfIsMulTwoCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulDistribMulAction\">MulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulTwoCocycle\">IsMulTwoCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofMulDistribMulAction\">Rep.ofMulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L663-L667","name":"groupCohomology.isMulOneCoboundary_of_mem_oneCoboundaries","line":663,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isMulOneCoboundary_of_mem_oneCoboundaries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isMulOneCoboundary_of_mem_oneCoboundaries\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isMulOneCoboundary_of_mem_oneCoboundaries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulDistribMulAction\">MulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofMulDistribMulAction\">Rep.ofMulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulOneCoboundary\">IsMulOneCoboundary</a> (<span class=\"fn\">⇑<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive.ofMul\">Additive.ofMul</a></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L658-L658","name":"groupCohomology.oneCoboundariesOfIsMulOneCoboundary_coe","line":658,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesOfIsMulOneCoboundary_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesOfIsMulOneCoboundary_coe\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCoboundariesOfIsMulOneCoboundary_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulDistribMulAction\">MulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulOneCoboundary\">IsMulOneCoboundary</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesOfIsMulOneCoboundary\">oneCoboundariesOfIsMulOneCoboundary</a> <span class=\"fn\">hf</span>)</span></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L655-L661","name":"groupCohomology.oneCoboundariesOfIsMulOneCoboundary","line":655,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesOfIsMulOneCoboundary","doc":"Given an abelian group `M` with a `MulDistribMulAction` of `G`, and a function\n`f : G → M` satisfying the multiplicative 1-coboundary condition, produces a\n1-coboundary for the representation on `Additive M` induced by the `MulDistribMulAction`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesOfIsMulOneCoboundary\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCoboundariesOfIsMulOneCoboundary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulDistribMulAction\">MulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulOneCoboundary\">IsMulOneCoboundary</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofMulDistribMulAction\">Rep.ofMulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L650-L653","name":"groupCohomology.isMulOneCocycle_of_mem_oneCocycles","line":650,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isMulOneCocycle_of_mem_oneCocycles","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isMulOneCocycle_of_mem_oneCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isMulOneCocycle_of_mem_oneCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulDistribMulAction\">MulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofMulDistribMulAction\">Rep.ofMulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulOneCocycle\">IsMulOneCocycle</a> (<span class=\"fn\">⇑<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive.toMul\">Additive.toMul</a></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L645-L645","name":"groupCohomology.oneCocyclesOfIsMulOneCocycle_coe","line":645,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesOfIsMulOneCocycle_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesOfIsMulOneCocycle_coe\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocyclesOfIsMulOneCocycle_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulDistribMulAction\">MulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulOneCocycle\">IsMulOneCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesOfIsMulOneCocycle\">oneCocyclesOfIsMulOneCocycle</a> <span class=\"fn\">hf</span>)</span></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">⇑<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive.ofMul\">Additive.ofMul</a></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span>) <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L642-L648","name":"groupCohomology.oneCocyclesOfIsMulOneCocycle","line":642,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesOfIsMulOneCocycle","doc":"Given an abelian group `M` with a `MulDistribMulAction` of `G`, and a function\n`f : G → M` satisfying the multiplicative 1-cocycle condition, produces a 1-cocycle for the\nrepresentation on `Additive M` induced by the `MulDistribMulAction`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesOfIsMulOneCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocyclesOfIsMulOneCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G </span><span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulDistribMulAction\">MulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulOneCocycle\">IsMulOneCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofMulDistribMulAction\">Rep.ofMulDistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L631-L634","name":"groupCohomology.IsMulTwoCoboundary","line":631,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulTwoCoboundary","doc":"A function `f : G × G → M` satisfies the 2-coboundary condition if there's `x : G → M` such\nthat `g • x(h) / x(gh) * x(g) = f(g, h)` for all `g, h : G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulTwoCoboundary\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">IsMulTwoCoboundary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L627-L629","name":"groupCohomology.IsMulOneCoboundary","line":627,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulOneCoboundary","doc":"A function `f : G → M` satisfies the multiplicative 1-coboundary condition if there's `x : M`\nsuch that `g • x / x = f(g)` for all `g : G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulOneCoboundary\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">IsMulOneCoboundary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L612-L617","name":"groupCohomology.smul_map_inv_div_map_inv_of_isMulTwoCocycle","line":612,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.smul_map_inv_div_map_inv_of_isMulTwoCocycle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.smul_map_inv_div_map_inv_of_isMulTwoCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">smul_map_inv_div_map_inv_of_isMulTwoCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulTwoCocycle\">IsMulTwoCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L608-L610","name":"groupCohomology.map_inv_of_isMulOneCocycle","line":608,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_inv_of_isMulOneCocycle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_inv_of_isMulOneCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">map_inv_of_isMulOneCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulOneCocycle\">IsMulOneCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L598-L600","name":"groupCohomology.map_one_snd_of_isMulTwoCocycle","line":598,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_one_snd_of_isMulTwoCocycle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_one_snd_of_isMulTwoCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">map_one_snd_of_isMulTwoCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulTwoCocycle\">IsMulTwoCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L594-L596","name":"groupCohomology.map_one_fst_of_isMulTwoCocycle","line":594,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_one_fst_of_isMulTwoCocycle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_one_fst_of_isMulTwoCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">map_one_fst_of_isMulTwoCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulTwoCocycle\">IsMulTwoCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L590-L592","name":"groupCohomology.map_one_of_isMulOneCocycle","line":590,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_one_of_isMulOneCocycle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_one_of_isMulOneCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">map_one_of_isMulOneCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulOneCocycle\">IsMulOneCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L579-L582","name":"groupCohomology.IsMulTwoCocycle","line":579,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulTwoCocycle","doc":"A function `f : G × G → M` satisfies the multiplicative 2-cocycle condition if\n`f(gh, j) * f(g, h) = g • f(h, j) * f(g, hj)` for all `g, h : G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulTwoCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">IsMulTwoCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L575-L577","name":"groupCohomology.IsMulOneCocycle","line":575,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulOneCocycle","doc":"A function `f : G → M` satisfies the multiplicative 1-cocycle condition if\n`f(gh) = g • f(h) * f(g)` for all `g, h : G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsMulOneCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">IsMulOneCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">G</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">M</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L557-L561","name":"groupCohomology.isTwoCoboundary_of_mem_twoCoboundaries","line":557,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isTwoCoboundary_of_mem_twoCoboundaries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isTwoCoboundary_of_mem_twoCoboundaries\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isTwoCoboundary_of_mem_twoCoboundaries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">G</span> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\">twoCoboundaries</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofDistribMulAction\">Rep.ofDistribMulAction</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsTwoCoboundary\">IsTwoCoboundary</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L552-L552","name":"groupCohomology.twoCoboundariesOfIsTwoCoboundary_coe","line":552,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundariesOfIsTwoCoboundary_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundariesOfIsTwoCoboundary_coe\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCoboundariesOfIsTwoCoboundary_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">G</span> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsTwoCoboundary\">IsTwoCoboundary</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundariesOfIsTwoCoboundary\">twoCoboundariesOfIsTwoCoboundary</a> <span class=\"fn\">hf</span>)</span></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L549-L555","name":"groupCohomology.twoCoboundariesOfIsTwoCoboundary","line":549,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundariesOfIsTwoCoboundary","doc":"Given a `k`-module `A` with a compatible `DistribMulAction` of `G`, and a function\n`f : G × G → A` satisfying the 2-coboundary condition, produces a 2-coboundary for the\nrepresentation on `A` induced by the `DistribMulAction`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundariesOfIsTwoCoboundary\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCoboundariesOfIsTwoCoboundary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">G</span> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsTwoCoboundary\">IsTwoCoboundary</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\">twoCoboundaries</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofDistribMulAction\">Rep.ofDistribMulAction</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">A</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L545-L547","name":"groupCohomology.isTwoCocycle_of_mem_twoCocycles","line":545,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isTwoCocycle_of_mem_twoCocycles","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isTwoCocycle_of_mem_twoCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isTwoCocycle_of_mem_twoCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">G</span> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofDistribMulAction\">Rep.ofDistribMulAction</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsTwoCocycle\">IsTwoCocycle</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L540-L540","name":"groupCohomology.twoCocyclesOfIsTwoCocycle_coe","line":540,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocyclesOfIsTwoCocycle_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocyclesOfIsTwoCocycle_coe\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCocyclesOfIsTwoCocycle_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">G</span> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsTwoCocycle\">IsTwoCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocyclesOfIsTwoCocycle\">twoCocyclesOfIsTwoCocycle</a> <span class=\"fn\">hf</span>)</span></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L537-L543","name":"groupCohomology.twoCocyclesOfIsTwoCocycle","line":537,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocyclesOfIsTwoCocycle","doc":"Given a `k`-module `A` with a compatible `DistribMulAction` of `G`, and a function\n`f : G × G → A` satisfying the 2-cocycle condition, produces a 2-cocycle for the representation on\n`A` induced by the `DistribMulAction`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocyclesOfIsTwoCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCocyclesOfIsTwoCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">G</span> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsTwoCocycle\">IsTwoCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofDistribMulAction\">Rep.ofDistribMulAction</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">A</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L531-L535","name":"groupCohomology.isOneCoboundary_of_mem_oneCoboundaries","line":531,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isOneCoboundary_of_mem_oneCoboundaries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isOneCoboundary_of_mem_oneCoboundaries\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isOneCoboundary_of_mem_oneCoboundaries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">G</span> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofDistribMulAction\">Rep.ofDistribMulAction</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsOneCoboundary\">IsOneCoboundary</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L526-L526","name":"groupCohomology.oneCoboundariesOfIsOneCoboundary_coe","line":526,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesOfIsOneCoboundary_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesOfIsOneCoboundary_coe\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCoboundariesOfIsOneCoboundary_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">G</span> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsOneCoboundary\">IsOneCoboundary</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesOfIsOneCoboundary\">oneCoboundariesOfIsOneCoboundary</a> <span class=\"fn\">hf</span>)</span></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L523-L529","name":"groupCohomology.oneCoboundariesOfIsOneCoboundary","line":523,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesOfIsOneCoboundary","doc":"Given a `k`-module `A` with a compatible `DistribMulAction` of `G`, and a function\n`f : G → A` satisfying the 1-coboundary condition, produces a 1-coboundary for the representation\non `A` induced by the `DistribMulAction`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesOfIsOneCoboundary\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCoboundariesOfIsOneCoboundary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">G</span> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsOneCoboundary\">IsOneCoboundary</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofDistribMulAction\">Rep.ofDistribMulAction</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">A</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L518-L521","name":"groupCohomology.isOneCocycle_of_mem_oneCocycles","line":518,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isOneCocycle_of_mem_oneCocycles","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.isOneCocycle_of_mem_oneCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">isOneCocycle_of_mem_oneCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">G</span> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofDistribMulAction\">Rep.ofDistribMulAction</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsOneCocycle\">IsOneCocycle</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L513-L513","name":"groupCohomology.oneCocyclesOfIsOneCocycle_coe","line":513,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesOfIsOneCocycle_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesOfIsOneCocycle_coe\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocyclesOfIsOneCocycle_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">G</span> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsOneCocycle\">IsOneCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesOfIsOneCocycle\">oneCocyclesOfIsOneCocycle</a> <span class=\"fn\">hf</span>)</span></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L510-L516","name":"groupCohomology.oneCocyclesOfIsOneCocycle","line":510,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesOfIsOneCocycle","doc":"Given a `k`-module `A` with a compatible `DistribMulAction` of `G`, and a function\n`f : G → A` satisfying the 1-cocycle condition, produces a 1-cocycle for the representation on\n`A` induced by the `DistribMulAction`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesOfIsOneCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocyclesOfIsOneCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G </span><span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Action/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">G</span> <span class=\"fn\">k</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsOneCocycle\">IsOneCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ofDistribMulAction\">Rep.ofDistribMulAction</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span> <span class=\"fn\">A</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L498-L501","name":"groupCohomology.IsTwoCoboundary","line":498,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsTwoCoboundary","doc":"A function `f : G × G → A` satisfies the 2-coboundary condition if there's `x : G → A` such\nthat `g • x(h) - x(gh) + x(g) = f(g, h)` for all `g, h : G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsTwoCoboundary\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">IsTwoCoboundary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L494-L496","name":"groupCohomology.IsOneCoboundary","line":494,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsOneCoboundary","doc":"A function `f : G → A` satisfies the 1-coboundary condition if there's `x : A` such that\n`g • x - x = f(g)` for all `g : G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsOneCoboundary\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">IsOneCoboundary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L480-L484","name":"groupCohomology.smul_map_inv_sub_map_inv_of_isTwoCocycle","line":480,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.smul_map_inv_sub_map_inv_of_isTwoCocycle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.smul_map_inv_sub_map_inv_of_isTwoCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">smul_map_inv_sub_map_inv_of_isTwoCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsTwoCocycle\">IsTwoCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L476-L478","name":"groupCohomology.map_inv_of_isOneCocycle","line":476,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_inv_of_isOneCocycle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_inv_of_isOneCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">map_inv_of_isOneCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsOneCocycle\">IsOneCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L466-L468","name":"groupCohomology.map_one_snd_of_isTwoCocycle","line":466,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_one_snd_of_isTwoCocycle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_one_snd_of_isTwoCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">map_one_snd_of_isTwoCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsTwoCocycle\">IsTwoCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L462-L464","name":"groupCohomology.map_one_fst_of_isTwoCocycle","line":462,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_one_fst_of_isTwoCocycle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_one_fst_of_isTwoCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">map_one_fst_of_isTwoCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsTwoCocycle\">IsTwoCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L458-L460","name":"groupCohomology.map_one_of_isOneCocycle","line":458,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_one_of_isOneCocycle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.map_one_of_isOneCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">map_one_of_isOneCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsOneCocycle\">IsOneCocycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L447-L450","name":"groupCohomology.IsTwoCocycle","line":447,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsTwoCocycle","doc":"A function `f : G × G → A` satisfies the 2-cocycle condition if\n`f(gh, j) + f(g, h) = g • f(h, j) + f(g, hj)` for all `g, h : G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsTwoCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">IsTwoCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L443-L445","name":"groupCohomology.IsOneCocycle","line":443,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsOneCocycle","doc":"A function `f : G → A` satisfies the 1-cocycle condition if\n`f(gh) = g • f(h) + f(g)` for all `g, h : G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.IsOneCocycle\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">IsOneCocycle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L431-L433","name":"groupCohomology.twoCoboundariesToTwoCocycles_apply","line":431,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundariesToTwoCocycles_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundariesToTwoCocycles_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCoboundariesToTwoCocycles_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\">twoCoboundaries</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundariesToTwoCocycles\">twoCoboundariesToTwoCocycles</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L427-L429","name":"groupCohomology.twoCoboundariesToTwoCocycles","line":427,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundariesToTwoCocycles","doc":"Natural inclusion `B²(G, A) →ₗ[k] Z²(G, A)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundariesToTwoCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCoboundariesToTwoCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\">twoCoboundaries</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L422-L424","name":"groupCohomology.twoCoboundaries_le_twoCocycles","line":422,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries_le_twoCocycles","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries_le_twoCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCoboundaries_le_twoCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\">twoCoboundaries</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L416-L416","name":"groupCohomology.twoCoboundaries_ext_iff","line":416,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries_ext_iff\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCoboundaries_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\">twoCoboundaries</a> <span class=\"fn\">A</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">g </span><span class=\"fn\">h</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L416-L419","name":"groupCohomology.twoCoboundaries_ext","line":416,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries_ext\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCoboundaries_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\">twoCoboundaries</a> <span class=\"fn\">A</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">g </span><span class=\"fn\">h</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L413-L414","name":"groupCohomology.twoCoboundaries.val_eq_coe","line":413,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries.val_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries.val_eq_coe\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCoboundaries</span>.<span class=\"name\">val_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\">twoCoboundaries</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L409-L411","name":"groupCohomology.twoCoboundaries.coe_mk","line":409,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries.coe_mk\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCoboundaries</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\">twoCoboundaries</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L407-L407","name":"groupCohomology.instFunLikeSubtypeForallProdCarrierVModuleCatMemSubmoduleTwoCoboundaries","line":407,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.instFunLikeSubtypeForallProdCarrierVModuleCatMemSubmoduleTwoCoboundaries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.instFunLikeSubtypeForallProdCarrierVModuleCatMemSubmoduleTwoCoboundaries\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">instFunLikeSubtypeForallProdCarrierVModuleCatMemSubmoduleTwoCoboundaries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\">twoCoboundaries</a> <span class=\"fn\">A</span>)</span>)</span> (<span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span>) <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L402-L405","name":"groupCohomology.oneCoboundaries_eq_bot_of_isTrivial","line":402,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries_eq_bot_of_isTrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries_eq_bot_of_isTrivial\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCoboundaries_eq_bot_of_isTrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L398-L400","name":"groupCohomology.oneCoboundariesToOneCocycles_apply","line":398,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesToOneCocycles_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesToOneCocycles_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCoboundariesToOneCocycles_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesToOneCocycles\">oneCoboundariesToOneCocycles</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L394-L396","name":"groupCohomology.oneCoboundariesToOneCocycles","line":394,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesToOneCocycles","doc":"Natural inclusion `B¹(G, A) →ₗ[k] Z¹(G, A)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundariesToOneCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCoboundariesToOneCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L389-L391","name":"groupCohomology.oneCoboundaries_le_oneCocycles","line":389,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries_le_oneCocycles","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries_le_oneCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCoboundaries_le_oneCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L384-L384","name":"groupCohomology.oneCoboundaries_ext_iff","line":384,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries_ext_iff\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCoboundaries_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">A</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L384-L386","name":"groupCohomology.oneCoboundaries_ext","line":384,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries_ext\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCoboundaries_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">A</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L381-L382","name":"groupCohomology.oneCoboundaries.val_eq_coe","line":381,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries.val_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries.val_eq_coe\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCoboundaries</span>.<span class=\"name\">val_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L377-L379","name":"groupCohomology.oneCoboundaries.coe_mk","line":377,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries.coe_mk\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCoboundaries</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L375-L375","name":"groupCohomology.instFunLikeSubtypeForallCarrierVModuleCatMemSubmoduleOneCoboundaries","line":375,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.instFunLikeSubtypeForallCarrierVModuleCatMemSubmoduleOneCoboundaries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.instFunLikeSubtypeForallCarrierVModuleCatMemSubmoduleOneCoboundaries\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">instFunLikeSubtypeForallCarrierVModuleCatMemSubmoduleOneCoboundaries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\">oneCoboundaries</a> <span class=\"fn\">A</span>)</span>)</span> <span class=\"fn\">G</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L368-L371","name":"groupCohomology.twoCoboundaries","line":368,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries","doc":"The 2-coboundaries `B²(G, A)` of `A : Rep k G`, defined as the image of the map\n`Fun(G, A) → Fun(G × G, A)` sending `(f, (g₁, g₂)) ↦ ρ_A(g₁)(f(g₂)) - f(g₁g₂) + f(g₁).` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCoboundaries\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCoboundaries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L363-L366","name":"groupCohomology.oneCoboundaries","line":363,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries","doc":"The 1-coboundaries `B¹(G, A)` of `A : Rep k G`, defined as the image of the map\n`A → Fun(G, A)` sending `(a, g) ↦ ρ_A(g)(a) - a.` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCoboundaries\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCoboundaries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L355-L357","name":"groupCohomology.dOne_apply_mem_twoCocycles","line":355,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne_apply_mem_twoCocycles","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne_apply_mem_twoCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dOne_apply_mem_twoCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne\">dOne</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L347-L353","name":"groupCohomology.twoCocycles_ρ_map_inv_sub_map_inv","line":347,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles_ρ_map_inv_sub_map_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles_ρ_map_inv_sub_map_inv\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCocycles_ρ_map_inv_sub_map_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L342-L345","name":"groupCohomology.twoCocycles_map_one_snd","line":342,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles_map_one_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles_map_one_snd\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCocycles_map_one_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L337-L340","name":"groupCohomology.twoCocycles_map_one_fst","line":337,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles_map_one_fst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles_map_one_fst\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCocycles_map_one_fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L330-L335","name":"groupCohomology.mem_twoCocycles_iff","line":330,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.mem_twoCocycles_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.mem_twoCocycles_iff\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">mem_twoCocycles_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">g </span><span class=\"fn\">h </span><span class=\"fn\">j</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L323-L328","name":"groupCohomology.mem_twoCocycles_def","line":323,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.mem_twoCocycles_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.mem_twoCocycles_def\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">mem_twoCocycles_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">g </span><span class=\"fn\">h </span><span class=\"fn\">j</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">h</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">j</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L319-L319","name":"groupCohomology.twoCocycles_ext_iff","line":319,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles_ext_iff\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCocycles_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">g </span><span class=\"fn\">h</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L319-L321","name":"groupCohomology.twoCocycles_ext","line":319,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles_ext\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCocycles_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">g </span><span class=\"fn\">h</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">h</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L316-L317","name":"groupCohomology.twoCocycles.val_eq_coe","line":316,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles.val_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles.val_eq_coe\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCocycles</span>.<span class=\"name\">val_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L313-L314","name":"groupCohomology.twoCocycles.coe_mk","line":313,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles.coe_mk\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCocycles</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L311-L311","name":"groupCohomology.instFunLikeSubtypeForallProdCarrierVModuleCatMemSubmoduleTwoCocycles","line":311,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.instFunLikeSubtypeForallProdCarrierVModuleCatMemSubmoduleTwoCocycles","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.instFunLikeSubtypeForallProdCarrierVModuleCatMemSubmoduleTwoCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">instFunLikeSubtypeForallProdCarrierVModuleCatMemSubmoduleTwoCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\">twoCocycles</a> <span class=\"fn\">A</span>)</span>)</span> (<span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span>) <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L297-L297","name":"groupCohomology.oneCocyclesLequivOfIsTrivial_apply_apply","line":297,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesLequivOfIsTrivial_apply_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesLequivOfIsTrivial_apply_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocyclesLequivOfIsTrivial_apply_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hA</span> : <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive\">Additive</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesLequivOfIsTrivial\">oneCocyclesLequivOfIsTrivial</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive.toMul\">Additive.toMul</a></span>) <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L297-L297","name":"groupCohomology.oneCocyclesLequivOfIsTrivial_symm_apply_coe","line":297,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesLequivOfIsTrivial_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesLequivOfIsTrivial_symm_apply_coe\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocyclesLequivOfIsTrivial_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hA</span> : <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive\">Additive</a> <span class=\"fn\">G</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive\">Additive</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesLequivOfIsTrivial\">oneCocyclesLequivOfIsTrivial</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv.symm\">symm</a></span> <span class=\"fn\">f</span>)</span></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L295-L309","name":"groupCohomology.oneCocyclesLequivOfIsTrivial","line":295,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesLequivOfIsTrivial","doc":"When `A : Rep k G` is a trivial representation of `G`, `Z¹(G, A)` is isomorphic to the\ngroup homs `G → A`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocyclesLequivOfIsTrivial\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocyclesLequivOfIsTrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">hA</span> : <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive\">Additive</a> <span class=\"fn\">G</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L287-L292","name":"groupCohomology.mem_oneCocycles_of_addMonoidHom","line":287,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.mem_oneCocycles_of_addMonoidHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.mem_oneCocycles_of_addMonoidHom\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">mem_oneCocycles_of_addMonoidHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive\">Additive</a> <span class=\"fn\">G</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive.ofMul\">Additive.ofMul</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L283-L285","name":"groupCohomology.oneCocycles_map_mul_of_isTrivial","line":283,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles_map_mul_of_isTrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles_map_mul_of_isTrivial\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocycles_map_mul_of_isTrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g </span><span class=\"fn\">h</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L279-L281","name":"groupCohomology.dZero_apply_mem_oneCocycles","line":279,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero_apply_mem_oneCocycles","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero_apply_mem_oneCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dZero_apply_mem_oneCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero\">dZero</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L274-L277","name":"groupCohomology.oneCocycles_map_inv","line":274,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles_map_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles_map_inv\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocycles_map_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">g</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L270-L272","name":"groupCohomology.oneCocycles_map_one","line":270,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles_map_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles_map_one\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocycles_map_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L266-L268","name":"groupCohomology.mem_oneCocycles_iff","line":266,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.mem_oneCocycles_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.mem_oneCocycles_iff\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">mem_oneCocycles_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">g </span><span class=\"fn\">h</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L260-L264","name":"groupCohomology.mem_oneCocycles_def","line":260,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.mem_oneCocycles_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.mem_oneCocycles_def\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">mem_oneCocycles_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">g </span><span class=\"fn\">h</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">h</span>)</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L256-L256","name":"groupCohomology.oneCocycles_ext_iff","line":256,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles_ext_iff\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocycles_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L256-L258","name":"groupCohomology.oneCocycles_ext","line":256,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles_ext\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocycles_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L253-L254","name":"groupCohomology.oneCocycles.val_eq_coe","line":253,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles.val_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles.val_eq_coe\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocycles</span>.<span class=\"name\">val_eq_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L250-L251","name":"groupCohomology.oneCocycles.coe_mk","line":250,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles.coe_mk\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocycles</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L248-L248","name":"groupCohomology.instFunLikeSubtypeForallCarrierVModuleCatMemSubmoduleOneCocycles","line":248,"kind":"instance","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.instFunLikeSubtypeForallCarrierVModuleCatMemSubmoduleOneCocycles","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.instFunLikeSubtypeForallCarrierVModuleCatMemSubmoduleOneCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">instFunLikeSubtypeForallCarrierVModuleCatMemSubmoduleOneCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">(↥<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\">oneCocycles</a> <span class=\"fn\">A</span>)</span>)</span> <span class=\"fn\">G</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L241-L244","name":"groupCohomology.twoCocycles","line":241,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles","doc":"The 2-cocycles `Z²(G, A)` of `A : Rep k G`, defined as the kernel of the map\n`Fun(G × G, A) → Fun(G × G × G, A)` sending\n`(f, (g₁, g₂, g₃)) ↦ ρ_A(g₁)(f(g₂, g₃)) - f(g₁g₂, g₃) + f(g₁, g₂g₃) - f(g₁, g₂).` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L237-L239","name":"groupCohomology.oneCocycles","line":237,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles","doc":"The 1-cocycles `Z¹(G, A)` of `A : Rep k G`, defined as the kernel of the map\n`Fun(G, A) → Fun(G × G, A)` sending `(f, (g₁, g₂)) ↦ ρ_A(g₁)(f(g₂)) - f(g₁g₂) + f(g₁).` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCocycles\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCocycles</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Defs.html#Submodule\">Submodule</a> <span class=\"fn\">k</span> <span class=\"fn\">(<span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L229-L231","name":"groupCohomology.shortComplexH2","line":229,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2","doc":"The short complex `Fun(G, A) --dOne--> Fun(G × G, A) --dTwo--> Fun(G × G × G, A)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH2\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">shortComplexH2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex\">CategoryTheory.ShortComplex</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L225-L227","name":"groupCohomology.shortComplexH1","line":225,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1","doc":"The short complex `A --dZero--> Fun(G, A) --dOne--> Fun(G × G, A)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH1\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">shortComplexH1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex\">CategoryTheory.ShortComplex</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L221-L223","name":"groupCohomology.shortComplexH0","line":221,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH0","doc":"The (exact) short complex `A.ρ.invariants ⟶ A ⟶ (G → A)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.shortComplexH0\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">shortComplexH0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex\">CategoryTheory.ShortComplex</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat\">ModuleCat</a> <span class=\"fn\">k</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L210-L217","name":"groupCohomology.dTwo_comp_dOne","line":210,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dTwo_comp_dOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dTwo_comp_dOne\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dTwo_comp_dOne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dTwo\">dTwo</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.comp\">∘ₗ</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne\">dOne</a> <span class=\"fn\">A</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L204-L208","name":"groupCohomology.dOne_comp_dZero","line":204,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne_comp_dZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne_comp_dZero\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dOne_comp_dZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne\">dOne</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.comp\">∘ₗ</a> <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero\">dZero</a> <span class=\"fn\">A</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L180-L202","name":"groupCohomology.dTwo_comp_eq","line":180,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dTwo_comp_eq","doc":"Let `C(G, A)` denote the complex of inhomogeneous cochains of `A : Rep k G`. This lemma\nsays `dTwo` gives a simpler expression for the 2nd differential: that is, the following\nsquare commutes:\n```\n      C²(G, A) -------d²-----> C³(G, A)\n        |                         |\n        |                         |\n        |                         |\n        v                         v\n  Fun(G × G, A) --dTwo--> Fun(G × G × G, A)\n```\nwhere the vertical arrows are `twoCochainsLequiv` and `threeCochainsLequiv` respectively.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dTwo_comp_eq\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dTwo_comp_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dTwo\">dTwo</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.comp\">∘ₗ</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCochainsLequiv\">twoCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.threeCochainsLequiv\">threeCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.comp\">∘ₗ</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.Hom.hom\">ModuleCat.Hom.hom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.inhomogeneousCochains\">inhomogeneousCochains</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">d</a></span> <span class=\"fn\">2</span> <span class=\"fn\">3</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L158-L178","name":"groupCohomology.dOne_comp_eq","line":158,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne_comp_eq","doc":"Let `C(G, A)` denote the complex of inhomogeneous cochains of `A : Rep k G`. This lemma\nsays `dOne` gives a simpler expression for the 1st differential: that is, the following\nsquare commutes:\n```\n  C¹(G, A) ---d¹-----> C²(G, A)\n    |                      |\n    |                      |\n    |                      |\n    v                      v\n  Fun(G, A) -dOne-> Fun(G × G, A)\n```\nwhere the vertical arrows are `oneCochainsLequiv` and `twoCochainsLequiv` respectively.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne_comp_eq\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dOne_comp_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne\">dOne</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.comp\">∘ₗ</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCochainsLequiv\">twoCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.comp\">∘ₗ</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.Hom.hom\">ModuleCat.Hom.hom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.inhomogeneousCochains\">inhomogeneousCochains</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">d</a></span> <span class=\"fn\">1</span> <span class=\"fn\">2</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L137-L156","name":"groupCohomology.dZero_comp_eq","line":137,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero_comp_eq","doc":"Let `C(G, A)` denote the complex of inhomogeneous cochains of `A : Rep k G`. This lemma\nsays `dZero` gives a simpler expression for the 0th differential: that is, the following\nsquare commutes:\n```\n  C⁰(G, A) ---d⁰---> C¹(G, A)\n  |                    |\n  |                    |\n  |                    |\n  v                    v\n  A ---- dZero ---> Fun(G, A)\n```\nwhere the vertical arrows are `zeroCochainsLequiv` and `oneCochainsLequiv` respectively.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero_comp_eq\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dZero_comp_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero\">dZero</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.comp\">∘ₗ</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\">zeroCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\">oneCochainsLequiv</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.comp\">∘ₗ</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.Hom.hom\">ModuleCat.Hom.hom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.inhomogeneousCochains\">inhomogeneousCochains</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.d\">d</a></span> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L126-L126","name":"groupCohomology.dTwo_apply","line":126,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dTwo_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dTwo_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dTwo_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dTwo\">dTwo</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.1</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.2</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.2</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">g</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.2</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.2</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">g</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.2</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.2</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">g</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.2</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L123-L135","name":"groupCohomology.dTwo","line":123,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dTwo","doc":"The 2nd differential in the complex of inhomogeneous cochains of `A : Rep k G`, as a\n`k`-linear map `Fun(G × G, A) → Fun(G × G × G, A)`. It sends\n`(f, (g₁, g₂, g₃)) ↦ ρ_A(g₁)(f(g₂, g₃)) - f(g₁g₂, g₃) + f(g₁, g₂g₃) - f(g₁, g₂).` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dTwo\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dTwo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L117-L117","name":"groupCohomology.dOne_apply","line":117,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dOne_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne\">dOne</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.1</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">g</span>.2</span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">f</span> (<span class=\"fn\"><span class=\"fn\">g</span>.1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span>.2</span>)</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">g</span>.1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L114-L121","name":"groupCohomology.dOne","line":114,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne","doc":"The 1st differential in the complex of inhomogeneous cochains of `A : Rep k G`, as a\n`k`-linear map `Fun(G, A) → Fun(G × G, A)`. It sends\n`(f, (g₁, g₂)) ↦ ρ_A(g₁)(f(g₂)) - f(g₁g₂) + f(g₁).` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dOne\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dOne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L108-L112","name":"groupCohomology.dZero_comp_subtype","line":108,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero_comp_subtype","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero_comp_subtype\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dZero_comp_subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero\">dZero</a> <span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.comp\">∘ₗ</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span>.<a href=\"./Mathlib/RepresentationTheory/Invariants.html#Representation.invariants\">invariants</a></span>.<a href=\"./Mathlib/Algebra/Module/Submodule/LinearMap.html#Submodule.subtype\">subtype</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L104-L106","name":"groupCohomology.dZero_eq_zero","line":104,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero_eq_zero\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dZero_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.IsTrivial\">IsTrivial</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero\">dZero</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L99-L102","name":"groupCohomology.dZero_ker_eq_invariants","line":99,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero_ker_eq_invariants","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero_ker_eq_invariants\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dZero_ker_eq_invariants</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Submodule/Ker.html#LinearMap.ker\">LinearMap.ker</a> <span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero\">dZero</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span>.<a href=\"./Mathlib/RepresentationTheory/Invariants.html#Representation.invariants\">invariants</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L93-L93","name":"groupCohomology.dZero_apply","line":93,"kind":"theorem","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero_apply\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dZero_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero\">dZero</a> <span class=\"fn\">A</span>)</span> <span class=\"fn\">m</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep.ρ\">ρ</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">m</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L91-L97","name":"groupCohomology.dZero","line":91,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero","doc":"The 0th differential in the complex of inhomogeneous cochains of `A : Rep k G`, as a\n`k`-linear map `A → Fun(G, A)`. It sends `(a, g) ↦ ρ_A(g)(a) - a.` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.dZero\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">dZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L81-L85","name":"groupCohomology.threeCochainsLequiv","line":81,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.threeCochainsLequiv","doc":"The 3rd object in the complex of inhomogeneous cochains of `A : Rep k G` is isomorphic\nto `Fun(G³, A)` as a `k`-module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.threeCochainsLequiv\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">threeCochainsLequiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.inhomogeneousCochains\">inhomogeneousCochains</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\">3</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L76-L79","name":"groupCohomology.twoCochainsLequiv","line":76,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCochainsLequiv","doc":"The 2nd object in the complex of inhomogeneous cochains of `A : Rep k G` is isomorphic\nto `Fun(G², A)` as a `k`-module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.twoCochainsLequiv\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">twoCochainsLequiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.inhomogeneousCochains\">inhomogeneousCochains</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\">2</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L71-L74","name":"groupCohomology.oneCochainsLequiv","line":71,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv","doc":"The 1st object in the complex of inhomogeneous cochains of `A : Rep k G` is isomorphic\nto `Fun(G, A)` as a `k`-module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.oneCochainsLequiv\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">oneCochainsLequiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.inhomogeneousCochains\">inhomogeneousCochains</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><span class=\"fn\">G</span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RepresentationTheory/GroupCohomology/LowDegree.lean#L66-L69","name":"groupCohomology.zeroCochainsLequiv","line":66,"kind":"def","docLink":"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv","doc":"The 0th object in the complex of inhomogeneous cochains of `A : Rep k G` is isomorphic\nto `A` as a `k`-module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RepresentationTheory/GroupCohomology/LowDegree.html#groupCohomology.zeroCochainsLequiv\"><span class=\"name\">groupCohomology</span>.<span class=\"name\">zeroCochainsLequiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/RepresentationTheory/Rep.html#Rep\">Rep</a> <span class=\"fn\">k</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RepresentationTheory/GroupCohomology/Basic.html#groupCohomology.inhomogeneousCochains\">inhomogeneousCochains</a> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></div></div>"}]}