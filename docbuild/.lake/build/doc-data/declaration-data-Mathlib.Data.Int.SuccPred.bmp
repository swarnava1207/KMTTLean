{"name":"Mathlib.Data.Int.SuccPred","instances":[{"typeNames":["Int"],"name":"Int.instSuccOrder","className":"SuccOrder"},{"typeNames":["Int"],"name":"Int.instSuccAddOrder","className":"SuccAddOrder"},{"typeNames":["Int"],"name":"Int.instPredOrder","className":"PredOrder"},{"typeNames":["Int"],"name":"Int.instPredSubOrder","className":"PredSubOrder"},{"typeNames":["Int"],"name":"Int.instIsSuccArchimedean","className":"IsSuccArchimedean"},{"typeNames":["Int"],"name":"Int.instIsPredArchimedean","className":"IsPredArchimedean"}],"imports":["Init","Mathlib.Algebra.Order.Ring.Int","Mathlib.Data.Nat.SuccPred"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/SuccPred.lean#L61-L61","name":"CovBy.intCast","line":61,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#CovBy.intCast","doc":"**Alias** of the reverse direction of `Int.natCast_covBy`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#CovBy.intCast\"><span class=\"name\">CovBy</span>.<span class=\"name\">intCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">b</span> → <span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/SuccPred.lean#L54-L57","name":"Int.natCast_covBy","line":54,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.natCast_covBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.natCast_covBy\"><span class=\"name\">Int</span>.<span class=\"name\">natCast_covBy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/SuccPred.lean#L47-L49","name":"Int.instIsPredArchimedean","line":47,"kind":"instance","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.instIsPredArchimedean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.instIsPredArchimedean\"><span class=\"name\">Int</span>.<span class=\"name\">instIsPredArchimedean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Archimedean.html#IsPredArchimedean\">IsPredArchimedean</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/SuccPred.lean#L43-L45","name":"Int.instIsSuccArchimedean","line":43,"kind":"instance","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.instIsSuccArchimedean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.instIsSuccArchimedean\"><span class=\"name\">Int</span>.<span class=\"name\">instIsSuccArchimedean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Archimedean.html#IsSuccArchimedean\">IsSuccArchimedean</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/SuccPred.lean#L39-L41","name":"Int.pred_eq_pred","line":39,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.pred_eq_pred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.pred_eq_pred\"><span class=\"name\">Int</span>.<span class=\"name\">pred_eq_pred</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.pred\">Order.pred</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Int/Init.html#Int.pred\">pred</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/SuccPred.lean#L35-L37","name":"Int.succ_eq_succ","line":35,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.succ_eq_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.succ_eq_succ\"><span class=\"name\">Int</span>.<span class=\"name\">succ_eq_succ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Int/Init.html#Int.succ\">succ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/SuccPred.lean#L33-L33","name":"Int.instPredSubOrder","line":33,"kind":"instance","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.instPredSubOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.instPredSubOrder\"><span class=\"name\">Int</span>.<span class=\"name\">instPredSubOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/SuccPred.html#PredSubOrder\">PredSubOrder</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/SuccPred.lean#L27-L31","name":"Int.instPredOrder","line":27,"kind":"instance","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.instPredOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.instPredOrder\"><span class=\"name\">Int</span>.<span class=\"name\">instPredOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#PredOrder\">PredOrder</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/SuccPred.lean#L24-L24","name":"Int.instSuccAddOrder","line":24,"kind":"instance","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.instSuccAddOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.instSuccAddOrder\"><span class=\"name\">Int</span>.<span class=\"name\">instSuccAddOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/SuccPred.html#SuccAddOrder\">SuccAddOrder</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/SuccPred.lean#L21-L22","name":"Int.instSuccOrder","line":21,"kind":"instance","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.instSuccOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.instSuccOrder\"><span class=\"name\">Int</span>.<span class=\"name\">instSuccOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#SuccOrder\">SuccOrder</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"}]}