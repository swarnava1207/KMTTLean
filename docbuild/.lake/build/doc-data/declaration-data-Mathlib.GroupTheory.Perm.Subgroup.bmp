{"name":"Mathlib.GroupTheory.Perm.Subgroup","instances":[{"typeNames":[],"name":"Equiv.Perm.sumCongrHom.decidableMemRange","className":"Decidable"},{"typeNames":[],"name":"Equiv.Perm.sigmaCongrRightHom.decidableMemRange","className":"Decidable"},{"typeNames":[],"name":"Equiv.Perm.subtypeCongrHom.decidableMemRange","className":"Decidable"}],"imports":["Init","Mathlib.Algebra.Group.Action.End","Mathlib.Algebra.Group.Subgroup.Finite","Mathlib.Data.Fintype.Perm"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Perm/Subgroup.lean#L61-L66","name":"Equiv.Perm.subgroupOfMulAction","line":61,"kind":"def","docLink":"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.subgroupOfMulAction","doc":"**Cayley's theorem**: Every group G is isomorphic to a subgroup of the symmetric group acting on\n`G`. Note that we generalize this to an arbitrary \"faithful\" group action by `G`. Setting `H = G`\nrecovers the usual statement of Cayley's theorem via `RightCancelMonoid.faithfulSMul` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.subgroupOfMulAction\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">subgroupOfMulAction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Faithful.html#FaithfulSMul\">FaithfulSMul</a> <span class=\"fn\">G</span> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Action/End.html#MulAction.toPermHom\">MulAction.toPermHom</a> <span class=\"fn\">G</span> <span class=\"fn\">H</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.range\">range</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Perm/Subgroup.lean#L54-L59","name":"Equiv.Perm.subtypeCongrHom.card_range","line":54,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.subtypeCongrHom.card_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.subtypeCongrHom.card_range\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">subtypeCongrHom</span>.<span class=\"name\">card_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.subtypeCongrHom\">subtypeCongrHom</a> <span class=\"fn\">p</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.range\">range</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> (<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>)</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.subtypeCongrHom\">subtypeCongrHom</a> <span class=\"fn\">p</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.range\">range</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Perm/Subgroup.lean#L50-L52","name":"Equiv.Perm.subtypeCongrHom.decidableMemRange","line":50,"kind":"instance","docLink":"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.subtypeCongrHom.decidableMemRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.subtypeCongrHom.decidableMemRange\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">subtypeCongrHom</span>.<span class=\"name\">decidableMemRange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> (<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>)</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.subtypeCongrHom\">subtypeCongrHom</a> <span class=\"fn\">p</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.range\">range</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Perm/Subgroup.lean#L44-L48","name":"Equiv.Perm.sigmaCongrRightHom.card_range","line":44,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.sigmaCongrRightHom.card_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.sigmaCongrRightHom.card_range\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">sigmaCongrRightHom</span>.<span class=\"name\">card_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.sigmaCongrRightHom\">sigmaCongrRightHom</a> <span class=\"fn\">β</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.range\">range</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">((<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">a</span>)</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.sigmaCongrRightHom\">sigmaCongrRightHom</a> <span class=\"fn\">β</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.range\">range</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">((<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">a</span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Perm/Subgroup.lean#L40-L42","name":"Equiv.Perm.sigmaCongrRightHom.decidableMemRange","line":40,"kind":"instance","docLink":"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.sigmaCongrRightHom.decidableMemRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.sigmaCongrRightHom.decidableMemRange\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">sigmaCongrRightHom</span>.<span class=\"name\">decidableMemRange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">a</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">a</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">((<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.sigmaCongrRightHom\">sigmaCongrRightHom</a> <span class=\"fn\">β</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.range\">range</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Perm/Subgroup.lean#L34-L38","name":"Equiv.Perm.sumCongrHom.card_range","line":34,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.sumCongrHom.card_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.sumCongrHom.card_range\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">sumCongrHom</span>.<span class=\"name\">card_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.sumCongrHom\">sumCongrHom</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.range\">range</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> (<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">β</span></span>)</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.sumCongrHom\">sumCongrHom</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.range\">range</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> (<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> <span class=\"fn\">β</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Perm/Subgroup.lean#L31-L32","name":"Equiv.Perm.sumCongrHom.decidableMemRange","line":31,"kind":"instance","docLink":"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.sumCongrHom.decidableMemRange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Perm/Subgroup.html#Equiv.Perm.sumCongrHom.decidableMemRange\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">sumCongrHom</span>.<span class=\"name\">decidableMemRange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Perm</a> (<span class=\"fn\">α</span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">β</span>)</span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/End.html#Equiv.Perm.sumCongrHom\">sumCongrHom</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.range\">range</a></span></span></span></div></div>"}]}