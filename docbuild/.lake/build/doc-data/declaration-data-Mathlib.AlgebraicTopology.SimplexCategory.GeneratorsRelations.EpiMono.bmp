{"name":"Mathlib.AlgebraicTopology.SimplexCategory.GeneratorsRelations.EpiMono","instances":[{"typeNames":["SimplexCategoryGenRel.δ"],"name":"SimplexCategoryGenRel.instIsSplitMonoδ","className":"CategoryTheory.IsSplitMono"},{"typeNames":["SimplexCategoryGenRel.σ"],"name":"SimplexCategoryGenRel.instIsSplitEpiσ","className":"CategoryTheory.IsSplitEpi"},{"typeNames":["SimplexCategoryGenRel.P_σ","SimplexCategoryGenRel.P_δ"],"name":"SimplexCategoryGenRel.instHasFactorizationP_σP_δ","className":"CategoryTheory.MorphismProperty.HasFactorization"}],"imports":["Init","Mathlib.AlgebraicTopology.SimplexCategory.GeneratorsRelations.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L198-L201","name":"SimplexCategoryGenRel.instHasFactorizationP_σP_δ","line":198,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.instHasFactorizationP_σP_δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.instHasFactorizationP_σP_δ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">instHasFactorizationP_σP_δ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_σ\">P_σ</a>.<a href=\"./Mathlib/CategoryTheory/MorphismProperty/Factorization.html#CategoryTheory.MorphismProperty.HasFactorization\">HasFactorization</a></span> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_δ\">P_δ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L166-L196","name":"SimplexCategoryGenRel.exists_P_σ_P_δ_factorization","line":166,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.exists_P_σ_P_δ_factorization","doc":"Any morphism in `SimplexCategoryGenRel` can be decomposed as a `P_σ` followed by a `P_δ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.exists_P_σ_P_δ_factorization\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">exists_P_σ_P_δ_factorization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">z</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>) (<span class=\"fn\">e</span> : <span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">z</span>) (<span class=\"fn\">m</span> : <span class=\"fn\">z</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y</span>) (_ : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_σ\">P_σ</a> <span class=\"fn\">e</span></span>) (_ : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_δ\">P_δ</a> <span class=\"fn\">m</span></span>),\n  <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">e</span> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L84-L95","name":"SimplexCategoryGenRel.eq_or_len_le_of_P_δ","line":84,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.eq_or_len_le_of_P_δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.eq_or_len_le_of_P_δ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">eq_or_len_le_of_P_δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_δ</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_δ\">P_δ</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(∃ (<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span>), <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">h</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.len\">len</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.len\">len</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L77-L82","name":"SimplexCategoryGenRel.isSplitMono_toSimplexCategory_map_of_P_δ","line":77,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.isSplitMono_toSimplexCategory_map_of_P_δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.isSplitMono_toSimplexCategory_map_of_P_δ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">isSplitMono_toSimplexCategory_map_of_P_δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_δ\">P_δ</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EpiMono.html#CategoryTheory.IsSplitMono\">CategoryTheory.IsSplitMono</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory\">toSimplexCategory</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">m</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L70-L75","name":"SimplexCategoryGenRel.isSplitEpi_toSimplexCategory_map_of_P_σ","line":70,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.isSplitEpi_toSimplexCategory_map_of_P_σ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.isSplitEpi_toSimplexCategory_map_of_P_σ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">isSplitEpi_toSimplexCategory_map_of_P_σ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">he</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_σ\">P_σ</a> <span class=\"fn\">e</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EpiMono.html#CategoryTheory.IsSplitEpi\">CategoryTheory.IsSplitEpi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.toSimplexCategory\">toSimplexCategory</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">e</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L62-L68","name":"SimplexCategoryGenRel.isSplitMono_P_δ","line":62,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.isSplitMono_P_δ","doc":"All `P_δ` are split monos as composition of such. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.isSplitMono_P_δ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">isSplitMono_P_δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_δ\">P_δ</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EpiMono.html#CategoryTheory.IsSplitMono\">CategoryTheory.IsSplitMono</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L55-L60","name":"SimplexCategoryGenRel.isSplitEpi_P_σ","line":55,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.isSplitEpi_P_σ","doc":"All `P_σ` are split epis as composition of such. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.isSplitEpi_P_σ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">isSplitEpi_P_σ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">e</span> : <span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">he</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_σ\">P_σ</a> <span class=\"fn\">e</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EpiMono.html#CategoryTheory.IsSplitEpi\">CategoryTheory.IsSplitEpi</a> <span class=\"fn\">e</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L53-L53","name":"SimplexCategoryGenRel.P_δ.δ","line":53,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_δ.δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_δ.δ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">P_δ</span>.<span class=\"name\">δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_δ\">P_δ</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">SimplexCategoryGenRel.δ</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L51-L51","name":"SimplexCategoryGenRel.P_σ.σ","line":51,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_σ.σ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_σ.σ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">P_σ</span>.<span class=\"name\">σ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_σ\">P_σ</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">SimplexCategoryGenRel.σ</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L48-L49","name":"SimplexCategoryGenRel.P_δ","line":48,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_δ","doc":"Auxiliary predicate to express that a morphism is purely a composition of `δ i`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_δ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">P_δ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L45-L46","name":"SimplexCategoryGenRel.P_σ","line":45,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_σ","doc":"Auxiliary predicate to express that a morphism is purely a composition of `σ i`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.P_σ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">P_σ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/MorphismProperty/Basic.html#CategoryTheory.MorphismProperty\">CategoryTheory.MorphismProperty</a> <a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel\">SimplexCategoryGenRel</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L43-L43","name":"SimplexCategoryGenRel.instIsSplitEpiσ","line":43,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.instIsSplitEpiσ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.instIsSplitEpiσ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">instIsSplitEpiσ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EpiMono.html#CategoryTheory.IsSplitEpi\">CategoryTheory.IsSplitEpi</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L38-L41","name":"SimplexCategoryGenRel.splitEpiσ","line":38,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.splitEpiσ","doc":"`δ i` is a split epimorphism thanks to the simplicial identities. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.splitEpiσ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">splitEpiσ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EpiMono.html#CategoryTheory.SplitEpi\">CategoryTheory.SplitEpi</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.σ\">σ</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L36-L36","name":"SimplexCategoryGenRel.instIsSplitMonoδ","line":36,"kind":"instance","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.instIsSplitMonoδ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.instIsSplitMonoδ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">instIsSplitMonoδ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EpiMono.html#CategoryTheory.IsSplitMono\">CategoryTheory.IsSplitMono</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.lean#L23-L34","name":"SimplexCategoryGenRel.splitMonoδ","line":23,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.splitMonoδ","doc":"`δ i` is a split monomorphism thanks to the simplicial identities. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/EpiMono.html#SimplexCategoryGenRel.splitMonoδ\"><span class=\"name\">SimplexCategoryGenRel</span>.<span class=\"name\">splitMonoδ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EpiMono.html#CategoryTheory.SplitMono\">CategoryTheory.SplitMono</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/GeneratorsRelations/Basic.html#SimplexCategoryGenRel.δ\">δ</a> <span class=\"fn\">i</span>)</span></span></div></div>"}]}