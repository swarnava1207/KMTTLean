{"name":"Mathlib.Data.DList.Instances","instances":[{"typeNames":["Batteries.DList"],"name":"Batteries.instTraversableDList","className":"Traversable"},{"typeNames":["Batteries.DList"],"name":"Batteries.instLawfulTraversableDList","className":"LawfulTraversable"},{"typeNames":["Batteries.DList"],"name":"Batteries.instInhabitedDList_mathlib","className":"Inhabited"}],"imports":["Init","Batteries.Data.DList.Lemmas","Mathlib.Control.Traversable.Equiv","Mathlib.Control.Traversable.Instances"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/DList/Instances.lean#L38-L39","name":"Batteries.instInhabitedDList_mathlib","line":38,"kind":"instance","docLink":"./Mathlib/Data/DList/Instances.html#Batteries.instInhabitedDList_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Instances.html#Batteries.instInhabitedDList_mathlib\"><span class=\"name\">Batteries</span>.<span class=\"name\">instInhabitedDList_mathlib</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/DList/Instances.lean#L35-L36","name":"Batteries.instLawfulTraversableDList","line":35,"kind":"instance","docLink":"./Mathlib/Data/DList/Instances.html#Batteries.instLawfulTraversableDList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Instances.html#Batteries.instLawfulTraversableDList\"><span class=\"name\">Batteries</span>.<span class=\"name\">instLawfulTraversableDList</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Control/Traversable/Basic.html#LawfulTraversable\">LawfulTraversable</a> <a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/DList/Instances.lean#L32-L33","name":"Batteries.instTraversableDList","line":32,"kind":"instance","docLink":"./Mathlib/Data/DList/Instances.html#Batteries.instTraversableDList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Instances.html#Batteries.instTraversableDList\"><span class=\"name\">Batteries</span>.<span class=\"name\">instTraversableDList</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Control/Traversable/Basic.html#Traversable\">Traversable</a> <a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/DList/Instances.lean#L24-L30","name":"Batteries.DList.listEquivDList","line":24,"kind":"def","docLink":"./Mathlib/Data/DList/Instances.html#Batteries.DList.listEquivDList","doc":"The natural equivalence between lists and difference lists, using\n`DList.ofList` and `DList.toList`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/DList/Instances.html#Batteries.DList.listEquivDList\"><span class=\"name\">Batteries</span>.<span class=\"name\">DList</span>.<span class=\"name\">listEquivDList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Batteries/Data/DList/Basic.html#Batteries.DList\">DList</a> <span class=\"fn\">α</span></span></div></div>"}]}