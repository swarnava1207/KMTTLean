{"name":"Mathlib.Data.Int.CardIntervalMod","instances":[],"imports":["Init","Mathlib.Data.Int.Interval","Mathlib.Data.Int.ModEq","Mathlib.Data.Nat.Count","Mathlib.Data.Rat.Floor","Mathlib.Order.Interval.Finset.Nat"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L136-L151","name":"Nat.count_modEq_card","line":136,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Nat.count_modEq_card","doc":"There are `b / r + [v % r < b % r]` numbers in `[0, b)` congruent to `v` mod `r`,\nwhere `[·]` is the Iverson bracket. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Nat.count_modEq_card\"><span class=\"name\">Nat</span>.<span class=\"name\">count_modEq_card</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Count.html#Nat.count\">count</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">≡</a> <span class=\"fn\">v</span> <a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">[MOD</a> <span class=\"fn\">r</span><a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">]</a>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L122-L134","name":"Nat.count_modEq_card_eq_ceil","line":122,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Nat.count_modEq_card_eq_ceil","doc":"There are `⌈(b - v % r) / r⌉` numbers in `[0, b)` congruent to `v` mod `r`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Nat.count_modEq_card_eq_ceil\"><span class=\"name\">Nat</span>.<span class=\"name\">count_modEq_card_eq_ceil</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/Count.html#Nat.count\">count</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">≡</a> <span class=\"fn\">v</span> <a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">[MOD</a> <span class=\"fn\">r</span><a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">]</a>)</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a>(<span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑(<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">r</span>)</span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L115-L120","name":"Nat.Ioc_filter_modEq_card","line":115,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Nat.Ioc_filter_modEq_card","doc":"There are `⌊(b - v) / r⌋ - ⌊(a - v) / r⌋` numbers congruent to `v` mod `r` in `(a, b]`,\nif `a ≤ b`. `Nat` version of `Int.Ioc_filter_modEq_card`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Nat.Ioc_filter_modEq_card\"><span class=\"name\">Nat</span>.<span class=\"name\">Ioc_filter_modEq_card</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> | <span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">≡</a> <span class=\"fn\">v</span> <a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">[MOD</a> <span class=\"fn\">r</span><a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">]</a>}</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a>(<span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a>(<span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a>) <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L108-L113","name":"Nat.Ico_filter_modEq_card","line":108,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Nat.Ico_filter_modEq_card","doc":"There are `⌈(b - v) / r⌉ - ⌈(a - v) / r⌉` numbers congruent to `v` mod `r` in `[a, b)`,\nif `a ≤ b`. `Nat` version of `Int.Ico_filter_modEq_card`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Nat.Ico_filter_modEq_card\"><span class=\"name\">Nat</span>.<span class=\"name\">Ico_filter_modEq_card</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> | <span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">≡</a> <span class=\"fn\">v</span> <a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">[MOD</a> <span class=\"fn\">r</span><a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">]</a>}</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a>(<span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a>(<span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a>) <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L96-L103","name":"Nat.Ioc_filter_modEq_cast","line":96,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Nat.Ioc_filter_modEq_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Nat.Ioc_filter_modEq_cast\"><span class=\"name\">Nat</span>.<span class=\"name\">Ioc_filter_modEq_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r </span><span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">castEmbedding</a> <span class=\"fn\">({<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> | <span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">≡</a> <span class=\"fn\">v</span> <a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">[MOD</a> <span class=\"fn\">r</span><a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">]</a>})</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> | <span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">≡</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">[ZMOD</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">]</a>}</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L87-L94","name":"Nat.Ico_filter_modEq_cast","line":87,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Nat.Ico_filter_modEq_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Nat.Ico_filter_modEq_cast\"><span class=\"name\">Nat</span>.<span class=\"name\">Ico_filter_modEq_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r </span><span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <a href=\"./Mathlib/Algebra/Ring/CharZero.html#Nat.castEmbedding\">castEmbedding</a> <span class=\"fn\">({<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> | <span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">≡</a> <span class=\"fn\">v</span> <a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">[MOD</a> <span class=\"fn\">r</span><a href=\"./Mathlib/Data/Nat/ModEq.html#Nat.ModEq\">]</a>})</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> | <span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">≡</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">[ZMOD</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">]</a>}</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L75-L79","name":"Int.Ioc_filter_modEq_card","line":75,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ioc_filter_modEq_card","doc":"There are `⌊(b - v) / r⌋ - ⌊(a - v) / r⌋` numbers congruent to `v` mod `r` in `(a, b]`,\nif `a ≤ b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ioc_filter_modEq_card\"><span class=\"name\">Int</span>.<span class=\"name\">Ioc_filter_modEq_card</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> | <span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">≡</a> <span class=\"fn\">v</span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">[ZMOD</a> <span class=\"fn\">r</span><a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">]</a>}</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a>(<span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a>(<span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a>) <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L69-L73","name":"Int.Ico_filter_modEq_card","line":69,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ico_filter_modEq_card","doc":"There are `⌈(b - v) / r⌉ - ⌈(a - v) / r⌉` numbers congruent to `v` mod `r` in `[a, b)`,\nif `a ≤ b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ico_filter_modEq_card\"><span class=\"name\">Int</span>.<span class=\"name\">Ico_filter_modEq_card</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> | <span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">≡</a> <span class=\"fn\">v</span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">[ZMOD</a> <span class=\"fn\">r</span><a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">]</a>}</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a>(<span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a>(<span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">v</span></span>) <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a>) <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L65-L67","name":"Int.Ioc_filter_dvd_card","line":65,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ioc_filter_dvd_card","doc":"There are `⌊b / r⌋ - ⌊a / r⌋` multiples of `r` in `(a, b]`, if `a ≤ b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ioc_filter_dvd_card\"><span class=\"name\">Int</span>.<span class=\"name\">Ioc_filter_dvd_card</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> | <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span>}</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a>) <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L61-L63","name":"Int.Ico_filter_dvd_card","line":61,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ico_filter_dvd_card","doc":"There are `⌈b / r⌉ - ⌈a / r⌉` multiples of `r` in `[a, b)`, if `a ≤ b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ico_filter_dvd_card\"><span class=\"name\">Int</span>.<span class=\"name\">Ico_filter_dvd_card</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> | <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span>}</span>.<a href=\"./Mathlib/Data/Finset/Card.html#Finset.card\">card</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a>) <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L53-L59","name":"Int.Ioc_filter_dvd_eq","line":53,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ioc_filter_dvd_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ioc_filter_dvd_eq\"><span class=\"name\">Int</span>.<span class=\"name\">Ioc_filter_dvd_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> | <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> }</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L45-L51","name":"Int.Ico_filter_dvd_eq","line":45,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ico_filter_dvd_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ico_filter_dvd_eq\"><span class=\"name\">Int</span>.<span class=\"name\">Ico_filter_dvd_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">r</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> | <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> }</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a> <a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L35-L40","name":"Int.Ioc_filter_modEq_eq","line":35,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ioc_filter_modEq_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ioc_filter_modEq_eq\"><span class=\"name\">Int</span>.<span class=\"name\">Ioc_filter_modEq_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> | <span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">≡</a> <span class=\"fn\">v</span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">[ZMOD</a> <span class=\"fn\">r</span><a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">]</a>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">v</span></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> }</span> <span class=\"fn\">({<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ioc\">Finset.Ioc</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">v</span>) (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">v</span>)</span> | <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span>})</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Int/CardIntervalMod.lean#L28-L33","name":"Int.Ico_filter_modEq_eq","line":28,"kind":"theorem","docLink":"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ico_filter_modEq_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/CardIntervalMod.html#Int.Ico_filter_modEq_eq\"><span class=\"name\">Int</span>.<span class=\"name\">Ico_filter_modEq_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> | <span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">≡</a> <span class=\"fn\">v</span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">[ZMOD</a> <span class=\"fn\">r</span><a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">]</a>}</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">v</span></span>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> }</span> <span class=\"fn\">({<span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Finset/Defs.html#Finset.Ico\">Finset.Ico</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">v</span>) (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">v</span>)</span> | <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">x</span>})</span></span></div></div>"}]}