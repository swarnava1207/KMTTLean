{"name":"Mathlib.Tactic.Contrapose","instances":[],"imports":["Init","Mathlib.Tactic.Push"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Contrapose.lean#L38-L42","name":"Mathlib.Tactic.Contrapose.contrapose!","line":38,"kind":"def","docLink":"./Mathlib/Tactic/Contrapose.html#Mathlib.Tactic.Contrapose.contrapose!","doc":"Transforms the goal into its contrapositive and uses pushes negations inside `P` and `Q`.\nUsage matches `contrapose`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Contrapose.html#Mathlib.Tactic.Contrapose.contrapose!\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Contrapose</span>.<span class=\"name\">contrapose!</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Contrapose.lean#L26-L32","name":"Mathlib.Tactic.Contrapose.contrapose","line":26,"kind":"def","docLink":"./Mathlib/Tactic/Contrapose.html#Mathlib.Tactic.Contrapose.contrapose","doc":"Transforms the goal into its contrapositive.\n* `contrapose`     turns a goal `P → Q` into `¬ Q → ¬ P`\n* `contrapose h`   first reverts the local assumption `h`, and then uses `contrapose` and `intro h`\n* `contrapose h with new_h` uses the name `new_h` for the introduced hypothesis\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Contrapose.html#Mathlib.Tactic.Contrapose.contrapose\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Contrapose</span>.<span class=\"name\">contrapose</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Contrapose.lean#L24-L24","name":"Mathlib.Tactic.Contrapose.mtr","line":24,"kind":"theorem","docLink":"./Mathlib/Tactic/Contrapose.html#Mathlib.Tactic.Contrapose.mtr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Contrapose.html#Mathlib.Tactic.Contrapose.mtr\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Contrapose</span>.<span class=\"name\">mtr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <a href=\"./foundational_types.html\">Prop</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">q</span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">p</span>)</span> → <span class=\"fn\"><span class=\"fn\">p</span> → <span class=\"fn\">q</span></span></span></div></div>"}]}