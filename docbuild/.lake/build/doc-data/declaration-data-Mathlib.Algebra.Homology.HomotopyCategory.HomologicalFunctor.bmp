{"name":"Mathlib.Algebra.Homology.HomotopyCategory.HomologicalFunctor","instances":[{"typeNames":["HomotopyCategory.homologyFunctor"],"name":"HomotopyCategory.instIsHomologicalIntUpHomologyFunctor","className":"CategoryTheory.Functor.IsHomological"}],"imports":["Init","Mathlib.Algebra.Homology.HomologicalComplexAbelian","Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","Mathlib.Algebra.Homology.HomologySequence","Mathlib.CategoryTheory.Triangulated.HomologicalFunctor"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/HomotopyCategory/HomologicalFunctor.lean#L30-L37","name":"HomotopyCategory.instIsHomologicalIntUpHomologyFunctor","line":30,"kind":"instance","docLink":"./Mathlib/Algebra/Homology/HomotopyCategory/HomologicalFunctor.html#HomotopyCategory.instIsHomologicalIntUpHomologyFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/HomotopyCategory/HomologicalFunctor.html#HomotopyCategory.instIsHomologicalIntUpHomologyFunctor\"><span class=\"name\">HomotopyCategory</span>.<span class=\"name\">instIsHomologicalIntUpHomologyFunctor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Abelian/Basic.html#CategoryTheory.Abelian\">CategoryTheory.Abelian</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/HomotopyCategory.html#HomotopyCategory.homologyFunctor\">homologyFunctor</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Homology/ComplexShape.html#ComplexShape.up\">ComplexShape.up</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Triangulated/HomologicalFunctor.html#CategoryTheory.Functor.IsHomological\">IsHomological</a></span></div></div>"}]}