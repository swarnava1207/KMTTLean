{"name":"Init.Data.UInt.Log2","instances":[],"imports":["Init.Data.Fin.Log2"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Data/UInt/Log2.lean#L77-L92","name":"USize.log2","line":77,"kind":"def","docLink":"./Init/Data/UInt/Log2.html#USize.log2","doc":"Base-two logarithm of word-sized unsigned integers. Returns `⌊max 0 (log₂ a)⌋`.\n\nThis function is overridden at runtime with an efficient implementation. This definition is\nthe logical model.\n\nExamples:\n * `USize.log2 0 = 0`\n * `USize.log2 1 = 0`\n * `USize.log2 2 = 1`\n * `USize.log2 4 = 2`\n * `USize.log2 7 = 2`\n * `USize.log2 8 = 3`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Log2.html#USize.log2\"><span class=\"name\">USize</span>.<span class=\"name\">log2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#USize\">USize</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Data/UInt/Log2.lean#L60-L75","name":"UInt64.log2","line":60,"kind":"def","docLink":"./Init/Data/UInt/Log2.html#UInt64.log2","doc":"Base-two logarithm of 64-bit unsigned integers. Returns `⌊max 0 (log₂ a)⌋`.\n\nThis function is overridden at runtime with an efficient implementation. This definition is\nthe logical model.\n\nExamples:\n * `UInt64.log2 0 = 0`\n * `UInt64.log2 1 = 0`\n * `UInt64.log2 2 = 1`\n * `UInt64.log2 4 = 2`\n * `UInt64.log2 7 = 2`\n * `UInt64.log2 8 = 3`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Log2.html#UInt64.log2\"><span class=\"name\">UInt64</span>.<span class=\"name\">log2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt64\">UInt64</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Data/UInt/Log2.lean#L43-L58","name":"UInt32.log2","line":43,"kind":"def","docLink":"./Init/Data/UInt/Log2.html#UInt32.log2","doc":"Base-two logarithm of 32-bit unsigned integers. Returns `⌊max 0 (log₂ a)⌋`.\n\nThis function is overridden at runtime with an efficient implementation. This definition is\nthe logical model.\n\nExamples:\n * `UInt32.log2 0 = 0`\n * `UInt32.log2 1 = 0`\n * `UInt32.log2 2 = 1`\n * `UInt32.log2 4 = 2`\n * `UInt32.log2 7 = 2`\n * `UInt32.log2 8 = 3`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Log2.html#UInt32.log2\"><span class=\"name\">UInt32</span>.<span class=\"name\">log2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Data/UInt/Log2.lean#L26-L41","name":"UInt16.log2","line":26,"kind":"def","docLink":"./Init/Data/UInt/Log2.html#UInt16.log2","doc":"Base-two logarithm of 16-bit unsigned integers. Returns `⌊max 0 (log₂ a)⌋`.\n\nThis function is overridden at runtime with an efficient implementation. This definition is\nthe logical model.\n\nExamples:\n * `UInt16.log2 0 = 0`\n * `UInt16.log2 1 = 0`\n * `UInt16.log2 2 = 1`\n * `UInt16.log2 4 = 2`\n * `UInt16.log2 7 = 2`\n * `UInt16.log2 8 = 3`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Log2.html#UInt16.log2\"><span class=\"name\">UInt16</span>.<span class=\"name\">log2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt16\">UInt16</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/045d07d2349b9989278991fbcd79a6430032930d/src/Init/Data/UInt/Log2.lean#L9-L24","name":"UInt8.log2","line":9,"kind":"def","docLink":"./Init/Data/UInt/Log2.html#UInt8.log2","doc":"Base-two logarithm of 8-bit unsigned integers. Returns `⌊max 0 (log₂ a)⌋`.\n\nThis function is overridden at runtime with an efficient implementation. This definition is\nthe logical model.\n\nExamples:\n * `UInt8.log2 0 = 0`\n * `UInt8.log2 1 = 0`\n * `UInt8.log2 2 = 1`\n * `UInt8.log2 4 = 2`\n * `UInt8.log2 7 = 2`\n * `UInt8.log2 8 = 3`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/UInt/Log2.html#UInt8.log2\"><span class=\"name\">UInt8</span>.<span class=\"name\">log2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt8\">UInt8</a></div></div>"}]}