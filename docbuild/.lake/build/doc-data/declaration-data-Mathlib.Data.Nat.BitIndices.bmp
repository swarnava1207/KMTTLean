{"name":"Mathlib.Data.Nat.BitIndices","instances":[],"imports":["Init","Mathlib.Algebra.BigOperators.Ring.List","Mathlib.Algebra.Order.BigOperators.Group.List","Mathlib.Algebra.Order.Ring.Nat","Mathlib.Algebra.Order.Sub.Basic","Mathlib.Data.List.Sort","Mathlib.Data.Nat.Bitwise"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L115-L116","name":"Nat.not_mem_bitIndices_self","line":115,"kind":"theorem","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.not_mem_bitIndices_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.not_mem_bitIndices_self\"><span class=\"name\">Nat</span>.<span class=\"name\">not_mem_bitIndices_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> ∉ <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L111-L113","name":"Nat.two_pow_le_of_mem_bitIndices","line":111,"kind":"theorem","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.two_pow_le_of_mem_bitIndices","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.two_pow_le_of_mem_bitIndices\"><span class=\"name\">Nat</span>.<span class=\"name\">two_pow_le_of_mem_bitIndices</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L84-L109","name":"Nat.bitIndices_twoPowsum","line":84,"kind":"theorem","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_twoPowsum","doc":"Together with `Nat.twoPowSum_bitIndices`, this implies a bijection between `ℕ` and `Finset ℕ`.\nSee `Finset.equivBitIndices` for this bijection. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_twoPowsum\"><span class=\"name\">Nat</span>.<span class=\"name\">bitIndices_twoPowsum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hL</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/List/Sort.html#List.Sorted\">List.Sorted</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\">L</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">L</span>)</span>.<a href=\"./Init/Data/List/Basic.html#List.sum\">sum</a></span>.<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">L</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L75-L82","name":"Nat.twoPowSum_bitIndices","line":75,"kind":"theorem","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.twoPowSum_bitIndices","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.twoPowSum_bitIndices\"><span class=\"name\">Nat</span>.<span class=\"name\">twoPowSum_bitIndices</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span>)</span>.<a href=\"./Init/Data/List/Basic.html#List.sum\">sum</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L72-L73","name":"Nat.bitIndices_two_pow","line":72,"kind":"theorem","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_two_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_two_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">bitIndices_two_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">k</span><a href=\"./Init/Prelude.html#List.cons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L65-L70","name":"Nat.bitIndices_two_pow_mul","line":65,"kind":"theorem","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_two_pow_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_two_pow_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">bitIndices_two_pow_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>).<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L58-L63","name":"Nat.bitIndices_sorted","line":58,"kind":"theorem","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_sorted","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_sorted\"><span class=\"name\">Nat</span>.<span class=\"name\">bitIndices_sorted</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/Sort.html#List.Sorted\">List.Sorted</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L54-L56","name":"Nat.bitIndices_two_mul","line":54,"kind":"theorem","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_two_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_two_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">bitIndices_two_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>).<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L50-L52","name":"Nat.bitIndices_two_mul_add_one","line":50,"kind":"theorem","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_two_mul_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_two_mul_add_one\"><span class=\"name\">Nat</span>.<span class=\"name\">bitIndices_two_mul_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L46-L48","name":"Nat.bitIndices_bit_false","line":46,"kind":"theorem","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_bit_false","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_bit_false\"><span class=\"name\">Nat</span>.<span class=\"name\">bitIndices_bit_false</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/BinaryRec.html#Nat.bit\">bit</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L42-L44","name":"Nat.bitIndices_bit_true","line":42,"kind":"theorem","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_bit_true","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_bit_true\"><span class=\"name\">Nat</span>.<span class=\"name\">bitIndices_bit_true</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Nat/BinaryRec.html#Nat.bit\">bit</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L40-L40","name":"Nat.bitIndices_one","line":40,"kind":"theorem","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_one\"><span class=\"name\">Nat</span>.<span class=\"name\">bitIndices_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">0</span><a href=\"./Init/Prelude.html#List.cons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L38-L38","name":"Nat.bitIndices_zero","line":38,"kind":"theorem","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">bitIndices_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\">bitIndices</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/Nat/BitIndices.lean#L33-L36","name":"Nat.bitIndices","line":33,"kind":"def","docLink":"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices","doc":"The function which maps each natural number `∑ i ∈ s, 2^i` to the list of\nelements of `s` in increasing order. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Nat/BitIndices.html#Nat.bitIndices\"><span class=\"name\">Nat</span>.<span class=\"name\">bitIndices</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"}]}