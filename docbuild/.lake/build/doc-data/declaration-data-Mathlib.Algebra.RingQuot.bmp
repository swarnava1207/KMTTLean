{"name":"Mathlib.Algebra.RingQuot","instances":[{"typeNames":["RingCon.Quotient"],"name":"RingCon.instAlgebraQuotient","className":"Algebra"},{"typeNames":["RingQuot"],"name":"RingQuot.instNatCast","className":"NatCast"},{"typeNames":["RingQuot"],"name":"RingQuot.instZero","className":"Zero"},{"typeNames":["RingQuot"],"name":"RingQuot.instOne","className":"One"},{"typeNames":["RingQuot"],"name":"RingQuot.instAdd","className":"Add"},{"typeNames":["RingQuot"],"name":"RingQuot.instMul","className":"Mul"},{"typeNames":["RingQuot"],"name":"RingQuot.instNatPow","className":"NatPow"},{"typeNames":["RingQuot"],"name":"RingQuot.instNeg","className":"Neg"},{"typeNames":["RingQuot"],"name":"RingQuot.instSub","className":"Sub"},{"typeNames":["RingQuot"],"name":"RingQuot.instSMulOfAlgebra","className":"SMul"},{"typeNames":["RingQuot"],"name":"RingQuot.instIsScalarTower","className":"IsScalarTower"},{"typeNames":["RingQuot"],"name":"RingQuot.instSMulCommClass","className":"SMulCommClass"},{"typeNames":["RingQuot"],"name":"RingQuot.instAddCommMonoid","className":"AddCommMonoid"},{"typeNames":["RingQuot"],"name":"RingQuot.instMonoidWithZero","className":"MonoidWithZero"},{"typeNames":["RingQuot"],"name":"RingQuot.instSemiring","className":"Semiring"},{"typeNames":["RingQuot"],"name":"RingQuot.instRing","className":"Ring"},{"typeNames":["RingQuot"],"name":"RingQuot.instCommSemiring","className":"CommSemiring"},{"typeNames":["RingQuot"],"name":"RingQuot.instCommRing","className":"CommRing"},{"typeNames":["RingQuot"],"name":"RingQuot.instInhabited","className":"Inhabited"},{"typeNames":["RingQuot"],"name":"RingQuot.instAlgebra","className":"Algebra"}],"imports":["Init","Mathlib.Algebra.Algebra.Hom","Mathlib.RingTheory.Congruence.Basic","Mathlib.RingTheory.Ideal.Quotient.Defs","Mathlib.RingTheory.Ideal.Span"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L615-L619","name":"RingQuot.eq_liftAlgHom_comp_mkAlgHom","line":615,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.eq_liftAlgHom_comp_mkAlgHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.eq_liftAlgHom_comp_mkAlgHom\"><span class=\"name\">RingQuot</span>.<span class=\"name\">eq_liftAlgHom_comp_mkAlgHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> uA}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u₄}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">s</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.liftAlgHom\">liftAlgHom</a> <span class=\"fn\">S</span>)</span> <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\">mkAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">s</span>)</span></span>, <span class=\"fn\">⋯</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L610-L613","name":"RingQuot.liftAlgHom_unique","line":610,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.liftAlgHom_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.liftAlgHom_unique\"><span class=\"name\">RingQuot</span>.<span class=\"name\">liftAlgHom_unique</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> uA}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u₄}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">A</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">s</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\">mkAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.liftAlgHom\">liftAlgHom</a> <span class=\"fn\">S</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">w</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L603-L607","name":"RingQuot.liftAlgHom_mkAlgHom_apply","line":603,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.liftAlgHom_mkAlgHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.liftAlgHom_mkAlgHom_apply\"><span class=\"name\">RingQuot</span>.<span class=\"name\">liftAlgHom_mkAlgHom_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> uA}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u₄}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">A</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.liftAlgHom\">liftAlgHom</a> <span class=\"fn\">S</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">w</span>⟩</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\">mkAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">s</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L585-L601","name":"RingQuot.liftAlgHom","line":585,"kind":"def","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.liftAlgHom","doc":"Any `S`-algebra homomorphism `f : A →ₐ[S] B` which respects a relation `s : A → A → Prop`\nfactors uniquely through a morphism `RingQuot s →ₐ[S] B`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.liftAlgHom\"><span class=\"name\">RingQuot</span>.<span class=\"name\">liftAlgHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">∀ ⦃<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">A</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">s</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L585-L601","name":"RingQuot.liftAlgHom_def","line":585,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.liftAlgHom_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.liftAlgHom_def\"><span class=\"name\">RingQuot</span>.<span class=\"name\">liftAlgHom_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.liftAlgHom\">liftAlgHom</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">f'</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">∀ ⦃<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">A</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.preLiftAlgHom\">preLiftAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">⋯</span></span></span>,\n    <span class=\"fn\">invFun</span> := <span class=\"fn\">fun (<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">s</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\">mkAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">s</span>)</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>, <span class=\"fn\">left_inv</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">right_inv</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L562-L583","name":"RingQuot.preLiftAlgHom","line":562,"kind":"def","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.preLiftAlgHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.preLiftAlgHom\"><span class=\"name\">RingQuot</span>.<span class=\"name\">preLiftAlgHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">A</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">s</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L562-L583","name":"RingQuot.preLiftAlgHom_def","line":562,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.preLiftAlgHom_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.preLiftAlgHom_def\"><span class=\"name\">RingQuot</span>.<span class=\"name\">preLiftAlgHom_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">A</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.preLiftAlgHom\">preLiftAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.lift\">Quot.lift</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.toQuot\">toQuot</a></span></span></span>, <span class=\"fn\">map_one'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_mul'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">⋯</span>,\n    <span class=\"fn\">map_add'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">commutes'</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L555-L555","name":"RingQuot.ringQuot_ext'_iff","line":555,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuot_ext'_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuot_ext'_iff\"><span class=\"name\">RingQuot</span>.<span class=\"name\">ringQuot_ext'_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> uA}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u₄}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">s</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\">mkAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\">mkAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L555-L560","name":"RingQuot.ringQuot_ext'","line":555,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuot_ext'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuot_ext'\"><span class=\"name\">RingQuot</span>.<span class=\"name\">ringQuot_ext'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> uA}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u₄}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">s</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\">mkAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\">mkAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L547-L551","name":"RingQuot.mkAlgHom_surjective","line":547,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom_surjective\"><span class=\"name\">RingQuot</span>.<span class=\"name\">mkAlgHom_surjective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> uA}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\">mkAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">s</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L543-L545","name":"RingQuot.mkAlgHom_rel","line":543,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom_rel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom_rel\"><span class=\"name\">RingQuot</span>.<span class=\"name\">mkAlgHom_rel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> uA}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">A</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\">mkAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">s</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\">mkAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">s</span>)</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L538-L541","name":"RingQuot.mkAlgHom_coe","line":538,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom_coe\"><span class=\"name\">RingQuot</span>.<span class=\"name\">mkAlgHom_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> uA}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\">mkAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L532-L536","name":"RingQuot.mkAlgHom","line":532,"kind":"def","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom","doc":"The quotient map from an `S`-algebra to its quotient, as a homomorphism of `S`-algebras.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\"><span class=\"name\">RingQuot</span>.<span class=\"name\">mkAlgHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L532-L536","name":"RingQuot.mkAlgHom_def","line":532,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom_def\"><span class=\"name\">RingQuot</span>.<span class=\"name\">mkAlgHom_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkAlgHom\">mkAlgHom</a> <span class=\"fn\">S</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">let <span class=\"fn\">__src</span> := <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">s</span></span>;\n  <span class=\"fn\">{ <span class=\"fn\">toRingHom</span> := <span class=\"fn\">__src</span>, <span class=\"fn\">commutes'</span> := <span class=\"fn\">⋯</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L509-L524","name":"RingQuot.ringQuotEquivIdealQuotient","line":509,"kind":"def","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuotEquivIdealQuotient","doc":"The ring equivalence between `RingQuot r` and `(Ideal.ofRel r).quotient`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuotEquivIdealQuotient\"><span class=\"name\">RingQuot</span>.<span class=\"name\">ringQuotEquivIdealQuotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">B</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span> <a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv\">≃+*</a> <span class=\"fn\">B</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.ofRel\">Ideal.ofRel</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L503-L506","name":"RingQuot.idealQuotientToRingQuot_apply","line":503,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.idealQuotientToRingQuot_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.idealQuotientToRingQuot_apply\"><span class=\"name\">RingQuot</span>.<span class=\"name\">idealQuotientToRingQuot_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">B</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.idealQuotientToRingQuot\">idealQuotientToRingQuot</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/Quotient/Defs.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.ofRel\">Ideal.ofRel</a> <span class=\"fn\">r</span>)</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L488-L501","name":"RingQuot.idealQuotientToRingQuot","line":488,"kind":"def","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.idealQuotientToRingQuot","doc":"The universal ring homomorphism from `B ⧸ Ideal.ofRel r` to `RingQuot r`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.idealQuotientToRingQuot\"><span class=\"name\">RingQuot</span>.<span class=\"name\">idealQuotientToRingQuot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">B</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.ofRel\">Ideal.ofRel</a> <span class=\"fn\">r</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L482-L486","name":"RingQuot.ringQuotToIdealQuotient_apply","line":482,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuotToIdealQuotient_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuotToIdealQuotient_apply\"><span class=\"name\">RingQuot</span>.<span class=\"name\">ringQuotToIdealQuotient_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">B</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuotToIdealQuotient\">ringQuotToIdealQuotient</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/Quotient/Defs.html#Ideal.Quotient.mk\">Ideal.Quotient.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.ofRel\">Ideal.ofRel</a> <span class=\"fn\">r</span>)</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L476-L480","name":"RingQuot.ringQuotToIdealQuotient","line":476,"kind":"def","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuotToIdealQuotient","doc":"The universal ring homomorphism from `RingQuot r` to `B ⧸ Ideal.ofRel r`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuotToIdealQuotient\"><span class=\"name\">RingQuot</span>.<span class=\"name\">ringQuotToIdealQuotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">B</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">B</span> <a href=\"./Mathlib/Algebra/Quotient.html#HasQuotient.Quotient\">⧸</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.ofRel\">Ideal.ofRel</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L460-L464","name":"RingQuot.eq_lift_comp_mkRingHom","line":460,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.eq_lift_comp_mkRingHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.eq_lift_comp_mkRingHom\"><span class=\"name\">RingQuot</span>.<span class=\"name\">eq_lift_comp_mkRingHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> uT}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.lift\">lift</a> <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span>)</span></span>, <span class=\"fn\">⋯</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L455-L458","name":"RingQuot.lift_unique","line":455,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.lift_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.lift_unique\"><span class=\"name\">RingQuot</span>.<span class=\"name\">lift_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> uT}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.lift\">lift</a> <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">w</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L448-L452","name":"RingQuot.lift_mkRingHom_apply","line":448,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.lift_mkRingHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.lift_mkRingHom_apply\"><span class=\"name\">RingQuot</span>.<span class=\"name\">lift_mkRingHom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> uT}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.lift\">lift</a> <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">w</span>⟩</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L431-L446","name":"RingQuot.lift_def","line":431,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.lift_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.lift_def\"><span class=\"name\">RingQuot</span>.<span class=\"name\">lift_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.lift\">lift</a> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">f</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">∀ ⦃<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.preLift\">preLift</a> <span class=\"fn\">⋯</span></span></span>,\n    <span class=\"fn\">invFun</span> := <span class=\"fn\">fun (<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span>)</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>, <span class=\"fn\">left_inv</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">right_inv</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L431-L446","name":"RingQuot.lift","line":431,"kind":"def","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.lift","doc":"Any ring homomorphism `f : R →+* T` which respects a relation `r : R → R → Prop`\nfactors uniquely through a morphism `RingQuot r →+* T`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.lift\"><span class=\"name\">RingQuot</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">∀ ⦃<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L411-L429","name":"RingQuot.preLift_def","line":411,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.preLift_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.preLift_def\"><span class=\"name\">RingQuot</span>.<span class=\"name\">preLift_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.preLift\">preLift</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.lift\">Quot.lift</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⋯</span> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.toQuot\">toQuot</a></span></span></span>, <span class=\"fn\">map_one'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_mul'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">⋯</span>,\n    <span class=\"fn\">map_add'</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L411-L429","name":"RingQuot.preLift","line":411,"kind":"def","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.preLift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.preLift\"><span class=\"name\">RingQuot</span>.<span class=\"name\">preLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ ⦃<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L402-L402","name":"RingQuot.ringQuot_ext_iff","line":402,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuot_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuot_ext_iff\"><span class=\"name\">RingQuot</span>.<span class=\"name\">ringQuot_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> uT}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L402-L407","name":"RingQuot.ringQuot_ext","line":402,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuot_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.ringQuot_ext\"><span class=\"name\">RingQuot</span>.<span class=\"name\">ringQuot_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> uT}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">T</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L397-L400","name":"RingQuot.mkRingHom_surjective","line":397,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom_surjective\"><span class=\"name\">RingQuot</span>.<span class=\"name\">mkRingHom_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L394-L395","name":"RingQuot.mkRingHom_rel","line":394,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom_rel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom_rel\"><span class=\"name\">RingQuot</span>.<span class=\"name\">mkRingHom_rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L385-L392","name":"RingQuot.mkRingHom_def","line":385,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom_def\"><span class=\"name\">RingQuot</span>.<span class=\"name\">mkRingHom_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\">mkRingHom</a> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">x</span></span> }</span></span>, <span class=\"fn\">map_one'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_mul'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_zero'</span> := <span class=\"fn\">⋯</span>,\n    <span class=\"fn\">map_add'</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L385-L392","name":"RingQuot.mkRingHom","line":385,"kind":"def","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom","doc":"The quotient map from a ring to its quotient, as a homomorphism of rings.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mkRingHom\"><span class=\"name\">RingQuot</span>.<span class=\"name\">mkRingHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L370-L383","name":"RingQuot.instAlgebra","line":370,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instAlgebra\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instAlgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L367-L368","name":"RingQuot.instInhabited","line":367,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instInhabited\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L364-L365","name":"RingQuot.instCommRing","line":364,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instCommRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instCommRing\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instCommRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L357-L362","name":"RingQuot.instCommSemiring","line":357,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instCommSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instCommSemiring\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instCommSemiring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L330-L355","name":"RingQuot.instRing","line":330,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instRing\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L305-L324","name":"RingQuot.instSemiring","line":305,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instSemiring\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instSemiring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L281-L303","name":"RingQuot.instMonoidWithZero","line":281,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instMonoidWithZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instMonoidWithZero\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instMonoidWithZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#MonoidWithZero\">MonoidWithZero</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L257-L279","name":"RingQuot.instAddCommMonoid","line":257,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instAddCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instAddCommMonoid\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instAddCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L253-L255","name":"RingQuot.instSMulCommClass","line":253,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instSMulCommClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instSMulCommClass\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instSMulCommClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> uT}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">T</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">S</span> <span class=\"fn\">T</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">S</span> <span class=\"fn\">T</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L249-L251","name":"RingQuot.instIsScalarTower","line":249,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instIsScalarTower","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instIsScalarTower\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instIsScalarTower</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> uT}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">S</span> <span class=\"fn\">T</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">T</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">S</span> <span class=\"fn\">T</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">S</span> <span class=\"fn\">T</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L243-L247","name":"RingQuot.smul_quot","line":243,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.smul_quot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.smul_quot\"><span class=\"name\">RingQuot</span>.<span class=\"name\">smul_quot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">a</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> (<span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span>)</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L237-L241","name":"RingQuot.sub_quot","line":237,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.sub_quot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.sub_quot\"><span class=\"name\">RingQuot</span>.<span class=\"name\">sub_quot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">a</span></span> }</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">b</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>)</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L231-L235","name":"RingQuot.neg_quot","line":231,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.neg_quot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.neg_quot\"><span class=\"name\">RingQuot</span>.<span class=\"name\">neg_quot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">a</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span>)</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L227-L229","name":"RingQuot.pow_quot","line":227,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.pow_quot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.pow_quot\"><span class=\"name\">RingQuot</span>.<span class=\"name\">pow_quot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">a</span></span> }</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L222-L225","name":"RingQuot.mul_quot","line":222,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.mul_quot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mul_quot\"><span class=\"name\">RingQuot</span>.<span class=\"name\">mul_quot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">a</span></span> }</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">b</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>)</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L217-L220","name":"RingQuot.add_quot","line":217,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.add_quot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.add_quot\"><span class=\"name\">RingQuot</span>.<span class=\"name\">add_quot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">a</span></span> }</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">b</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>)</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L214-L215","name":"RingQuot.one_quot","line":214,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.one_quot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.one_quot\"><span class=\"name\">RingQuot</span>.<span class=\"name\">one_quot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">1</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L211-L212","name":"RingQuot.zero_quot","line":211,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.zero_quot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.zero_quot\"><span class=\"name\">RingQuot</span>.<span class=\"name\">zero_quot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">toQuot</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">0</span></span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L208-L209","name":"RingQuot.instSMulOfAlgebra","line":208,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instSMulOfAlgebra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instSMulOfAlgebra\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instSMulOfAlgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#SMul\">SMul</a> <span class=\"fn\">S</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L205-L206","name":"RingQuot.instSub","line":205,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instSub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instSub\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instSub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L202-L203","name":"RingQuot.instNeg","line":202,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instNeg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instNeg\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instNeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L199-L200","name":"RingQuot.instNatPow","line":199,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instNatPow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instNatPow\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instNatPow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#NatPow\">NatPow</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L196-L197","name":"RingQuot.instMul","line":196,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instMul\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L193-L194","name":"RingQuot.instAdd","line":193,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instAdd\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L190-L191","name":"RingQuot.instOne","line":190,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instOne\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instOne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L187-L188","name":"RingQuot.instZero","line":187,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instZero\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L184-L185","name":"RingQuot.instNatCast","line":184,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.instNatCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.instNatCast\"><span class=\"name\">RingQuot</span>.<span class=\"name\">instNatCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Cast.html#NatCast\">NatCast</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L138-L138","name":"RingQuot.toQuot","line":138,"kind":"def","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.toQuot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.toQuot\"><span class=\"name\">RingQuot</span>.<span class=\"name\">toQuot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot\">Quot</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L137-L137","name":"RingQuot.mk","line":137,"kind":"ctor","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.mk\"><span class=\"name\">RingQuot</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toQuot</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot\">Quot</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\">RingQuot</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L136-L138","name":"RingQuot","line":136,"kind":"structure","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot","doc":"The quotient of a ring by an arbitrary relation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot\"><span class=\"name\">RingQuot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> uR</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L112-L132","name":"RingQuot.eqvGen_rel_eq","line":112,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.eqvGen_rel_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.eqvGen_rel_eq\"><span class=\"name\">RingQuot</span>.<span class=\"name\">eqvGen_rel_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Relation.html#Relation.EqvGen\">Relation.EqvGen</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Congruence/Defs.html#RingConGen.Rel\">RingConGen.Rel</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L75-L110","name":"RingQuot.ringCon","line":75,"kind":"def","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.ringCon","doc":"`EqvGen (RingQuot.Rel r)` is a ring congruence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.ringCon\"><span class=\"name\">RingQuot</span>.<span class=\"name\">ringCon</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Congruence/Defs.html#RingCon\">RingCon</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L72-L73","name":"RingQuot.Rel.smul","line":72,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.smul\"><span class=\"name\">RingQuot</span>.<span class=\"name\">Rel</span>.<span class=\"name\">smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> uA}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">A</span> → <span class=\"fn\">A</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">A</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> (<span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">a</span>) (<span class=\"fn\">k</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">b</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L69-L70","name":"RingQuot.Rel.sub_right","line":69,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.sub_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.sub_right\"><span class=\"name\">RingQuot</span>.<span class=\"name\">Rel</span>.<span class=\"name\">sub_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\">R</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>) (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L66-L67","name":"RingQuot.Rel.sub_left","line":66,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.sub_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.sub_left\"><span class=\"name\">RingQuot</span>.<span class=\"name\">Rel</span>.<span class=\"name\">sub_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\">R</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span>) (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L63-L64","name":"RingQuot.Rel.neg","line":63,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.neg\"><span class=\"name\">RingQuot</span>.<span class=\"name\">Rel</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">R</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span>) (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">b</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L59-L61","name":"RingQuot.Rel.add_right","line":59,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.add_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.add_right\"><span class=\"name\">RingQuot</span>.<span class=\"name\">Rel</span>.<span class=\"name\">add_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\">R</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>) (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L57-L57","name":"RingQuot.Rel.mul_right","line":57,"kind":"ctor","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.mul_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.mul_right\"><span class=\"name\">RingQuot</span>.<span class=\"name\">Rel</span>.<span class=\"name\">mul_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\">R</span>⦄</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>) (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L56-L56","name":"RingQuot.Rel.mul_left","line":56,"kind":"ctor","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.mul_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.mul_left\"><span class=\"name\">RingQuot</span>.<span class=\"name\">Rel</span>.<span class=\"name\">mul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\">R</span>⦄</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>) (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L55-L55","name":"RingQuot.Rel.add_left","line":55,"kind":"ctor","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.add_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.add_left\"><span class=\"name\">RingQuot</span>.<span class=\"name\">Rel</span>.<span class=\"name\">add_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <span class=\"fn\">R</span>⦄</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>) (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L54-L54","name":"RingQuot.Rel.of","line":54,"kind":"ctor","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel.of\"><span class=\"name\">RingQuot</span>.<span class=\"name\">Rel</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">R</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\">Rel</a> <span class=\"fn\">r</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L49-L57","name":"RingQuot.Rel","line":49,"kind":"inductive","docLink":"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel","doc":"Given an arbitrary relation `r` on a ring, we strengthen it to a relation `Rel r`,\nsuch that the equivalence relation generated by `Rel r` has `x ~ y` if and only if\n`x - y` is in the ideal generated by elements `a - b` such that `r a b`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingQuot.Rel\"><span class=\"name\">RingQuot</span>.<span class=\"name\">Rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> uR}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">R</span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L40-L43","name":"RingCon.coe_algebraMap","line":40,"kind":"theorem","docLink":"./Mathlib/Algebra/RingQuot.html#RingCon.coe_algebraMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingCon.coe_algebraMap\"><span class=\"name\">RingCon</span>.<span class=\"name\">coe_algebraMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> uA}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Congruence/Defs.html#RingCon\">RingCon</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span>)</span> <span class=\"fn\">s</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/RingTheory/Congruence/Defs.html#RingCon.Quotient\">Quotient</a></span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/RingQuot.lean#L34-L38","name":"RingCon.instAlgebraQuotient","line":34,"kind":"instance","docLink":"./Mathlib/Algebra/RingQuot.html#RingCon.instAlgebraQuotient","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/RingQuot.html#RingCon.instAlgebraQuotient\"><span class=\"name\">RingCon</span>.<span class=\"name\">instAlgebraQuotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> uS}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> uA}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Congruence/Defs.html#RingCon\">RingCon</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Mathlib/RingTheory/Congruence/Defs.html#RingCon.Quotient\">Quotient</a></span></span></div></div>"}]}