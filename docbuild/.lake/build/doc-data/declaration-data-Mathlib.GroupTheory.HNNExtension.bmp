{"name":"Mathlib.GroupTheory.HNNExtension","instances":[{"typeNames":["HNNExtension"],"name":"instGroupHNNExtension","className":"Group"},{"typeNames":["HNNExtension.NormalWord.TransversalPair"],"name":"HNNExtension.NormalWord.TransversalPair.nonempty","className":"Nonempty"},{"typeNames":["HNNExtension.NormalWord"],"name":"HNNExtension.NormalWord.instInhabited","className":"Inhabited"},{"typeNames":["HNNExtension.NormalWord"],"name":"HNNExtension.NormalWord.instMulAction","className":"MulAction"},{"typeNames":["HNNExtension.NormalWord"],"name":"HNNExtension.NormalWord.instFaithfulSMul","className":"FaithfulSMul"},{"typeNames":["HNNExtension","HNNExtension.NormalWord"],"name":"HNNExtension.NormalWord.instMulAction_1","className":"MulAction"},{"typeNames":["HNNExtension","HNNExtension.NormalWord"],"name":"HNNExtension.NormalWord.instFaithfulSMul_1","className":"FaithfulSMul"}],"imports":["Init","Mathlib.Algebra.Ring.CharZero","Mathlib.Algebra.Ring.Int.Units","Mathlib.GroupTheory.Coprod.Basic","Mathlib.GroupTheory.Complement"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L672-L680","name":"HNNExtension.ReducedWord.toList_eq_nil_of_mem_of_range","line":672,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.ReducedWord.toList_eq_nil_of_mem_of_range","doc":"**Britton's Lemma**. Any reduced word whose product is an element of `G`, has no\noccurrences of `t`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.ReducedWord.toList_eq_nil_of_mem_of_range\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">ReducedWord</span>.<span class=\"name\">toList_eq_nil_of_mem_of_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord\">NormalWord.ReducedWord</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hw</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">NormalWord.ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a>.<a href=\"./Mathlib/Algebra/Group/Subgroup/Ker.html#MonoidHom.range\">range</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L651-L670","name":"HNNExtension.ReducedWord.map_fst_eq_and_of_prod_eq","line":651,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.ReducedWord.map_fst_eq_and_of_prod_eq","doc":"Two reduced words representing the same element of the `HNNExtension G A B φ` have the same\nlength corresponding list, with the same pattern of occurrences of `t^1` and `t^(-1)`,\nand also the `head` is in the same left coset of `toSubgroup A B (-u)`, where `u : ℤˣ`\nis the exponent of the first occurrence of `t` in the word. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.ReducedWord.map_fst_eq_and_of_prod_eq\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">ReducedWord</span>.<span class=\"name\">map_fst_eq_and_of_prod_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w₁ </span><span class=\"fn\">w₂</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord\">NormalWord.ReducedWord</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hprod</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">NormalWord.ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\">w₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">NormalWord.ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\">w₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\">w₁</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\">w₂</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>   <span class=\"fn\">∀ <span class=\"fn\">u</span> ∈ <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w₁</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.head?\">head?</a></span></span>, <span class=\"fn\"><span class=\"fn\">w₁</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w₂</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">u</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L597-L649","name":"HNNExtension.ReducedWord.exists_normalWord_prod_eq","line":597,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.ReducedWord.exists_normalWord_prod_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.ReducedWord.exists_normalWord_prod_eq\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">ReducedWord</span>.<span class=\"name\">exists_normalWord_prod_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">NormalWord.TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord\">NormalWord.ReducedWord</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">w'</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>),\n  <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">NormalWord.ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">w'</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord\">toReducedWord</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">NormalWord.ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\">w'</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\">∀ <span class=\"fn\">u</span> ∈ <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.head?\">head?</a></span></span>, <span class=\"fn\"><span class=\"fn\">w'</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">u</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L587-L593","name":"HNNExtension.of_injective","line":587,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of_injective\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L580-L581","name":"HNNExtension.NormalWord.instFaithfulSMul_1","line":580,"kind":"instance","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.instFaithfulSMul_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.instFaithfulSMul_1\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">instFaithfulSMul_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Faithful.html#FaithfulSMul\">FaithfulSMul</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L576-L578","name":"HNNExtension.NormalWord.prod_injective","line":576,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_injective\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">prod_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord\">toReducedWord</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L569-L574","name":"HNNExtension.NormalWord.equiv","line":569,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.equiv","doc":"The equivalence between elements of the HNN extension and words in normal form. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.equiv\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L551-L566","name":"HNNExtension.NormalWord.prod_smul_empty","line":551,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_smul_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_smul_empty\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">prod_smul_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord\">toReducedWord</a></span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.empty\">empty</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L540-L549","name":"HNNExtension.NormalWord.prod_smul","line":540,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_smul\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">prod_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">w</span>).<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord\">toReducedWord</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord\">toReducedWord</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L536-L538","name":"HNNExtension.NormalWord.prod_empty","line":536,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_empty\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">prod_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.empty\">empty</a>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord\">toReducedWord</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L511-L534","name":"HNNExtension.NormalWord.prod_unitsSMul","line":511,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_unitsSMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_unitsSMul\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">prod_unitsSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul\">unitsSMul</a> <span class=\"fn\">φ</span> <span class=\"fn\">u</span> <span class=\"fn\">w</span>)</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord\">toReducedWord</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">↑<span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord\">toReducedWord</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L504-L509","name":"HNNExtension.NormalWord.prod_cons","line":504,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_cons\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">prod_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\">set</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">∀ <span class=\"fn\">u'</span> ∈ <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.head?\">head?</a></span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span></span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u'</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons\">cons</a> <span class=\"fn\">g</span> <span class=\"fn\">u</span> <span class=\"fn\">w</span> <span class=\"fn\">h1</span> <span class=\"fn\">h2</span>)</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord\">toReducedWord</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">↑<span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord\">toReducedWord</a></span></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L499-L502","name":"HNNExtension.NormalWord.t_pow_smul_eq_unitsSMul","line":499,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.t_pow_smul_eq_unitsSMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.t_pow_smul_eq_unitsSMul\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">t_pow_smul_eq_unitsSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">↑<span class=\"fn\">u</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul\">unitsSMul</a> <span class=\"fn\">φ</span> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L495-L497","name":"HNNExtension.NormalWord.t_smul_eq_unitsSMul","line":495,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.t_smul_eq_unitsSMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.t_smul_eq_unitsSMul\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">t_smul_eq_unitsSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul\">unitsSMul</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L491-L493","name":"HNNExtension.NormalWord.of_smul_eq_smul","line":491,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.of_smul_eq_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.of_smul_eq_smul\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">of_smul_eq_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">g</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">w</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L486-L489","name":"HNNExtension.NormalWord.prod_group_smul","line":486,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_group_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.prod_group_smul\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">prod_group_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">w</span>).<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord\">toReducedWord</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\">ReducedWord.prod</a> <span class=\"fn\">φ</span> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord\">toReducedWord</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L479-L484","name":"HNNExtension.NormalWord.instMulAction_1","line":479,"kind":"instance","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.instMulAction_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.instMulAction_1\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">instMulAction_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L456-L477","name":"HNNExtension.NormalWord.unitsSMul_one_group_smul","line":456,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul_one_group_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul_one_group_smul\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">unitsSMul_one_group_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul\">unitsSMul</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> (<span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">w</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul\">unitsSMul</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L449-L449","name":"HNNExtension.NormalWord.unitsSMulEquiv_symm_apply","line":449,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulEquiv_symm_apply\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">unitsSMulEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulEquiv\">unitsSMulEquiv</a> <span class=\"fn\">φ</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul\">unitsSMul</a> <span class=\"fn\">φ</span> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L449-L449","name":"HNNExtension.NormalWord.unitsSMulEquiv_apply","line":449,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulEquiv_apply\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">unitsSMulEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulEquiv\">unitsSMulEquiv</a> <span class=\"fn\">φ</span>)</span> <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul\">unitsSMul</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L448-L454","name":"HNNExtension.NormalWord.unitsSMulEquiv","line":448,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulEquiv","doc":"the equivalence given by multiplication on the left by `t` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulEquiv\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">unitsSMulEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L414-L446","name":"HNNExtension.NormalWord.unitsSMul_neg","line":414,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul_neg\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">unitsSMul_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul\">unitsSMul</a> <span class=\"fn\">φ</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">u</span>) <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul\">unitsSMul</a> <span class=\"fn\">φ</span> <span class=\"fn\">u</span> <span class=\"fn\">w</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L397-L412","name":"HNNExtension.NormalWord.unitsSMul_cancels_iff","line":397,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul_cancels_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul_cancels_iff\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">unitsSMul_cancels_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.Cancels\">Cancels</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">u</span>) <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul\">unitsSMul</a> <span class=\"fn\">φ</span> <span class=\"fn\">u</span> <span class=\"fn\">w</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.Cancels\">Cancels</a> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L386-L395","name":"HNNExtension.NormalWord.not_cancels_of_cons_hyp","line":386,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.not_cancels_of_cons_hyp","doc":"A condition for not cancelling whose hypothese are the same as those of the `cons` function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.not_cancels_of_cons_hyp\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">not_cancels_of_cons_hyp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">∀ <span class=\"fn\">u'</span> ∈ <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.head?\">head?</a></span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span></span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u'</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.Cancels\">Cancels</a> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L364-L384","name":"HNNExtension.NormalWord.unitsSMul","line":364,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul","doc":"Multiplying `t^u` by a `NormalWord`, `w` and putting the result in normal form. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMul\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">unitsSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L357-L362","name":"HNNExtension.NormalWord.unitsSMulWithCancel","line":357,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulWithCancel","doc":"Multiplying `t^u` by `w` in the special case where cancellation happens "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulWithCancel\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">unitsSMulWithCancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.Cancels\">Cancels</a> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L352-L355","name":"HNNExtension.NormalWord.Cancels","line":352,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.Cancels","doc":"`Cancels u w` is a predicate expressing whether `t^u` cancels with some occurrence\nof `t^-u` when we multiply `t^u` by `w`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.Cancels\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">Cancels</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L346-L348","name":"HNNExtension.NormalWord.unitsSMulGroup_snd","line":346,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulGroup_snd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulGroup_snd\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">unitsSMulGroup_snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulGroup\">unitsSMulGroup</a> <span class=\"fn\">φ</span> <span class=\"fn\">d</span> <span class=\"fn\">u</span> <span class=\"fn\">g</span>)</span>.2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/GroupTheory/Complement.html#Subgroup.IsComplement.equiv\">equiv</a></span> <span class=\"fn\">g</span>)</span>.2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L339-L344","name":"HNNExtension.NormalWord.unitsSMulGroup","line":339,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulGroup","doc":"The action of `t^u` on `ofGroup g`. The normal form will be\n`a * t^u * g'` where `a ∈ toSubgroup A B (-u)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.unitsSMulGroup\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">unitsSMulGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">u</span>))</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\">set</a></span> <span class=\"fn\">u</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L334-L336","name":"HNNExtension.NormalWord.smul_ofGroup","line":334,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.smul_ofGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.smul_ofGroup\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">smul_ofGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g₁</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup\">ofGroup</a> <span class=\"fn\">g₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup\">ofGroup</a> (<span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g₂</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L328-L332","name":"HNNExtension.NormalWord.smul_cons","line":328,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.smul_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.smul_cons\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">smul_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\">set</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">∀ <span class=\"fn\">u'</span> ∈ <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.head?\">head?</a></span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span></span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u'</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g₁</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons\">cons</a> <span class=\"fn\">g₂</span> <span class=\"fn\">u</span> <span class=\"fn\">w</span> <span class=\"fn\">h1</span> <span class=\"fn\">h2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons\">cons</a> (<span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g₂</span>) <span class=\"fn\">u</span> <span class=\"fn\">w</span> <span class=\"fn\">h1</span> <span class=\"fn\">h2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L316-L326","name":"HNNExtension.NormalWord.consRecOn_cons","line":316,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.consRecOn_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.consRecOn_cons\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">consRecOn_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">motive</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span> → <a href=\"./foundational_types.html\">Sort</a> u_4</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\">set</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">∀ <span class=\"fn\">u'</span> ∈ <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.head?\">head?</a></span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span></span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u'</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ofGroup</span> : <span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>) → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup\">ofGroup</a> <span class=\"fn\">g</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cons</span> :\n  <span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>) →\n    <span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>) →\n      <span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>) →\n        <span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\">set</a></span> <span class=\"fn\">u</span></span>) →\n          <span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">∀ <span class=\"fn\">u'</span> ∈ <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.head?\">head?</a></span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span></span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u'</span></span></span>) →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">w</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons\">cons</a> <span class=\"fn\">g</span> <span class=\"fn\">u</span> <span class=\"fn\">w</span> <span class=\"fn\">h1</span> <span class=\"fn\">h2</span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.consRecOn\">consRecOn</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons\">HNNExtension.NormalWord.cons</a> <span class=\"fn\">g</span> <span class=\"fn\">u</span> <span class=\"fn\">w</span> <span class=\"fn\">h1</span> <span class=\"fn\">h2</span>)</span> <span class=\"fn\">ofGroup</span> <span class=\"fn\">cons</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">cons</span> <span class=\"fn\">g</span> <span class=\"fn\">u</span> <span class=\"fn\">w</span> <span class=\"fn\">h1</span> <span class=\"fn\">h2</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.consRecOn\">consRecOn</a> <span class=\"fn\">w</span> <span class=\"fn\">ofGroup</span> <span class=\"fn\">cons</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L307-L314","name":"HNNExtension.NormalWord.consRecOn_ofGroup","line":307,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.consRecOn_ofGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.consRecOn_ofGroup\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">consRecOn_ofGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">motive</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span> → <a href=\"./foundational_types.html\">Sort</a> u_4</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ofGroup</span> : <span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>) → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup\">ofGroup</a> <span class=\"fn\">g</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cons</span> :\n  <span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>) →\n    <span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>) →\n      <span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>) →\n        <span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\">set</a></span> <span class=\"fn\">u</span></span>) →\n          <span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">∀ <span class=\"fn\">u'</span> ∈ <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.head?\">head?</a></span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span></span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u'</span></span></span>) →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">w</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons\">cons</a> <span class=\"fn\">g</span> <span class=\"fn\">u</span> <span class=\"fn\">w</span> <span class=\"fn\">h1</span> <span class=\"fn\">h2</span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.consRecOn\">consRecOn</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup\">HNNExtension.NormalWord.ofGroup</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\">ofGroup</span> <span class=\"fn\">cons</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ofGroup</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L286-L305","name":"HNNExtension.NormalWord.consRecOn","line":286,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.consRecOn","doc":"A recursor to induct on a `NormalWord`, by proving the property is preserved under `cons` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.consRecOn\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">consRecOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">motive</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span> → <a href=\"./foundational_types.html\">Sort</a> u_4</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ofGroup</span> : <span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>) → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup\">ofGroup</a> <span class=\"fn\">g</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cons</span> :\n  <span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>) →\n    <span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>) →\n      <span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>) →\n        <span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\">set</a></span> <span class=\"fn\">u</span></span>) →\n          <span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">∀ <span class=\"fn\">u'</span> ∈ <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.head?\">head?</a></span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span></span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u'</span></span></span>) →\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">w</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons\">cons</a> <span class=\"fn\">g</span> <span class=\"fn\">u</span> <span class=\"fn\">w</span> <span class=\"fn\">h1</span> <span class=\"fn\">h2</span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L269-L269","name":"HNNExtension.NormalWord.cons_head","line":269,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons_head","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons_head\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">cons_head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\">set</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">∀ <span class=\"fn\">u'</span> ∈ <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.head?\">head?</a></span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span></span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u'</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons\">cons</a> <span class=\"fn\">g</span> <span class=\"fn\">u</span> <span class=\"fn\">w</span> <span class=\"fn\">h1</span> <span class=\"fn\">h2</span>)</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L269-L269","name":"HNNExtension.NormalWord.cons_toList","line":269,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons_toList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons_toList\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">cons_toList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\">set</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">∀ <span class=\"fn\">u'</span> ∈ <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.head?\">head?</a></span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span></span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u'</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons\">cons</a> <span class=\"fn\">g</span> <span class=\"fn\">u</span> <span class=\"fn\">w</span> <span class=\"fn\">h1</span> <span class=\"fn\">h2</span>)</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">u</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L266-L284","name":"HNNExtension.NormalWord.cons","line":266,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons","doc":"A constructor to append an element `g` of `G` and `u : ℤˣ` to a word `w` with sufficient\nhypotheses that no normalization or cancellation need take place for the result to be in normal form\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.cons\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\">set</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\">∀ <span class=\"fn\">u'</span> ∈ <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>.<a href=\"./Init/Data/List/Basic.html#List.head?\">head?</a></span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span></span> → <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u'</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L264-L264","name":"HNNExtension.NormalWord.instFaithfulSMul","line":264,"kind":"instance","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.instFaithfulSMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.instFaithfulSMul\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">instFaithfulSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Faithful.html#FaithfulSMul\">FaithfulSMul</a> <span class=\"fn\">G</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L261-L262","name":"HNNExtension.NormalWord.group_smul_toList","line":261,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.group_smul_toList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.group_smul_toList\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">group_smul_toList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">w</span>).<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L258-L259","name":"HNNExtension.NormalWord.group_smul_head","line":258,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.group_smul_head","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.group_smul_head\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">group_smul_head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">w</span>).<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L255-L256","name":"HNNExtension.NormalWord.group_smul_def","line":255,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.group_smul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.group_smul_def\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">group_smul_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">g</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">head</span> := <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span>, <span class=\"fn\">toList</span> := <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>, <span class=\"fn\">chain</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">mem_set</span> := <span class=\"fn\">⋯</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L250-L253","name":"HNNExtension.NormalWord.instMulAction","line":250,"kind":"instance","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.instMulAction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.instMulAction\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">instMulAction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">G</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L248-L248","name":"HNNExtension.NormalWord.instInhabited","line":248,"kind":"instance","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.instInhabited\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L241-L241","name":"HNNExtension.NormalWord.ofGroup_toList","line":241,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup_toList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup_toList\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ofGroup_toList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup\">ofGroup</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L241-L241","name":"HNNExtension.NormalWord.ofGroup_head","line":241,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup_head","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup_head\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ofGroup_head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup\">ofGroup</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L239-L246","name":"HNNExtension.NormalWord.ofGroup","line":239,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup","doc":"The `NormalWord` representing an element `g` of the group `G`, which is just the element `g`\nitself. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ofGroup\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ofGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L232-L232","name":"HNNExtension.NormalWord.empty_head","line":232,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.empty_head","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.empty_head\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">empty_head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.empty\">empty</a>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L232-L232","name":"HNNExtension.NormalWord.empty_toList","line":232,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.empty_toList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.empty_toList\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">empty_toList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.empty\">empty</a>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L231-L237","name":"HNNExtension.NormalWord.empty","line":231,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.empty","doc":"The empty word "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.empty\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L226-L226","name":"HNNExtension.NormalWord.ext_iff","line":226,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ext_iff\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w </span><span class=\"fn\">w'</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w'</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w'</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w'</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L226-L229","name":"HNNExtension.NormalWord.ext","line":226,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ext\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w </span><span class=\"fn\">w'</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h1</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w'</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w'</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L222-L222","name":"HNNExtension.NormalWord.mem_set","line":222,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.mem_set","doc":"Every element `g : G` in the list is the chosen element of its coset "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.mem_set\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">mem_set</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">u</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span> → <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\">set</a></span> <span class=\"fn\">u</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L219-L219","name":"HNNExtension.NormalWord.mk","line":219,"kind":"ctor","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.mk\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toReducedWord</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord\">ReducedWord</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mem_set</span> : <span class=\"fn\">∀ (<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>) (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">u</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">g</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">toReducedWord</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span> → <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\">set</a></span> <span class=\"fn\">u</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L219-L222","name":"HNNExtension.NormalWord.toReducedWord","line":219,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.toReducedWord\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">toReducedWord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\">NormalWord</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord\">ReducedWord</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L214-L222","name":"HNNExtension.NormalWord","line":214,"kind":"structure","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord","doc":"Given a `TransversalPair`, we can make a normal form for words in the `HNNExtension G A B φ`.\nThe normal form is a `head`, which is an element of `G`, followed by the product list of pairs,\n`t ^ u * g`, where `u` is `1` or `-1` and `g` is the chosen element of its right coset of\n`toSubgroup A B u`. There should also be no sequences of the form `t^u * g * t^-u`\nwhere `g ∈ toSubgroup A B u` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">NormalWord.TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord\">HNNExtension.NormalWord.ReducedWord</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L210-L212","name":"HNNExtension.NormalWord.ReducedWord.prod","line":210,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod","doc":"The product of a `ReducedWord` as an element of the `HNNExtension` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.prod\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ReducedWord</span>.<span class=\"name\">prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord\">ReducedWord</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span> → <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L203-L203","name":"HNNExtension.NormalWord.ReducedWord.empty_head","line":203,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.empty_head","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.empty_head\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ReducedWord</span>.<span class=\"name\">empty_head</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.empty\">empty</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\">head</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L203-L203","name":"HNNExtension.NormalWord.ReducedWord.empty_toList","line":203,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.empty_toList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.empty_toList\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ReducedWord</span>.<span class=\"name\">empty_toList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.empty\">empty</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L202-L207","name":"HNNExtension.NormalWord.ReducedWord.empty","line":202,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.empty","doc":"The empty reduced word. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.empty\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ReducedWord</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord\">ReducedWord</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L200-L200","name":"HNNExtension.NormalWord.ReducedWord.chain","line":200,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.chain","doc":"There are no sequences of the form `t^u * g * t^-u` where `g ∈ toSubgroup A B u` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.chain\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ReducedWord</span>.<span class=\"name\">chain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord\">ReducedWord</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/List/Basic.html#List.Chain'\">List.Chain'</a> <span class=\"fn\">(fun (<span class=\"fn\">a</span> <span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span></span> → <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.1</span></span>)</span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\">toList</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L198-L198","name":"HNNExtension.NormalWord.ReducedWord.toList","line":198,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList","doc":"The list of pairs `(ℤˣ × G)`, where each pair `(u, g)` represents the element `t^u * g` of\n`HNNExtension G A B φ` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.toList\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ReducedWord</span>.<span class=\"name\">toList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord\">ReducedWord</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L195-L195","name":"HNNExtension.NormalWord.ReducedWord.head","line":195,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head","doc":"Every `ReducedWord` is the product of an element of the group and a word made up\nof letters each of which is in the transversal. `head` is that element of the base group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.head\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ReducedWord</span>.<span class=\"name\">head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord\">ReducedWord</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L192-L192","name":"HNNExtension.NormalWord.ReducedWord.mk","line":192,"kind":"ctor","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord.mk\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ReducedWord</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">head</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toList</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">chain</span> : <span class=\"fn\"><a href=\"./Batteries/Data/List/Basic.html#List.Chain'\">List.Chain'</a> <span class=\"fn\">(fun (<span class=\"fn\">a</span> <span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">G</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.2</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span></span> → <span class=\"fn\"><span class=\"fn\">a</span>.1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.1</span></span>)</span> <span class=\"fn\">toList</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord\">ReducedWord</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L189-L200","name":"HNNExtension.NormalWord.ReducedWord","line":189,"kind":"structure","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord","doc":"A reduced word is a `head`, which is an element of `G`, followed by the product list of pairs.\nThere should also be no sequences of the form `t^u * g * t^-u`, where `g` is in\n`toSubgroup A B u` This is a less strict condition than required for `NormalWord`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.ReducedWord\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">ReducedWord</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L185-L187","name":"HNNExtension.NormalWord.TransversalPair.nonempty","line":185,"kind":"instance","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.nonempty\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">TransversalPair</span>.<span class=\"name\">nonempty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L183-L183","name":"HNNExtension.NormalWord.TransversalPair.compl","line":183,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.compl","doc":"We have exactly one element of each coset of the subgroup "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.compl\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">TransversalPair</span>.<span class=\"name\">compl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Complement.html#Subgroup.IsComplement\">Subgroup.IsComplement</a> <span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\">set</a></span> <span class=\"fn\">u</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L181-L181","name":"HNNExtension.NormalWord.TransversalPair.set","line":181,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set","doc":"The transversal of each subgroup "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.set\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">TransversalPair</span>.<span class=\"name\">set</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L179-L179","name":"HNNExtension.NormalWord.TransversalPair.mk","line":179,"kind":"ctor","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair.mk\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">TransversalPair</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">set</span> : <span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">compl</span> : <span class=\"fn\">∀ (<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>), <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Complement.html#Subgroup.IsComplement\">Subgroup.IsComplement</a> <span class=\"fn\">(↑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\">set</span> <span class=\"fn\">u</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\">TransversalPair</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L177-L183","name":"HNNExtension.NormalWord.TransversalPair","line":177,"kind":"structure","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair","doc":"To put word in the HNN Extension into a normal form, we must choose an element of each right\ncoset of both `A` and `B`, such that the chosen element of the subgroup itself is `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.NormalWord.TransversalPair\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">NormalWord</span>.<span class=\"name\">TransversalPair</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L166-L172","name":"HNNExtension.toSubgroupEquiv_neg_apply","line":166,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroupEquiv_neg_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroupEquiv_neg_apply\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">toSubgroupEquiv_neg_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroupEquiv\">toSubgroupEquiv</a> <span class=\"fn\">φ</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">u</span>))</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroupEquiv\">toSubgroupEquiv</a> <span class=\"fn\">φ</span> <span class=\"fn\">u</span>)</span> <span class=\"fn\">a</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L163-L164","name":"HNNExtension.toSubgroupEquiv_neg_one","line":163,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroupEquiv_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroupEquiv_neg_one\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">toSubgroupEquiv_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroupEquiv\">toSubgroupEquiv</a> <span class=\"fn\">φ</span> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv.symm\">symm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L160-L161","name":"HNNExtension.toSubgroupEquiv_one","line":160,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroupEquiv_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroupEquiv_one\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">toSubgroupEquiv_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroupEquiv\">toSubgroupEquiv</a> <span class=\"fn\">φ</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L151-L158","name":"HNNExtension.toSubgroupEquiv","line":151,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroupEquiv","doc":"To avoid duplicating code, we define `toSubgroup A B u` and `toSubgroupEquiv u`\nwhere `u : ℤˣ` is `1` or `-1`. `toSubgroup A B u` is `A` when `u = 1` and `B` when `u = -1`,\nand `toSubgroupEquiv` is the group ismorphism from `toSubgroup A B u` to `toSubgroup A B (-u)`.\nIt is defined to be `φ` when `u = 1` and `φ⁻¹` when `u = -1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroupEquiv\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">toSubgroupEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">u</span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">u</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L146-L147","name":"HNNExtension.toSubgroup_neg_one","line":146,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup_neg_one\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">toSubgroup_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">B</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L143-L144","name":"HNNExtension.toSubgroup_one","line":143,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup_one\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">toSubgroup_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\">toSubgroup</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">A</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L136-L141","name":"HNNExtension.toSubgroup","line":136,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup","doc":"To avoid duplicating code, we define `toSubgroup A B u` and `toSubgroupEquiv u`\nwhere `u : ℤˣ` is `1` or `-1`. `toSubgroup A B u` is `A` when `u = 1` and `B` when `u = -1`,\nand `toSubgroupEquiv` is `φ` when `u = 1` and `φ⁻¹` when `u = -1`. `toSubgroup u` is the subgroup\nsuch that for any `a ∈ toSubgroup u`, `t ^ (u : ℤ) * a = toSubgroupEquiv a * t ^ (u : ℤ)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.toSubgroup\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">toSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L115-L132","name":"HNNExtension.induction_on","line":115,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.induction_on","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.induction_on\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">induction_on</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">motive</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">of</span> : <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">g</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">motive</span> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mul</span> : <span class=\"fn\">∀ (<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">inv</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L109-L109","name":"HNNExtension.hom_ext_iff","line":109,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.hom_ext_iff\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">comp</a></span> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">comp</a></span> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L109-L113","name":"HNNExtension.hom_ext","line":109,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.hom_ext\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">comp</a></span> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom.comp\">comp</a></span> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht</span> : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L104-L107","name":"HNNExtension.lift_of","line":104,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.lift_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.lift_of\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">lift_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">a</span>)</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.lift\">lift</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L99-L102","name":"HNNExtension.lift_t","line":99,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.lift_t","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.lift_t\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">lift_t</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">a</span>)</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.lift\">lift</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span>)</span> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L92-L97","name":"HNNExtension.lift","line":92,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.lift","doc":"Define a function `HNNExtension G A B φ →* H`, by defining it on `G` and `t` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.lift\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">a</span>)</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">H</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L88-L90","name":"HNNExtension.of_mul_inv_t","line":88,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of_mul_inv_t","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of_mul_inv_t\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">of_mul_inv_t</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">a</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L84-L86","name":"HNNExtension.inv_t_mul_of","line":84,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.inv_t_mul_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.inv_t_mul_of\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">inv_t_mul_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv.symm\">symm</a></span> <span class=\"fn\">b</span>)</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L80-L82","name":"HNNExtension.equiv_symm_eq_conj","line":80,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.equiv_symm_eq_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.equiv_symm_eq_conj\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">equiv_symm_eq_conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv.symm\">symm</a></span> <span class=\"fn\">b</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L76-L78","name":"HNNExtension.equiv_eq_conj","line":76,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.equiv_eq_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.equiv_eq_conj\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">equiv_eq_conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">a</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L72-L74","name":"HNNExtension.of_mul_t","line":72,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of_mul_t","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of_mul_t\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">of_mul_t</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">φ</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv.symm\">symm</a></span> <span class=\"fn\">b</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L68-L70","name":"HNNExtension.t_mul_of","line":68,"kind":"theorem","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t_mul_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t_mul_of\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">t_mul_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\">of</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">a</span>)</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\">t</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L64-L66","name":"HNNExtension.t","line":64,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t","doc":"The stable letter of the `HNNExtension` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.t\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">t</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L60-L62","name":"HNNExtension.of","line":60,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of","doc":"The canonical embedding `G →* HNNExtension G A B φ` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.of\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L55-L56","name":"instGroupHNNExtension","line":55,"kind":"instance","docLink":"./Mathlib/GroupTheory/HNNExtension.html#instGroupHNNExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#instGroupHNNExtension\"><span class=\"name\">instGroupHNNExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\">HNNExtension</a> <span class=\"fn\">G</span> <span class=\"fn\">A</span> <span class=\"fn\">B</span> <span class=\"fn\">φ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L45-L50","name":"HNNExtension","line":45,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension","doc":"The HNN Extension of a group `G`, `HNNExtension G A B φ`. Given a group `G`, subgroups `A` and\n`B` and an isomorphism `φ` of `A` and `B`, we adjoin a letter `t` to `G`, such that for\nany `a ∈ A`, the conjugate of `of a` by `t` is `of (φ a)`, where `of` is the canonical\nmap from `G` into the `HNNExtension`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension\"><span class=\"name\">HNNExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/HNNExtension.lean#L38-L43","name":"HNNExtension.con","line":38,"kind":"def","docLink":"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.con","doc":"The relation we quotient the coproduct by to form an `HNNExtension`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/HNNExtension.html#HNNExtension.con\"><span class=\"name\">HNNExtension</span>.<span class=\"name\">con</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">↥<span class=\"fn\">A</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Congruence/Defs.html#Con\">Con</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coprod/Basic.html#Monoid.Coprod\">Monoid.Coprod</a> <span class=\"fn\">G</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span></div></div>"}]}