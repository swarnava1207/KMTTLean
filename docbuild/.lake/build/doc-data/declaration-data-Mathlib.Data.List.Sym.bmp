{"name":"Mathlib.Data.List.Sym","instances":[],"imports":["Init","Mathlib.Data.Nat.Choose.Basic","Mathlib.Data.Sym.Sym2"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L313-L321","name":"List.length_sym","line":313,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.length_sym","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.length_sym\"><span class=\"name\">List</span>.<span class=\"name\">length_sym</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Sym.html#List.sym\">List.sym</a> <span class=\"fn\">n</span> <span class=\"fn\">xs</span>)</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span>.<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.multichoose\">multichoose</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L296-L311","name":"List.Nodup.sym","line":296,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.Nodup.sym","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.Nodup.sym\"><span class=\"name\">List</span>.<span class=\"name\">Nodup</span>.<span class=\"name\">sym</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Sym.html#List.sym\">List.sym</a> <span class=\"fn\">n</span> <span class=\"fn\">xs</span>)</span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L292-L294","name":"List.first_mem_of_cons_mem_sym","line":292,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.first_mem_of_cons_mem_sym","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.first_mem_of_cons_mem_sym\"><span class=\"name\">List</span>.<span class=\"name\">first_mem_of_cons_mem_sym</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Sym/Basic.html#Sym\">Sym</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Mathlib/Data/Sym/Basic.html#Sym.cons\">::ₛ</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/Sym.html#List.sym\">List.sym</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">xs</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">xs</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L274-L290","name":"List.mem_of_mem_of_mem_sym","line":274,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.mem_of_mem_of_mem_sym","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.mem_of_mem_of_mem_sym\"><span class=\"name\">List</span>.<span class=\"name\">mem_of_mem_of_mem_sym</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Sym/Basic.html#Sym\">Sym</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">z</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/Sym.html#List.sym\">List.sym</a> <span class=\"fn\">n</span> <span class=\"fn\">xs</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">xs</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L271-L272","name":"List.sym_sublist_sym_cons","line":271,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.sym_sublist_sym_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.sym_sublist_sym_cons\"><span class=\"name\">List</span>.<span class=\"name\">sym_sublist_sym_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Sym.html#List.sym\">List.sym</a> <span class=\"fn\">n</span> <span class=\"fn\">xs</span>)</span>.<a href=\"./Init/Data/List/Basic.html#List.Sublist\">Sublist</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/List/Sym.html#List.sym\">List.sym</a> <span class=\"fn\">n</span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L257-L269","name":"List.Sublist.sym","line":257,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.Sublist.sym","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.Sublist.sym\"><span class=\"name\">List</span>.<span class=\"name\">Sublist</span>.<span class=\"name\">sym</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs </span><span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Init/Data/List/Basic.html#List.Sublist\">Sublist</a></span> <span class=\"fn\">ys</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/List/Sym.html#List.sym\">List.sym</a> <span class=\"fn\">n</span> <span class=\"fn\">xs</span>)</span>.<a href=\"./Init/Data/List/Basic.html#List.Sublist\">Sublist</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/List/Sym.html#List.sym\">List.sym</a> <span class=\"fn\">n</span> <span class=\"fn\">ys</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L245-L255","name":"List.sym_map","line":245,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.sym_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.sym_map\"><span class=\"name\">List</span>.<span class=\"name\">sym_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/Sym.html#List.sym\">List.sym</a> <span class=\"fn\">n</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">xs</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sym/Basic.html#Sym.map\">Sym.map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/List/Sym.html#List.sym\">List.sym</a> <span class=\"fn\">n</span> <span class=\"fn\">xs</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L238-L243","name":"List.sym2_eq_sym_two","line":238,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.sym2_eq_sym_two","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.sym2_eq_sym_two\"><span class=\"name\">List</span>.<span class=\"name\">sym2_eq_sym_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(⇑<span class=\"fn\">(<a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.equivSym\">Sym2.equivSym</a> <span class=\"fn\">α</span>)</span>)</span> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/List/Sym.html#List.sym\">List.sym</a> <span class=\"fn\">2</span> <span class=\"fn\">xs</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L232-L236","name":"List.sym_one_eq","line":232,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.sym_one_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.sym_one_eq\"><span class=\"name\">List</span>.<span class=\"name\">sym_one_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/Sym.html#List.sym\">List.sym</a> <span class=\"fn\">1</span> <span class=\"fn\">xs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">x</span> <a href=\"./Mathlib/Data/Sym/Basic.html#Sym.cons\">::ₛ</a> <a href=\"./Mathlib/Data/Sym/Basic.html#Sym.nil\">Sym.nil</a>)</span> <span class=\"fn\">xs</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L224-L228","name":"List.sym","line":224,"kind":"def","docLink":"./Mathlib/Data/List/Sym.html#List.sym","doc":"`xs.sym n` is all unordered `n`-tuples from the list `xs` in some order. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.sym\"><span class=\"name\">List</span>.<span class=\"name\">sym</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sym/Basic.html#Sym\">Sym</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L213-L218","name":"List.length_sym2","line":213,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.length_sym2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.length_sym2\"><span class=\"name\">List</span>.<span class=\"name\">length_sym2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>).<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L209-L211","name":"List.Subperm.sym2","line":209,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.Subperm.sym2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.Subperm.sym2\"><span class=\"name\">List</span>.<span class=\"name\">Subperm</span>.<span class=\"name\">sym2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs </span><span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Batteries/Data/List/Basic.html#List.Subperm\">Subperm</a></span> <span class=\"fn\">ys</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span>.<a href=\"./Batteries/Data/List/Basic.html#List.Subperm\">Subperm</a></span> <span class=\"fn\"><span class=\"fn\">ys</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L199-L207","name":"List.Sublist.sym2","line":199,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.Sublist.sym2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.Sublist.sym2\"><span class=\"name\">List</span>.<span class=\"name\">Sublist</span>.<span class=\"name\">sym2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs </span><span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Init/Data/List/Basic.html#List.Sublist\">Sublist</a></span> <span class=\"fn\">ys</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span>.<a href=\"./Init/Data/List/Basic.html#List.Sublist\">Sublist</a></span> <span class=\"fn\"><span class=\"fn\">ys</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L182-L197","name":"List.Perm.sym2","line":182,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.Perm.sym2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.Perm.sym2\"><span class=\"name\">List</span>.<span class=\"name\">Perm</span>.<span class=\"name\">sym2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs </span><span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\">ys</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span>.<a href=\"./Init/Data/List/Basic.html#List.Perm\">Perm</a></span> <span class=\"fn\"><span class=\"fn\">ys</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L165-L180","name":"List.dedup_sym2","line":165,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.dedup_sym2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.dedup_sym2\"><span class=\"name\">List</span>.<span class=\"name\">dedup_sym2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span>.<a href=\"./Mathlib/Data/List/Defs.html#List.dedup\">dedup</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Defs.html#List.dedup\">dedup</a></span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L137-L163","name":"List.map_mk_disjoint_sym2","line":137,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.map_mk_disjoint_sym2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.map_mk_disjoint_sym2\"><span class=\"name\">List</span>.<span class=\"name\">map_mk_disjoint_sym2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">x</span> ∉ <span class=\"fn\">xs</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">s(</a><span class=\"fn\">x</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">)</a></span>)</span> <span class=\"fn\">xs</span>)</span>.<a href=\"./Batteries/Data/List/Basic.html#List.Disjoint\">Disjoint</a></span> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L121-L135","name":"List.map_mk_sublist_sym2","line":121,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.map_mk_sublist_sym2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.map_mk_sublist_sym2\"><span class=\"name\">List</span>.<span class=\"name\">map_mk_sublist_sym2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">xs</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(fun (<span class=\"fn\">y</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">s(</a><span class=\"fn\">x</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">)</a></span>)</span> <span class=\"fn\">xs</span>)</span>.<a href=\"./Init/Data/List/Basic.html#List.Sublist\">Sublist</a></span> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L100-L119","name":"List.Nodup.sym2","line":100,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.Nodup.sym2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.Nodup.sym2\"><span class=\"name\">List</span>.<span class=\"name\">Nodup</span>.<span class=\"name\">sym2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span>.<a href=\"./Init/Data/List/Basic.html#List.Nodup\">Nodup</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L95-L98","name":"List.mem_sym2_iff","line":95,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.mem_sym2_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.mem_sym2_iff\"><span class=\"name\">List</span>.<span class=\"name\">mem_sym2_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2\">Sym2</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">y</span> ∈ <span class=\"fn\">z</span>, <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">xs</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L87-L93","name":"List.mk_mem_sym2_iff","line":87,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.mk_mem_sym2_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.mk_mem_sym2_iff\"><span class=\"name\">List</span>.<span class=\"name\">mk_mem_sym2_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">s(</a><span class=\"fn\">a</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">)</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">xs</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">xs</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L74-L85","name":"List.mk_mem_sym2","line":74,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.mk_mem_sym2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.mk_mem_sym2\"><span class=\"name\">List</span>.<span class=\"name\">mk_mem_sym2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">xs</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">xs</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">s(</a><span class=\"fn\">a</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">)</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L69-L72","name":"List.right_mem_of_mk_mem_sym2","line":69,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.right_mem_of_mk_mem_sym2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.right_mem_of_mk_mem_sym2\"><span class=\"name\">List</span>.<span class=\"name\">right_mem_of_mk_mem_sym2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">s(</a><span class=\"fn\">a</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">)</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">xs</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L55-L67","name":"List.left_mem_of_mk_mem_sym2","line":55,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.left_mem_of_mk_mem_sym2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.left_mem_of_mk_mem_sym2\"><span class=\"name\">List</span>.<span class=\"name\">left_mem_of_mk_mem_sym2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">s(</a><span class=\"fn\">a</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">,</a> <span class=\"fn\">b</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">)</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">xs</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L51-L53","name":"List.sym2_eq_nil_iff","line":51,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.sym2_eq_nil_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.sym2_eq_nil_iff\"><span class=\"name\">List</span>.<span class=\"name\">sym2_eq_nil_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">xs</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L46-L49","name":"List.mem_sym2_cons_iff","line":46,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.mem_sym2_cons_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.mem_sym2_cons_iff\"><span class=\"name\">List</span>.<span class=\"name\">mem_sym2_cons_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2\">Sym2</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">xs</span>).<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">s(</a><span class=\"fn\">x</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">,</a> <span class=\"fn\">x</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">)</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">(∃ <span class=\"fn\">y</span> ∈ <span class=\"fn\">xs</span>, <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">s(</a><span class=\"fn\">x</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">,</a> <span class=\"fn\">y</span><a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.mk\">)</a></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L40-L44","name":"List.sym2_map","line":40,"kind":"theorem","docLink":"./Mathlib/Data/List/Sym.html#List.sym2_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.sym2_map\"><span class=\"name\">List</span>.<span class=\"name\">sym2_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">f</span> <span class=\"fn\">xs</span>)</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.map\">map</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2.map\">Sym2.map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">xs</span>.<a href=\"./Mathlib/Data/List/Sym.html#List.sym2\">sym2</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Data/List/Sym.lean#L34-L38","name":"List.sym2","line":34,"kind":"def","docLink":"./Mathlib/Data/List/Sym.html#List.sym2","doc":"`xs.sym2` is a list of all unordered pairs of elements from `xs`.\nIf `xs` has no duplicates then neither does `xs.sym2`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/List/Sym.html#List.sym2\"><span class=\"name\">List</span>.<span class=\"name\">sym2</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Sym/Sym2.html#Sym2\">Sym2</a> <span class=\"fn\">α</span>)</span></span></span></div></div>"}]}