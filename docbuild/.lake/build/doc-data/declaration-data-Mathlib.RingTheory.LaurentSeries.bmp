{"name":"Mathlib.RingTheory.LaurentSeries","instances":[{"typeNames":["PowerSeries","LaurentSeries"],"name":"LaurentSeries.instCoePowerSeries","className":"Coe"},{"typeNames":["PowerSeries","LaurentSeries"],"name":"LaurentSeries.instAlgebraPowerSeries","className":"Algebra"},{"typeNames":["Submonoid.powers","LaurentSeries"],"name":"LaurentSeries.of_powerSeries_localization","className":"IsLocalization"},{"typeNames":["PowerSeries","LaurentSeries"],"name":"LaurentSeries.instIsFractionRingPowerSeries","className":"IsLocalization"},{"typeNames":["RatFunc","LaurentSeries"],"name":"RatFunc.coeToLaurentSeries","className":"Coe"},{"typeNames":["RatFunc","LaurentSeries"],"name":"RatFunc.instAlgebraLaurentSeries","className":"Algebra"},{"typeNames":["Polynomial","RatFunc","LaurentSeries"],"name":"RatFunc.instIsScalarTowerPolynomialLaurentSeries","className":"IsScalarTower"},{"typeNames":["LaurentSeries","WithZero"],"name":"LaurentSeries.instValuedWithZeroMultiplicativeInt","className":"Valued"},{"typeNames":["LaurentSeries"],"name":"LaurentSeries.instLaurentSeriesComplete","className":"CompleteSpace"},{"typeNames":["AbstractCompletion.space"],"name":"LaurentSeries.instTopologicalSpaceSpaceRatFuncLaurentSeriesPkg","className":"TopologicalSpace"},{"typeNames":["LaurentSeries.RatFuncAdicCompl"],"name":"LaurentSeries.instUniformSpaceRatFuncAdicCompl","className":"UniformSpace"},{"typeNames":["LaurentSeries"],"name":"LaurentSeries.instUniformSpace","className":"UniformSpace"},{"typeNames":["LaurentSeries.RatFuncAdicCompl"],"name":"LaurentSeries.instAlgebraRatFuncAdicCompl","className":"Algebra"},{"typeNames":["Subtype"],"name":"LaurentSeries.instAlgebraSubtypeAdicCompletionPolynomialRatFuncIdealXMemValuationSubringAdicCompletionIntegers","className":"Algebra"}],"imports":["Init","Mathlib.Data.Int.Interval","Mathlib.FieldTheory.RatFunc.AsPolynomial","Mathlib.RingTheory.Binomial","Mathlib.RingTheory.HahnSeries.PowerSeries","Mathlib.RingTheory.HahnSeries.Summable","Mathlib.RingTheory.PowerSeries.Inverse","Mathlib.RingTheory.PowerSeries.Trunc","Mathlib.RingTheory.Localization.FractionRing","Mathlib.Topology.UniformSpace.DiscreteUniformity","Mathlib.Algebra.Group.Int.TypeTags"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1217-L1225","name":"LaurentSeries.powerSeriesAlgEquiv","line":1217,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesAlgEquiv","doc":"The algebra isomorphism between `K⟦X⟧` and the unit ball inside the `X`-adic completion of\n`RatFunc K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesAlgEquiv\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">powerSeriesAlgEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers\">IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/AsPolynomial.html#Polynomial.idealX\">Polynomial.idealX</a> <span class=\"fn\">K</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1212-L1215","name":"LaurentSeries.instAlgebraSubtypeAdicCompletionPolynomialRatFuncIdealXMemValuationSubringAdicCompletionIntegers","line":1212,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instAlgebraSubtypeAdicCompletionPolynomialRatFuncIdealXMemValuationSubringAdicCompletionIntegers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instAlgebraSubtypeAdicCompletionPolynomialRatFuncIdealXMemValuationSubringAdicCompletionIntegers\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">instAlgebraSubtypeAdicCompletionPolynomialRatFuncIdealXMemValuationSubringAdicCompletionIntegers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers\">IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/AsPolynomial.html#Polynomial.idealX\">Polynomial.idealX</a> <span class=\"fn\">K</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1204-L1210","name":"LaurentSeries.algebraMap_C_mem_adicCompletionIntegers","line":1204,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.algebraMap_C_mem_adicCompletionIntegers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.algebraMap_C_mem_adicCompletionIntegers\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">algebraMap_C_mem_adicCompletionIntegers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesRingEquiv\">LaurentSeriesRingEquiv</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv.toRingHom\">toRingHom</a></span>.<a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom.comp\">comp</a></span> <a href=\"./Mathlib/RingTheory/HahnSeries/Multiplication.html#HahnSeries.C\">HahnSeries.C</a>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>   <span class=\"fn\"><a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers\">IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/AsPolynomial.html#Polynomial.idealX\">Polynomial.idealX</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1198-L1202","name":"LaurentSeries.LaurentSeriesRingEquiv_mem_valuationSubring","line":1198,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesRingEquiv_mem_valuationSubring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesRingEquiv_mem_valuationSubring\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">LaurentSeriesRingEquiv_mem_valuationSubring</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesRingEquiv\">LaurentSeriesRingEquiv</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a>.<a href=\"./Mathlib/RingTheory/Valuation/ValuationSubring.html#Valuation.valuationSubring\">valuationSubring</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1194-L1196","name":"LaurentSeries.powerSeriesRingEquiv_coe_apply","line":1194,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesRingEquiv_coe_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesRingEquiv_coe_apply\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">powerSeriesRingEquiv_coe_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesRingEquiv\">powerSeriesRingEquiv</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesRingEquiv\">LaurentSeriesRingEquiv</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1188-L1192","name":"LaurentSeries.powerSeriesRingEquiv","line":1188,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesRingEquiv","doc":"The ring isomorphism between `K⟦X⟧` and the unit ball inside the `X`-adic completion of\n`RatFunc K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesRingEquiv\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">powerSeriesRingEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span> <a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv\">≃+*</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers\">IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/AsPolynomial.html#Polynomial.idealX\">Polynomial.idealX</a> <span class=\"fn\">K</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1176-L1186","name":"LaurentSeries.powerSeries_ext_subring","line":1176,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeries_ext_subring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeries_ext_subring\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">powerSeries_ext_subring</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Subring/Basic.html#Subring.map\">Subring.map</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesRingEquiv\">LaurentSeriesRingEquiv</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv.toRingHom\">toRingHom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeries_as_subring\">powerSeries_as_subring</a> <span class=\"fn\">K</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers\">IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/AsPolynomial.html#Polynomial.idealX\">Polynomial.idealX</a> <span class=\"fn\">K</span>)</span>)</span>.<a href=\"./Mathlib/RingTheory/Valuation/ValuationSubring.html#ValuationSubring.toSubring\">toSubring</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1166-L1174","name":"LaurentSeries.exists_powerSeries_of_memIntegers","line":1166,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.exists_powerSeries_of_memIntegers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.exists_powerSeries_of_memIntegers\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">exists_powerSeries_of_memIntegers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.RatFuncAdicCompl\">RatFuncAdicCompl</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers\">IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/AsPolynomial.html#Polynomial.idealX\">Polynomial.idealX</a> <span class=\"fn\">K</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesRingEquiv\">LaurentSeriesRingEquiv</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">F</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1157-L1162","name":"LaurentSeries.mem_integers_of_powerSeries","line":1157,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.mem_integers_of_powerSeries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.mem_integers_of_powerSeries\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">mem_integers_of_powerSeries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesRingEquiv\">LaurentSeriesRingEquiv</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">F</span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>   <span class=\"fn\"><a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers\">IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/AsPolynomial.html#Polynomial.idealX\">Polynomial.idealX</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1151-L1153","name":"LaurentSeries.powerSeriesEquivSubring_coe_apply","line":1151,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesEquivSubring_coe_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesEquivSubring_coe_apply\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">powerSeriesEquivSubring_coe_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesEquivSubring\">powerSeriesEquivSubring</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1146-L1149","name":"LaurentSeries.powerSeriesEquivSubring_apply","line":1146,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesEquivSubring_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesEquivSubring_apply\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">powerSeriesEquivSubring_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesEquivSubring\">powerSeriesEquivSubring</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">f</span></span>, <span class=\"fn\">⋯</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1141-L1144","name":"LaurentSeries.powerSeriesEquivSubring","line":1141,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesEquivSubring","doc":"The ring `K⟦X⟧` is isomorphic to the subring `powerSeries_as_subring K` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesEquivSubring\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">powerSeriesEquivSubring</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span> <a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv\">≃+*</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeries_as_subring\">powerSeries_as_subring</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1136-L1139","name":"LaurentSeries.powerSeries_as_subring","line":1136,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeries_as_subring","doc":"In order to compare `K⟦X⟧` with the valuation subring in the `X`-adic completion of\n`RatFunc K` we consider its alias as a subring of `K⸨X⸩`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeries_as_subring\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">powerSeries_as_subring</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Subring/Defs.html#Subring\">Subring</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1125-L1132","name":"LaurentSeries.valuation_compare","line":1125,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.valuation_compare","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.valuation_compare\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">valuation_compare</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesPkg\">LaurentSeriesPkg</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare\">compare</a></span> <a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.ratfuncAdicComplPkg\">ratfuncAdicComplPkg</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1090-L1121","name":"LaurentSeries.tendsto_valuation","line":1090,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.tendsto_valuation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.tendsto_valuation\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">tendsto_valuation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.adicCompletion\">IsDedekindDomain.HeightOneSpectrum.adicCompletion</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/AsPolynomial.html#Polynomial.idealX\">Polynomial.idealX</a> <span class=\"fn\">K</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(⇑<a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <a href=\"./Mathlib/Topology/UniformSpace/Completion.html#UniformSpace.Completion.coe'\">UniformSpace.Completion.coe'</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span>)</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a> <span class=\"fn\">a</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1082-L1088","name":"LaurentSeries.valuation_LaurentSeries_equal_extension","line":1082,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.valuation_LaurentSeries_equal_extension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.valuation_LaurentSeries_equal_extension\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">valuation_LaurentSeries_equal_extension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Topology/DenseEmbedding.html#IsDenseInducing.extend\">extend</a></span> <span class=\"fn\">⇑<a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1073-L1076","name":"LaurentSeries.LaurentSeriesAlgEquiv","line":1073,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesAlgEquiv","doc":"The algebra equivalence between `K⸨X⸩` and the `X`-adic completion of `RatFunc X` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesAlgEquiv\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">LaurentSeriesAlgEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">K</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.RatFuncAdicCompl\">RatFuncAdicCompl</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1070-L1071","name":"LaurentSeries.instAlgebraRatFuncAdicCompl","line":1070,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instAlgebraRatFuncAdicCompl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instAlgebraRatFuncAdicCompl\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">instAlgebraRatFuncAdicCompl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">K</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.RatFuncAdicCompl\">RatFuncAdicCompl</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1067-L1068","name":"LaurentSeries.algebraMap_apply","line":1067,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.algebraMap_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.algebraMap_apply\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">algebraMap_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">K</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/HahnSeries/Multiplication.html#HahnSeries.C\">HahnSeries.C</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1061-L1065","name":"LaurentSeries.coe_X_compare","line":1061,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.coe_X_compare","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.coe_X_compare\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">coe_X_compare</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.ratfuncAdicComplRingEquiv\">ratfuncAdicComplRingEquiv</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">↑<a href=\"./Mathlib/FieldTheory/RatFunc/AsPolynomial.html#RatFunc.X\">RatFunc.X</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">K</span>)</span> <a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.X\">PowerSeries.X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1057-L1059","name":"LaurentSeries.ratfuncAdicComplRingEquiv_apply","line":1057,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.ratfuncAdicComplRingEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.ratfuncAdicComplRingEquiv_apply\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">ratfuncAdicComplRingEquiv_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.RatFuncAdicCompl\">RatFuncAdicCompl</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.ratfuncAdicComplRingEquiv\">ratfuncAdicComplRingEquiv</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.ratfuncAdicComplPkg\">ratfuncAdicComplPkg</a>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare\">compare</a></span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesPkg\">LaurentSeriesPkg</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1052-L1055","name":"LaurentSeries.LaurentSeriesRingEquiv_def","line":1052,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesRingEquiv_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesRingEquiv_def\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">LaurentSeriesRingEquiv_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesRingEquiv\">LaurentSeriesRingEquiv</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesPkg\">LaurentSeriesPkg</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.compare\">compare</a></span> <a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.ratfuncAdicComplPkg\">ratfuncAdicComplPkg</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1047-L1050","name":"LaurentSeries.LaurentSeriesRingEquiv","line":1047,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesRingEquiv","doc":"The uniform space equivalence between two abstract completions of `ratfunc K` as a ring\nequivalence: it goes from `K⸨X⸩` to `RatFuncAdicCompl K` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesRingEquiv\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">LaurentSeriesRingEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span> <a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv\">≃+*</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.RatFuncAdicCompl\">RatFuncAdicCompl</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1034-L1045","name":"LaurentSeries.ratfuncAdicComplRingEquiv","line":1034,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.ratfuncAdicComplRingEquiv","doc":"The uniform space equivalence between two abstract completions of `ratfunc K` as a ring\nequivalence: this will be the *inverse* of the fundamental one. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.ratfuncAdicComplRingEquiv\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">ratfuncAdicComplRingEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.RatFuncAdicCompl\">RatFuncAdicCompl</a> <span class=\"fn\">K</span></span> <a href=\"./Mathlib/Algebra/Ring/Equiv.html#RingEquiv\">≃+*</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1031-L1032","name":"LaurentSeries.comparePkg_eq_extension","line":1031,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.comparePkg_eq_extension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.comparePkg_eq_extension\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">comparePkg_eq_extension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Completion.html#UniformSpace.Completion\">UniformSpace.Completion</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.comparePkg\">comparePkg</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.toFun\">toFun</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.extensionAsRingHom\">extensionAsRingHom</a> <span class=\"fn\">K</span> <span class=\"fn\">⋯</span>)</span></span>)</span>.<a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#OneHom.toFun\">toFun</a></span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1027-L1029","name":"LaurentSeries.comparePkg","line":1027,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.comparePkg","doc":"The uniform space isomorphism between two abstract completions of `ratfunc K` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.comparePkg\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">comparePkg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.RatFuncAdicCompl\">RatFuncAdicCompl</a> <span class=\"fn\">K</span></span> <a href=\"./Mathlib/Topology/UniformSpace/Equiv.html#UniformEquiv\">≃ᵤ</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1025-L1025","name":"LaurentSeries.instUniformSpace","line":1025,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instUniformSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instUniformSpace\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">instUniformSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1024-L1024","name":"LaurentSeries.instUniformSpaceRatFuncAdicCompl","line":1024,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instUniformSpaceRatFuncAdicCompl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instUniformSpaceRatFuncAdicCompl\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">instUniformSpaceRatFuncAdicCompl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.RatFuncAdicCompl\">RatFuncAdicCompl</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1020-L1021","name":"LaurentSeries.RatFuncAdicCompl","line":1020,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.RatFuncAdicCompl","doc":"An abbreviation for the `X`-adic completion of `RatFunc K` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.RatFuncAdicCompl\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">RatFuncAdicCompl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1016-L1018","name":"LaurentSeries.extensionAsRingHom","line":1016,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.extensionAsRingHom","doc":"Reintrerpret the extension of `coe : RatFunc K → K⸨X⸩` as ring homomorphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.extensionAsRingHom\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">extensionAsRingHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coeAlgHom\">RatFunc.coeAlgHom</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom.toRingHom\">toRingHom</a></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Basic.html#T0Space\">T0Space</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Completion.html#UniformSpace.Completion\">UniformSpace.Completion</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span>)</span></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1012-L1014","name":"LaurentSeries.LaurentSeries_coe","line":1012,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeries_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeries_coe\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">LaurentSeries_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesPkg\">LaurentSeriesPkg</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.coe\">coe</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L1009-L1010","name":"LaurentSeries.instTopologicalSpaceSpaceRatFuncLaurentSeriesPkg","line":1009,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instTopologicalSpaceSpaceRatFuncLaurentSeriesPkg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instTopologicalSpaceSpaceRatFuncLaurentSeriesPkg\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">instTopologicalSpaceSpaceRatFuncLaurentSeriesPkg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesPkg\">LaurentSeriesPkg</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion.space\">space</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L998-L1007","name":"LaurentSeries.LaurentSeriesPkg","line":998,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesPkg","doc":"Having established that the `K⸨X⸩` is complete and contains `RatFunc K` as a dense\nsubspace, it gives rise to an abstract completion of `RatFunc K`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.LaurentSeriesPkg\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">LaurentSeriesPkg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L993-L995","name":"LaurentSeries.ratfuncAdicComplPkg","line":993,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.ratfuncAdicComplPkg","doc":"The `X`-adic completion as an abstract completion of `RatFunc K` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.ratfuncAdicComplPkg\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">ratfuncAdicComplPkg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/AbstractCompletion.html#AbstractCompletion\">AbstractCompletion</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L990-L991","name":"LaurentSeries.continuous_coe","line":990,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.continuous_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.continuous_coe\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">continuous_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <a href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coeToLaurentSeries_fun\">RatFunc.coeToLaurentSeries_fun</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L962-L988","name":"LaurentSeries.inducing_coe","line":962,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.inducing_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.inducing_coe\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">inducing_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#IsUniformInducing\">IsUniformInducing</a> <a href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coeToLaurentSeries_fun\">RatFunc.coeToLaurentSeries_fun</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L941-L954","name":"LaurentSeries.coe_range_dense","line":941,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.coe_range_dense","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.coe_range_dense\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">coe_range_dense</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#DenseRange\">DenseRange</a> <a href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coeToLaurentSeries_fun\">RatFunc.coeToLaurentSeries_fun</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L911-L939","name":"LaurentSeries.exists_ratFunc_val_lt","line":911,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.exists_ratFunc_val_lt","doc":"For every Laurent series `f` and every `γ : ℤₘ₀` one can find a rational function `Q` such\nthat the `X`-adic valuation `v` satisfies `v (f - Q) < γ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.exists_ratFunc_val_lt\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">exists_ratFunc_val_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">γ</span> : <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/WithOne/Defs.html#WithZero\">WithZero</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">Q</span></span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">γ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L886-L909","name":"LaurentSeries.exists_Polynomial_intValuation_lt","line":886,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.exists_Polynomial_intValuation_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.exists_Polynomial_intValuation_lt\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">exists_Polynomial_intValuation_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">η</span> : <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/WithOne/Defs.html#WithZero\">WithZero</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.idealX\">PowerSeries.idealX</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.intValuation\">intValuation</a></span> (<span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">P</span></span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">η</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L875-L876","name":"LaurentSeries.instLaurentSeriesComplete","line":875,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instLaurentSeriesComplete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instLaurentSeriesComplete\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">instLaurentSeriesComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L858-L872","name":"LaurentSeries.Cauchy.eventually_mem_nhds","line":858,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.eventually_mem_nhds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.eventually_mem_nhds\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">Cauchy</span>.<span class=\"name\">eventually_mem_nhds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">ℱ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hU</span> : <span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.limit\">limit</a> <span class=\"fn\">hℱ</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <span class=\"fn\">ℱ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L821-L853","name":"LaurentSeries.Cauchy.coeff_eventually_equal","line":821,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.coeff_eventually_equal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.coeff_eventually_equal\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">Cauchy</span>.<span class=\"name\">coeff_eventually_equal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">ℱ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <span class=\"fn\">ℱ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\">∀ <span class=\"fn\">d</span> &lt; <span class=\"fn\">D</span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.coeff\">coeff</a> <span class=\"fn\">hℱ</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L813-L817","name":"LaurentSeries.Cauchy.exists_lb_coeff_ne","line":813,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.exists_lb_coeff_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.exists_lb_coeff_ne\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">Cauchy</span>.<span class=\"name\">exists_lb_coeff_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">ℱ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">N</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <span class=\"fn\">ℱ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\">∀ <span class=\"fn\">d</span> &lt; <span class=\"fn\">N</span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.coeff\">coeff</a> <span class=\"fn\">hℱ</span> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">d</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L803-L808","name":"LaurentSeries.Cauchy.limit","line":803,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.limit","doc":"To any Cauchy filter ℱ of `K⸨X⸩`, we can attach a laurent series that is the limit\nof the filter. Its `d`-th coefficient is defined as the limit of `Cauchy.coeff hℱ d`, which is\nagain Cauchy but valued in the discrete space `K`. That sufficiently negative coefficients vanish\nfollows from `Cauchy.coeff_support_bddBelow` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.limit\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">Cauchy</span>.<span class=\"name\">limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">ℱ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L797-L801","name":"LaurentSeries.Cauchy.coeff_support_bddBelow","line":797,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.coeff_support_bddBelow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.coeff_support_bddBelow\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">Cauchy</span>.<span class=\"name\">coeff_support_bddBelow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">ℱ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#BddBelow\">BddBelow</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Support.html#Function.support\">Function.support</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.coeff\">coeff</a> <span class=\"fn\">hℱ</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L787-L794","name":"LaurentSeries.Cauchy.exists_lb_support","line":787,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.exists_lb_support","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.exists_lb_support\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">Cauchy</span>.<span class=\"name\">exists_lb_support</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">ℱ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">N</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\">∀ <span class=\"fn\">n</span> &lt; <span class=\"fn\">N</span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.coeff\">coeff</a> <span class=\"fn\">hℱ</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L758-L784","name":"LaurentSeries.Cauchy.exists_lb_eventual_support","line":758,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.exists_lb_eventual_support","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.exists_lb_eventual_support\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">Cauchy</span>.<span class=\"name\">exists_lb_eventual_support</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">ℱ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">N</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᶠ</a> (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">in</a> <span class=\"fn\">ℱ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\">∀ <span class=\"fn\">n</span> &lt; <span class=\"fn\">N</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L743-L747","name":"LaurentSeries.Cauchy.coeff_tendsto","line":743,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.coeff_tendsto","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.coeff_tendsto\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">Cauchy</span>.<span class=\"name\">coeff_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">ℱ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">D</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">D</span></span>)</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.principal\">Filter.principal</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.coeff\">coeff</a> <span class=\"fn\">hℱ</span> <span class=\"fn\">D</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L736-L741","name":"LaurentSeries.Cauchy.coeff","line":736,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.coeff","doc":"Since extracting coefficients is uniformly continuous, every Cauchy filter in\n`K⸨X⸩` gives rise to a Cauchy filter in `K` for every `d : ℤ`, and such Cauchy filter\nin `K` converges to a principal filter "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.Cauchy.coeff\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">Cauchy</span>.<span class=\"name\">coeff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hℱ</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">ℱ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <span class=\"fn\">K</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L727-L734","name":"LaurentSeries.uniformContinuous_coeff","line":727,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.uniformContinuous_coeff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.uniformContinuous_coeff\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">uniformContinuous_coeff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">uK</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Defs.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">d</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L697-L711","name":"LaurentSeries.val_le_one_iff_eq_coe","line":697,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.val_le_one_iff_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.val_le_one_iff_eq_coe\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">val_le_one_iff_eq_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L687-L694","name":"LaurentSeries.eq_coeff_of_valuation_sub_lt","line":687,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.eq_coeff_of_valuation_sub_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.eq_coeff_of_valuation_sub_lt\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">eq_coeff_of_valuation_sub_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a> (<span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">f</span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">d</span>))</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">d</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L645-L683","name":"LaurentSeries.valuation_le_iff_coeff_lt_eq_zero","line":645,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.valuation_le_iff_coeff_lt_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.valuation_le_iff_coeff_lt_eq_zero\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">valuation_le_iff_coeff_lt_eq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">D</span>))</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">n</span> &lt; <span class=\"fn\">D</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L617-L642","name":"LaurentSeries.coeff_zero_of_lt_valuation","line":617,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.coeff_zero_of_lt_valuation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.coeff_zero_of_lt_valuation\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">coeff_zero_of_lt_valuation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">D</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">D</span>))</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">D</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L607-L614","name":"LaurentSeries.intValuation_le_iff_coeff_lt_eq_zero","line":607,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.intValuation_le_iff_coeff_lt_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.intValuation_le_iff_coeff_lt_eq_zero\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">intValuation_le_iff_coeff_lt_eq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>))</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">n</span> &lt; <span class=\"fn\">d</span>, <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.coeff\">PowerSeries.coeff</a> <span class=\"fn\">K</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L597-L604","name":"LaurentSeries.coeff_zero_of_lt_intValuation","line":597,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.coeff_zero_of_lt_intValuation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.coeff_zero_of_lt_intValuation\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">coeff_zero_of_lt_intValuation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>))</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">d</span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.coeff\">PowerSeries.coeff</a> <span class=\"fn\">K</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L582-L594","name":"LaurentSeries.valuation_single_zpow","line":582,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.valuation_single_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.valuation_single_zpow\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">valuation_single_zpow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> <span class=\"fn\">s</span>)</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">s</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L576-L580","name":"LaurentSeries.valuation_X_pow","line":576,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.valuation_X_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.valuation_X_pow\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">valuation_X_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a> (<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">K</span>)</span> <a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.X\">PowerSeries.X</a></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">s</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">s</span></span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L574-L574","name":"LaurentSeries.valuation_def","line":574,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.valuation_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.valuation_def\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">valuation_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued.v\">Valued.v</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.valuation\">IsDedekindDomain.HeightOneSpectrum.valuation</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.idealX\">PowerSeries.idealX</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L572-L572","name":"LaurentSeries.instValuedWithZeroMultiplicativeInt","line":572,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instValuedWithZeroMultiplicativeInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instValuedWithZeroMultiplicativeInt\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">instValuedWithZeroMultiplicativeInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Valued/ValuationTopology.html#Valued\">Valued</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/WithOne/Defs.html#WithZero\">WithZero</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L554-L563","name":"RatFunc.valuation_eq_LaurentSeries_valuation","line":554,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.valuation_eq_LaurentSeries_valuation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.valuation_eq_LaurentSeries_valuation\"><span class=\"name\">RatFunc</span>.<span class=\"name\">valuation_eq_LaurentSeries_valuation</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.valuation\">IsDedekindDomain.HeightOneSpectrum.valuation</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/AsPolynomial.html#Polynomial.idealX\">Polynomial.idealX</a> <span class=\"fn\">K</span>)</span>)</span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.valuation\">IsDedekindDomain.HeightOneSpectrum.valuation</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.idealX\">PowerSeries.idealX</a> <span class=\"fn\">K</span>)</span>)</span> <span class=\"fn\">↑<span class=\"fn\">P</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L541-L545","name":"PowerSeries.intValuation_X","line":541,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.intValuation_X","doc":"The integral valuation of the power series `X : K⟦X⟧` equals `(ofAdd -1) : ℤₘ₀`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.intValuation_X\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">intValuation_X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.idealX\">idealX</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.intValuationDef\">intValuationDef</a></span> <a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative.ofAdd\">Multiplicative.ofAdd</a> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L516-L539","name":"PowerSeries.intValuation_eq_of_coe","line":516,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.intValuation_eq_of_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.intValuation_eq_of_coe\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">intValuation_eq_of_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/AsPolynomial.html#Polynomial.idealX\">Polynomial.idealX</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.intValuation\">intValuation</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.idealX\">idealX</a> <span class=\"fn\">K</span>)</span>.<a href=\"./Mathlib/RingTheory/DedekindDomain/AdicValuation.html#IsDedekindDomain.HeightOneSpectrum.intValuation\">intValuation</a></span> <span class=\"fn\">↑<span class=\"fn\">P</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L504-L508","name":"PowerSeries.idealX","line":504,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.idealX","doc":"The prime ideal `(X)` of `K⟦X⟧`, when `K` is a field, as a term of the `HeightOneSpectrum`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.idealX\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">idealX</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/DedekindDomain/Ideal.html#IsDedekindDomain.HeightOneSpectrum\">IsDedekindDomain.HeightOneSpectrum</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L491-L494","name":"RatFunc.instIsScalarTowerPolynomialLaurentSeries","line":491,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.instIsScalarTowerPolynomialLaurentSeries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.instIsScalarTowerPolynomialLaurentSeries\"><span class=\"name\">RatFunc</span>.<span class=\"name\">instIsScalarTowerPolynomialLaurentSeries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">F</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L484-L489","name":"RatFunc.algebraMap_apply_div","line":484,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.algebraMap_apply_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.algebraMap_apply_div\"><span class=\"name\">RatFunc</span>.<span class=\"name\">algebraMap_apply_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">F</span>)</span>)</span>\n    (<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span>)</span>)</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span>)</span>)</span> <span class=\"fn\">q</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">F</span>)</span>)</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">F</span>)</span>)</span> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L482-L482","name":"RatFunc.instAlgebraLaurentSeries","line":482,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.instAlgebraLaurentSeries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.instAlgebraLaurentSeries\"><span class=\"name\">RatFunc</span>.<span class=\"name\">instAlgebraLaurentSeries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">F</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L474-L480","name":"RatFunc.single_zpow","line":474,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.single_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.single_zpow\"><span class=\"name\">RatFunc</span>.<span class=\"name\">single_zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L469-L472","name":"RatFunc.single_inv","line":469,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.single_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.single_inv\"><span class=\"name\">RatFunc</span>.<span class=\"name\">single_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hα</span> : <span class=\"fn\">α</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">d</span>))</span> <span class=\"fn\">α</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> <span class=\"fn\">d</span>)</span> <span class=\"fn\">α</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L462-L467","name":"RatFunc.single_one_eq_pow","line":462,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.single_one_eq_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.single_one_eq_pow\"><span class=\"name\">RatFunc</span>.<span class=\"name\">single_one_eq_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L455-L460","name":"RatFunc.coe_X","line":455,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_X\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<a href=\"./Mathlib/FieldTheory/RatFunc/AsPolynomial.html#RatFunc.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L449-L451","name":"RatFunc.coe_smul","line":449,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_smul\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">f</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L441-L446","name":"RatFunc.coe_C","line":441,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_C","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_C\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_C</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/AsPolynomial.html#RatFunc.C\">C</a> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/HahnSeries/Multiplication.html#HahnSeries.C\">HahnSeries.C</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L437-L439","name":"RatFunc.coe_div","line":437,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_div\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L433-L435","name":"RatFunc.coe_pow","line":433,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_pow\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L429-L431","name":"RatFunc.coe_mul","line":429,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_mul\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L425-L427","name":"RatFunc.coe_neg","line":425,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_neg\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L421-L423","name":"RatFunc.coe_sub","line":421,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_sub\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L417-L419","name":"RatFunc.coe_add","line":417,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_add\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑(<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L413-L415","name":"RatFunc.coe_one","line":413,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_one\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L410-L411","name":"RatFunc.coe_ne_zero","line":410,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_ne_zero\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\">f</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L406-L408","name":"RatFunc.coe_zero","line":406,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_zero\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L403-L404","name":"RatFunc.coe_coe","line":403,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_coe\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">↑<span class=\"fn\">P</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">P</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L398-L400","name":"RatFunc.coe_apply","line":398,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_apply\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coeAlgHom\">coeAlgHom</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L393-L394","name":"RatFunc.coe_injective","line":393,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_injective\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coeToLaurentSeries_fun\">coeToLaurentSeries_fun</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L390-L391","name":"RatFunc.coe_num_denom","line":390,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_num_denom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_num_denom\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_num_denom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/FieldTheory/RatFunc/Basic.html#RatFunc.num\">num</a></span></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/FieldTheory/RatFunc/Basic.html#RatFunc.denom\">denom</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L385-L386","name":"RatFunc.coe_def","line":385,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coe_def\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coe_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coeAlgHom\">coeAlgHom</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L382-L383","name":"RatFunc.coeToLaurentSeries","line":382,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coeToLaurentSeries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coeToLaurentSeries\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coeToLaurentSeries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">F</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L374-L380","name":"RatFunc.coeToLaurentSeries_fun","line":374,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coeToLaurentSeries_fun","doc":"The coercion `RatFunc F → F⸨X⸩` as a function.\n\nThis is the implementation of `coeToLaurentSeries`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coeToLaurentSeries_fun\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coeToLaurentSeries_fun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span></span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L368-L372","name":"RatFunc.coeAlgHom","line":368,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coeAlgHom","doc":"The coercion `RatFunc F → F⸨X⸩` as bundled alg hom. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#RatFunc.coeAlgHom\"><span class=\"name\">RatFunc</span>.<span class=\"name\">coeAlgHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/FieldTheory/RatFunc/Defs.html#RatFunc\">RatFunc</a> <span class=\"fn\">F</span></span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">F</span></span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L356-L358","name":"PowerSeries.coe_pow","line":356,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_pow\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">coe_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L350-L354","name":"PowerSeries.coe_smul","line":350,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_smul\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">coe_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">S</span>)</span> (<span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">S</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L347-L348","name":"PowerSeries.coe_X","line":347,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_X\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">coe_X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> <a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L344-L345","name":"PowerSeries.coe_C","line":344,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_C","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_C\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">coe_C</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.C\">C</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/HahnSeries/Multiplication.html#HahnSeries.C\">HahnSeries.C</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L333-L342","name":"PowerSeries.coeff_coe","line":333,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coeff_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coeff_coe\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">coeff_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.coeff\">coeff</a> <span class=\"fn\">R</span> <span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L329-L331","name":"PowerSeries.coe_mul","line":329,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_mul\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">coe_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L325-L327","name":"PowerSeries.coe_neg","line":325,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_neg\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">coe_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f'</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">R'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R'</span>)</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">f'</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R'</span>)</span> <span class=\"fn\">f'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L321-L323","name":"PowerSeries.coe_sub","line":321,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_sub\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">coe_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f' </span><span class=\"fn\">g'</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">R'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R'</span>)</span> (<span class=\"fn\">f'</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">g'</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R'</span>)</span> <span class=\"fn\">f'</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R'</span>)</span> <span class=\"fn\">g'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L317-L319","name":"PowerSeries.coe_add","line":317,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_add\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">coe_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> (<span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">g</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L313-L315","name":"PowerSeries.coe_one","line":313,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_one\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">coe_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L309-L311","name":"PowerSeries.coe_zero","line":309,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#PowerSeries.coe_zero\"><span class=\"name\">PowerSeries</span>.<span class=\"name\">coe_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L296-L299","name":"LaurentSeries.instIsFractionRingPowerSeries","line":296,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instIsFractionRingPowerSeries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instIsFractionRingPowerSeries\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">instIsFractionRingPowerSeries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/FractionRing.html#IsFractionRing\">IsFractionRing</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">K</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">K</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L269-L294","name":"LaurentSeries.of_powerSeries_localization","line":269,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.of_powerSeries_localization","doc":"The localization map from power series to Laurent series. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.of_powerSeries_localization\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">of_powerSeries_localization</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Defs.html#IsLocalization\">IsLocalization</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.X\">PowerSeries.X</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L264-L267","name":"LaurentSeries.coe_algebraMap","line":264,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.coe_algebraMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.coe_algebraMap\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">coe_algebraMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Algebra/Defs.html#algebraMap\">algebraMap</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">R</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L262-L262","name":"LaurentSeries.instAlgebraPowerSeries","line":262,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instAlgebraPowerSeries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instAlgebraPowerSeries\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">instAlgebraPowerSeries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L255-L258","name":"LaurentSeries.X_order_mul_powerSeriesPart","line":255,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.X_order_mul_powerSeriesPart","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.X_order_mul_powerSeriesPart\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">X_order_mul_powerSeriesPart</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.order\">HahnSeries.order</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> (<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.X\">PowerSeries.X</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart\">powerSeriesPart</a></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L250-L253","name":"LaurentSeries.ofPowerSeries_powerSeriesPart","line":250,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.ofPowerSeries_powerSeriesPart","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.ofPowerSeries_powerSeriesPart\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">ofPowerSeries_powerSeriesPart</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart\">powerSeriesPart</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.order\">HahnSeries.order</a> <span class=\"fn\">x</span></span>))</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L232-L248","name":"LaurentSeries.single_order_mul_powerSeriesPart","line":232,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.single_order_mul_powerSeriesPart","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.single_order_mul_powerSeriesPart\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">single_order_mul_powerSeriesPart</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.order\">HahnSeries.order</a> <span class=\"fn\">x</span>)</span>)</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart\">powerSeriesPart</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L220-L230","name":"LaurentSeries.powerSeriesPart_eq_zero","line":220,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart_eq_zero\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">powerSeriesPart_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart\">powerSeriesPart</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L215-L218","name":"LaurentSeries.powerSeriesPart_zero","line":215,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart_zero\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">powerSeriesPart_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart\">powerSeriesPart</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L210-L213","name":"LaurentSeries.powerSeriesPart_coeff","line":210,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart_coeff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart_coeff\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">powerSeriesPart_coeff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.coeff\">PowerSeries.coeff</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart\">powerSeriesPart</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.order\">HahnSeries.order</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L204-L208","name":"LaurentSeries.powerSeriesPart","line":204,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart","doc":"This is a power series that can be multiplied by an integer power of `X` to give our\nLaurent series. If the Laurent series is nonzero, `powerSeriesPart` has a nonzero\nconstant term. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.powerSeriesPart\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">powerSeriesPart</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L199-L202","name":"LaurentSeries.coeff_coe_powerSeries","line":199,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.coeff_coe_powerSeries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.coeff_coe_powerSeries\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">coeff_coe_powerSeries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/PowerSeries.html#HahnSeries.ofPowerSeries\">HahnSeries.ofPowerSeries</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries.coeff\">PowerSeries.coeff</a> <span class=\"fn\">R</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L196-L197","name":"LaurentSeries.instCoePowerSeries","line":196,"kind":"instance","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instCoePowerSeries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.instCoePowerSeries\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">instCoePowerSeries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PowerSeries/Basic.html#PowerSeries\">PowerSeries</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L184-L188","name":"LaurentSeries.derivative_iterate_coeff","line":184,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.derivative_iterate_coeff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.derivative_iterate_coeff\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">derivative_iterate_coeff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(⇑<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.derivative\">derivative</a> <span class=\"fn\">R</span>)</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Polynomial/Pochhammer.html#descPochhammer\">descPochhammer</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">k</span>)</span>.<a href=\"./Mathlib/Algebra/Polynomial/Smeval.html#Polynomial.smeval\">smeval</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span>)</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L175-L182","name":"LaurentSeries.derivative_iterate","line":175,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.derivative_iterate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.derivative_iterate\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">derivative_iterate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(⇑<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.derivative\">derivative</a> <span class=\"fn\">R</span>)</span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">k</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Mathlib/Data/Nat/Factorial/Basic.html#Nat.factorial\">factorial</a></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv\">hasseDeriv</a> <span class=\"fn\">R</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L171-L173","name":"LaurentSeries.derivative_apply","line":171,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.derivative_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.derivative_apply\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">derivative_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.derivative\">derivative</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv\">hasseDeriv</a> <span class=\"fn\">R</span> <span class=\"fn\">1</span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L166-L169","name":"LaurentSeries.derivative","line":166,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.derivative","doc":"The derivative of a Laurent series. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.derivative\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">derivative</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">V</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L160-L164","name":"LaurentSeries.hasseDeriv_comp","line":160,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv_comp\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">hasseDeriv_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv\">hasseDeriv</a> <span class=\"fn\">R</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv\">hasseDeriv</a> <span class=\"fn\">R</span> <span class=\"fn\">l</span>)</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">l</span>).<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv\">hasseDeriv</a> <span class=\"fn\">R</span> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">l</span>))</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L152-L158","name":"LaurentSeries.hasseDeriv_comp_coeff","line":152,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv_comp_coeff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv_comp_coeff\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">hasseDeriv_comp_coeff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv\">hasseDeriv</a> <span class=\"fn\">R</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv\">hasseDeriv</a> <span class=\"fn\">R</span> <span class=\"fn\">l</span>)</span> <span class=\"fn\">f</span>)</span>)</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">l</span>).<a href=\"./Mathlib/Data/Nat/Choose/Basic.html#Nat.choose\">choose</a></span> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv\">hasseDeriv</a> <span class=\"fn\">R</span> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">l</span>))</span> <span class=\"fn\">f</span></span>).<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L147-L150","name":"LaurentSeries.hasseDeriv_single","line":147,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv_single","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv_single\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">hasseDeriv_single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv\">hasseDeriv</a> <span class=\"fn\">R</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span>))</span> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Binomial.html#Ring.choose\">Ring.choose</a> <span class=\"fn\">n</span> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L139-L145","name":"LaurentSeries.hasseDeriv_single_add","line":139,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv_single_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv_single_add\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">hasseDeriv_single_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv\">hasseDeriv</a> <span class=\"fn\">R</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span>))</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.single\">HahnSeries.single</a> <span class=\"fn\">n</span>)</span> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Binomial.html#Ring.choose\">Ring.choose</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span>) <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L134-L137","name":"LaurentSeries.hasseDeriv_zero","line":134,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv_zero\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">hasseDeriv_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv\">hasseDeriv</a> <span class=\"fn\">R</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap.id\">LinearMap.id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L129-L132","name":"LaurentSeries.hasseDeriv_coeff","line":129,"kind":"theorem","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv_coeff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv_coeff\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">hasseDeriv_coeff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv\">hasseDeriv</a> <span class=\"fn\">R</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Binomial.html#Ring.choose\">Ring.choose</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span>) <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/RingTheory/HahnSeries/Basic.html#HahnSeries.coeff\">coeff</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L114-L125","name":"LaurentSeries.hasseDeriv","line":114,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv","doc":"The Hasse derivative of Laurent series, as a linear map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.hasseDeriv\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">hasseDeriv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">V</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\">LaurentSeries</a> <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L107-L108","name":"LaurentSeries.«term_⸨X⸩»","line":107,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.«term_⸨X⸩»","doc":"`R⸨X⸩` is notation for `LaurentSeries R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries.«term_⸨X⸩»\"><span class=\"name\">LaurentSeries</span>.<span class=\"name\">«term_⸨X⸩»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/LaurentSeries.lean#L94-L99","name":"LaurentSeries","line":94,"kind":"def","docLink":"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries","doc":"`LaurentSeries R` is the type of formal Laurent series with coefficients in `R`, denoted `R⸨X⸩`.\n\nIt is implemented as a `HahnSeries` with value group `ℤ`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/LaurentSeries.html#LaurentSeries\"><span class=\"name\">LaurentSeries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}