{"name":"Mathlib.Combinatorics.Derangements.Basic","instances":[],"imports":["Init","Mathlib.Dynamics.FixedPoints.Basic","Mathlib.GroupTheory.Perm.Option","Mathlib.Logic.Equiv.Defs","Mathlib.Logic.Equiv.Option","Mathlib.Tactic.ApplyFun"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Derangements/Basic.lean#L184-L190","name":"derangements.derangementsRecursionEquiv","line":184,"kind":"def","docLink":"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.derangementsRecursionEquiv","doc":"The set of derangements on `Option α` is equivalent to the union over all `a : α` of\n\"derangements on `α` ⊕ derangements on `{a}ᶜ`\". "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.derangementsRecursionEquiv\"><span class=\"name\">derangements</span>.<span class=\"name\">derangementsRecursionEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements\">derangements</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × (<span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements\">derangements</a> <span class=\"fn\">↑<a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">a</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span>)</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements\">derangements</a> <span class=\"fn\">α</span>)</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Derangements/Basic.lean#L167-L182","name":"derangements.derangementsOptionEquivSigmaAtMostOneFixedPoint","line":167,"kind":"def","docLink":"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.derangementsOptionEquivSigmaAtMostOneFixedPoint","doc":"The set of derangements on `Option α` is equivalent to the union over `a : α`\nof \"permutations with `a` the only possible fixed point\". "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.derangementsOptionEquivSigmaAtMostOneFixedPoint\"><span class=\"name\">derangements</span>.<span class=\"name\">derangementsOptionEquivSigmaAtMostOneFixedPoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements\">derangements</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\">↑<a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">a</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Derangements/Basic.lean#L127-L159","name":"derangements.Equiv.RemoveNone.fiber_some","line":127,"kind":"theorem","docLink":"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.Equiv.RemoveNone.fiber_some","doc":"For any `a : α`, the fiber over `some a` is the set of permutations\nwhere `a` is the only possible fixed point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.Equiv.RemoveNone.fiber_some\"><span class=\"name\">derangements</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">RemoveNone</span>.<span class=\"name\">fiber_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.Equiv.RemoveNone.fiber\">fiber</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">a</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Derangements/Basic.lean#L120-L125","name":"derangements.Equiv.RemoveNone.fiber_none","line":120,"kind":"theorem","docLink":"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.Equiv.RemoveNone.fiber_none","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.Equiv.RemoveNone.fiber_none\"><span class=\"name\">derangements</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">RemoveNone</span>.<span class=\"name\">fiber_none</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.Equiv.RemoveNone.fiber\">fiber</a> <a href=\"./Init/Prelude.html#Option.none\">none</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Derangements/Basic.lean#L115-L118","name":"derangements.Equiv.RemoveNone.mem_fiber","line":115,"kind":"theorem","docLink":"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.Equiv.RemoveNone.mem_fiber","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.Equiv.RemoveNone.mem_fiber\"><span class=\"name\">derangements</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">RemoveNone</span>.<span class=\"name\">mem_fiber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.Equiv.RemoveNone.fiber\">fiber</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">F</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements\">derangements</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Option.none\">none</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Option.html#Equiv.removeNone\">Equiv.removeNone</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Derangements/Basic.lean#L110-L113","name":"derangements.Equiv.RemoveNone.fiber","line":110,"kind":"def","docLink":"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.Equiv.RemoveNone.fiber","doc":"The set of permutations `f` such that the preimage of `(a, f)` under\n`Equiv.Perm.decomposeOption` is a derangement. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.Equiv.RemoveNone.fiber\"><span class=\"name\">derangements</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">RemoveNone</span>.<span class=\"name\">fiber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Derangements/Basic.lean#L72-L104","name":"derangements.atMostOneFixedPointEquivSum_derangements","line":72,"kind":"def","docLink":"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.atMostOneFixedPointEquivSum_derangements","doc":"The set of permutations that fix either `a` or nothing is equivalent to the sum of:\n- derangements on `α`\n- derangements on `α` minus `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.atMostOneFixedPointEquivSum_derangements\"><span class=\"name\">derangements</span>.<span class=\"name\">atMostOneFixedPointEquivSum_derangements</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">a</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements\">derangements</a> <span class=\"fn\">↑<a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">a</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span>)</span></span> <a href=\"./Init/Core.html#Sum\">⊕</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements\">derangements</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Derangements/Basic.lean#L48-L69","name":"derangements.subtypeEquiv","line":48,"kind":"def","docLink":"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.subtypeEquiv","doc":"Derangements on a subtype are equivalent to permutations on the original type where points are\nfixed iff they are not in the subtype. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements.subtypeEquiv\"><span class=\"name\">derangements</span>.<span class=\"name\">subtypeEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements\">derangements</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Subtype\">Subtype</a> <span class=\"fn\">p</span>)</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>), <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Derangements/Basic.lean#L41-L44","name":"Equiv.derangementsCongr","line":41,"kind":"def","docLink":"./Mathlib/Combinatorics/Derangements/Basic.html#Equiv.derangementsCongr","doc":"If `α` is equivalent to `β`, then `derangements α` is equivalent to `derangements β`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Derangements/Basic.html#Equiv.derangementsCongr\"><span class=\"name\">Equiv</span>.<span class=\"name\">derangementsCongr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements\">derangements</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements\">derangements</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Derangements/Basic.lean#L37-L39","name":"mem_derangements_iff_fixedPoints_eq_empty","line":37,"kind":"theorem","docLink":"./Mathlib/Combinatorics/Derangements/Basic.html#mem_derangements_iff_fixedPoints_eq_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Derangements/Basic.html#mem_derangements_iff_fixedPoints_eq_empty\"><span class=\"name\">mem_derangements_iff_fixedPoints_eq_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements\">derangements</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/FixedPoints/Basic.html#Function.fixedPoints\">Function.fixedPoints</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Combinatorics/Derangements/Basic.lean#L31-L33","name":"derangements","line":31,"kind":"def","docLink":"./Mathlib/Combinatorics/Derangements/Basic.html#derangements","doc":"A permutation is a derangement if it has no fixed points. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Combinatorics/Derangements/Basic.html#derangements\"><span class=\"name\">derangements</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span>)</span></span></div></div>"}]}