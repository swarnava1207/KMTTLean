{"name":"Mathlib.Tactic.NormNum.NatLog","instances":[],"imports":["Init","Mathlib.Data.Nat.Log","Mathlib.Tactic.NormNum"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/NormNum/NatLog.lean#L55-L66","name":"Mathlib.Meta.NormNum.evalNatLog","line":55,"kind":"def","docLink":"./Mathlib/Tactic/NormNum/NatLog.html#Mathlib.Meta.NormNum.evalNatLog","doc":"Evaluates the `Nat.log` function.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/NatLog.html#Mathlib.Meta.NormNum.evalNatLog\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">evalNatLog</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/NormNum/Core.html#Mathlib.Meta.NormNum.NormNumExt\">NormNumExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/NormNum/NatLog.lean#L35-L53","name":"Mathlib.Meta.NormNum.proveNatLog","line":35,"kind":"def","docLink":"./Mathlib/Tactic/NormNum/NatLog.html#Mathlib.Meta.NormNum.proveNatLog","doc":"Given the natural number literals `eb` and `en`, returns `Nat.log eb en`\nas a natural number literal and an equality proof.\nPanics if `ex` or `en` aren't natural number literals.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/NatLog.html#Mathlib.Meta.NormNum.proveNatLog\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">proveNatLog</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eb </span><span class=\"fn\">en</span> : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">ek</span> : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>) × <span class=\"fn\">Q(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Log.html#Nat.log\">Nat.log</a> <span class=\"fn\">«$eb»</span> <span class=\"fn\">«$en»</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">«$ek»</span>)</span></span></div></div>"}]}