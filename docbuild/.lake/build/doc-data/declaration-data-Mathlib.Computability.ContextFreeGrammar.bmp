{"name":"Mathlib.Computability.ContextFreeGrammar","instances":[{"typeNames":["Eq"],"name":"instDecidableEqContextFreeRule","className":"Decidable"},{"typeNames":["ContextFreeRule"],"name":"instReprContextFreeRule","className":"Repr"}],"imports":["Init","Mathlib.Computability.Language"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L297-L299","name":"Language.IsContextFree.reverse","line":297,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#Language.IsContextFree.reverse","doc":"The class of context-free languages is closed under reversal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#Language.IsContextFree.reverse\"><span class=\"name\">Language</span>.<span class=\"name\">IsContextFree</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Language\">Language</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#Language.IsContextFree\">IsContextFree</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">L</span>.<a href=\"./Mathlib/Computability/Language.html#Language.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#Language.IsContextFree\">IsContextFree</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L293-L293","name":"ContextFreeGrammar.language_reverse","line":293,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language_reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">language_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language\">language</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language\">language</a></span>.<a href=\"./Mathlib/Computability/Language.html#Language.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L290-L291","name":"ContextFreeGrammar.generates_reverse_comm","line":290,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.generates_reverse_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.generates_reverse_comm\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">generates_reverse_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\">Generates</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\">Generates</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L288-L288","name":"ContextFreeGrammar.Generates.reverse","line":288,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates.reverse","doc":"**Alias** of the reverse direction of `ContextFreeGrammar.generates_reverse`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates.reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Generates</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\">Generates</a></span> <span class=\"fn\">u</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\">Generates</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L286-L286","name":"ContextFreeGrammar.generates_reverse","line":286,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.generates_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.generates_reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">generates_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\">Generates</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\">Generates</a></span> <span class=\"fn\">u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L283-L284","name":"ContextFreeGrammar.derives_reverse_comm","line":283,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_reverse_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_reverse_comm\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">derives_reverse_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L280-L281","name":"ContextFreeGrammar.derives_reverse","line":280,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.derives_reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">derives_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L275-L278","name":"ContextFreeGrammar.Derives.reverse","line":275,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L271-L273","name":"ContextFreeGrammar.produces_reverse_comm","line":271,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.produces_reverse_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.produces_reverse_comm\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">produces_reverse_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L269-L269","name":"ContextFreeGrammar.Produces.reverse","line":269,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.reverse","doc":"**Alias** of the reverse direction of `ContextFreeGrammar.produces_reverse`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Produces</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L265-L267","name":"ContextFreeGrammar.produces_reverse","line":265,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.produces_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.produces_reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">produces_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L262-L263","name":"ContextFreeGrammar.reverse_surjective","line":262,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_surjective\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L259-L260","name":"ContextFreeGrammar.reverse_injective","line":259,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_injective\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L256-L257","name":"ContextFreeGrammar.reverse_bijective","line":256,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_bijective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_bijective\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L253-L254","name":"ContextFreeGrammar.reverse_involutive","line":253,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_involutive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_involutive\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_involutive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.Involutive\">Function.Involutive</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L250-L251","name":"ContextFreeGrammar.reverse_reverse","line":250,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L247-L247","name":"ContextFreeGrammar.reverse_NT","line":247,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_NT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_NT\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_NT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L247-L247","name":"ContextFreeGrammar.reverse_rules","line":247,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_rules","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_rules\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_rules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.rules\">rules</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Image.html#Finset.map\">Finset.map</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">ContextFreeRule.reverse</a>, <span class=\"fn\">inj'</span> := <span class=\"fn\">⋯</span> }</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.rules\">rules</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L247-L247","name":"ContextFreeGrammar.reverse_initial","line":247,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_initial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse_initial\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse_initial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.initial\">initial</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.initial\">initial</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L246-L248","name":"ContextFreeGrammar.reverse","line":246,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse","doc":"Grammar for a reversed language. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.reverse\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L238-L239","name":"ContextFreeRule.rewrites_reverse_comm","line":238,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_reverse_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_reverse_comm\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">rewrites_reverse_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L235-L236","name":"ContextFreeRule.rewrites_reverse","line":235,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_reverse\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">rewrites_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L231-L233","name":"ContextFreeRule.Rewrites.reverse","line":231,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.reverse\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\"><span class=\"fn\">u</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span> <span class=\"fn\"><span class=\"fn\">v</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L228-L229","name":"ContextFreeRule.reverse_surjective","line":228,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_surjective\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L225-L226","name":"ContextFreeRule.reverse_injective","line":225,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_injective\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L222-L223","name":"ContextFreeRule.reverse_bijective","line":222,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_bijective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_bijective\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L219-L220","name":"ContextFreeRule.reverse_involutive","line":219,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_involutive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_involutive\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse_involutive</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.Involutive\">Function.Involutive</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L216-L217","name":"ContextFreeRule.reverse_comp_reverse","line":216,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_comp_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_comp_reverse\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse_comp_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L214-L214","name":"ContextFreeRule.reverse_reverse","line":214,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse_reverse\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\">reverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L211-L212","name":"ContextFreeRule.reverse","line":211,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse","doc":"Rules for a grammar for a reversed language. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.reverse\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L202-L204","name":"Language.IsContextFree","line":202,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#Language.IsContextFree","doc":"Context-free languages are defined by context-free grammars. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#Language.IsContextFree\"><span class=\"name\">Language</span>.<span class=\"name\">IsContextFree</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">L</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Language\">Language</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L192-L198","name":"ContextFreeGrammar.Derives.append_right","line":192,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.append_right","doc":"Add extra postfix to context-free deriving. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.append_right\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">append_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> (<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">p</span>) (<span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">p</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L184-L190","name":"ContextFreeGrammar.Derives.append_left","line":184,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.append_left","doc":"Add extra prefix to context-free deriving. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.append_left\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">append_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">v</span>) (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">w</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L178-L182","name":"ContextFreeGrammar.Produces.append_right","line":178,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.append_right","doc":"Add extra postfix to context-free producing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.append_right\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Produces</span>.<span class=\"name\">append_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> (<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">p</span>) (<span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">p</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L172-L176","name":"ContextFreeGrammar.Produces.append_left","line":172,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.append_left","doc":"Add extra prefix to context-free producing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.append_left\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Produces</span>.<span class=\"name\">append_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">v</span>) (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">w</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L168-L170","name":"ContextFreeGrammar.Derives.eq_or_tail","line":168,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.eq_or_tail","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.eq_or_tail\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">eq_or_tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L164-L166","name":"ContextFreeGrammar.Derives.eq_or_head","line":164,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.eq_or_head","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.eq_or_head\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">eq_or_head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L159-L162","name":"ContextFreeGrammar.Produces.trans_derives","line":159,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.trans_derives","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.trans_derives\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Produces</span>.<span class=\"name\">trans_derives</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huv</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L154-L157","name":"ContextFreeGrammar.Derives.trans_produces","line":154,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.trans_produces","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.trans_produces\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">trans_produces</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huv</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L149-L152","name":"ContextFreeGrammar.Derives.trans","line":149,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.trans\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huv</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">u</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L146-L147","name":"ContextFreeGrammar.Produces.single","line":146,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.single","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces.single\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Produces</span>.<span class=\"name\">single</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v </span><span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\">Produces</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">v</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L142-L144","name":"ContextFreeGrammar.Derives.refl","line":142,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives.refl\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <span class=\"fn\">w</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L132-L138","name":"ContextFreeGrammar.mem_language_iff","line":132,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.mem_language_iff","doc":"A given word `w` belongs to the language generated by a given context-free grammar `g` iff\n`g` can derive the word `w` (wrapped as a string) from the initial nonterminal of `g` in some\nnumber of steps. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.mem_language_iff\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">mem_language_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language\">language</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\">Derives</a></span> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.initial\">initial</a></span></span><a href=\"./Init/Prelude.html#List.cons\">]</a> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <a href=\"./Mathlib/Computability/Language.html#Symbol.terminal\">Symbol.terminal</a> <span class=\"fn\">w</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L128-L130","name":"ContextFreeGrammar.language","line":128,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language","doc":"The language (set of words) that can be generated by a given context-free grammar `g`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.language\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">language</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Language\">Language</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L122-L126","name":"ContextFreeGrammar.Generates","line":122,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates","doc":"Given a context-free grammar `g` and a string `s`\n`g.Generates s` means that `g` can transform its initial nonterminal to `s` in some number of\nrewriting steps. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Generates\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Generates</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L116-L120","name":"ContextFreeGrammar.Derives","line":116,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives","doc":"Given a context-free grammar `g` and strings `u` and `v`\n`g.Derives u v` means that `g` can transform `u` to `v` in some number of rewriting steps. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Derives\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Derives</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L110-L114","name":"ContextFreeGrammar.Produces","line":110,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces","doc":"Given a context-free grammar `g` and strings `u` and `v`\n`g.Produces u v` means that one step of a context-free transformation by a rule from `g` sends\n`u` to `v`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.Produces\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">Produces</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L98-L104","name":"ContextFreeRule.Rewrites.append_right","line":98,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.append_right","doc":"Add extra postfix to context-free rewriting. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.append_right\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">append_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> (<span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">p</span>) (<span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">p</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L90-L96","name":"ContextFreeRule.Rewrites.append_left","line":90,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.append_left","doc":"Add extra prefix to context-free rewriting. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.append_left\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">append_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hvw</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">u</span>) (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">v</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L82-L88","name":"ContextFreeRule.rewrites_iff","line":82,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_iff","doc":"Rule `r` rewrites string `u` is to string `v` iff they share both a prefix `p` and postfix `q`\nsuch that the remaining middle part of `u` is the input of `r` and the remaining middle part\nof `u` is the output of `r`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_iff\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">rewrites_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∃ (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>) (<span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>), <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span></span><a href=\"./Init/Prelude.html#List.cons\">]</a> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L76-L80","name":"ContextFreeRule.rewrites_of_exists_parts","line":76,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_of_exists_parts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.rewrites_of_exists_parts\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">rewrites_of_exists_parts</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span></span><a href=\"./Init/Prelude.html#List.cons\">]</a> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span>) (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L73-L74","name":"ContextFreeRule.Rewrites.input_output","line":73,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.input_output","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.input_output\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">input_output</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span></span><a href=\"./Init/Prelude.html#List.cons\">]</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L61-L71","name":"ContextFreeRule.Rewrites.exists_parts","line":61,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.exists_parts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.exists_parts\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">exists_parts</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hr</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>) (<span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>), <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span></span><a href=\"./Init/Prelude.html#List.cons\">]</a> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L57-L59","name":"ContextFreeRule.Rewrites.cons","line":57,"kind":"ctor","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.cons","doc":"There is a replacement later in the string. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.cons\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s₁ </span><span class=\"fn\">s₂</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hrs</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> <span class=\"fn\">s₁</span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">s₁</span>) (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">s₂</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L54-L56","name":"ContextFreeRule.Rewrites.head","line":54,"kind":"ctor","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.head","doc":"The replacement is at the start of the remaining string. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites.head\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span>.<span class=\"name\">head</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\">Rewrites</a></span> (<span class=\"fn\"><a href=\"./Mathlib/Computability/Language.html#Symbol.nonterminal\">Symbol.nonterminal</a> <span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span></span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">s</span>) (<span class=\"fn\"><span class=\"fn\">r</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">s</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L51-L59","name":"ContextFreeRule.Rewrites","line":51,"kind":"inductive","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites","doc":"Inductive definition of a single application of a given context-free rule `r` to a string `u`;\n`r.Rewrites u v` means that the `r` sends `u` to `v` (there may be multiple such strings `v`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.Rewrites\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">Rewrites</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L44-L44","name":"ContextFreeGrammar.rules","line":44,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.rules","doc":"Rewrite rules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.rules\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">rules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L42-L42","name":"ContextFreeGrammar.initial","line":42,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.initial","doc":"Initial nonterminal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.initial\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">initial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\">NT</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L40-L40","name":"ContextFreeGrammar.NT","line":40,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT","doc":"Type of nonterminals. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.NT\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">NT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L38-L38","name":"ContextFreeGrammar.mk","line":38,"kind":"ctor","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar.mk\"><span class=\"name\">ContextFreeGrammar</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">NT</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initial</span> : <span class=\"fn\">NT</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rules</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">NT</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\">ContextFreeGrammar</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L37-L44","name":"ContextFreeGrammar","line":37,"kind":"structure","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar","doc":"Context-free grammar that generates words over the alphabet `T` (a type of terminals). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeGrammar\"><span class=\"name\">ContextFreeGrammar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max 1 u_1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L35-L35","name":"instReprContextFreeRule","line":35,"kind":"instance","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#instReprContextFreeRule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#instReprContextFreeRule\"><span class=\"name\">instReprContextFreeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N✝</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">T✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">N✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T✝</span> <span class=\"fn\">N✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L35-L35","name":"instDecidableEqContextFreeRule","line":35,"kind":"instance","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#instDecidableEqContextFreeRule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#instDecidableEqContextFreeRule\"><span class=\"name\">instDecidableEqContextFreeRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N✝</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">T✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">N✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T✝</span> <span class=\"fn\">N✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L34-L34","name":"ContextFreeRule.output","line":34,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output","doc":"Output string a.k.a. right-hand side. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">output</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L32-L32","name":"ContextFreeRule.input","line":32,"kind":"def","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input","doc":"Input nonterminal a.k.a. left-hand side. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">input</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">N</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L30-L30","name":"ContextFreeRule.mk","line":30,"kind":"ctor","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.mk\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">output</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Mathlib/Computability/Language.html#Symbol\">Symbol</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L29-L29","name":"ContextFreeRule.ext_iff","line":29,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.ext_iff\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L29-L29","name":"ContextFreeRule.ext","line":29,"kind":"theorem","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.ext\"><span class=\"name\">ContextFreeRule</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\">ContextFreeRule</a> <span class=\"fn\">T</span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.input\">input</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">output</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule.output\">output</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Computability/ContextFreeGrammar.lean#L28-L35","name":"ContextFreeRule","line":28,"kind":"structure","docLink":"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule","doc":"Rule that rewrites a single nonterminal to any string (a list of symbols). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Computability/ContextFreeGrammar.html#ContextFreeRule\"><span class=\"name\">ContextFreeRule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">N</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"}]}