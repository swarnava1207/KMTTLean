{"name":"Mathlib.RingTheory.Ideal.IsPrincipal","instances":[],"imports":["Init","Mathlib.RingTheory.PrincipalIdealDomain"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L147-L154","name":"Ideal.associatesNonZeroDivisorsMulEquivIsPrincipal","line":147,"kind":"def","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsMulEquivIsPrincipal","doc":"The `MulEquiv` version of `Ideal.associatesNonZeroDivisorsEquivIsPrincipal`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsMulEquivIsPrincipal\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesNonZeroDivisorsMulEquivIsPrincipal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associates\">Associates</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">R</span>)</span></span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalNonZeroDivisorsSubmonoid\">isPrincipalNonZeroDivisorsSubmonoid</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L140-L144","name":"Ideal.associatesNonZeroDivisorsEquivIsPrincipal_map_one","line":140,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_map_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_map_one\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesNonZeroDivisorsEquivIsPrincipal_map_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\">associatesNonZeroDivisorsEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">1</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L133-L138","name":"Ideal.associatesNonZeroDivisorsEquivIsPrincipal_mul","line":133,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_mul\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesNonZeroDivisorsEquivIsPrincipal_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associates\">Associates</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">R</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\">associatesNonZeroDivisorsEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>))</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\">associatesNonZeroDivisorsEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">x</span>)</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\">associatesNonZeroDivisorsEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">y</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L129-L131","name":"Ideal.associatesNonZeroDivisorsEquivIsPrincipal_coe","line":129,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_coe\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesNonZeroDivisorsEquivIsPrincipal_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associates\">Associates</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">R</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\">associatesNonZeroDivisorsEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">x</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">associatesEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#associatesNonZeroDivisorsEquiv\">associatesNonZeroDivisorsEquiv</a>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv.symm\">symm</a></span> <span class=\"fn\">x</span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L125-L127","name":"Ideal.associatesNonZeroDivisorsEquivIsPrincipal_apply","line":125,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal_apply\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesNonZeroDivisorsEquivIsPrincipal_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">R</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\">associatesNonZeroDivisorsEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">x</span>)</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">span</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">↑<span class=\"fn\">x</span></span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L112-L123","name":"Ideal.associatesNonZeroDivisorsEquivIsPrincipal","line":112,"kind":"def","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal","doc":"A version of `Ideal.associatesEquivIsPrincipal` for non-zero-divisors generators. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesNonZeroDivisorsEquivIsPrincipal\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesNonZeroDivisorsEquivIsPrincipal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associates\">Associates</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">R</span>)</span></span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span/Defs.html#Submodule.IsPrincipal\">Submodule.IsPrincipal</a> <span class=\"fn\">↑<span class=\"fn\">I</span></span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L99-L109","name":"Ideal.associatesMulEquivIsPrincipal","line":99,"kind":"def","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesMulEquivIsPrincipal","doc":"The `MulEquiv` version of `Ideal.associatesEquivIsPrincipal`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesMulEquivIsPrincipal\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesMulEquivIsPrincipal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associates\">Associates</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalSubmonoid\">isPrincipalSubmonoid</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L93-L96","name":"Ideal.associatesEquivIsPrincipal_map_one","line":93,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_map_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_map_one\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesEquivIsPrincipal_map_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">associatesEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L88-L91","name":"Ideal.associatesEquivIsPrincipal_map_zero","line":88,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_map_zero\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesEquivIsPrincipal_map_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">associatesEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L82-L86","name":"Ideal.associatesEquivIsPrincipal_mul","line":82,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_mul\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesEquivIsPrincipal_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associates\">Associates</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">associatesEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">associatesEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">associatesEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L78-L80","name":"Ideal.associatesEquivIsPrincipal_symm_apply","line":78,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_symm_apply\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesEquivIsPrincipal_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hI</span> : <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span/Defs.html#Submodule.IsPrincipal\">Submodule.IsPrincipal</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">associatesEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">⟨<span class=\"fn\">I</span>, <span class=\"fn\">hI</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/PrincipalIdealDomain.html#Submodule.IsPrincipal.generator\">Submodule.IsPrincipal.generator</a> <span class=\"fn\">I</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L74-L76","name":"Ideal.associatesEquivIsPrincipal_apply","line":74,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal_apply\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesEquivIsPrincipal_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\">associatesEquivIsPrincipal</a> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associates.mk\">Associates.mk</a> <span class=\"fn\">x</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">span</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">x</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L63-L72","name":"Ideal.associatesEquivIsPrincipal","line":63,"kind":"def","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal","doc":"The equivalence between `Associates R` and the principal ideals of `R` defined by sending the\nclass of `x` to the principal ideal generated by `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.associatesEquivIsPrincipal\"><span class=\"name\">Ideal</span>.<span class=\"name\">associatesEquivIsPrincipal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associates\">Associates</a> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span/Defs.html#Submodule.IsPrincipal\">Submodule.IsPrincipal</a> <span class=\"fn\">I</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L51-L58","name":"Ideal.isPrincipalNonZeroDivisorsSubmonoid","line":51,"kind":"def","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalNonZeroDivisorsSubmonoid","doc":"The non-zero-divisors principal ideals of `R` form a submonoid of `(Ideal R)⁰`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalNonZeroDivisorsSubmonoid\"><span class=\"name\">Ideal</span>.<span class=\"name\">isPrincipalNonZeroDivisorsSubmonoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Defs.html#Submonoid\">Submonoid</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L47-L48","name":"Ideal.span_singleton_mem_isPrincipalSubmonoid","line":47,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.span_singleton_mem_isPrincipalSubmonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.span_singleton_mem_isPrincipalSubmonoid\"><span class=\"name\">Ideal</span>.<span class=\"name\">span_singleton_mem_isPrincipalSubmonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Span.html#Ideal.span\">span</a> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">a</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalSubmonoid\">isPrincipalSubmonoid</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L44-L45","name":"Ideal.mem_isPrincipalSubmonoid_iff","line":44,"kind":"theorem","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.mem_isPrincipalSubmonoid_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.mem_isPrincipalSubmonoid_iff\"><span class=\"name\">Ideal</span>.<span class=\"name\">mem_isPrincipalSubmonoid_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalSubmonoid\">isPrincipalSubmonoid</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span/Defs.html#Submodule.IsPrincipal\">Submodule.IsPrincipal</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/RingTheory/Ideal/IsPrincipal.lean#L36-L42","name":"Ideal.isPrincipalSubmonoid","line":36,"kind":"def","docLink":"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalSubmonoid","doc":"The principal ideals of `R` form a submonoid of `Ideal R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Ideal/IsPrincipal.html#Ideal.isPrincipalSubmonoid\"><span class=\"name\">Ideal</span>.<span class=\"name\">isPrincipalSubmonoid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Defs.html#Submonoid\">Submonoid</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span>)</span></span></div></div>"}]}