{"name":"Mathlib.Algebra.Homology.CommSq","instances":[],"imports":["Init","Mathlib.Algebra.Homology.ShortComplex.Basic","Mathlib.CategoryTheory.Limits.Shapes.Pullback.CommSq","Mathlib.CategoryTheory.Preadditive.Biproducts"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L185-L189","name":"CategoryTheory.IsPullback.mono_shortComplex'_f","line":185,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.IsPullback.mono_shortComplex'_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.IsPullback.mono_shortComplex'_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">mono_shortComplex'_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">fst</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">snd</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/CommSq.html#CategoryTheory.IsPullback\">IsPullback</a> <span class=\"fn\">fst</span> <span class=\"fn\">snd</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">Mono</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'\">shortComplex'</a></span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.f\">f</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L180-L183","name":"CategoryTheory.IsPullback.isLimitKernelFork","line":180,"kind":"def","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.IsPullback.isLimitKernelFork","doc":"The limit kernel fork attached to a pullback square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.IsPullback.isLimitKernelFork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsPullback</span>.<span class=\"name\">isLimitKernelFork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">fst</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">snd</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/CommSq.html#CategoryTheory.IsPullback\">IsPullback</a> <span class=\"fn\">fst</span> <span class=\"fn\">snd</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.kernelFork\">kernelFork</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L133-L178","name":"CategoryTheory.CommSq.isLimitEquivIsLimitKernelFork","line":133,"kind":"def","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.isLimitEquivIsLimitKernelFork","doc":"A commutative square in a preadditive category is a pullback square iff\nthe corresponding diagram `0 ⟶ X₁ ⟶ X₂ ⊞ X₃ ⟶ X₄ ⟶ 0` makes `X₁` a kernel. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.isLimitEquivIsLimitKernelFork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">isLimitEquivIsLimitKernelFork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">fst</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">snd</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">fst</span> <span class=\"fn\">snd</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PullbackCone.mk\">Limits.PullbackCone.mk</a> <span class=\"fn\">fst</span> <span class=\"fn\">snd</span> <span class=\"fn\">⋯</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.kernelFork\">kernelFork</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L127-L127","name":"CategoryTheory.CommSq.shortComplex'_X₂","line":127,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'_X₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'_X₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">shortComplex'_X₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">fst</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">snd</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">fst</span> <span class=\"fn\">snd</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'\">shortComplex'</a></span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.X₂\">X₂</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">X₂</span> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.biprod\">⊞</a> <span class=\"fn\">X₃</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L127-L127","name":"CategoryTheory.CommSq.shortComplex'_g","line":127,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'_g","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'_g\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">shortComplex'_g</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">fst</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">snd</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">fst</span> <span class=\"fn\">snd</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'\">shortComplex'</a></span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.g\">g</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.biprod.desc\">Limits.biprod.desc</a> <span class=\"fn\">f</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">g</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L127-L127","name":"CategoryTheory.CommSq.shortComplex'_X₁","line":127,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'_X₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'_X₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">shortComplex'_X₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">fst</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">snd</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">fst</span> <span class=\"fn\">snd</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'\">shortComplex'</a></span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.X₁\">X₁</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X₁</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L127-L127","name":"CategoryTheory.CommSq.shortComplex'_f","line":127,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">shortComplex'_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">fst</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">snd</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">fst</span> <span class=\"fn\">snd</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'\">shortComplex'</a></span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.biprod.lift\">Limits.biprod.lift</a> <span class=\"fn\">fst</span> <span class=\"fn\">snd</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L127-L127","name":"CategoryTheory.CommSq.shortComplex'_X₃","line":127,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'_X₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'_X₃\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">shortComplex'_X₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">fst</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">snd</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">fst</span> <span class=\"fn\">snd</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'\">shortComplex'</a></span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.X₃\">X₃</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X₄</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L125-L131","name":"CategoryTheory.CommSq.shortComplex'","line":125,"kind":"def","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'","doc":"The short complex attached to the kernel fork of a commutative square.\n(This is similar to `CommSq.shortComplex`, but with different signs.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">shortComplex'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">fst</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">snd</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">fst</span> <span class=\"fn\">snd</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex\">ShortComplex</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L120-L123","name":"CategoryTheory.CommSq.kernelFork","line":120,"kind":"def","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.kernelFork","doc":"The kernel fork attached to a commutative square in a preadditive category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.kernelFork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">kernelFork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">fst</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">snd</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">fst</span> <span class=\"fn\">snd</span> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.KernelFork\">Limits.KernelFork</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.biprod.desc\">Limits.biprod.desc</a> <span class=\"fn\">f</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">g</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L108-L112","name":"CategoryTheory.IsPushout.epi_shortComplex_g","line":108,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.IsPushout.epi_shortComplex_g","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.IsPushout.epi_shortComplex_g\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">epi_shortComplex_g</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inl</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inr</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/CommSq.html#CategoryTheory.IsPushout\">IsPushout</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">inl</span> <span class=\"fn\">inr</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">Epi</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex\">shortComplex</a></span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.g\">g</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L103-L106","name":"CategoryTheory.IsPushout.isColimitCokernelCofork","line":103,"kind":"def","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.IsPushout.isColimitCokernelCofork","doc":"The colimit cokernel cofork attached to a pushout square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.IsPushout.isColimitCokernelCofork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">IsPushout</span>.<span class=\"name\">isColimitCokernelCofork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inl</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inr</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/CommSq.html#CategoryTheory.IsPushout\">IsPushout</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">inl</span> <span class=\"fn\">inr</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\"><span class=\"fn\">⋯</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.cokernelCofork\">cokernelCofork</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L54-L101","name":"CategoryTheory.CommSq.isColimitEquivIsColimitCokernelCofork","line":54,"kind":"def","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.isColimitEquivIsColimitCokernelCofork","doc":"A commutative square in a preadditive category is a pushout square iff\nthe corresponding diagram `X₁ ⟶ X₂ ⊞ X₃ ⟶ X₄ ⟶ 0` makes `X₄` a cokernel. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.isColimitEquivIsColimitCokernelCofork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">isColimitEquivIsColimitCokernelCofork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inl</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inr</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">inl</span> <span class=\"fn\">inr</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/PullbackCone.html#CategoryTheory.Limits.PushoutCocone.mk\">Limits.PushoutCocone.mk</a> <span class=\"fn\">inl</span> <span class=\"fn\">inr</span> <span class=\"fn\">⋯</span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsColimit\">Limits.IsColimit</a> <span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.cokernelCofork\">cokernelCofork</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L48-L48","name":"CategoryTheory.CommSq.shortComplex_f","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex_f\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">shortComplex_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inl</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inr</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">inl</span> <span class=\"fn\">inr</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex\">shortComplex</a></span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.f\">f</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.biprod.lift\">Limits.biprod.lift</a> <span class=\"fn\">f</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">g</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L48-L48","name":"CategoryTheory.CommSq.shortComplex_X₁","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex_X₁","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex_X₁\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">shortComplex_X₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inl</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inr</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">inl</span> <span class=\"fn\">inr</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex\">shortComplex</a></span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.X₁\">X₁</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X₁</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L48-L48","name":"CategoryTheory.CommSq.shortComplex_X₂","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex_X₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex_X₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">shortComplex_X₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inl</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inr</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">inl</span> <span class=\"fn\">inr</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex\">shortComplex</a></span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.X₂\">X₂</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">X₂</span> <a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.biprod\">⊞</a> <span class=\"fn\">X₃</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L48-L48","name":"CategoryTheory.CommSq.shortComplex_g","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex_g","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex_g\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">shortComplex_g</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inl</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inr</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">inl</span> <span class=\"fn\">inr</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex\">shortComplex</a></span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.g\">g</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.biprod.desc\">Limits.biprod.desc</a> <span class=\"fn\">inl</span> <span class=\"fn\">inr</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L48-L48","name":"CategoryTheory.CommSq.shortComplex_X₃","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex_X₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex_X₃\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">shortComplex_X₃</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inl</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inr</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">inl</span> <span class=\"fn\">inr</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">sq</span>.<a href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex\">shortComplex</a></span>.<a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex.X₃\">X₃</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X₄</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L47-L52","name":"CategoryTheory.CommSq.shortComplex","line":47,"kind":"def","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex","doc":"The short complex attached to the cokernel cofork of a commutative square. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.shortComplex\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">shortComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inl</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inr</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">inl</span> <span class=\"fn\">inr</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/ShortComplex/Basic.html#CategoryTheory.ShortComplex\">ShortComplex</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Homology/CommSq.lean#L42-L45","name":"CategoryTheory.CommSq.cokernelCofork","line":42,"kind":"def","docLink":"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.cokernelCofork","doc":"The cokernel cofork attached to a commutative square in a preadditive category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Homology/CommSq.html#CategoryTheory.CommSq.cokernelCofork\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">CommSq</span>.<span class=\"name\">cokernelCofork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁ </span><span class=\"fn\">X₂ </span><span class=\"fn\">X₃ </span><span class=\"fn\">X₄</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.HasBinaryBiproduct\">Limits.HasBinaryBiproduct</a> <span class=\"fn\">X₂</span> <span class=\"fn\">X₃</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">X₁</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₃</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inl</span> : <span class=\"fn\">X₂</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inr</span> : <span class=\"fn\">X₃</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₄</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sq</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/CommSq.html#CategoryTheory.CommSq\">CommSq</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">inl</span> <span class=\"fn\">inr</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Kernels.html#CategoryTheory.Limits.CokernelCofork\">Limits.CokernelCofork</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/BinaryBiproducts.html#CategoryTheory.Limits.biprod.lift\">Limits.biprod.lift</a> <span class=\"fn\">f</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">g</span>))</span></span></div></div>"}]}