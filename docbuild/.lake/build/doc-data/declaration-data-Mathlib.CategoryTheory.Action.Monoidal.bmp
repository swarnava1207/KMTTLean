{"name":"Mathlib.CategoryTheory.Action.Monoidal","instances":[{"typeNames":["Action"],"name":"Action.instMonoidalCategory","className":"CategoryTheory.MonoidalCategory"},{"typeNames":["Action.forget"],"name":"Action.instMonoidalForget","className":"CategoryTheory.Functor.Monoidal"},{"typeNames":["Action"],"name":"Action.instBraidedCategory","className":"CategoryTheory.BraidedCategory"},{"typeNames":["Action.forget"],"name":"Action.instBraidedForget","className":"CategoryTheory.Functor.Braided"},{"typeNames":["Action"],"name":"Action.instSymmetricCategory","className":"CategoryTheory.SymmetricCategory"},{"typeNames":["Action"],"name":"Action.instMonoidalPreadditive","className":"CategoryTheory.MonoidalPreadditive"},{"typeNames":["Action"],"name":"Action.instMonoidalLinear","className":"CategoryTheory.MonoidalLinear"},{"typeNames":["Action.FunctorCategoryEquivalence.functor"],"name":"Action.instMonoidalFunctorSingleObjFunctor","className":"CategoryTheory.Functor.Monoidal"},{"typeNames":["CategoryTheory.Equivalence.functor"],"name":"Action.instMonoidalFunctorSingleObjFunctorFunctorCategoryEquivalence","className":"CategoryTheory.Functor.Monoidal"},{"typeNames":["Action.FunctorCategoryEquivalence.inverse"],"name":"Action.instMonoidalFunctorSingleObjInverse","className":"CategoryTheory.Functor.Monoidal"},{"typeNames":["CategoryTheory.Equivalence.inverse"],"name":"Action.instMonoidalFunctorSingleObjInverseFunctorCategoryEquivalence","className":"CategoryTheory.Functor.Monoidal"},{"typeNames":["CategoryTheory.Functor"],"name":"Action.instRightRigidCategoryFunctorSingleObj","className":"CategoryTheory.RightRigidCategory"},{"typeNames":["Action"],"name":"Action.instRightRigidCategory","className":"CategoryTheory.RightRigidCategory"},{"typeNames":["CategoryTheory.Functor"],"name":"Action.instLeftRigidCategoryFunctorSingleObj","className":"CategoryTheory.LeftRigidCategory"},{"typeNames":["Action"],"name":"Action.instLeftRigidCategory","className":"CategoryTheory.LeftRigidCategory"},{"typeNames":["CategoryTheory.Functor"],"name":"Action.instRigidCategoryFunctorSingleObj","className":"CategoryTheory.RigidCategory"},{"typeNames":["Action"],"name":"Action.instRigidCategory","className":"CategoryTheory.RigidCategory"},{"typeNames":["CategoryTheory.Functor.mapAction"],"name":"CategoryTheory.Functor.instLaxMonoidalActionMapAction","className":"CategoryTheory.Functor.LaxMonoidal"},{"typeNames":["CategoryTheory.Functor.mapAction"],"name":"CategoryTheory.Functor.instOplaxMonoidalActionMapAction","className":"CategoryTheory.Functor.OplaxMonoidal"},{"typeNames":["CategoryTheory.Functor.mapAction"],"name":"CategoryTheory.Functor.instMonoidalActionMapAction","className":"CategoryTheory.Functor.Monoidal"}],"imports":["Init","Mathlib.CategoryTheory.Monoidal.Linear","Mathlib.CategoryTheory.Monoidal.Rigid.FunctorCategory","Mathlib.CategoryTheory.Monoidal.Rigid.OfEquivalence","Mathlib.CategoryTheory.Monoidal.Transport","Mathlib.CategoryTheory.Monoidal.Types.Basic","Mathlib.CategoryTheory.Action.Concrete","Mathlib.CategoryTheory.Action.Limits"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L293-L299","name":"CategoryTheory.Functor.instMonoidalActionMapAction","line":293,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.instMonoidalActionMapAction","doc":"A monoidal functor induces a monoidal functor between\nthe categories of `G`-actions within those categories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.instMonoidalActionMapAction\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">instMonoidalActionMapAction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.Monoidal\">Monoidal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#CategoryTheory.Functor.mapAction\">mapAction</a></span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.Monoidal\">Monoidal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L289-L291","name":"CategoryTheory.Functor.mapAction_δ_hom","line":289,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.mapAction_δ_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.mapAction_δ_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">mapAction_δ_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal\">OplaxMonoidal</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal.δ\">OplaxMonoidal.δ</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#CategoryTheory.Functor.mapAction\">mapAction</a></span> <span class=\"fn\">G</span>)</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal.δ\">OplaxMonoidal.δ</a> <span class=\"fn\">F</span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L286-L287","name":"CategoryTheory.Functor.mapAction_η_hom","line":286,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.mapAction_η_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.mapAction_η_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">mapAction_η_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal\">OplaxMonoidal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal.η\">OplaxMonoidal.η</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#CategoryTheory.Functor.mapAction\">mapAction</a></span> <span class=\"fn\">G</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal.η\">OplaxMonoidal.η</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L269-L284","name":"CategoryTheory.Functor.instOplaxMonoidalActionMapAction","line":269,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.instOplaxMonoidalActionMapAction","doc":"An oplax monoidal functor induces an oplax monoidal functor between\nthe categories of `G`-actions within those categories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.instOplaxMonoidalActionMapAction\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">instOplaxMonoidalActionMapAction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal\">OplaxMonoidal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#CategoryTheory.Functor.mapAction\">mapAction</a></span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal\">OplaxMonoidal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L265-L267","name":"CategoryTheory.Functor.mapAction_μ_hom","line":265,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.mapAction_μ_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.mapAction_μ_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">mapAction_μ_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal\">LaxMonoidal</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal.μ\">LaxMonoidal.μ</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#CategoryTheory.Functor.mapAction\">mapAction</a></span> <span class=\"fn\">G</span>)</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal.μ\">LaxMonoidal.μ</a> <span class=\"fn\">F</span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L262-L263","name":"CategoryTheory.Functor.mapAction_ε_hom","line":262,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.mapAction_ε_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.mapAction_ε_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">mapAction_ε_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal\">LaxMonoidal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal.ε\">LaxMonoidal.ε</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#CategoryTheory.Functor.mapAction\">mapAction</a></span> <span class=\"fn\">G</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal.ε\">LaxMonoidal.ε</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L245-L260","name":"CategoryTheory.Functor.instLaxMonoidalActionMapAction","line":245,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.instLaxMonoidalActionMapAction","doc":"A lax monoidal functor induces a lax monoidal functor between\nthe categories of `G`-actions within those categories. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#CategoryTheory.Functor.instLaxMonoidalActionMapAction\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">instLaxMonoidalActionMapAction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">LargeCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">V</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal\">LaxMonoidal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#CategoryTheory.Functor.mapAction\">mapAction</a></span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal\">LaxMonoidal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L229-L229","name":"Action.diagonalSucc_inv_hom","line":229,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.diagonalSucc_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.diagonalSucc_inv_hom\"><span class=\"name\">Action</span>.<span class=\"name\">diagonalSucc_inv_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Concrete.html#Action.leftRegular\">leftRegular</a> <span class=\"fn\">G</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Concrete.html#Action.diagonal\">diagonal</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.diagonalSucc\">diagonalSucc</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.consEquiv\">Fin.consEquiv</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>) =&gt; <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L229-L229","name":"Action.diagonalSucc_hom_hom","line":229,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.diagonalSucc_hom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.diagonalSucc_hom_hom\"><span class=\"name\">Action</span>.<span class=\"name\">diagonalSucc_hom_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Concrete.html#Action.diagonal\">diagonal</a> <span class=\"fn\">G</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.diagonalSucc\">diagonalSucc</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Fin/Tuple/Basic.html#Fin.consEquiv\">Fin.consEquiv</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>) =&gt; <span class=\"fn\">G</span></span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L227-L232","name":"Action.diagonalSucc","line":227,"kind":"def","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.diagonalSucc","doc":"The natural isomorphism of `G`-sets `Gⁿ⁺¹ ≅ G × Gⁿ`, where `G` acts by left multiplication on\neach factor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.diagonalSucc\"><span class=\"name\">Action</span>.<span class=\"name\">diagonalSucc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Concrete.html#Action.diagonal\">diagonal</a> <span class=\"fn\">G</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Concrete.html#Action.leftRegular\">leftRegular</a> <span class=\"fn\">G</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Concrete.html#Action.diagonal\">diagonal</a> <span class=\"fn\">G</span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L198-L198","name":"Action.leftRegularTensorIso_inv_hom","line":198,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.leftRegularTensorIso_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.leftRegularTensorIso_inv_hom\"><span class=\"name\">Action</span>.<span class=\"name\">leftRegularTensorIso_inv_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./foundational_types.html\">(Type</a> u) <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Concrete.html#Action.leftRegular\">leftRegular</a> <span class=\"fn\">G</span>)</span> <span class=\"fn\">{ <span class=\"fn\">V</span> := <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>, <span class=\"fn\">ρ</span> := <span class=\"fn\">1</span> }</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.leftRegularTensorIso\">leftRegularTensorIso</a> <span class=\"fn\">G</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">g</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.ρ\">ρ</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.1</span> <span class=\"fn\"><span class=\"fn\">g</span>.2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L198-L198","name":"Action.leftRegularTensorIso_hom_hom","line":198,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.leftRegularTensorIso_hom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.leftRegularTensorIso_hom_hom\"><span class=\"name\">Action</span>.<span class=\"name\">leftRegularTensorIso_hom_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./foundational_types.html\">(Type</a> u) <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Concrete.html#Action.leftRegular\">leftRegular</a> <span class=\"fn\">G</span>)</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.leftRegularTensorIso\">leftRegularTensorIso</a> <span class=\"fn\">G</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">g</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.ρ\">ρ</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.1</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <span class=\"fn\"><span class=\"fn\">g</span>.2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L194-L225","name":"Action.leftRegularTensorIso","line":194,"kind":"def","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.leftRegularTensorIso","doc":"Given `X : Action (Type u) G` for `G` a group, then `G × X` (with `G` acting as left\nmultiplication on the first factor and by `X.ρ` on the second) is isomorphic as a `G`-set to\n`G × X` (with `G` acting as left multiplication on the first factor and trivially on the second).\nThe isomorphism is given by `(g, x) ↦ (g, g⁻¹ • x)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.leftRegularTensorIso\"><span class=\"name\">Action</span>.<span class=\"name\">leftRegularTensorIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <a href=\"./foundational_types.html\">(Type</a> u) <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Concrete.html#Action.leftRegular\">leftRegular</a> <span class=\"fn\">G</span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Concrete.html#Action.leftRegular\">leftRegular</a> <span class=\"fn\">G</span>)</span> <span class=\"fn\">{ <span class=\"fn\">V</span> := <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>, <span class=\"fn\">ρ</span> := <span class=\"fn\">1</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L185-L186","name":"Action.leftDual_ρ","line":185,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.leftDual_ρ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.leftDual_ρ\"><span class=\"name\">Action</span>.<span class=\"name\">leftDual_ρ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.LeftRigidCategory\">CategoryTheory.LeftRigidCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasLeftDual.leftDual\">ᘁ</a><span class=\"fn\">X</span>).<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.ρ\">ρ</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.leftAdjointMate\">ᘁ</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.ρ\">ρ</a></span> <span class=\"fn\">h</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L182-L183","name":"Action.rightDual_ρ","line":182,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.rightDual_ρ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.rightDual_ρ\"><span class=\"name\">Action</span>.<span class=\"name\">rightDual_ρ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RightRigidCategory\">CategoryTheory.RightRigidCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasRightDual.rightDual\">ᘁ</a>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.ρ\">ρ</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.ρ\">ρ</a></span> <span class=\"fn\">h</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></span><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.rightAdjointMate\">ᘁ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L178-L180","name":"Action.leftDual_v","line":178,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.leftDual_v","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.leftDual_v\"><span class=\"name\">Action</span>.<span class=\"name\">leftDual_v</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.LeftRigidCategory\">CategoryTheory.LeftRigidCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasLeftDual.leftDual\">ᘁ</a><span class=\"fn\">X</span>).<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasLeftDual.leftDual\">ᘁ</a><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L174-L176","name":"Action.rightDual_v","line":174,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.rightDual_v","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.rightDual_v\"><span class=\"name\">Action</span>.<span class=\"name\">rightDual_v</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RightRigidCategory\">CategoryTheory.RightRigidCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasRightDual.rightDual\">ᘁ</a>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.HasRightDual.rightDual\">ᘁ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L167-L169","name":"Action.instRigidCategory","line":167,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instRigidCategory","doc":"If `V` is rigid, so is `Action V G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instRigidCategory\"><span class=\"name\">Action</span>.<span class=\"name\">instRigidCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RigidCategory\">CategoryTheory.RigidCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RigidCategory\">CategoryTheory.RigidCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">H</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L164-L165","name":"Action.instRigidCategoryFunctorSingleObj","line":164,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instRigidCategoryFunctorSingleObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instRigidCategoryFunctorSingleObj\"><span class=\"name\">Action</span>.<span class=\"name\">instRigidCategoryFunctorSingleObj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RigidCategory\">CategoryTheory.RigidCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RigidCategory\">CategoryTheory.RigidCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">H</span>)</span> <span class=\"fn\">V</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L160-L162","name":"Action.instLeftRigidCategory","line":160,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instLeftRigidCategory","doc":"If `V` is left rigid, so is `Action V G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instLeftRigidCategory\"><span class=\"name\">Action</span>.<span class=\"name\">instLeftRigidCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.LeftRigidCategory\">CategoryTheory.LeftRigidCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.LeftRigidCategory\">CategoryTheory.LeftRigidCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">H</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L157-L158","name":"Action.instLeftRigidCategoryFunctorSingleObj","line":157,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instLeftRigidCategoryFunctorSingleObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instLeftRigidCategoryFunctorSingleObj\"><span class=\"name\">Action</span>.<span class=\"name\">instLeftRigidCategoryFunctorSingleObj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.LeftRigidCategory\">CategoryTheory.LeftRigidCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.LeftRigidCategory\">CategoryTheory.LeftRigidCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">H</span>)</span> <span class=\"fn\">V</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L152-L155","name":"Action.instRightRigidCategory","line":152,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instRightRigidCategory","doc":"If `V` is right rigid, so is `Action V G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instRightRigidCategory\"><span class=\"name\">Action</span>.<span class=\"name\">instRightRigidCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RightRigidCategory\">CategoryTheory.RightRigidCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RightRigidCategory\">CategoryTheory.RightRigidCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">H</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L149-L150","name":"Action.instRightRigidCategoryFunctorSingleObj","line":149,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instRightRigidCategoryFunctorSingleObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instRightRigidCategoryFunctorSingleObj\"><span class=\"name\">Action</span>.<span class=\"name\">instRightRigidCategoryFunctorSingleObj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RightRigidCategory\">CategoryTheory.RightRigidCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Rigid/Basic.html#CategoryTheory.RightRigidCategory\">CategoryTheory.RightRigidCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">H</span>)</span> <span class=\"fn\">V</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L142-L144","name":"Action.FunctorCategoryEquivalence.functor_δ","line":142,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.FunctorCategoryEquivalence.functor_δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.FunctorCategoryEquivalence.functor_δ\"><span class=\"name\">Action</span>.<span class=\"name\">FunctorCategoryEquivalence</span>.<span class=\"name\">functor_δ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal.δ\">CategoryTheory.Functor.OplaxMonoidal.δ</a> <a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.FunctorCategoryEquivalence.functor\">functor</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.FunctorCategoryEquivalence.functor\">functor</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L138-L140","name":"Action.FunctorCategoryEquivalence.functor_μ","line":138,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.FunctorCategoryEquivalence.functor_μ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.FunctorCategoryEquivalence.functor_μ\"><span class=\"name\">Action</span>.<span class=\"name\">FunctorCategoryEquivalence</span>.<span class=\"name\">functor_μ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal.μ\">CategoryTheory.Functor.LaxMonoidal.μ</a> <a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.FunctorCategoryEquivalence.functor\">functor</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.FunctorCategoryEquivalence.functor\">functor</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">A</span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.FunctorCategoryEquivalence.functor\">functor</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">B</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L134-L136","name":"Action.FunctorCategoryEquivalence.functor_η","line":134,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.FunctorCategoryEquivalence.functor_η","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.FunctorCategoryEquivalence.functor_η\"><span class=\"name\">Action</span>.<span class=\"name\">FunctorCategoryEquivalence</span>.<span class=\"name\">functor_η</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal.η\">CategoryTheory.Functor.OplaxMonoidal.η</a> <a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.FunctorCategoryEquivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.FunctorCategoryEquivalence.functor\">functor</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(𝟙_ <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L130-L132","name":"Action.FunctorCategoryEquivalence.functor_ε","line":130,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.FunctorCategoryEquivalence.functor_ε","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.FunctorCategoryEquivalence.functor_ε\"><span class=\"name\">Action</span>.<span class=\"name\">FunctorCategoryEquivalence</span>.<span class=\"name\">functor_ε</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal.ε\">CategoryTheory.Functor.LaxMonoidal.ε</a> <a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.FunctorCategoryEquivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/SingleObj.html#CategoryTheory.SingleObj\">CategoryTheory.SingleObj</a> <span class=\"fn\">G</span>)</span> <span class=\"fn\">V</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L127-L128","name":"Action.instMonoidalFunctorSingleObjInverseFunctorCategoryEquivalence","line":127,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalFunctorSingleObjInverseFunctorCategoryEquivalence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalFunctorSingleObjInverseFunctorCategoryEquivalence\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalFunctorSingleObjInverseFunctorCategoryEquivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.functorCategoryEquivalence\">functorCategoryEquivalence</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.Monoidal\">Monoidal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L122-L125","name":"Action.instMonoidalFunctorSingleObjInverse","line":122,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalFunctorSingleObjInverse","doc":"Upgrading the functor `(SingleObj G ⥤ V) ⥤ Action V G` to a monoidal functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalFunctorSingleObjInverse\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalFunctorSingleObjInverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.FunctorCategoryEquivalence.inverse\">FunctorCategoryEquivalence.inverse</a>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.Monoidal\">Monoidal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L119-L120","name":"Action.instMonoidalFunctorSingleObjFunctorFunctorCategoryEquivalence","line":119,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalFunctorSingleObjFunctorFunctorCategoryEquivalence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalFunctorSingleObjFunctorFunctorCategoryEquivalence\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalFunctorSingleObjFunctorFunctorCategoryEquivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.functorCategoryEquivalence\">functorCategoryEquivalence</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.Monoidal\">Monoidal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L114-L117","name":"Action.instMonoidalFunctorSingleObjFunctor","line":114,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalFunctorSingleObjFunctor","doc":"Upgrading the functor `Action V G ⥤ (SingleObj G ⥤ V)` to a monoidal functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalFunctorSingleObjFunctor\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalFunctorSingleObjFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.FunctorCategoryEquivalence.functor\">FunctorCategoryEquivalence.functor</a>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.Monoidal\">Monoidal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L108-L108","name":"Action.instMonoidalLinear","line":108,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalLinear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalLinear\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalLinear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Preadditive.html#CategoryTheory.MonoidalPreadditive\">CategoryTheory.MonoidalPreadditive</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Linear/Basic.html#CategoryTheory.Linear\">CategoryTheory.Linear</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Linear.html#CategoryTheory.MonoidalLinear\">CategoryTheory.MonoidalLinear</a> <span class=\"fn\">R</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Linear.html#CategoryTheory.MonoidalLinear\">CategoryTheory.MonoidalLinear</a> <span class=\"fn\">R</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L104-L104","name":"Action.instMonoidalPreadditive","line":104,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalPreadditive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalPreadditive\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalPreadditive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Preadditive.html#CategoryTheory.MonoidalPreadditive\">CategoryTheory.MonoidalPreadditive</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Preadditive.html#CategoryTheory.MonoidalPreadditive\">CategoryTheory.MonoidalPreadditive</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L95-L96","name":"Action.instSymmetricCategory","line":95,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instSymmetricCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instSymmetricCategory\"><span class=\"name\">Action</span>.<span class=\"name\">instSymmetricCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.SymmetricCategory\">CategoryTheory.SymmetricCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.SymmetricCategory\">CategoryTheory.SymmetricCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L90-L91","name":"Action.instBraidedForget","line":90,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instBraidedForget","doc":"When `V` is braided the forgetful functor `Action V G` to `V` is braided. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instBraidedForget\"><span class=\"name\">Action</span>.<span class=\"name\">instBraidedForget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.forget\">forget</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.Functor.Braided\">Braided</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L87-L88","name":"Action.β_inv_hom","line":87,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.β_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.β_inv_hom\"><span class=\"name\">Action</span>.<span class=\"name\">β_inv_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory.braiding\">β_</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory.braiding\">β_</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L84-L85","name":"Action.β_hom_hom","line":84,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.β_hom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.β_hom_hom\"><span class=\"name\">Action</span>.<span class=\"name\">β_hom_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory.braiding\">β_</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory.braiding\">β_</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L80-L82","name":"Action.instBraidedCategory","line":80,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instBraidedCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instBraidedCategory\"><span class=\"name\">Action</span>.<span class=\"name\">instBraidedCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L72-L72","name":"Action.forget_δ","line":72,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.forget_δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.forget_δ\"><span class=\"name\">Action</span>.<span class=\"name\">forget_δ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal.δ\">CategoryTheory.Functor.OplaxMonoidal.δ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.forget\">forget</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.forget\">forget</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L71-L71","name":"Action.forget_μ","line":71,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.forget_μ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.forget_μ\"><span class=\"name\">Action</span>.<span class=\"name\">forget_μ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal.μ\">CategoryTheory.Functor.LaxMonoidal.μ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.forget\">forget</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.forget\">forget</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.forget\">forget</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">Y</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L67-L67","name":"Action.forget_η","line":67,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.forget_η","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.forget_η\"><span class=\"name\">Action</span>.<span class=\"name\">forget_η</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal.ε\">CategoryTheory.Functor.LaxMonoidal.ε</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.forget\">forget</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">V</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L66-L66","name":"Action.forget_ε","line":66,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.forget_ε","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.forget_ε\"><span class=\"name\">Action</span>.<span class=\"name\">forget_ε</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal.ε\">CategoryTheory.Functor.LaxMonoidal.ε</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.forget\">forget</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">V</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L59-L62","name":"Action.instMonoidalForget","line":59,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalForget\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalForget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1))</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.forget\">forget</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.Monoidal\">Monoidal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L52-L55","name":"Action.tensorUnitIso","line":52,"kind":"def","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.tensorUnitIso","doc":"Given an object `X` isomorphic to the tensor unit of `V`, `X` equipped with the trivial action\nis isomorphic to the tensor unit of `Action V G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.tensorUnitIso\"><span class=\"name\">Action</span>.<span class=\"name\">tensorUnitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">V</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">𝟙_ <span class=\"fn\">V</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">𝟙_ <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">{ <span class=\"fn\">V</span> := <span class=\"fn\">X</span>, <span class=\"fn\">ρ</span> := <span class=\"fn\">1</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L47-L50","name":"Action.tensor_ρ","line":47,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.tensor_ρ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.tensor_ρ\"><span class=\"name\">Action</span>.<span class=\"name\">tensor_ρ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.ρ\">ρ</a></span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.ρ\">ρ</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.ρ\">ρ</a></span> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L42-L45","name":"Action.tensorUnit_ρ","line":42,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.tensorUnit_ρ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.tensorUnit_ρ\"><span class=\"name\">Action</span>.<span class=\"name\">tensorUnit_ρ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(𝟙_ <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.ρ\">ρ</a></span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">V</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L36-L38","name":"Action.instMonoidalCategory_leftUnitor_hom_hom","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_leftUnitor_hom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_leftUnitor_hom_hom\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalCategory_leftUnitor_hom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L36-L38","name":"Action.instMonoidalCategory_whiskerRight_hom","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_whiskerRight_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_whiskerRight_hom\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalCategory_whiskerRight_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁✝ </span><span class=\"fn\">X₂✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X₁✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\">f</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L36-L38","name":"Action.instMonoidalCategory_leftUnitor_inv_hom","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_leftUnitor_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_leftUnitor_inv_hom\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalCategory_leftUnitor_inv_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L36-L38","name":"Action.instMonoidalCategory_associator_hom_hom","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_associator_hom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_associator_hom_hom\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalCategory_associator_hom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <span class=\"fn\"><span class=\"fn\">Z</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L36-L38","name":"Action.instMonoidalCategory_tensorUnit_V","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_tensorUnit_V","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_tensorUnit_V\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalCategory_tensorUnit_V</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(𝟙_ <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">𝟙_ <span class=\"fn\">V</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L36-L38","name":"Action.instMonoidalCategory_tensorObj_V","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_tensorObj_V","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_tensorObj_V\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalCategory_tensorObj_V</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L36-L38","name":"Action.instMonoidalCategory_rightUnitor_inv_hom","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_rightUnitor_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_rightUnitor_inv_hom\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalCategory_rightUnitor_inv_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L36-L38","name":"Action.instMonoidalCategory_associator_inv_hom","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_associator_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_associator_inv_hom\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalCategory_associator_inv_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <span class=\"fn\"><span class=\"fn\">Z</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L36-L38","name":"Action.instMonoidalCategory_rightUnitor_hom_hom","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_rightUnitor_hom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_rightUnitor_hom_hom\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalCategory_rightUnitor_hom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L36-L38","name":"Action.instMonoidalCategory_whiskerLeft_hom","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_whiskerLeft_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_whiskerLeft_hom\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalCategory_whiskerLeft_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">x✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x✝¹</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.V\">V</a></span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L36-L38","name":"Action.instMonoidalCategory_tensorHom_hom","line":36,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_tensorHom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory_tensorHom_hom\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalCategory_tensorHom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁✝ </span><span class=\"fn\">Y₁✝ </span><span class=\"fn\">X₂✝ </span><span class=\"fn\">Y₂✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X₁✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₁✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">X₂✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₂✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action.Hom.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Action/Monoidal.lean#L36-L40","name":"Action.instMonoidalCategory","line":36,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Action/Monoidal.html#Action.instMonoidalCategory\"><span class=\"name\">Action</span>.<span class=\"name\">instMonoidalCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> (u + 1)}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Action/Basic.html#Action\">Action</a> <span class=\"fn\">V</span> <span class=\"fn\">G</span>)</span></span></div></div>"}]}