{"name":"Mathlib.Util.AssertExists","instances":[],"imports":["Init","Mathlib.Init","Lean.Elab.Command","Mathlib.Util.AssertExistsExt"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/AssertExists.lean#L121-L133","name":"commandAssert_not_imported_","line":121,"kind":"def","docLink":"./Mathlib/Util/AssertExists.html#commandAssert_not_imported_","doc":"`assert_not_imported m₁ m₂ ... mₙ` checks that each one of the modules `m₁ m₂ ... mₙ` is not\namong the transitive imports of the current file.\n\nThe command does not currently check whether the modules `m₁ m₂ ... mₙ` actually exist.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExists.html#commandAssert_not_imported_\"><span class=\"name\">commandAssert_not_imported_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/AssertExists.lean#L80-L119","name":"commandAssert_not_exists_","line":80,"kind":"def","docLink":"./Mathlib/Util/AssertExists.html#commandAssert_not_exists_","doc":"`assert_not_exists d₁ d₂ ... dₙ` is a user command that asserts that the declarations named\n`d₁ d₂ ... dₙ` *do not exist* in the current import scope.\n\nBe careful to use names (e.g. `Rat`) rather than notations (e.g. `ℚ`).\n\nIt may be used (sparingly!) in mathlib to enforce plans that certain files\nare independent of each other.\n\nIf you encounter an error on an `assert_not_exists` command while developing mathlib,\nit is probably because you have introduced new import dependencies to a file.\n\nIn this case, you should refactor your work\n(for example by creating new files rather than adding imports to existing files).\nYou should *not* delete the `assert_not_exists` statement without careful discussion ahead of time.\n\n`assert_not_exists` statements should generally live at the top of the file, after the module doc.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExists.html#commandAssert_not_exists_\"><span class=\"name\">commandAssert_not_exists_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/AssertExists.lean#L69-L78","name":"commandAssert_exists_","line":69,"kind":"def","docLink":"./Mathlib/Util/AssertExists.html#commandAssert_exists_","doc":"`assert_exists n` is a user command that asserts that a declaration named `n` exists\nin the current import scope.\n\nBe careful to use names (e.g. `Rat`) rather than notations (e.g. `ℚ`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExists.html#commandAssert_exists_\"><span class=\"name\">commandAssert_exists_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Util/AssertExists.lean#L28-L65","name":"Mathlib.AssertNotExist.«command#check_assertions!»","line":28,"kind":"def","docLink":"./Mathlib/Util/AssertExists.html#Mathlib.AssertNotExist.«command#check_assertions!»","doc":"`#check_assertions` retrieves all declarations and all imports that were declared\nnot to exist so far (including in transitively imported files) and reports their current\nstatus:\n* ✓ means the declaration or import exists,\n* × means the declaration or import does not exist.\n\nThis means that the expectation is that all checks *succeed* by the time `#check_assertions`\nis used, typically once all of `Mathlib` has been built.\n\nIf all declarations and imports are available when `#check_assertions` is used,\nthen the command logs an info. Otherwise, it emits a warning.\n\nThe variant `#check_assertions!` only prints declarations/imports that are not present in the\nenvironment.  In particular, it is silent if everything is imported, making it useful for testing.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Util/AssertExists.html#Mathlib.AssertNotExist.«command#check_assertions!»\"><span class=\"name\">Mathlib</span>.<span class=\"name\">AssertNotExist</span>.<span class=\"name\">«command#check_assertions!»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}