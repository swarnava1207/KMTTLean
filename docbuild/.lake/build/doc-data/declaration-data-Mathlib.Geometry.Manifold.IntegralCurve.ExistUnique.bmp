{"name":"Mathlib.Geometry.Manifold.IntegralCurve.ExistUnique","instances":[],"imports":["Init","Mathlib.Analysis.ODE.Gronwall","Mathlib.Analysis.ODE.PicardLindelof","Mathlib.Geometry.Manifold.IntegralCurve.Transform","Mathlib.Geometry.Manifold.IsManifold.InteriorBoundary"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.lean#L260-L279","name":"IsIntegralCurve.periodic_xor_injective","line":260,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#IsIntegralCurve.periodic_xor_injective","doc":"A global integral curve is injective xor periodic with positive period. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#IsIntegralCurve.periodic_xor_injective\"><span class=\"name\">IsIntegralCurve</span>.<span class=\"name\">periodic_xor_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#IsManifold\">IsManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">1</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) → <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#TangentSpace\">TangentSpace</a> <span class=\"fn\">I</span> <span class=\"fn\">x</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/InteriorBoundary.html#BoundarylessManifold\">BoundarylessManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurve\">IsIntegralCurve</a> <span class=\"fn\">γ</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiff\">ContMDiff</a> <span class=\"fn\">I</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.tangent\">tangent</a></span> <span class=\"fn\">1</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\">x</span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span> }</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Xor'\">Xor'</a> <span class=\"fn\">(∃ <span class=\"fn\">T</span> &gt; <span class=\"fn\">0</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Periodic.html#Function.Periodic\">Function.Periodic</a> <span class=\"fn\">γ</span> <span class=\"fn\">T</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">γ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.lean#L249-L258","name":"IsIntegralCurve.periodic_of_eq","line":249,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#IsIntegralCurve.periodic_of_eq","doc":"For a global integral curve `γ`, if it crosses itself at `a b : ℝ`, then it is periodic with\nperiod `a - b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#IsIntegralCurve.periodic_of_eq\"><span class=\"name\">IsIntegralCurve</span>.<span class=\"name\">periodic_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#IsManifold\">IsManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">1</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) → <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#TangentSpace\">TangentSpace</a> <span class=\"fn\">I</span> <span class=\"fn\">x</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/InteriorBoundary.html#BoundarylessManifold\">BoundarylessManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurve\">IsIntegralCurve</a> <span class=\"fn\">γ</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiff\">ContMDiff</a> <span class=\"fn\">I</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.tangent\">tangent</a></span> <span class=\"fn\">1</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\">x</span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span> }</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">heq</span> : <span class=\"fn\"><span class=\"fn\">γ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">γ</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Periodic.html#Function.Periodic\">Function.Periodic</a> <span class=\"fn\">γ</span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.lean#L244-L247","name":"isIntegralCurve_Ioo_eq_of_contMDiff_boundaryless","line":244,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#isIntegralCurve_Ioo_eq_of_contMDiff_boundaryless","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#isIntegralCurve_Ioo_eq_of_contMDiff_boundaryless\"><span class=\"name\">isIntegralCurve_Ioo_eq_of_contMDiff_boundaryless</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#IsManifold\">IsManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">1</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ </span><span class=\"fn\">γ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) → <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#TangentSpace\">TangentSpace</a> <span class=\"fn\">I</span> <span class=\"fn\">x</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t₀</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/InteriorBoundary.html#BoundarylessManifold\">BoundarylessManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiff\">ContMDiff</a> <span class=\"fn\">I</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.tangent\">tangent</a></span> <span class=\"fn\">1</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\">x</span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span> }</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurve\">IsIntegralCurve</a> <span class=\"fn\">γ</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurve\">IsIntegralCurve</a> <span class=\"fn\">γ'</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">γ</span> <span class=\"fn\">t₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">γ'</span> <span class=\"fn\">t₀</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">γ'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.lean#L226-L242","name":"isIntegralCurve_eq_of_contMDiff","line":226,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#isIntegralCurve_eq_of_contMDiff","doc":"Global integral curves are unique.\n\nIf a continuously differentiable vector field `v` admits two global integral curves\n`γ γ' : ℝ → M`, and `γ t₀ = γ' t₀` for some `t₀`, then `γ` and `γ'` are equal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#isIntegralCurve_eq_of_contMDiff\"><span class=\"name\">isIntegralCurve_eq_of_contMDiff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#IsManifold\">IsManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">1</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ </span><span class=\"fn\">γ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) → <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#TangentSpace\">TangentSpace</a> <span class=\"fn\">I</span> <span class=\"fn\">x</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t₀</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγt</span> : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/InteriorBoundary.html#ModelWithCorners.IsInteriorPoint\">IsInteriorPoint</a></span> <span class=\"fn\">(<span class=\"fn\">γ</span> <span class=\"fn\">t</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiff\">ContMDiff</a> <span class=\"fn\">I</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.tangent\">tangent</a></span> <span class=\"fn\">1</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\">x</span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span> }</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurve\">IsIntegralCurve</a> <span class=\"fn\">γ</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurve\">IsIntegralCurve</a> <span class=\"fn\">γ'</span> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">γ</span> <span class=\"fn\">t₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">γ'</span> <span class=\"fn\">t₀</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">γ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">γ'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.lean#L218-L224","name":"isIntegralCurveOn_Ioo_eqOn_of_contMDiff_boundaryless","line":218,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#isIntegralCurveOn_Ioo_eqOn_of_contMDiff_boundaryless","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#isIntegralCurveOn_Ioo_eqOn_of_contMDiff_boundaryless\"><span class=\"name\">isIntegralCurveOn_Ioo_eqOn_of_contMDiff_boundaryless</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#IsManifold\">IsManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">1</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ </span><span class=\"fn\">γ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) → <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#TangentSpace\">TangentSpace</a> <span class=\"fn\">I</span> <span class=\"fn\">x</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t₀</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/InteriorBoundary.html#BoundarylessManifold\">BoundarylessManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht₀</span> : <span class=\"fn\">t₀</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiff\">ContMDiff</a> <span class=\"fn\">I</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.tangent\">tangent</a></span> <span class=\"fn\">1</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\">x</span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span> }</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurveOn\">IsIntegralCurveOn</a> <span class=\"fn\">γ</span> <span class=\"fn\">v</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurveOn\">IsIntegralCurveOn</a> <span class=\"fn\">γ'</span> <span class=\"fn\">v</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">γ</span> <span class=\"fn\">t₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">γ'</span> <span class=\"fn\">t₀</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">γ</span> <span class=\"fn\">γ'</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.lean#L176-L216","name":"isIntegralCurveOn_Ioo_eqOn_of_contMDiff","line":176,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#isIntegralCurveOn_Ioo_eqOn_of_contMDiff","doc":"Integral curves are unique on open intervals.\n\nIf a $C^1$ vector field `v` admits two integral curves `γ γ' : ℝ → M` on some open interval\n`Ioo a b`, and `γ t₀ = γ' t₀` for some `t ∈ Ioo a b`, then `γ` and `γ'` agree on `Ioo a b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#isIntegralCurveOn_Ioo_eqOn_of_contMDiff\"><span class=\"name\">isIntegralCurveOn_Ioo_eqOn_of_contMDiff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#IsManifold\">IsManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">1</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ </span><span class=\"fn\">γ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) → <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#TangentSpace\">TangentSpace</a> <span class=\"fn\">I</span> <span class=\"fn\">x</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t₀</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ht₀</span> : <span class=\"fn\">t₀</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγt</span> : <span class=\"fn\">∀ <span class=\"fn\">t</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/InteriorBoundary.html#ModelWithCorners.IsInteriorPoint\">IsInteriorPoint</a></span> <span class=\"fn\">(<span class=\"fn\">γ</span> <span class=\"fn\">t</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiff\">ContMDiff</a> <span class=\"fn\">I</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.tangent\">tangent</a></span> <span class=\"fn\">1</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\">x</span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span> }</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurveOn\">IsIntegralCurveOn</a> <span class=\"fn\">γ</span> <span class=\"fn\">v</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurveOn\">IsIntegralCurveOn</a> <span class=\"fn\">γ'</span> <span class=\"fn\">v</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">γ</span> <span class=\"fn\">t₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">γ'</span> <span class=\"fn\">t₀</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.EqOn\">Set.EqOn</a> <span class=\"fn\">γ</span> <span class=\"fn\">γ'</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioo\">Set.Ioo</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.lean#L168-L172","name":"isIntegralCurveAt_eventuallyEq_of_contMDiffAt_boundaryless","line":168,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#isIntegralCurveAt_eventuallyEq_of_contMDiffAt_boundaryless","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#isIntegralCurveAt_eventuallyEq_of_contMDiffAt_boundaryless\"><span class=\"name\">isIntegralCurveAt_eventuallyEq_of_contMDiffAt_boundaryless</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#IsManifold\">IsManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">1</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ </span><span class=\"fn\">γ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) → <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#TangentSpace\">TangentSpace</a> <span class=\"fn\">I</span> <span class=\"fn\">x</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t₀</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/InteriorBoundary.html#BoundarylessManifold\">BoundarylessManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffAt\">ContMDiffAt</a> <span class=\"fn\">I</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.tangent\">tangent</a></span> <span class=\"fn\">1</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\">x</span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span> }</span>)</span> <span class=\"fn\">(<span class=\"fn\">γ</span> <span class=\"fn\">t₀</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurveAt\">IsIntegralCurveAt</a> <span class=\"fn\">γ</span> <span class=\"fn\">v</span> <span class=\"fn\">t₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurveAt\">IsIntegralCurveAt</a> <span class=\"fn\">γ'</span> <span class=\"fn\">v</span> <span class=\"fn\">t₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">γ</span> <span class=\"fn\">t₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">γ'</span> <span class=\"fn\">t₀</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">γ</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">t₀</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">γ'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.lean#L119-L166","name":"isIntegralCurveAt_eventuallyEq_of_contMDiffAt","line":119,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#isIntegralCurveAt_eventuallyEq_of_contMDiffAt","doc":"Local integral curves are unique.\n\nIf a $C^1$ vector field `v` admits two local integral curves `γ γ' : ℝ → M` at `t₀` with\n`γ t₀ = γ' t₀`, then `γ` and `γ'` agree on some open interval containing `t₀`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#isIntegralCurveAt_eventuallyEq_of_contMDiffAt\"><span class=\"name\">isIntegralCurveAt_eventuallyEq_of_contMDiffAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#IsManifold\">IsManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">1</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ </span><span class=\"fn\">γ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) → <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#TangentSpace\">TangentSpace</a> <span class=\"fn\">I</span> <span class=\"fn\">x</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">t₀</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγt₀</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/InteriorBoundary.html#ModelWithCorners.IsInteriorPoint\">IsInteriorPoint</a></span> <span class=\"fn\">(<span class=\"fn\">γ</span> <span class=\"fn\">t₀</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffAt\">ContMDiffAt</a> <span class=\"fn\">I</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.tangent\">tangent</a></span> <span class=\"fn\">1</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\">x</span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span> }</span>)</span> <span class=\"fn\">(<span class=\"fn\">γ</span> <span class=\"fn\">t₀</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurveAt\">IsIntegralCurveAt</a> <span class=\"fn\">γ</span> <span class=\"fn\">v</span> <span class=\"fn\">t₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hγ'</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurveAt\">IsIntegralCurveAt</a> <span class=\"fn\">γ'</span> <span class=\"fn\">v</span> <span class=\"fn\">t₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">γ</span> <span class=\"fn\">t₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">γ'</span> <span class=\"fn\">t₀</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">γ</span> <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">=ᶠ[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">t₀</span></span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.EventuallyEq\">]</a> <span class=\"fn\">γ'</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.lean#L109-L115","name":"exists_isIntegralCurveAt_of_contMDiffAt_boundaryless","line":109,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#exists_isIntegralCurveAt_of_contMDiffAt_boundaryless","doc":"Existence of local integral curves for a $C^1$ vector field on a `C^1` manifold without\nboundary. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#exists_isIntegralCurveAt_of_contMDiffAt_boundaryless\"><span class=\"name\">exists_isIntegralCurveAt_of_contMDiffAt_boundaryless</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#IsManifold\">IsManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">1</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) → <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#TangentSpace\">TangentSpace</a> <span class=\"fn\">I</span> <span class=\"fn\">x</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t₀</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀</span> : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/InteriorBoundary.html#BoundarylessManifold\">BoundarylessManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffAt\">ContMDiffAt</a> <span class=\"fn\">I</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.tangent\">tangent</a></span> <span class=\"fn\">1</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\">x</span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span> }</span>)</span> <span class=\"fn\">x₀</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">M</span></span>), <span class=\"fn\"><span class=\"fn\">γ</span> <span class=\"fn\">t₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurveAt\">IsIntegralCurveAt</a> <span class=\"fn\">γ</span> <span class=\"fn\">v</span> <span class=\"fn\">t₀</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.lean#L55-L107","name":"exists_isIntegralCurveAt_of_contMDiffAt","line":55,"kind":"theorem","docLink":"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#exists_isIntegralCurveAt_of_contMDiffAt","doc":"Existence of local integral curves for a $C^1$ vector field at interior points of a `C^1`\nmanifold. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Geometry/Manifold/IntegralCurve/ExistUnique.html#exists_isIntegralCurveAt_of_contMDiffAt\"><span class=\"name\">exists_isIntegralCurveAt_of_contMDiffAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">E</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners\">ModelWithCorners</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span> <span class=\"fn\">H</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ChartedSpace.html#ChartedSpace\">ChartedSpace</a> <span class=\"fn\">H</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#IsManifold\">IsManifold</a> <span class=\"fn\">I</span> <span class=\"fn\">1</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) → <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#TangentSpace\">TangentSpace</a> <span class=\"fn\">I</span> <span class=\"fn\">x</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t₀</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀</span> : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/ContMDiff/Defs.html#ContMDiffAt\">ContMDiffAt</a> <span class=\"fn\">I</span> <span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/Basic.html#ModelWithCorners.tangent\">tangent</a></span> <span class=\"fn\">1</span> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span>) =&gt; <span class=\"fn\">{ <span class=\"fn\">proj</span> := <span class=\"fn\">x</span>, <span class=\"fn\">snd</span> := <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span> }</span>)</span> <span class=\"fn\">x₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.<a href=\"./Mathlib/Geometry/Manifold/IsManifold/InteriorBoundary.html#ModelWithCorners.IsInteriorPoint\">IsInteriorPoint</a></span> <span class=\"fn\">x₀</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">γ</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">M</span></span>), <span class=\"fn\"><span class=\"fn\">γ</span> <span class=\"fn\">t₀</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₀</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Geometry/Manifold/IntegralCurve/Basic.html#IsIntegralCurveAt\">IsIntegralCurveAt</a> <span class=\"fn\">γ</span> <span class=\"fn\">v</span> <span class=\"fn\">t₀</span></span></span></div></div>"}]}