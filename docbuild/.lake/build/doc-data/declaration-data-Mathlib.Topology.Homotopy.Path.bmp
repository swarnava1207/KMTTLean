{"name":"Mathlib.Topology.Homotopy.Path","instances":[{"typeNames":["Path.Homotopic.Quotient"],"name":"Path.Homotopic.instInhabitedQuotientUnitUnit","className":"Inhabited"}],"imports":["Init","Mathlib.Topology.Homotopy.Basic","Mathlib.Topology.Connected.PathConnected","Mathlib.Analysis.Convex.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L323-L330","name":"ContinuousMap.Homotopy.evalAt","line":323,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#ContinuousMap.Homotopy.evalAt","doc":"Given a homotopy `H : f ∼ g`, get the path traced by the point `x` as it moves from\n`f x` to `g x`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#ContinuousMap.Homotopy.evalAt\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">evalAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy\">Homotopy</a></span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L312-L319","name":"ContinuousMap.homotopic_const_iff","line":312,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#ContinuousMap.homotopic_const_iff","doc":"Two constant continuous maps with nonempty domain are homotopic if and only if their values are\njoined by a path in the codomain. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#ContinuousMap.homotopic_const_iff\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">homotopic_const_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">const</a> <span class=\"fn\">Y</span> <span class=\"fn\">x₀</span>)</span>.<a href=\"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopic\">Homotopic</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">const</a> <span class=\"fn\">Y</span> <span class=\"fn\">x₁</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Joined\">Joined</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L303-L303","name":"Path.toHomotopyConst_apply","line":303,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.toHomotopyConst_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.toHomotopyConst_apply\"><span class=\"name\">Path</span>.<span class=\"name\">toHomotopyConst_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.toHomotopyConst\">toHomotopyConst</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\"><span class=\"fn\">a✝</span>.1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L301-L308","name":"Path.toHomotopyConst","line":301,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.toHomotopyConst","doc":"A path `Path x₀ x₁` generates a homotopy between constant functions `fun _ ↦ x₀` and\n`fun _ ↦ x₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.toHomotopyConst\"><span class=\"name\">Path</span>.<span class=\"name\">toHomotopyConst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">Y</span> <span class=\"fn\">x₀</span>)</span>.<a href=\"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy\">Homotopy</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">Y</span> <span class=\"fn\">x₁</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L293-L297","name":"Path.Homotopic.hpath_hext","line":293,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.hpath_hext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.hpath_hext\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">hpath_hext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁ </span><span class=\"fn\">x₂ </span><span class=\"fn\">x₃</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₂</span> <span class=\"fn\">x₃</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>), <span class=\"fn\"><span class=\"fn\">p₁</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p₂</span> <span class=\"fn\">t</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">p₁</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">p₂</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L289-L290","name":"Path.Homotopic.map_lift","line":289,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.map_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.map_lift\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">map_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P₀</span>.<a href=\"./Mathlib/Topology/Path.html#Path.map\">map</a></span> <span class=\"fn\">⋯</span></span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient.mapFn\">Quotient.mapFn</a> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P₀</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L283-L287","name":"Path.Homotopic.Quotient.mapFn","line":283,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient.mapFn","doc":"The image of a path homotopy class `P₀` under a map `f`.\nThis is `Path.map` descended to the quotient. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient.mapFn\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">Quotient</span>.<span class=\"name\">mapFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Homotopic.Quotient</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Homotopic.Quotient</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₀</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">x₁</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L280-L281","name":"Path.Homotopic.comp_lift","line":280,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.comp_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.comp_lift\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">comp_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁ </span><span class=\"fn\">x₂</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P₀</span>.<a href=\"./Mathlib/Topology/Path.html#Path.trans\">trans</a></span> <span class=\"fn\">P₁</span></span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient.comp\">Quotient.comp</a> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P₀</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P₁</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L275-L278","name":"Path.Homotopic.Quotient.comp","line":275,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient.comp","doc":"The composition of path homotopy classes. This is `Path.trans` descended to the quotient. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient.comp\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">Quotient</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁ </span><span class=\"fn\">x₂</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Homotopic.Quotient</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Homotopic.Quotient</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Homotopic.Quotient</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L272-L273","name":"Path.Homotopic.instInhabitedQuotientUnitUnit","line":272,"kind":"instance","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.instInhabitedQuotientUnitUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.instInhabitedQuotientUnitUnit\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">instInhabitedQuotientUnitUnit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Homotopic.Quotient</a> <a href=\"./Init/Prelude.html#Unit.unit\">(</a><a href=\"./Init/Prelude.html#Unit.unit\">)</a> <a href=\"./Init/Prelude.html#Unit.unit\">(</a><a href=\"./Init/Prelude.html#Unit.unit\">)</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L265-L268","name":"Path.Homotopic.Quotient","line":265,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient","doc":"The quotient on `Path x₀ x₁` by the equivalence relation `Path.Homotopic`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">Quotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L258-L263","name":"Path.Homotopic.setoid","line":258,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.setoid","doc":"The setoid on `Path`s defined by the equivalence relation `Path.Homotopic`. That is, two paths are\nequivalent if there is a `Homotopy` between them.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.setoid\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">setoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid\">Setoid</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L254-L256","name":"Path.Homotopic.hcomp","line":254,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.hcomp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.hcomp\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">hcomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁ </span><span class=\"fn\">x₂</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">q₀ </span><span class=\"fn\">q₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hq</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">q₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span> <span class=\"fn\">q₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Path.html#Path.trans\">trans</a></span> <span class=\"fn\">q₀</span>)</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Mathlib/Topology/Path.html#Path.trans\">trans</a></span> <span class=\"fn\">q₁</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L250-L252","name":"Path.Homotopic.map","line":250,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.map\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Topology/Path.html#Path.map\">map</a></span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Mathlib/Topology/Path.html#Path.map\">map</a></span> <span class=\"fn\">⋯</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L247-L248","name":"Path.Homotopic.equivalence","line":247,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.equivalence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.equivalence\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">equivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Equivalence\">Equivalence</a> <a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L242-L245","name":"Path.Homotopic.trans","line":242,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.trans\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">p₀ </span><span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₀</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span> <span class=\"fn\">p₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span> <span class=\"fn\">p₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L238-L240","name":"Path.Homotopic.symm","line":238,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.symm\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span> <span class=\"fn\">p₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L234-L236","name":"Path.Homotopic.refl","line":234,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.refl\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Homotopic</a></span> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L227-L230","name":"Path.Homotopic","line":227,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic","doc":"Two paths `p₀` and `p₁` are `Path.Homotopic` if there exists a `Homotopy` between them.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L213-L213","name":"Path.Homotopy.map_apply","line":213,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.map_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.map\">map</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">F</span></span>) <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L209-L223","name":"Path.Homotopy.map","line":209,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.map","doc":"Given `F : Homotopy p q`, and `f : C(X, Y)`, we can define a homotopy from `p.map f.continuous` to\n`q.map f.continuous`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.map\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Topology/Path.html#Path.map\">map</a></span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Mathlib/Topology/Path.html#Path.map\">map</a></span> <span class=\"fn\">⋯</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L196-L196","name":"Path.Homotopy.symm₂_apply","line":196,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm₂_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm₂_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm₂_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm₂\">symm₂</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">x</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval.symm\">unitInterval.symm</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L193-L207","name":"Path.Homotopy.symm₂","line":193,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm₂","doc":"Suppose `F : Homotopy p q`. Then we have a `Homotopy p.symm q.symm` by reversing the second\nargument.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm₂\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p </span><span class=\"fn\">q</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Topology/Path.html#Path.symm\">symm</a></span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\"><span class=\"fn\">q</span>.<a href=\"./Mathlib/Topology/Path.html#Path.symm\">symm</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L174-L191","name":"Path.Homotopy.reparam","line":174,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.reparam","doc":"Suppose `p` is a path, then we have a homotopy from `p` to `p.reparam f` by the convexity of `I`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.reparam\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">reparam</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> → <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf₀</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf₁</span> : <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Topology/Path.html#Path.reparam\">reparam</a></span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span> <span class=\"fn\">hf₀</span> <span class=\"fn\">hf₁</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L168-L170","name":"Path.Homotopy.hcomp_half","line":168,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp_half","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp_half\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">hcomp_half</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁ </span><span class=\"fn\">x₂</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">q₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₁ </span><span class=\"fn\">q₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">q₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">q₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp\">hcomp</a></span> <span class=\"fn\">G</span>)</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">t</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span>, <span class=\"fn\">⋯</span>⟩</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₁</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L159-L166","name":"Path.Homotopy.hcomp_apply","line":159,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">hcomp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁ </span><span class=\"fn\">x₂</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">q₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₁ </span><span class=\"fn\">q₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">q₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">q₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp\">hcomp</a></span> <span class=\"fn\">G</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if h : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span> then <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval\">eval</a></span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span>, <span class=\"fn\">⋯</span>⟩</span></span> else <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval\">eval</a></span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>, <span class=\"fn\">⋯</span>⟩</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L141-L157","name":"Path.Homotopy.hcomp","line":141,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp","doc":"Suppose `p₀` and `q₀` are paths from `x₀` to `x₁`, `p₁` and `q₁` are paths from `x₁` to `x₂`.\nFurthermore, suppose `F : Homotopy p₀ q₀` and `G : Homotopy p₁ q₁`. Then we can define a homotopy\nfrom `p₀.trans p₁` to `q₀.trans q₁`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">hcomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁ </span><span class=\"fn\">x₂</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">q₀</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₁ </span><span class=\"fn\">q₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">q₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">q₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Path.html#Path.trans\">trans</a></span> <span class=\"fn\">p₁</span>)</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">q₀</span>.<a href=\"./Mathlib/Topology/Path.html#Path.trans\">trans</a></span> <span class=\"fn\">q₁</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L130-L130","name":"Path.Homotopy.cast_apply","line":130,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.cast_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.cast_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">cast_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁ </span><span class=\"fn\">q₀ </span><span class=\"fn\">q₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₀</span> : <span class=\"fn\">p₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q₀</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q₁</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.cast\">cast</a></span> <span class=\"fn\">h₀</span> <span class=\"fn\">h₁</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L129-L133","name":"Path.Homotopy.cast","line":129,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.cast","doc":"Casting a `Homotopy p₀ p₁` to a `Homotopy q₀ q₁` where `p₀ = q₀` and `p₁ = q₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.cast\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">cast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁ </span><span class=\"fn\">q₀ </span><span class=\"fn\">q₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₀</span> : <span class=\"fn\">p₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q₀</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">q₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">q₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L125-L127","name":"Path.Homotopy.symm_trans","line":125,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_trans\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans\">trans</a></span> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">symm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">symm</a></span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans\">trans</a></span> <span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">symm</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L117-L123","name":"Path.Homotopy.trans_apply","line":117,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">trans_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans\">trans</a></span> <span class=\"fn\">G</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if h : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span> then <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">⟨<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>, <span class=\"fn\">⋯</span>⟩</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> else <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">⟨<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>, <span class=\"fn\">⋯</span>⟩</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L110-L115","name":"Path.Homotopy.trans","line":110,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans","doc":"Given `Homotopy p₀ p₁` and `Homotopy p₁ p₂`, we can define a `Homotopy p₀ p₂` by putting the first\nhomotopy on `[0, 1/2]` and the second on `[1/2, 1]`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L107-L108","name":"Path.Homotopy.symm_bijective","line":107,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_bijective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_bijective\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">symm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L103-L105","name":"Path.Homotopy.symm_symm","line":103,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_symm\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">symm</a></span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">symm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">F</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L99-L99","name":"Path.Homotopy.symm_apply","line":99,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">symm</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval.symm\">unitInterval.symm</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L97-L101","name":"Path.Homotopy.symm","line":97,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm","doc":"Given a `Homotopy p₀ p₁`, we can define a `Homotopy p₁ p₀` by reversing the homotopy.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L93-L93","name":"Path.Homotopy.refl_apply","line":93,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.refl_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.refl_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">refl_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.refl\">refl</a> <span class=\"fn\">p</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L91-L95","name":"Path.Homotopy.refl","line":91,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.refl","doc":"Given a path `p`, we can define a `Homotopy p p` by `F (t, x) = p x`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.refl\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L80-L83","name":"Path.Homotopy.eval_one","line":80,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval_one\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">eval_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval\">eval</a></span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₁</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L75-L78","name":"Path.Homotopy.eval_zero","line":75,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval_zero\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">eval_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval\">eval</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₀</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L68-L73","name":"Path.Homotopy.eval","line":68,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval","doc":"Evaluating a path homotopy at an intermediate point, giving us a `Path`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L63-L66","name":"Path.Homotopy.target","line":63,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.target","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.target\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">target</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">t</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₁</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L58-L61","name":"Path.Homotopy.source","line":58,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.source","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.source\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">source</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₀</span>.<a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Homotopy</a></span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">t</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">0</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₀</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L55-L56","name":"Path.Homotopy.coeFn_injective","line":55,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.coeFn_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.coeFn_injective\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">coeFn_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/Data/FunLike/Basic.html#DFunLike.coe\">DFunLike.coe</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Homotopy/Path.lean#L44-L47","name":"Path.Homotopy","line":44,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy","doc":"The type of homotopies between two paths.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x₀ </span><span class=\"fn\">x₁</span> : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₀ </span><span class=\"fn\">p₁</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Path.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}