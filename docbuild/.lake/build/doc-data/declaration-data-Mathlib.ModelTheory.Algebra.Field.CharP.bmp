{"name":"Mathlib.ModelTheory.Algebra.Field.CharP","instances":[{"typeNames":["FirstOrder.Language.Theory.fieldOfChar"],"name":"FirstOrder.Field.model_hasChar_of_charP","className":"FirstOrder.Language.Theory.Model"},{"typeNames":["FirstOrder.Language.Theory.fieldOfChar"],"name":"FirstOrder.Field.model_fieldOfChar_of_charP","className":"FirstOrder.Language.Theory.Model"}],"imports":["Init","Mathlib.Algebra.CharP.Basic","Mathlib.ModelTheory.Algebra.Ring.FreeCommRing","Mathlib.ModelTheory.Algebra.Field.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/CharP.lean#L84-L86","name":"FirstOrder.Field.charP_of_model_fieldOfChar","line":84,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Field.charP_of_model_fieldOfChar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Field.charP_of_model_fieldOfChar\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">charP_of_model_fieldOfChar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Ring.CompatibleRing\">Ring.CompatibleRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">h</span> : <span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Language.Theory.fieldOfChar\">Language.Theory.fieldOfChar</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">K</span> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/CharP.lean#L78-L80","name":"FirstOrder.Field.model_fieldOfChar_of_charP","line":78,"kind":"instance","docLink":"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Field.model_fieldOfChar_of_charP","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Field.model_fieldOfChar_of_charP\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">model_fieldOfChar_of_charP</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Ring.CompatibleRing\">Ring.CompatibleRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">K</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Language.Theory.fieldOfChar\">Language.Theory.fieldOfChar</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/CharP.lean#L61-L76","name":"FirstOrder.Field.charP_iff_model_fieldOfChar","line":61,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Field.charP_iff_model_fieldOfChar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Field.charP_iff_model_fieldOfChar\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">charP_iff_model_fieldOfChar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Ring.CompatibleRing\">Ring.CompatibleRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Language.Theory.fieldOfChar\">Language.Theory.fieldOfChar</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">K</span> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/CharP.lean#L48-L59","name":"FirstOrder.Field.model_hasChar_of_charP","line":48,"kind":"instance","docLink":"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Field.model_hasChar_of_charP","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Field.model_hasChar_of_charP\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">model_hasChar_of_charP</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Ring.CompatibleRing\">Ring.CompatibleRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">K</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">K</span> <a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Theory.Model\">⊨</a> <span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Language.Theory.fieldOfChar\">Language.Theory.fieldOfChar</a> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/CharP.lean#L40-L46","name":"FirstOrder.Language.Theory.fieldOfChar","line":40,"kind":"def","docLink":"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Language.Theory.fieldOfChar","doc":"The first order theory of fields of characteristic `p` as a theory over the language of rings "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Language.Theory.fieldOfChar\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Language</span>.<span class=\"name\">Theory</span>.<span class=\"name\">fieldOfChar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">ring</a>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Theory\">Theory</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/CharP.lean#L36-L38","name":"FirstOrder.Field.realize_eqZero","line":36,"kind":"theorem","docLink":"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Field.realize_eqZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Field.realize_eqZero\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">realize_eqZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Ring.CompatibleRing\">Ring.CompatibleRing</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Empty\">Empty</a> → <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Semantics.html#FirstOrder.Language.Formula.Realize\">Language.Formula.Realize</a> <span class=\"fn\">(<a href=\"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Field.eqZero\">eqZero</a> <span class=\"fn\">n</span>)</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/ModelTheory/Algebra/Field/CharP.lean#L31-L34","name":"FirstOrder.Field.eqZero","line":31,"kind":"def","docLink":"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Field.eqZero","doc":"For a given natural number `n`, `eqZero n` is the sentence in the language of rings\nsaying that `n` is zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/ModelTheory/Algebra/Field/CharP.html#FirstOrder.Field.eqZero\"><span class=\"name\">FirstOrder</span>.<span class=\"name\">Field</span>.<span class=\"name\">eqZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/ModelTheory/Algebra/Ring/Basic.html#FirstOrder.Language.ring\">Language.ring</a>.<a href=\"./Mathlib/ModelTheory/Syntax.html#FirstOrder.Language.Sentence\">Sentence</a></span></div></div>"}]}