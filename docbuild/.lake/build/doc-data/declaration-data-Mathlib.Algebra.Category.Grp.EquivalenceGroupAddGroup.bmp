{"name":"Mathlib.Algebra.Category.Grp.EquivalenceGroupAddGroup","instances":[],"imports":["Init","Mathlib.Algebra.Category.Grp.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L76-L76","name":"commGroupAddCommGroupEquivalence_functor","line":76,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence_functor\"><span class=\"name\">commGroupAddCommGroupEquivalence_functor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence\">commGroupAddCommGroupEquivalence</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp\">CommGrp.toAddCommGrp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L76-L76","name":"commGroupAddCommGroupEquivalence_counitIso","line":76,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence_counitIso\"><span class=\"name\">commGroupAddCommGroupEquivalence_counitIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence\">commGroupAddCommGroupEquivalence</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">CategoryTheory.Iso.refl</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp\">AddCommGrp.toCommGrp</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp\">CommGrp.toAddCommGrp</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L76-L76","name":"commGroupAddCommGroupEquivalence_unitIso","line":76,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence_unitIso\"><span class=\"name\">commGroupAddCommGroupEquivalence_unitIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence\">commGroupAddCommGroupEquivalence</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">CategoryTheory.Iso.refl</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp\">CommGrp</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L76-L76","name":"commGroupAddCommGroupEquivalence_inverse","line":76,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence_inverse\"><span class=\"name\">commGroupAddCommGroupEquivalence_inverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence\">commGroupAddCommGroupEquivalence</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp\">AddCommGrp.toCommGrp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L74-L81","name":"commGroupAddCommGroupEquivalence","line":74,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence","doc":"The equivalence of categories between `CommGrp` and `AddCommGrp`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence\"><span class=\"name\">commGroupAddCommGroupEquivalence</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp\">CommGrp</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L67-L67","name":"groupAddGroupEquivalence_counitIso","line":67,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence_counitIso\"><span class=\"name\">groupAddGroupEquivalence_counitIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence\">groupAddGroupEquivalence</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">CategoryTheory.Iso.refl</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp\">AddGrp.toGrp</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp\">Grp.toAddGrp</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L67-L67","name":"groupAddGroupEquivalence_unitIso","line":67,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence_unitIso\"><span class=\"name\">groupAddGroupEquivalence_unitIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence\">groupAddGroupEquivalence</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">CategoryTheory.Iso.refl</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L67-L67","name":"groupAddGroupEquivalence_inverse","line":67,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence_inverse\"><span class=\"name\">groupAddGroupEquivalence_inverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence\">groupAddGroupEquivalence</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp\">AddGrp.toGrp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L67-L67","name":"groupAddGroupEquivalence_functor","line":67,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence_functor\"><span class=\"name\">groupAddGroupEquivalence_functor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence\">groupAddGroupEquivalence</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp\">Grp.toAddGrp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L65-L72","name":"groupAddGroupEquivalence","line":65,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence","doc":"The equivalence of categories between `Grp` and `AddGrp`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence\"><span class=\"name\">groupAddGroupEquivalence</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L58-L58","name":"AddCommGrp.toCommGrp_obj_coe","line":58,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp_obj_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp_obj_coe\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">toCommGrp_obj_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp\">toCommGrp</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L58-L58","name":"AddCommGrp.toCommGrp_map","line":58,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp_map\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">toCommGrp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">x✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x✝¹</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp\">toCommGrp</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp.ofHom\">CommGrp.ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Hom.html#AddMonoidHom.toMultiplicative\">AddMonoidHom.toMultiplicative</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L56-L61","name":"AddCommGrp.toCommGrp","line":56,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp","doc":"The functor `AddCommGrp ⥤ CommGrp` by sending `X ↦ Multiplicative Y` and `f ↦ f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddCommGrp.toCommGrp\"><span class=\"name\">AddCommGrp</span>.<span class=\"name\">toCommGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp\">CommGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L47-L47","name":"AddGrp.toGrp_map","line":47,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp_map\"><span class=\"name\">AddGrp</span>.<span class=\"name\">toGrp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">x✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x✝¹</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp\">toGrp</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp.ofHom\">Grp.ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Hom.html#AddMonoidHom.toMultiplicative\">AddMonoidHom.toMultiplicative</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L47-L47","name":"AddGrp.toGrp_obj_coe","line":47,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp_obj_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp_obj_coe\"><span class=\"name\">AddGrp</span>.<span class=\"name\">toGrp_obj_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp\">toGrp</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L45-L50","name":"AddGrp.toGrp","line":45,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp","doc":"The functor `AddGrp ⥤ Grp` by sending `X ↦ Multiplicative Y` and `f ↦ f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#AddGrp.toGrp\"><span class=\"name\">AddGrp</span>.<span class=\"name\">toGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L36-L36","name":"CommGrp.toAddCommGrp_obj_coe","line":36,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp_obj_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp_obj_coe\"><span class=\"name\">CommGrp</span>.<span class=\"name\">toAddCommGrp_obj_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp\">CommGrp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp\">toAddCommGrp</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive\">Additive</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L36-L36","name":"CommGrp.toAddCommGrp_map","line":36,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp_map\"><span class=\"name\">CommGrp</span>.<span class=\"name\">toAddCommGrp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp\">CommGrp</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">x✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x✝¹</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp\">toAddCommGrp</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp.ofHom\">AddCommGrp.ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Hom.html#MonoidHom.toAdditive\">MonoidHom.toAdditive</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L34-L39","name":"CommGrp.toAddCommGrp","line":34,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp","doc":"The functor `CommGrp ⥤ AddCommGrp` by sending `X ↦ Additive X` and `f ↦ f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#CommGrp.toAddCommGrp\"><span class=\"name\">CommGrp</span>.<span class=\"name\">toAddCommGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#CommGrp\">CommGrp</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddCommGrp\">AddCommGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L25-L25","name":"Grp.toAddGrp_obj_coe","line":25,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp_obj_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp_obj_coe\"><span class=\"name\">Grp</span>.<span class=\"name\">toAddGrp_obj_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp\">toAddGrp</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive\">Additive</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L25-L25","name":"Grp.toAddGrp_map","line":25,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp_map\"><span class=\"name\">Grp</span>.<span class=\"name\">toAddGrp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">x✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x✝¹</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp\">toAddGrp</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp.ofHom\">AddGrp.ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/TypeTags/Hom.html#MonoidHom.toAdditive\">MonoidHom.toAdditive</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.lean#L23-L28","name":"Grp.toAddGrp","line":23,"kind":"def","docLink":"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp","doc":"The functor `Grp ⥤ AddGrp` by sending `X ↦ Additive X` and `f ↦ f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/Grp/EquivalenceGroupAddGroup.html#Grp.toAddGrp\"><span class=\"name\">Grp</span>.<span class=\"name\">toAddGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a></span></div></div>"}]}