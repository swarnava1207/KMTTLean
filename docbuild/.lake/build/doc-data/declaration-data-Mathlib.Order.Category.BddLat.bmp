{"name":"Mathlib.Order.Category.BddLat","instances":[{"typeNames":["BddLat","_builtin_typeu"],"name":"BddLat.instCoeSortType","className":"CoeSort"},{"typeNames":["BddLat"],"name":"BddLat.instInhabited","className":"Inhabited"},{"typeNames":["BddLat"],"name":"BddLat.instLargeCategory","className":"CategoryTheory.Category"},{"typeNames":["BddLat"],"name":"BddLat.instConcreteCategoryBoundedLatticeHomCarrier","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["BddLat","BddOrd"],"name":"BddLat.hasForgetToBddOrd","className":"CategoryTheory.HasForget₂"},{"typeNames":["BddLat","Lat"],"name":"BddLat.hasForgetToLat","className":"CategoryTheory.HasForget₂"},{"typeNames":["BddLat","SemilatSupCat"],"name":"BddLat.hasForgetToSemilatSup","className":"CategoryTheory.HasForget₂"},{"typeNames":["BddLat","SemilatInfCat"],"name":"BddLat.hasForgetToSemilatInf","className":"CategoryTheory.HasForget₂"}],"imports":["Init","Mathlib.CategoryTheory.Adjunction.Unique","Mathlib.Order.Category.BddOrd","Mathlib.Order.Category.Lat","Mathlib.Order.Category.Semilat","Mathlib.Order.Hom.WithTopBot"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L228-L232","name":"latToBddLatCompDualIsoDualCompLatToBddLat","line":228,"kind":"def","docLink":"./Mathlib/Order/Category/BddLat.html#latToBddLatCompDualIsoDualCompLatToBddLat","doc":"`latToBddLat` and `OrderDual` commute. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#latToBddLatCompDualIsoDualCompLatToBddLat\"><span class=\"name\">latToBddLatCompDualIsoDualCompLatToBddLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#latToBddLat\">latToBddLat</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dual\">BddLat.dual</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/Lat.html#Lat.dual\">Lat.dual</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Order/Category/BddLat.html#latToBddLat\">latToBddLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L203-L226","name":"latToBddLatForgetAdjunction","line":203,"kind":"def","docLink":"./Mathlib/Order/Category/BddLat.html#latToBddLatForgetAdjunction","doc":"`latToBddLat` is left adjoint to the forgetful functor, meaning it is the free\nfunctor from `Lat` to `BddLat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#latToBddLatForgetAdjunction\"><span class=\"name\">latToBddLatForgetAdjunction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/BddLat.html#latToBddLat\">latToBddLat</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L198-L201","name":"latToBddLat","line":198,"kind":"def","docLink":"./Mathlib/Order/Category/BddLat.html#latToBddLat","doc":"The functor that adds a bottom and a top element to a lattice. This is the free functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#latToBddLat\"><span class=\"name\">latToBddLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L193-L196","name":"bddLat_dual_comp_forget_to_semilatInfCat","line":193,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#bddLat_dual_comp_forget_to_semilatInfCat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#bddLat_dual_comp_forget_to_semilatInfCat\"><span class=\"name\">bddLat_dual_comp_forget_to_semilatInfCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dual\">BddLat.dual</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatInfCat\">SemilatInfCat</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatSupCat\">SemilatSupCat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatSupCat.dual\">SemilatSupCat.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L188-L191","name":"bddLat_dual_comp_forget_to_semilatSupCat","line":188,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#bddLat_dual_comp_forget_to_semilatSupCat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#bddLat_dual_comp_forget_to_semilatSupCat\"><span class=\"name\">bddLat_dual_comp_forget_to_semilatSupCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dual\">BddLat.dual</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatSupCat\">SemilatSupCat</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatInfCat\">SemilatInfCat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatInfCat.dual\">SemilatInfCat.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L184-L186","name":"bddLat_dual_comp_forget_to_lat","line":184,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#bddLat_dual_comp_forget_to_lat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#bddLat_dual_comp_forget_to_lat\"><span class=\"name\">bddLat_dual_comp_forget_to_lat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dual\">BddLat.dual</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Order/Category/Lat.html#Lat.dual\">Lat.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L179-L182","name":"bddLat_dual_comp_forget_to_bddOrd","line":179,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#bddLat_dual_comp_forget_to_bddOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#bddLat_dual_comp_forget_to_bddOrd\"><span class=\"name\">bddLat_dual_comp_forget_to_bddOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dual\">BddLat.dual</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/BddOrd.html#BddOrd\">BddOrd</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/BddOrd.html#BddOrd\">BddOrd</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Order/Category/BddOrd.html#BddOrd.dual\">BddOrd.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L170-L170","name":"BddLat.dualEquiv_functor","line":170,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.dualEquiv_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dualEquiv_functor\"><span class=\"name\">BddLat</span>.<span class=\"name\">dualEquiv_functor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dualEquiv\">dualEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dual\">dual</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L170-L170","name":"BddLat.dualEquiv_inverse","line":170,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.dualEquiv_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dualEquiv_inverse\"><span class=\"name\">BddLat</span>.<span class=\"name\">dualEquiv_inverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dualEquiv\">dualEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dual\">dual</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L169-L175","name":"BddLat.dualEquiv","line":169,"kind":"def","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.dualEquiv","doc":"The equivalence between `BddLat` and itself induced by `OrderDual` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dualEquiv\"><span class=\"name\">BddLat</span>.<span class=\"name\">dualEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L164-L164","name":"BddLat.dual_map","line":164,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.dual_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dual_map\"><span class=\"name\">BddLat</span>.<span class=\"name\">dual_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dual\">dual</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Hom/BoundedLattice.html#BoundedLatticeHom.dual\">BoundedLatticeHom.dual</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L163-L167","name":"BddLat.dual","line":163,"kind":"def","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.dual","doc":"`OrderDual` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dual\"><span class=\"name\">BddLat</span>.<span class=\"name\">dual</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L156-L156","name":"BddLat.Iso.mk_hom","line":156,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.Iso.mk_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Iso.mk_hom\"><span class=\"name\">BddLat</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Iso.mk\">mk</a> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.ofHom\">ofHom</a>\n    <span class=\"fn\">(let <span class=\"fn\">__src</span> := <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">e</span></span>, <span class=\"fn\">map_sup'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_inf'</span> := <span class=\"fn\">⋯</span> }</span>;\n    <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">e</span></span>, <span class=\"fn\">map_sup'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_inf'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_top'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_bot'</span> := <span class=\"fn\">⋯</span> }</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L156-L156","name":"BddLat.Iso.mk_inv","line":156,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.Iso.mk_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Iso.mk_inv\"><span class=\"name\">BddLat</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Iso.mk\">mk</a> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.ofHom\">ofHom</a>\n    <span class=\"fn\">(let <span class=\"fn\">__src</span> := <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span></span>, <span class=\"fn\">map_sup'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_inf'</span> := <span class=\"fn\">⋯</span> }</span>;\n    <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span></span>, <span class=\"fn\">map_sup'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_inf'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_top'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_bot'</span> := <span class=\"fn\">⋯</span> }</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L154-L161","name":"BddLat.Iso.mk","line":154,"kind":"def","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.Iso.mk","doc":"Constructs an equivalence between bounded lattices from an order isomorphism\nbetween them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Iso.mk\"><span class=\"name\">BddLat</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">α</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">β</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L149-L152","name":"BddLat.forget_semilatInf_partOrd_eq_forget_bddOrd_partOrd","line":149,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.forget_semilatInf_partOrd_eq_forget_bddOrd_partOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.forget_semilatInf_partOrd_eq_forget_bddOrd_partOrd\"><span class=\"name\">BddLat</span>.<span class=\"name\">forget_semilatInf_partOrd_eq_forget_bddOrd_partOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatInfCat\">SemilatInfCat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatInfCat\">SemilatInfCat</a> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/BddOrd.html#BddOrd\">BddOrd</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddOrd.html#BddOrd\">BddOrd</a> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L144-L147","name":"BddLat.forget_semilatSup_partOrd_eq_forget_bddOrd_partOrd","line":144,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.forget_semilatSup_partOrd_eq_forget_bddOrd_partOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.forget_semilatSup_partOrd_eq_forget_bddOrd_partOrd\"><span class=\"name\">BddLat</span>.<span class=\"name\">forget_semilatSup_partOrd_eq_forget_bddOrd_partOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatSupCat\">SemilatSupCat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatSupCat\">SemilatSupCat</a> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/BddOrd.html#BddOrd\">BddOrd</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddOrd.html#BddOrd\">BddOrd</a> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L139-L142","name":"BddLat.forget_lat_partOrd_eq_forget_bddOrd_partOrd","line":139,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.forget_lat_partOrd_eq_forget_bddOrd_partOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.forget_lat_partOrd_eq_forget_bddOrd_partOrd\"><span class=\"name\">BddLat</span>.<span class=\"name\">forget_lat_partOrd_eq_forget_bddOrd_partOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/BddOrd.html#BddOrd\">BddOrd</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddOrd.html#BddOrd\">BddOrd</a> <a href=\"./Mathlib/Order/Category/PartOrd.html#PartOrd\">PartOrd</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L134-L137","name":"BddLat.coe_forget_to_semilatInf","line":134,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.coe_forget_to_semilatInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.coe_forget_to_semilatInf\"><span class=\"name\">BddLat</span>.<span class=\"name\">coe_forget_to_semilatInf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatInfCat\">SemilatInfCat</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Order/Category/Semilat.html#SemilatInfCat.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L129-L132","name":"BddLat.coe_forget_to_semilatSup","line":129,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.coe_forget_to_semilatSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.coe_forget_to_semilatSup\"><span class=\"name\">BddLat</span>.<span class=\"name\">coe_forget_to_semilatSup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatSupCat\">SemilatSupCat</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Order/Category/Semilat.html#SemilatSupCat.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L125-L127","name":"BddLat.coe_forget_to_lat","line":125,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.coe_forget_to_lat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.coe_forget_to_lat\"><span class=\"name\">BddLat</span>.<span class=\"name\">coe_forget_to_lat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L121-L123","name":"BddLat.coe_forget_to_bddOrd","line":121,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.coe_forget_to_bddOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.coe_forget_to_bddOrd\"><span class=\"name\">BddLat</span>.<span class=\"name\">coe_forget_to_bddOrd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/BddOrd.html#BddOrd\">BddOrd</a>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Order/Category/BddOrd.html#BddOrd.toPartOrd\">toPartOrd</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L117-L119","name":"BddLat.hasForgetToSemilatInf","line":117,"kind":"instance","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.hasForgetToSemilatInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.hasForgetToSemilatInf\"><span class=\"name\">BddLat</span>.<span class=\"name\">hasForgetToSemilatInf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatInfCat\">SemilatInfCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L113-L115","name":"BddLat.hasForgetToSemilatSup","line":113,"kind":"instance","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.hasForgetToSemilatSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.hasForgetToSemilatSup\"><span class=\"name\">BddLat</span>.<span class=\"name\">hasForgetToSemilatSup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Semilat.html#SemilatSupCat\">SemilatSupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L109-L111","name":"BddLat.hasForgetToLat","line":109,"kind":"instance","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.hasForgetToLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.hasForgetToLat\"><span class=\"name\">BddLat</span>.<span class=\"name\">hasForgetToLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L105-L107","name":"BddLat.hasForgetToBddOrd","line":105,"kind":"instance","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.hasForgetToBddOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.hasForgetToBddOrd\"><span class=\"name\">BddLat</span>.<span class=\"name\">hasForgetToBddOrd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./Mathlib/Order/Category/BddOrd.html#BddOrd\">BddOrd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L101-L101","name":"BddLat.hom_ext_iff","line":101,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.hom_ext_iff\"><span class=\"name\">BddLat</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L101-L103","name":"BddLat.hom_ext","line":101,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.hom_ext\"><span class=\"name\">BddLat</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L97-L97","name":"BddLat.ext_iff","line":97,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.ext_iff\"><span class=\"name\">BddLat</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span>), <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L97-L99","name":"BddLat.ext","line":97,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.ext\"><span class=\"name\">BddLat</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span>), <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L94-L95","name":"BddLat.comp_apply","line":94,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.comp_apply\"><span class=\"name\">BddLat</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L89-L91","name":"BddLat.hom_comp","line":89,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.hom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.hom_comp\"><span class=\"name\">BddLat</span>.<span class=\"name\">hom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/Lat.html#Lat.Hom.hom\">Lat.Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/Lat.html#Lat.Hom.hom\">Lat.Hom.hom</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Order/Hom/Lattice.html#LatticeHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Category/Lat.html#Lat.Hom.hom\">Lat.Hom.hom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L86-L87","name":"BddLat.id_apply","line":86,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.id_apply\"><span class=\"name\">BddLat</span>.<span class=\"name\">id_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.hom\">CategoryTheory.ConcreteCategory.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L82-L83","name":"BddLat.hom_id","line":82,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.hom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.hom_id\"><span class=\"name\">BddLat</span>.<span class=\"name\">hom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/Lat.html#Lat.Hom.hom\">Lat.Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Lattice.html#LatticeHom.id\">LatticeHom.id</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L76-L78","name":"BddLat.Hom.Simps.hom","line":76,"kind":"def","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.Simps.hom","doc":"Use the `ConcreteCategory.hom` projection for `@[simps]` lemmas. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.Simps.hom\"><span class=\"name\">BddLat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">Simps</span>.<span class=\"name\">hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/BoundedLattice.html#BoundedLatticeHom\">BoundedLatticeHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L70-L73","name":"BddLat.ofHom","line":70,"kind":"def","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.ofHom","doc":"Typecheck a `BoundedLatticeHom` as a morphism in `BddLat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.ofHom\"><span class=\"name\">BddLat</span>.<span class=\"name\">ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#BoundedOrder\">BoundedOrder</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#BoundedOrder\">BoundedOrder</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/BoundedLattice.html#BoundedLatticeHom\">BoundedLatticeHom</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.of\">of</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.of\">of</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L66-L68","name":"BddLat.Hom.hom","line":66,"kind":"def","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.hom","doc":"Turn a morphism in `BddLat` back into a `BoundedLatticeHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.hom\"><span class=\"name\">BddLat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/BoundedLattice.html#BoundedLatticeHom\">BoundedLatticeHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L62-L64","name":"BddLat.instConcreteCategoryBoundedLatticeHomCarrier","line":62,"kind":"instance","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.instConcreteCategoryBoundedLatticeHomCarrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.instConcreteCategoryBoundedLatticeHomCarrier\"><span class=\"name\">BddLat</span>.<span class=\"name\">instConcreteCategoryBoundedLatticeHomCarrier</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/BoundedLattice.html#BoundedLatticeHom\">BoundedLatticeHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x1</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x2</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L57-L60","name":"BddLat.instLargeCategory","line":57,"kind":"instance","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.instLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.instLargeCategory\"><span class=\"name\">BddLat</span>.<span class=\"name\">instLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L54-L55","name":"BddLat.instInhabited","line":54,"kind":"instance","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.instInhabited\"><span class=\"name\">BddLat</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L52-L52","name":"BddLat.Hom.hom'","line":52,"kind":"def","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.hom'","doc":"The underlying `BoundedLatticeHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.hom'\"><span class=\"name\">BddLat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/BoundedLattice.html#BoundedLatticeHom\">BoundedLatticeHom</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L48-L48","name":"BddLat.Hom.ext_iff","line":48,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.ext_iff\"><span class=\"name\">BddLat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.hom'\">hom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.hom'\">hom'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L48-L48","name":"BddLat.Hom.ext","line":48,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.ext\"><span class=\"name\">BddLat</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom\">Hom</a></span> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hom'</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.hom'\">hom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom.hom'\">hom'</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L47-L52","name":"BddLat.Hom","line":47,"kind":"structure","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.Hom","doc":"The type of morphisms in `BddLat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.Hom\"><span class=\"name\">BddLat</span>.<span class=\"name\">Hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L44-L45","name":"BddLat.coe_of","line":44,"kind":"theorem","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.coe_of\"><span class=\"name\">BddLat</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#BoundedOrder\">BoundedOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.of\">of</a> <span class=\"fn\">α</span>)</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L40-L42","name":"BddLat.of","line":40,"kind":"def","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.of","doc":"Construct a bundled `BddLat` from `Lattice` + `BoundedOrder`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.of\"><span class=\"name\">BddLat</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#BoundedOrder\">BoundedOrder</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L35-L36","name":"BddLat.instCoeSortType","line":35,"kind":"instance","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.instCoeSortType\"><span class=\"name\">BddLat</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L28-L28","name":"BddLat.isBoundedOrder","line":28,"kind":"def","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.isBoundedOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.isBoundedOrder\"><span class=\"name\">BddLat</span>.<span class=\"name\">isBoundedOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#BoundedOrder\">BoundedOrder</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\">toLat</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L27-L27","name":"BddLat.mk","line":27,"kind":"ctor","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.mk\"><span class=\"name\">BddLat</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toLat</span> : <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">isBoundedOrder</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder/Basic.html#BoundedOrder\">BoundedOrder</a> <span class=\"fn\">↑<span class=\"fn\">toLat</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L27-L28","name":"BddLat.toLat","line":27,"kind":"def","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat.toLat","doc":"The underlying lattice of a bounded lattice. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat.toLat\"><span class=\"name\">BddLat</span>.<span class=\"name\">toLat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/BddLat.lean#L26-L28","name":"BddLat","line":26,"kind":"structure","docLink":"./Mathlib/Order/Category/BddLat.html#BddLat","doc":"The category of bounded lattices with bounded lattice morphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/BddLat.html#BddLat\"><span class=\"name\">BddLat</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Mathlib/Order/Category/Lat.html#Lat\">Lat</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}