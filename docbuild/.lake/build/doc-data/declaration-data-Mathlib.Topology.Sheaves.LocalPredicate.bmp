{"name":"Mathlib.Topology.Sheaves.LocalPredicate","instances":[{"typeNames":["TopCat.PrelocalPredicate"],"name":"TopCat.inhabitedPrelocalPredicate","className":"Inhabited"},{"typeNames":["TopCat.LocalPredicate"],"name":"TopCat.inhabitedLocalPredicate","className":"Inhabited"}],"imports":["Init","Mathlib.Topology.Sheaves.SheafOfFunctions","Mathlib.Topology.Sheaves.Stalks","Mathlib.Topology.Sheaves.SheafCondition.UniqueGluing"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L274-L279","name":"TopCat.sheafToTop","line":274,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.sheafToTop","doc":"The sheaf of continuous functions on `X` with values in a space `T`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.sheafToTop\"><span class=\"name\">TopCat</span>.<span class=\"name\">sheafToTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf\">Sheaf</a> <a href=\"./foundational_types.html\">(Type</a> v) <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L264-L272","name":"TopCat.subpresheafContinuousPrelocalIsoPresheafToTop","line":264,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafContinuousPrelocalIsoPresheafToTop","doc":"Some repackaging:\nthe presheaf of functions satisfying `continuousPrelocal` is just the same thing as\nthe presheaf of continuous functions.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafContinuousPrelocalIsoPresheafToTop\"><span class=\"name\">TopCat</span>.<span class=\"name\">subpresheafContinuousPrelocalIsoPresheafToTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\">subpresheafToTypes</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousPrelocal\">continuousPrelocal</a></span> <span class=\"fn\">T</span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Sheaves/PresheafOfFunctions.html#TopCat.presheafToTop\">presheafToTop</a></span> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L232-L262","name":"TopCat.stalkToFiber_injective","line":232,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber_injective","doc":"The `stalkToFiber` map is injective at `x` if any two allowed sections which agree at `x`\nagree on some neighborhood of `x`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber_injective\"><span class=\"name\">TopCat</span>.<span class=\"name\">stalkToFiber_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">U </span><span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/OpenNhds.html#TopologicalSpace.OpenNhds\">TopologicalSpace.OpenNhds</a> <span class=\"fn\">x</span></span>) (<span class=\"fn\">fU</span> : <span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">U</span>.<a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory.obj\">obj</a></span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">fU</span></span> →\n      <span class=\"fn\">∀ (<span class=\"fn\">fV</span> : <span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">V</span>.<a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory.obj\">obj</a></span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span>),\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">fV</span></span> →\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">fU</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">⋯</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">fV</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">⋯</span>⟩</span></span> →\n            <span class=\"fn\">∃ (<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/OpenNhds.html#TopologicalSpace.OpenNhds\">TopologicalSpace.OpenNhds</a> <span class=\"fn\">x</span></span>) (<span class=\"fn\">iU</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">U</span>) (<span class=\"fn\">iV</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">V</span>), <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory.obj\">obj</a></span></span>), <span class=\"fn\"><span class=\"fn\">fU</span> <span class=\"fn\">(<span class=\"fn\">iU</span> <span class=\"fn\">w</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">fV</span> <span class=\"fn\">(<span class=\"fn\">iV</span> <span class=\"fn\">w</span>)</span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber\">stalkToFiber</a> <span class=\"fn\">P</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L221-L230","name":"TopCat.stalkToFiber_surjective","line":221,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber_surjective","doc":"The `stalkToFiber` map is surjective at `x` if\nevery point in the fiber `T x` has an allowed section passing through it.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber_surjective\"><span class=\"name\">TopCat</span>.<span class=\"name\">stalkToFiber_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">x</span></span>), <span class=\"fn\">∃ (<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/OpenNhds.html#TopologicalSpace.OpenNhds\">TopologicalSpace.OpenNhds</a> <span class=\"fn\">x</span></span>) (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">U</span>.<a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory.obj\">obj</a></span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span>) (_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">f</span></span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">⋯</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber\">stalkToFiber</a> <span class=\"fn\">P</span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L217-L219","name":"TopCat.stalkToFiber_germ","line":217,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber_germ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber_germ\"><span class=\"name\">TopCat</span>.<span class=\"name\">stalkToFiber_germ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes\">subsheafToTypes</a> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf.presheaf\">presheaf</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber\">stalkToFiber</a> <span class=\"fn\">P</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes\">subsheafToTypes</a> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf.presheaf\">presheaf</a></span>.<a href=\"./Mathlib/Topology/Sheaves/Stalks.html#TopCat.Presheaf.germ\">germ</a></span> <span class=\"fn\">U</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hx</span>⟩</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L205-L215","name":"TopCat.stalkToFiber","line":205,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber","doc":"There is a canonical map from the stalk to the original fiber, given by evaluating sections.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber\"><span class=\"name\">TopCat</span>.<span class=\"name\">stalkToFiber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes\">subsheafToTypes</a> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf.presheaf\">presheaf</a></span>.<a href=\"./Mathlib/Topology/Sheaves/Stalks.html#TopCat.Presheaf.stalk\">stalk</a></span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L201-L201","name":"TopCat.subsheafToTypes_val","line":201,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes_val\"><span class=\"name\">TopCat</span>.<span class=\"name\">subsheafToTypes_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes\">subsheafToTypes</a> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sheaf.html#CategoryTheory.Sheaf.val\">val</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\">subpresheafToTypes</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate.toPrelocalPredicate\">toPrelocalPredicate</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L199-L203","name":"TopCat.subsheafToTypes","line":199,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes","doc":"The subsheaf of the sheaf of all dependently typed functions satisfying the local predicate `P`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes\"><span class=\"name\">TopCat</span>.<span class=\"name\">subsheafToTypes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf\">Sheaf</a> <a href=\"./foundational_types.html\">(Type</a> v) <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L161-L195","name":"TopCat.subpresheafToTypes.isSheaf","line":161,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes.isSheaf","doc":"The functions satisfying a local predicate satisfy the sheaf condition.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes.isSheaf\"><span class=\"name\">TopCat</span>.<span class=\"name\">subpresheafToTypes</span>.<span class=\"name\">isSheaf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\">subpresheafToTypes</a> <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate.toPrelocalPredicate\">toPrelocalPredicate</a></span>)</span>.<a href=\"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Presheaf.IsSheaf\">IsSheaf</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L153-L156","name":"TopCat.subpresheafToTypes.subtype","line":153,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes.subtype","doc":"The natural transformation including the subpresheaf of functions satisfying a local predicate\ninto the presheaf of all functions.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes.subtype\"><span class=\"name\">TopCat</span>.<span class=\"name\">subpresheafToTypes</span>.<span class=\"name\">subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\">subpresheafToTypes</a> <span class=\"fn\">P</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Sheaves/PresheafOfFunctions.html#TopCat.presheafToTypes\">presheafToTypes</a></span> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L144-L144","name":"TopCat.subpresheafToTypes_obj","line":144,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes_obj\"><span class=\"name\">TopCat</span>.<span class=\"name\">subpresheafToTypes_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">U</span> : <span class=\"fn\">(<a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\">subpresheafToTypes</a> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">U</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L144-L144","name":"TopCat.subpresheafToTypes_map_coe","line":144,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes_map_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes_map_coe\"><span class=\"name\">TopCat</span>.<span class=\"name\">subpresheafToTypes_map_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <span class=\"fn\">(<a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">x✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x✝¹</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">x✝</span>)</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">x✝¹</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\">subpresheafToTypes</a> <span class=\"fn\">P</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">i</span> <span class=\"fn\">f</span>)</span></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span> <span class=\"fn\">x</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L142-L147","name":"TopCat.subpresheafToTypes","line":142,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes","doc":"The subpresheaf of dependent functions on `X` satisfying the \"pre-local\" predicate `P`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\"><span class=\"name\">TopCat</span>.<span class=\"name\">subpresheafToTypes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">Presheaf</a> <a href=\"./foundational_types.html\">(Type</a> v) <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L138-L140","name":"TopCat.PrelocalPredicate.sheafifyOf","line":138,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.sheafifyOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.sheafifyOf\"><span class=\"name\">TopCat</span>.<span class=\"name\">PrelocalPredicate</span>.<span class=\"name\">sheafifyOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">PrelocalPredicate</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.sheafify\">sheafify</a></span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L122-L136","name":"TopCat.PrelocalPredicate.sheafify","line":122,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.sheafify","doc":"Given a `P : PrelocalPredicate`, we can always construct a `LocalPredicate`\nby asking that the condition from `P` holds locally near every point.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.sheafify\"><span class=\"name\">TopCat</span>.<span class=\"name\">PrelocalPredicate</span>.<span class=\"name\">sheafify</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">LocalPredicate</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L116-L118","name":"TopCat.inhabitedLocalPredicate","line":116,"kind":"instance","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.inhabitedLocalPredicate","doc":"Satisfying the inhabited linter. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.inhabitedLocalPredicate\"><span class=\"name\">TopCat</span>.<span class=\"name\">inhabitedLocalPredicate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">T</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">LocalPredicate</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">T</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L102-L114","name":"TopCat.continuousLocal","line":102,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousLocal","doc":"Continuity is a \"local\" predicate on functions to a fixed topological space `T`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousLocal\"><span class=\"name\">TopCat</span>.<span class=\"name\">continuousLocal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">T</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">LocalPredicate</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">T</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L97-L97","name":"TopCat.LocalPredicate.locality","line":97,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate.locality","doc":"A local predicate must be local --- provided that it is locally satisfied, it is also globally\nsatisfied "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate.locality\"><span class=\"name\">TopCat</span>.<span class=\"name\">LocalPredicate</span>.<span class=\"name\">locality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>), <span class=\"fn\">∃ (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>) (_ : <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">V</span>) (<span class=\"fn\">i</span> : <span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">V</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span></span></span></span>)</span> →\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L94-L94","name":"TopCat.LocalPredicate.mk","line":94,"kind":"ctor","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate.mk\"><span class=\"name\">TopCat</span>.<span class=\"name\">LocalPredicate</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toPrelocalPredicate</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">locality</span> :\n  <span class=\"fn\">∀ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>),\n    <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>),\n        <span class=\"fn\">∃ (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>) (_ : <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">V</span>) (<span class=\"fn\">i</span> : <span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toPrelocalPredicate</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">V</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span></span></span></span>)</span> →\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toPrelocalPredicate</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">f</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">LocalPredicate</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L94-L100","name":"TopCat.LocalPredicate.toPrelocalPredicate","line":94,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate.toPrelocalPredicate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate.toPrelocalPredicate\"><span class=\"name\">TopCat</span>.<span class=\"name\">LocalPredicate</span>.<span class=\"name\">toPrelocalPredicate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">PrelocalPredicate</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L84-L100","name":"TopCat.LocalPredicate","line":84,"kind":"structure","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate","doc":"Given a topological space `X : TopCat` and a type family `T : X → Type`,\na `P : LocalPredicate T` consists of:\n* a family of predicates `P.pred`, one for each `U : Opens X`, of the form `(Π x : U, T x) → Prop`\n* a proof that if `f : Π x : V, T x` satisfies the predicate on `V : Opens X`, then\n  the restriction of `f` to any open subset `U` also satisfies the predicate, and\n* a proof that given some `f : Π x : U, T x`,\n  if for every `x : U` we can find an open set `x ∈ V ≤ U`\n  so that the restriction of `f` to `V` satisfies the predicate,\n  then `f` itself satisfies the predicate.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\"><span class=\"name\">TopCat</span>.<span class=\"name\">LocalPredicate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>)</span></span>\n<span class=\"decl_extends\">extends</span> <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">T</span></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L78-L81","name":"TopCat.inhabitedPrelocalPredicate","line":78,"kind":"instance","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.inhabitedPrelocalPredicate","doc":"Satisfying the inhabited linter. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.inhabitedPrelocalPredicate\"><span class=\"name\">TopCat</span>.<span class=\"name\">inhabitedPrelocalPredicate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">T</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">PrelocalPredicate</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">T</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L73-L73","name":"TopCat.continuousPrelocal_pred","line":73,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousPrelocal_pred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousPrelocal_pred\"><span class=\"name\">TopCat</span>.<span class=\"name\">continuousPrelocal_pred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">T</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">x✝</span></span> → <span class=\"fn\">↑<span class=\"fn\">T</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousPrelocal\">continuousPrelocal</a></span> <span class=\"fn\">T</span>)</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L71-L76","name":"TopCat.continuousPrelocal","line":71,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousPrelocal","doc":"Continuity is a \"prelocal\" predicate on functions to a fixed topological space `T`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousPrelocal\"><span class=\"name\">TopCat</span>.<span class=\"name\">continuousPrelocal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">T</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">PrelocalPredicate</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">T</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L67-L67","name":"TopCat.PrelocalPredicate.res","line":67,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.res","doc":"The underlying predicate should be invariant under restriction "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.res\"><span class=\"name\">TopCat</span>.<span class=\"name\">PrelocalPredicate</span>.<span class=\"name\">res</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U </span><span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">U</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">V</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">V</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">f</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\">pred</a></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L65-L65","name":"TopCat.PrelocalPredicate.pred","line":65,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred","doc":"The underlying predicate of a prelocal predicate "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\"><span class=\"name\">TopCat</span>.<span class=\"name\">PrelocalPredicate</span>.<span class=\"name\">pred</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L63-L63","name":"TopCat.PrelocalPredicate.mk","line":63,"kind":"ctor","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.mk\"><span class=\"name\">TopCat</span>.<span class=\"name\">PrelocalPredicate</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pred</span> : <span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>} → <span class=\"fn\"><span class=\"fn\">((<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">res</span> : <span class=\"fn\">∀ {<span class=\"fn\">U </span><span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>} (<span class=\"fn\">i</span> : <span class=\"fn\">U</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">V</span>) (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">V</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pred</span> <span class=\"fn\">f</span></span> → <span class=\"fn\"><span class=\"fn\">pred</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">i</span> <span class=\"fn\">x</span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">PrelocalPredicate</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Sheaves/LocalPredicate.lean#L57-L67","name":"TopCat.PrelocalPredicate","line":57,"kind":"structure","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate","doc":"Given a topological space `X : TopCat` and a type family `T : X → Type`,\na `P : PrelocalPredicate T` consists of:\n* a family of predicates `P.pred`, one for each `U : Opens X`, of the form `(Π x : U, T x) → Prop`\n* a proof that if `f : Π x : V, T x` satisfies the predicate on `V : Opens X`, then\n  the restriction of `f` to any open subset `U` also satisfies the predicate.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\"><span class=\"name\">TopCat</span>.<span class=\"name\">PrelocalPredicate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"}]}