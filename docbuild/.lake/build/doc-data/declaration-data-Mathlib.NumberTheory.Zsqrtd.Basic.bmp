{"name":"Mathlib.NumberTheory.Zsqrtd.Basic","instances":[{"typeNames":["Eq"],"name":"instDecidableEqZsqrtd","className":"Decidable"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instZero","className":"Zero"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instInhabited","className":"Inhabited"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instOne","className":"One"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instAdd","className":"Add"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instNeg","className":"Neg"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instMul","className":"Mul"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.addCommGroup","className":"AddCommGroup"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.addGroupWithOne","className":"AddGroupWithOne"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.commRing","className":"CommRing"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instAddMonoid","className":"AddMonoid"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instMonoid","className":"Monoid"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instCommMonoid","className":"CommMonoid"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instCommSemigroup","className":"CommSemigroup"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instSemigroup","className":"Semigroup"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instAddCommSemigroup","className":"AddCommSemigroup"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instAddSemigroup","className":"AddSemigroup"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instCommSemiring","className":"CommSemiring"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instSemiring","className":"Semiring"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instRing","className":"Ring"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instDistrib","className":"Distrib"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instStar","className":"Star"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instStarRing","className":"StarRing"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.nontrivial","className":"Nontrivial"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instCharZero","className":"CharZero"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instLECastInt","className":"LE"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instLTCastInt","className":"LT"},{"typeNames":["Zsqrtd.Nonnegg"],"name":"Zsqrtd.decidableNonnegg","className":"Decidable"},{"typeNames":["Zsqrtd.Nonneg"],"name":"Zsqrtd.decidableNonneg","className":"Decidable"},{"typeNames":["LE.le"],"name":"Zsqrtd.decidableLE","className":"Decidable"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.preorder","className":"Preorder"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.linearOrder","className":"LinearOrder"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instNoZeroDivisorsCastInt","className":"NoZeroDivisors"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instIsDomainCastInt","className":"IsDomain"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instLinearOrderedCommRingCastInt","className":"LinearOrderedCommRing"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instLinearOrderedRingCastInt","className":"LinearOrderedRing"},{"typeNames":["Zsqrtd"],"name":"Zsqrtd.instOrderedRingCastInt","className":"OrderedRing"}],"imports":["Init","Mathlib.Algebra.Ring.Associated","Mathlib.Algebra.Star.Unitary","Mathlib.RingTheory.PrincipalIdealDomain","Mathlib.Tactic.Ring","Mathlib.Algebra.EuclideanDomain.Int"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L928-L930","name":"Zsqrtd.mker_norm_eq_unitary","line":928,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mker_norm_eq_unitary","doc":"The kernel of the norm map on `ℤ√d` equals the submonoid of unitary elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mker_norm_eq_unitary\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">mker_norm_eq_unitary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Operations.html#MonoidHom.mker\">MonoidHom.mker</a> <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.normMonoidHom\">normMonoidHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Unitary.html#unitary\">unitary</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L922-L926","name":"Zsqrtd.norm_eq_one_iff_mem_unitary","line":922,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_one_iff_mem_unitary","doc":"An element of `ℤ√d` has norm equal to `1` if and only if it is contained in the submonoid\nof unitary elements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_one_iff_mem_unitary\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_eq_one_iff_mem_unitary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Unitary.html#unitary\">unitary</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L910-L920","name":"Zsqrtd.lift_injective","line":910,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.lift_injective","doc":"`lift r` is injective if `d` is non-square, and R has characteristic zero (that is, the map from\n`ℤ` into `R` is injective). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.lift_injective\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">lift_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.lift\">lift</a> <span class=\"fn\">r</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L888-L888","name":"Zsqrtd.lift_apply_apply","line":888,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.lift_apply_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.lift_apply_apply\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">lift_apply_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.lift\">lift</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L888-L888","name":"Zsqrtd.lift_symm_apply_coe","line":888,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.lift_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.lift_symm_apply_coe\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">lift_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.lift\">lift</a>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\">sqrtd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L886-L908","name":"Zsqrtd.lift","line":886,"kind":"def","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.lift","doc":"The unique `RingHom` from `ℤ√d` to a ring `R`, constructed by replacing `√d` with the provided\nroot. Conversely, this associates to every mapping `ℤ√d →+* R` a value of `√d` in `R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.lift\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">R</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L879-L879","name":"Zsqrtd.hom_ext_iff","line":879,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.hom_ext_iff\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\">sqrtd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\">sqrtd</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L879-L882","name":"Zsqrtd.hom_ext","line":879,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.hom_ext\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f </span><span class=\"fn\">g</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\">sqrtd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\">sqrtd</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L860-L875","name":"Zsqrtd.norm_eq_zero","line":860,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_zero\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_nonsquare</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\">d</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L856-L856","name":"Zsqrtd.instOrderedRingCastInt","line":856,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instOrderedRingCastInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instOrderedRingCastInt\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instOrderedRingCastInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#OrderedRing\">OrderedRing</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L854-L854","name":"Zsqrtd.instLinearOrderedRingCastInt","line":854,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instLinearOrderedRingCastInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instLinearOrderedRingCastInt\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instLinearOrderedRingCastInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#LinearOrderedRing\">LinearOrderedRing</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L848-L852","name":"Zsqrtd.instLinearOrderedCommRingCastInt","line":848,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instLinearOrderedCommRingCastInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instLinearOrderedCommRingCastInt\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instLinearOrderedCommRingCastInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#LinearOrderedCommRing\">LinearOrderedCommRing</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L842-L846","name":"Zsqrtd.mul_pos","line":842,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mul_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mul_pos\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">mul_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a0</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b0</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L839-L840","name":"Zsqrtd.instIsDomainCastInt","line":839,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instIsDomainCastInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instIsDomainCastInt\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instIsDomainCastInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L836-L837","name":"Zsqrtd.instNoZeroDivisorsCastInt","line":836,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instNoZeroDivisorsCastInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instNoZeroDivisorsCastInt\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instNoZeroDivisorsCastInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#NoZeroDivisors\">NoZeroDivisors</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L807-L834","name":"Zsqrtd.eq_zero_or_eq_zero_of_mul_eq_zero","line":807,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.eq_zero_or_eq_zero_of_mul_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.eq_zero_or_eq_zero_of_mul_eq_zero\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">eq_zero_or_eq_zero_of_mul_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L801-L805","name":"Zsqrtd.linearOrder","line":801,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.linearOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.linearOrder\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">linearOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L798-L799","name":"Zsqrtd.le_antisymm","line":798,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.le_antisymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.le_antisymm\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">le_antisymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ab</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ba</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L781-L796","name":"Zsqrtd.nonneg_antisymm","line":781,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_antisymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_antisymm\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonneg_antisymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span> → <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L776-L778","name":"Zsqrtd.not_divides_sq","line":776,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.not_divides_sq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.not_divides_sq\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">not_divides_sq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L770-L774","name":"Zsqrtd.divides_sq_eq_zero_z","line":770,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.divides_sq_eq_zero_z","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.divides_sq_eq_zero_z\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">divides_sq_eq_zero_z</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L747-L768","name":"Zsqrtd.divides_sq_eq_zero","line":747,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.divides_sq_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.divides_sq_eq_zero\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">divides_sq_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L744-L745","name":"Zsqrtd.d_pos","line":744,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.d_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.d_pos\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">d_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">dnsq</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">d</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">d</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L740-L740","name":"Zsqrtd.Nonsquare.ns","line":740,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare.ns","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare.ns\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">Nonsquare</span>.<span class=\"name\">ns</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">x</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L738-L738","name":"Zsqrtd.Nonsquare.ns'","line":738,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare.ns'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare.ns'\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">Nonsquare</span>.<span class=\"name\">ns'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">x</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L737-L737","name":"Zsqrtd.Nonsquare.mk","line":737,"kind":"ctor","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare.mk\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">Nonsquare</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ns'</span> : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\">Nonsquare</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L734-L738","name":"Zsqrtd.Nonsquare","line":734,"kind":"class","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare","doc":"A nonsquare is a natural number that is not equal to the square of an\ninteger. This is implemented as a typeclass because it's a necessary condition\nfor much of the Pell equation theory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonsquare\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">Nonsquare</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L730-L731","name":"Zsqrtd.not_sqLe_succ","line":730,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.not_sqLe_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.not_sqLe_succ\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">not_sqLe_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">c</span> <span class=\"fn\">0</span> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L726-L728","name":"Zsqrtd.mul_nonneg","line":726,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mul_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mul_nonneg\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">mul_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> → <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> → <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L689-L724","name":"Zsqrtd.nonneg_mul","line":689,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_mul\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonneg_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L683-L687","name":"Zsqrtd.nonneg_mul_lem","line":683,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_mul_lem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_mul_lem\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonneg_mul_lem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d </span><span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">im</span> := <span class=\"fn\">↑<span class=\"fn\">y</span></span> }</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L671-L681","name":"Zsqrtd.nonneg_muld","line":671,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_muld","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_muld\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonneg_muld</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\">sqrtd</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L661-L669","name":"Zsqrtd.nonneg_smul","line":661,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_smul\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonneg_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L658-L659","name":"Zsqrtd.add_lt_add_left","line":658,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.add_lt_add_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.add_lt_add_left\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">add_lt_add_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L655-L656","name":"Zsqrtd.le_of_add_le_add_left","line":655,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.le_of_add_le_add_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.le_of_add_le_add_left\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">le_of_add_le_add_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L652-L653","name":"Zsqrtd.add_le_add_left","line":652,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.add_le_add_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.add_le_add_left\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">add_le_add_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ab</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L635-L650","name":"Zsqrtd.le_arch","line":635,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.le_arch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.le_arch\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">le_arch</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L627-L632","name":"Zsqrtd.preorder","line":627,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.preorder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.preorder\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">preorder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#Preorder\">Preorder</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L623-L625","name":"Zsqrtd.le_total","line":623,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.le_total","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.le_total\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">le_total</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L615-L621","name":"Zsqrtd.nonneg_total","line":615,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_total","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_total\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonneg_total</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L609-L612","name":"Zsqrtd.le_of_le_le","line":609,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.le_of_le_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.le_of_le_le\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">le_of_le_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z </span><span class=\"fn\">w</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xz</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">z</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">yw</span> : <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">w</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <span class=\"fn\">y</span> }</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">z</span>, <span class=\"fn\">im</span> := <span class=\"fn\">w</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L606-L607","name":"Zsqrtd.nonneg_iff_zero_le","line":606,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_iff_zero_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_iff_zero_le\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonneg_iff_zero_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L573-L604","name":"Zsqrtd.Nonneg.add","line":573,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg.add\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">Nonneg</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L552-L571","name":"Zsqrtd.nonneg_add_lem","line":552,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_add_lem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_add_lem\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonneg_add_lem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d </span><span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z </span><span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xy</span> : <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">im</span> := <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">y</span></span> }</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zw</span> : <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">re</span> := <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">z</span></span>, <span class=\"fn\">im</span> := <span class=\"fn\">↑<span class=\"fn\">w</span></span> }</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">im</span> := <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">y</span></span> }</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">z</span></span>, <span class=\"fn\">im</span> := <span class=\"fn\">↑<span class=\"fn\">w</span></span> }</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L545-L549","name":"Zsqrtd.nonneg_cases","line":545,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_cases","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonneg_cases\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonneg_cases</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span> → <span class=\"fn\">∃ (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">im</span> := <span class=\"fn\">↑<span class=\"fn\">y</span></span> }</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">im</span> := <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">y</span></span> }</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">im</span> := <span class=\"fn\">↑<span class=\"fn\">y</span></span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L542-L542","name":"Zsqrtd.decidableLE","line":542,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.decidableLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.decidableLE\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">decidableLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableLE\">DecidableLE</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L539-L540","name":"Zsqrtd.decidableNonneg","line":539,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.decidableNonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.decidableNonneg\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">decidableNonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\">Nonneg</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L536-L537","name":"Zsqrtd.decidableNonnegg","line":536,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.decidableNonnegg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.decidableNonnegg\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">decidableNonnegg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonnegg\">Nonnegg</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L533-L534","name":"Zsqrtd.instLTCastInt","line":533,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instLTCastInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instLTCastInt\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instLTCastInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L530-L531","name":"Zsqrtd.instLECastInt","line":530,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instLECastInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instLECastInt\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instLECastInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L526-L528","name":"Zsqrtd.Nonneg","line":526,"kind":"def","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg","doc":"Nonnegativity of an element of `ℤ√d`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonneg\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">Nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">↑<span class=\"fn\">d</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L513-L516","name":"Zsqrtd.norm_eq_of_associated","line":513,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_of_associated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_of_associated\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_eq_of_associated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Associated.html#Associated\">Associated</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L499-L511","name":"Zsqrtd.norm_eq_zero_iff","line":499,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_zero_iff\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L496-L497","name":"Zsqrtd.norm_eq_one_iff'","line":496,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_one_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_one_iff'\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_eq_one_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L493-L494","name":"Zsqrtd.isUnit_iff_norm_isUnit","line":493,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.isUnit_iff_norm_isUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.isUnit_iff_norm_isUnit\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">isUnit_iff_norm_isUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L474-L491","name":"Zsqrtd.norm_eq_one_iff","line":474,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_one_iff\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L468-L472","name":"Zsqrtd.norm_nonneg","line":468,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_nonneg\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_nonneg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hd</span> : <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L464-L466","name":"Zsqrtd.norm_conj","line":464,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_conj\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#Star.star\">star</a> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L460-L462","name":"Zsqrtd.norm_neg","line":460,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_neg\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L457-L458","name":"Zsqrtd.norm_eq_mul_conj","line":457,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_mul_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_eq_mul_conj\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_eq_mul_conj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star.star\">star</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L451-L455","name":"Zsqrtd.normMonoidHom","line":451,"kind":"def","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.normMonoidHom","doc":"`norm` as a `MonoidHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.normMonoidHom\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">normMonoidHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L446-L449","name":"Zsqrtd.norm_mul","line":446,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_mul\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L442-L444","name":"Zsqrtd.norm_natCast","line":442,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_natCast\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_natCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L439-L440","name":"Zsqrtd.norm_intCast","line":439,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_intCast\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_intCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L436-L437","name":"Zsqrtd.norm_one","line":436,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_one\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L433-L434","name":"Zsqrtd.norm_zero","line":433,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_zero\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L430-L431","name":"Zsqrtd.norm_def","line":430,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm_def\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\">norm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L426-L428","name":"Zsqrtd.norm","line":426,"kind":"def","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm","doc":"The norm of an element of `ℤ[√d]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.norm\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">norm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L420-L422","name":"Zsqrtd.nonnegg_cases_left","line":420,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonnegg_cases_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonnegg_cases_left\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonnegg_cases_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">x</span> <span class=\"fn\">d</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonnegg\">Nonnegg</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L415-L418","name":"Zsqrtd.nonnegg_cases_right","line":415,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonnegg_cases_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonnegg_cases_right\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonnegg_cases_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">a</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">x</span></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">x</span> <span class=\"fn\">c</span> <span class=\"fn\">a</span> <span class=\"fn\">d</span></span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonnegg\">Nonnegg</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span> <span class=\"fn\">(↑<span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L411-L412","name":"Zsqrtd.nonnegg_pos_neg","line":411,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonnegg_pos_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonnegg_pos_neg\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonnegg_pos_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonnegg\">Nonnegg</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span> <span class=\"fn\">(↑<span class=\"fn\">a</span>)</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span> <span class=\"fn\">a</span> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L407-L409","name":"Zsqrtd.nonnegg_neg_pos","line":407,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonnegg_neg_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonnegg_neg_pos\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonnegg_neg_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonnegg\">Nonnegg</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">a</span></span>) <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">a</span> <span class=\"fn\">d</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L404-L405","name":"Zsqrtd.nonnegg_comm","line":404,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonnegg_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nonnegg_comm\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nonnegg_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonnegg\">Nonnegg</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonnegg\">Nonnegg</a> <span class=\"fn\">d</span> <span class=\"fn\">c</span> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L396-L402","name":"Zsqrtd.Nonnegg","line":396,"kind":"def","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonnegg","doc":"\"Generalized\" `nonneg`. `nonnegg c d x y` means `a √c + b √d ≥ 0`;\nwe are interested in the case `c = 1` but this is more symmetric "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.Nonnegg\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">Nonnegg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L380-L393","name":"Zsqrtd.sqLe_mul","line":380,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqLe_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqLe_mul\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">sqLe_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d </span><span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z </span><span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">x</span> <span class=\"fn\">1</span> <span class=\"fn\">y</span> <span class=\"fn\">d</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">z</span> <span class=\"fn\">1</span> <span class=\"fn\">w</span> <span class=\"fn\">d</span></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span>) <span class=\"fn\">d</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span>) <span class=\"fn\">1</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>   <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">x</span> <span class=\"fn\">1</span> <span class=\"fn\">y</span> <span class=\"fn\">d</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">w</span> <span class=\"fn\">d</span> <span class=\"fn\">z</span> <span class=\"fn\">1</span></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span>) <span class=\"fn\">1</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span>) <span class=\"fn\">d</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">y</span> <span class=\"fn\">d</span> <span class=\"fn\">x</span> <span class=\"fn\">1</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">z</span> <span class=\"fn\">1</span> <span class=\"fn\">w</span> <span class=\"fn\">d</span></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span>) <span class=\"fn\">1</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span>) <span class=\"fn\">d</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>       <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">y</span> <span class=\"fn\">d</span> <span class=\"fn\">x</span> <span class=\"fn\">1</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">w</span> <span class=\"fn\">d</span> <span class=\"fn\">z</span> <span class=\"fn\">1</span></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span>) <span class=\"fn\">d</span> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span>) <span class=\"fn\">1</span></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L377-L378","name":"Zsqrtd.sqLe_smul","line":377,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqLe_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqLe_smul\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">sqLe_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xy</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">x</span> <span class=\"fn\">c</span> <span class=\"fn\">y</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span>) <span class=\"fn\">c</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>) <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L365-L375","name":"Zsqrtd.sqLe_cancel","line":365,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqLe_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqLe_cancel\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">sqLe_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z </span><span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zw</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">y</span> <span class=\"fn\">d</span> <span class=\"fn\">x</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span>) <span class=\"fn\">c</span> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">w</span>) <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">z</span> <span class=\"fn\">c</span> <span class=\"fn\">w</span> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L359-L363","name":"Zsqrtd.sqLe_add","line":359,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqLe_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqLe_add\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">sqLe_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z </span><span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xy</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">x</span> <span class=\"fn\">c</span> <span class=\"fn\">y</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zw</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">z</span> <span class=\"fn\">c</span> <span class=\"fn\">w</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span>) <span class=\"fn\">c</span> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">w</span>) <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L354-L357","name":"Zsqrtd.sqLe_add_mixed","line":354,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqLe_add_mixed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqLe_add_mixed\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">sqLe_add_mixed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z </span><span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xy</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">x</span> <span class=\"fn\">c</span> <span class=\"fn\">y</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">zw</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">z</span> <span class=\"fn\">c</span> <span class=\"fn\">w</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span>) <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L350-L352","name":"Zsqrtd.sqLe_of_le","line":350,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqLe_of_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqLe_of_le\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">sqLe_of_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c </span><span class=\"fn\">d </span><span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z </span><span class=\"fn\">w</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xz</span> : <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">yw</span> : <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">w</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">xy</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">x</span> <span class=\"fn\">c</span> <span class=\"fn\">y</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\">SqLe</a> <span class=\"fn\">z</span> <span class=\"fn\">c</span> <span class=\"fn\">w</span> <span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L346-L348","name":"Zsqrtd.SqLe","line":346,"kind":"def","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe","doc":"Read `SqLe a c b d` as `a √c ≤ b √d` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.SqLe\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">SqLe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">c </span><span class=\"fn\">b </span><span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L336-L342","name":"Zsqrtd.exists_coprime_of_gcd_pos","line":336,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.exists_coprime_of_gcd_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.exists_coprime_of_gcd_pos\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">exists_coprime_of_gcd_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hgcd</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>), <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span>)</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L334-L334","name":"Zsqrtd.coprime_of_dvd_coprime","line":334,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.coprime_of_dvd_coprime","doc":"**Alias** of `Zsqrtd.isCoprime_of_dvd_isCoprime`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.coprime_of_dvd_coprime\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">coprime_of_dvd_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hcoprime</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hdvd</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L318-L332","name":"Zsqrtd.isCoprime_of_dvd_isCoprime","line":318,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.isCoprime_of_dvd_isCoprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.isCoprime_of_dvd_isCoprime\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">isCoprime_of_dvd_isCoprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hcoprime</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hdvd</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L315-L316","name":"Zsqrtd.gcd_pos_iff","line":315,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.gcd_pos_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.gcd_pos_iff\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">gcd_pos_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L312-L313","name":"Zsqrtd.gcd_eq_zero_iff","line":312,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.gcd_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.gcd_eq_zero_iff\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">gcd_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L305-L308","name":"Zsqrtd.eq_of_smul_eq_smul_left","line":305,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.eq_of_smul_eq_smul_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.eq_of_smul_eq_smul_left\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">eq_of_smul_eq_smul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L296-L303","name":"Zsqrtd.intCast_dvd_intCast","line":296,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.intCast_dvd_intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.intCast_dvd_intCast\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">intCast_dvd_intCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L286-L294","name":"Zsqrtd.intCast_dvd","line":286,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.intCast_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.intCast_dvd\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">intCast_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L283-L284","name":"Zsqrtd.mul_star","line":283,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mul_star","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mul_star\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">mul_star</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d </span><span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <span class=\"fn\">y</span> }</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star.star\">star</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <span class=\"fn\">y</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L281-L281","name":"Zsqrtd.decompose","line":281,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.decompose","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.decompose\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">decompose</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d </span><span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <span class=\"fn\">y</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\">sqrtd</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L278-L279","name":"Zsqrtd.smuld_val","line":278,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.smuld_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.smuld_val\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">smuld_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\">sqrtd</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <span class=\"fn\">y</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>, <span class=\"fn\">im</span> := <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L275-L276","name":"Zsqrtd.dmuld","line":275,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.dmuld","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.dmuld\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">dmuld</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\">sqrtd</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\">sqrtd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">d</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L272-L273","name":"Zsqrtd.muld_val","line":272,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.muld_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.muld_val\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">muld_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\">sqrtd</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <span class=\"fn\">y</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>, <span class=\"fn\">im</span> := <span class=\"fn\">x</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L270-L270","name":"Zsqrtd.smul_im","line":270,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.smul_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.smul_im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">smul_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L268-L268","name":"Zsqrtd.smul_re","line":268,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.smul_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.smul_re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">smul_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L265-L266","name":"Zsqrtd.smul_val","line":265,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.smul_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.smul_val\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">smul_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <span class=\"fn\">y</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L262-L263","name":"Zsqrtd.nsmul_val","line":262,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nsmul_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nsmul_val\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nsmul_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <span class=\"fn\">y</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L259-L260","name":"Zsqrtd.ofInt_eq_intCast","line":259,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofInt_eq_intCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofInt_eq_intCast\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">ofInt_eq_intCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofInt\">ofInt</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L257-L257","name":"Zsqrtd.instCharZero","line":257,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instCharZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instCharZero\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instCharZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L255-L255","name":"Zsqrtd.intCast_val","line":255,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.intCast_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.intCast_val\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">intCast_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">n</span>, <span class=\"fn\">im</span> := <span class=\"fn\">0</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L252-L253","name":"Zsqrtd.intCast_im","line":252,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.intCast_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.intCast_im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">intCast_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L249-L250","name":"Zsqrtd.intCast_re","line":249,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.intCast_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.intCast_re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">intCast_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L246-L247","name":"Zsqrtd.natCast_val","line":246,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.natCast_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.natCast_val\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">natCast_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">↑<span class=\"fn\">n</span></span>, <span class=\"fn\">im</span> := <span class=\"fn\">0</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L242-L244","name":"Zsqrtd.ofNat_im","line":242,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofNat_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofNat_im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">ofNat_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">AtLeastTwo</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L238-L240","name":"Zsqrtd.natCast_im","line":238,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.natCast_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.natCast_im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">natCast_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L234-L236","name":"Zsqrtd.ofNat_re","line":234,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofNat_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofNat_re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">ofNat_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">AtLeastTwo</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L230-L232","name":"Zsqrtd.natCast_re","line":230,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.natCast_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.natCast_re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">natCast_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L227-L228","name":"Zsqrtd.nontrivial","line":227,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nontrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.nontrivial\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">nontrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L221-L224","name":"Zsqrtd.instStarRing","line":221,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instStarRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instStarRing\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instStarRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#StarRing\">StarRing</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L217-L219","name":"Zsqrtd.star_im","line":217,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.star_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.star_im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">star_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#Star.star\">star</a> <span class=\"fn\">z</span>)</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L213-L215","name":"Zsqrtd.star_re","line":213,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.star_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.star_re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">star_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Star/Basic.html#Star.star\">star</a> <span class=\"fn\">z</span>)</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L209-L211","name":"Zsqrtd.star_mk","line":209,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.star_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.star_mk\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">star_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star.star\">star</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <span class=\"fn\">y</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">y</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L205-L207","name":"Zsqrtd.instStar","line":205,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instStar","doc":"Conjugation in `ℤ√d`. The conjugate of `a + b √d` is `a - b √d`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instStar\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instStar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#Star\">Star</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L203-L203","name":"Zsqrtd.instDistrib","line":203,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instDistrib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instDistrib\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instDistrib</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Distrib\">Distrib</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L201-L201","name":"Zsqrtd.instRing","line":201,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instRing\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L199-L199","name":"Zsqrtd.instSemiring","line":199,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instSemiring\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instSemiring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L197-L197","name":"Zsqrtd.instCommSemiring","line":197,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instCommSemiring","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instCommSemiring\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instCommSemiring</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L195-L195","name":"Zsqrtd.instAddSemigroup","line":195,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instAddSemigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instAddSemigroup\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instAddSemigroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddSemigroup\">AddSemigroup</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L193-L193","name":"Zsqrtd.instAddCommSemigroup","line":193,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instAddCommSemigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instAddCommSemigroup\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instAddCommSemigroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommSemigroup\">AddCommSemigroup</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L191-L191","name":"Zsqrtd.instSemigroup","line":191,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instSemigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instSemigroup\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instSemigroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Semigroup\">Semigroup</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L189-L189","name":"Zsqrtd.instCommSemigroup","line":189,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instCommSemigroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instCommSemigroup\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instCommSemigroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommSemigroup\">CommSemigroup</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L187-L187","name":"Zsqrtd.instCommMonoid","line":187,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instCommMonoid\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L185-L185","name":"Zsqrtd.instMonoid","line":185,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instMonoid\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L183-L183","name":"Zsqrtd.instAddMonoid","line":183,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instAddMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instAddMonoid\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instAddMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddMonoid\">AddMonoid</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L164-L181","name":"Zsqrtd.commRing","line":164,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.commRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.commRing\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">commRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L158-L162","name":"Zsqrtd.addGroupWithOne","line":158,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.addGroupWithOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.addGroupWithOne\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">addGroupWithOne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L154-L156","name":"Zsqrtd.sub_im","line":154,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sub_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sub_im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">sub_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z </span><span class=\"fn\">w</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">w</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L150-L152","name":"Zsqrtd.sub_re","line":150,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sub_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sub_re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">sub_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z </span><span class=\"fn\">w</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">w</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L133-L148","name":"Zsqrtd.addCommGroup","line":133,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.addCommGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.addCommGroup\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">addCommGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L129-L131","name":"Zsqrtd.mul_im","line":129,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mul_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mul_im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">mul_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z </span><span class=\"fn\">w</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L125-L127","name":"Zsqrtd.mul_re","line":125,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mul_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mul_re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">mul_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z </span><span class=\"fn\">w</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L121-L123","name":"Zsqrtd.instMul","line":121,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instMul","doc":"Multiplication in `ℤ√d` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instMul\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L117-L119","name":"Zsqrtd.neg_im","line":117,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.neg_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.neg_im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">neg_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">z</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L113-L115","name":"Zsqrtd.neg_re","line":113,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.neg_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.neg_re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">neg_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">z</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L109-L111","name":"Zsqrtd.instNeg","line":109,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instNeg","doc":"Negation in `ℤ√d` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instNeg\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instNeg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L105-L107","name":"Zsqrtd.add_im","line":105,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.add_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.add_im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">add_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z </span><span class=\"fn\">w</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">w</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L101-L103","name":"Zsqrtd.add_re","line":101,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.add_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.add_re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">add_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z </span><span class=\"fn\">w</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">w</span>).<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">w</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L97-L99","name":"Zsqrtd.add_def","line":97,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.add_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.add_def\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">add_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">x' </span><span class=\"fn\">y'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <span class=\"fn\">y</span> }</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x'</span>, <span class=\"fn\">im</span> := <span class=\"fn\">y'</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x'</span>, <span class=\"fn\">im</span> := <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y'</span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L93-L95","name":"Zsqrtd.instAdd","line":93,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instAdd","doc":"Addition of elements of `ℤ√d` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instAdd\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L89-L91","name":"Zsqrtd.sqrtd_im","line":89,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd_im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">sqrtd_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\">sqrtd</a>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L85-L87","name":"Zsqrtd.sqrtd_re","line":85,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd_re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">sqrtd_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\">sqrtd</a>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L81-L83","name":"Zsqrtd.sqrtd","line":81,"kind":"def","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd","doc":"The representative of `√d` in the ring "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.sqrtd\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">sqrtd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L77-L79","name":"Zsqrtd.one_im","line":77,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.one_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.one_im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">one_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L73-L75","name":"Zsqrtd.one_re","line":73,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.one_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.one_re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">one_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L69-L71","name":"Zsqrtd.instOne","line":69,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instOne","doc":"The one of the ring "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instOne\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instOne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L66-L67","name":"Zsqrtd.instInhabited","line":66,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instInhabited\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L62-L64","name":"Zsqrtd.zero_im","line":62,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.zero_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.zero_im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">zero_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L58-L60","name":"Zsqrtd.zero_re","line":58,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.zero_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.zero_re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">zero_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L54-L56","name":"Zsqrtd.instZero","line":54,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instZero","doc":"The zero of the ring "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.instZero\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">instZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L51-L52","name":"Zsqrtd.ofInt_im","line":51,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofInt_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofInt_im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">ofInt_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofInt\">ofInt</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L48-L49","name":"Zsqrtd.ofInt_re","line":48,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofInt_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofInt_re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">ofInt_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofInt\">ofInt</a> <span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L44-L46","name":"Zsqrtd.ofInt","line":44,"kind":"def","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofInt","doc":"Convert an integer to a `ℤ√d` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ofInt\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">ofInt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L36-L36","name":"«termℤ√_»","line":36,"kind":"def","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#«termℤ√_»","doc":"The ring of integers adjoined with a square root of `d`.\nThese have the form `a + b √d` where `a b : ℤ`. The components\nare called `re` and `im` by analogy to the negative `d` case. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#«termℤ√_»\"><span class=\"name\">«termℤ√_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L34-L34","name":"instDecidableEqZsqrtd","line":34,"kind":"instance","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#instDecidableEqZsqrtd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#instDecidableEqZsqrtd\"><span class=\"name\">instDecidableEqZsqrtd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d✝</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> (<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d✝</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L33-L33","name":"Zsqrtd.im","line":33,"kind":"def","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im","doc":"Component of the integer multiplied by `√d` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L31-L31","name":"Zsqrtd.re","line":31,"kind":"def","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re","doc":"Component of the integer not multiplied by `√d` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L29-L29","name":"Zsqrtd.mk","line":29,"kind":"ctor","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.mk\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">re </span><span class=\"fn\">im</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L28-L28","name":"Zsqrtd.ext","line":28,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ext\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">re</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">im</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L28-L28","name":"Zsqrtd.ext_iff","line":28,"kind":"theorem","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.ext_iff\"><span class=\"name\">Zsqrtd</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\">ℤ√</a><span class=\"fn\">d</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.re\">re</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd.im\">im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/Zsqrtd/Basic.lean#L25-L34","name":"Zsqrtd","line":25,"kind":"structure","docLink":"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd","doc":"The ring of integers adjoined with a square root of `d`.\nThese have the form `a + b √d` where `a b : ℤ`. The components\nare called `re` and `im` by analogy to the negative `d` case. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/Zsqrtd/Basic.html#Zsqrtd\"><span class=\"name\">Zsqrtd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}