{"name":"Mathlib.CategoryTheory.Limits.SmallComplete","instances":[{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.instIsThin","className":"Subsingleton"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Shapes.Products","Mathlib.SetTheory.Cardinal.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/SmallComplete.lean#L38-L73","name":"CategoryTheory.instIsThin","line":38,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Limits/SmallComplete.html#CategoryTheory.instIsThin","doc":"A small category with products is a thin category.\n\nin Lean, a preorder category is one where the morphisms are in Prop, which is weaker than the usual\nnotion of a preorder/thin category which says that each homset is subsingleton; we show the latter\nrather than providing a `Preorder C` instance.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/SmallComplete.html#CategoryTheory.instIsThin\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instIsThin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">SmallCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.HasProducts\">Limits.HasProducts</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.IsThin\">Quiver.IsThin</a> <span class=\"fn\">C</span></span></div></div>"}]}