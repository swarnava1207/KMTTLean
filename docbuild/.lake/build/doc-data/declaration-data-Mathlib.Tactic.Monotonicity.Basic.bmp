{"name":"Mathlib.Tactic.Monotonicity.Basic","instances":[],"imports":["Init","Lean.Elab.Tactic.SolveByElim","Mathlib.Tactic.Monotonicity.Attr"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Monotonicity/Basic.lean#L31-L42","name":"Mathlib.Tactic.Monotonicity.mono","line":31,"kind":"def","docLink":"./Mathlib/Tactic/Monotonicity/Basic.html#Mathlib.Tactic.Monotonicity.mono","doc":"`mono` applies monotonicity rules and local hypotheses repetitively.  For example,\n```lean\nexample (x y z k : ℤ)\n    (h : 3 ≤ (4 : ℤ))\n    (h' : z ≤ y) :\n    (k + 3 + x) - y ≤ (k + 4 + x) - z := by\n  mono\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Monotonicity/Basic.html#Mathlib.Tactic.Monotonicity.mono\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">Monotonicity</span>.<span class=\"name\">mono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}