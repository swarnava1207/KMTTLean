{"name":"Mathlib.LinearAlgebra.JordanChevalley","instances":[],"imports":["Init","Mathlib.Dynamics.Newton","Mathlib.LinearAlgebra.Semisimple","Mathlib.LinearAlgebra.FreeModule.Finite.Matrix"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/LinearAlgebra/JordanChevalley.lean#L70-L78","name":"Module.End.exists_isNilpotent_isSemisimple","line":70,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/JordanChevalley.html#Module.End.exists_isNilpotent_isSemisimple","doc":"**Jordan-Chevalley-Dunford decomposition**: an endomorphism of a finite-dimensional vector space\nover a perfect field may be written as a sum of nilpotent and semisimple endomorphisms. Moreover\nthese nilpotent and semisimple components are polynomial expressions in the original endomorphism.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/JordanChevalley.html#Module.End.exists_isNilpotent_isSemisimple\"><span class=\"name\">Module</span>.<span class=\"name\">End</span>.<span class=\"name\">exists_isNilpotent_isSemisimple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LinearMap/End.html#Module.End\">End</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/FiniteDimensional/Defs.html#FiniteDimensional\">FiniteDimensional</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Perfect.html#PerfectField\">PerfectField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">n</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Subalgebra/Lattice.html#Algebra.adjoin\">Algebra.adjoin</a> <span class=\"fn\">K</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">f</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span>, <span class=\"fn\">∃ <span class=\"fn\">s</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Subalgebra/Lattice.html#Algebra.adjoin\">Algebra.adjoin</a> <span class=\"fn\">K</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">f</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Nilpotent/Defs.html#IsNilpotent\">IsNilpotent</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/Semisimple.html#Module.End.IsSemisimple\">IsSemisimple</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/LinearAlgebra/JordanChevalley.lean#L43-L66","name":"Module.End.exists_isNilpotent_isSemisimple_of_separable_of_dvd_pow","line":43,"kind":"theorem","docLink":"./Mathlib/LinearAlgebra/JordanChevalley.html#Module.End.exists_isNilpotent_isSemisimple_of_separable_of_dvd_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/LinearAlgebra/JordanChevalley.html#Module.End.exists_isNilpotent_isSemisimple_of_separable_of_dvd_pow\"><span class=\"name\">Module</span>.<span class=\"name\">End</span>.<span class=\"name\">exists_isNilpotent_isSemisimple_of_separable_of_dvd_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">V</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/LinearMap/End.html#Module.End\">End</a> <span class=\"fn\">K</span> <span class=\"fn\">V</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Basic.html#Polynomial\">Polynomial</a> <span class=\"fn\">K</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sep</span> : <span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/FieldTheory/Separable.html#Polynomial.Separable\">Separable</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nil</span> : <span class=\"fn\"><a href=\"./Mathlib/FieldTheory/Minpoly/Basic.html#minpoly\">minpoly</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">n</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Subalgebra/Lattice.html#Algebra.adjoin\">Algebra.adjoin</a> <span class=\"fn\">K</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">f</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span>, <span class=\"fn\">∃ <span class=\"fn\">s</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Subalgebra/Lattice.html#Algebra.adjoin\">Algebra.adjoin</a> <span class=\"fn\">K</span> <a href=\"./Init/Core.html#Singleton.singleton\">{</a><span class=\"fn\">f</span><a href=\"./Init/Core.html#Singleton.singleton\">}</a></span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Nilpotent/Defs.html#IsNilpotent\">IsNilpotent</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/LinearAlgebra/Semisimple.html#Module.End.IsSemisimple\">IsSemisimple</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">s</span></span></span></div></div>"}]}