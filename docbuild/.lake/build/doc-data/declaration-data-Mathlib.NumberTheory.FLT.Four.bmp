{"name":"Mathlib.NumberTheory.FLT.Four","instances":[],"imports":["Init","Mathlib.Data.Nat.Factors","Mathlib.NumberTheory.FLT.Basic","Mathlib.NumberTheory.PythagoreanTriples","Mathlib.RingTheory.Coprime.Lemmas","Mathlib.Tactic.LinearCombination"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L304-L313","name":"FermatLastTheorem.of_odd_primes","line":304,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#FermatLastTheorem.of_odd_primes","doc":"To prove Fermat's Last Theorem, it suffices to prove it for odd prime exponents.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#FermatLastTheorem.of_odd_primes\"><span class=\"name\">FermatLastTheorem</span>.<span class=\"name\">of_odd_primes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hprimes</span> : <span class=\"fn\">∀ (<span class=\"fn\">p</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Parity.html#Odd\">Odd</a> <span class=\"fn\">p</span></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Basic.html#FermatLastTheoremFor\">FermatLastTheoremFor</a> <span class=\"fn\">p</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/NumberTheory/FLT/Basic.html#FermatLastTheorem\">FermatLastTheorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L294-L302","name":"fermatLastTheoremFour","line":294,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#fermatLastTheoremFour","doc":"Fermat's Last Theorem for $n=4$: if `a b c : ℕ` are all non-zero\nthen `a ^ 4 + b ^ 4 ≠ c ^ 4`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#fermatLastTheoremFour\"><span class=\"name\">fermatLastTheoremFour</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Basic.html#FermatLastTheoremFor\">FermatLastTheoremFor</a> <span class=\"fn\">4</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L288-L292","name":"not_fermat_42","line":288,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#not_fermat_42","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#not_fermat_42\"><span class=\"name\">not_fermat_42</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">4</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">4</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L159-L284","name":"Fermat42.not_minimal","line":159,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.not_minimal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.not_minimal\"><span class=\"name\">Fermat42</span>.<span class=\"name\">not_minimal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.Minimal\">Minimal</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha2</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#False\">False</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L153-L153","name":"Int.coprime_of_sq_sum'","line":153,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Int.coprime_of_sq_sum'","doc":"**Alias** of `Int.isCoprime_of_sq_sum'`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Int.coprime_of_sq_sum'\"><span class=\"name\">Int</span>.<span class=\"name\">coprime_of_sq_sum'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r </span><span class=\"fn\">s</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">r</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> (<span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>) (<span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">s</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L148-L151","name":"Int.isCoprime_of_sq_sum'","line":148,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Int.isCoprime_of_sq_sum'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Int.isCoprime_of_sq_sum'\"><span class=\"name\">Int</span>.<span class=\"name\">isCoprime_of_sq_sum'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r </span><span class=\"fn\">s</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">r</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> (<span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>) (<span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">s</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L146-L146","name":"Int.coprime_of_sq_sum","line":146,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Int.coprime_of_sq_sum","doc":"**Alias** of `Int.isCoprime_of_sq_sum`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Int.coprime_of_sq_sum\"><span class=\"name\">Int</span>.<span class=\"name\">coprime_of_sq_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r </span><span class=\"fn\">s</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">s</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> (<span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>) <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L142-L144","name":"Int.isCoprime_of_sq_sum","line":142,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Int.isCoprime_of_sq_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Int.isCoprime_of_sq_sum\"><span class=\"name\">Int</span>.<span class=\"name\">isCoprime_of_sq_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">r </span><span class=\"fn\">s</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">s</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> (<span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>) <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L128-L138","name":"Fermat42.exists_pos_odd_minimal","line":128,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.exists_pos_odd_minimal","doc":"We can assume that a minimal solution to `a ^ 4 + b ^ 4 = c ^ 2` has\n`a` odd and `c` positive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.exists_pos_odd_minimal\"><span class=\"name\">Fermat42</span>.<span class=\"name\">exists_pos_odd_minimal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42\">Fermat42</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a0</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) (<span class=\"fn\">b0</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) (<span class=\"fn\">c0</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.Minimal\">Minimal</a> <span class=\"fn\">a0</span> <span class=\"fn\">b0</span> <span class=\"fn\">c0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a0</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L113-L126","name":"Fermat42.exists_odd_minimal","line":113,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.exists_odd_minimal","doc":"We can assume that a minimal solution to `a ^ 4 + b ^ 4 = c ^ 2` has `a` odd. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.exists_odd_minimal\"><span class=\"name\">Fermat42</span>.<span class=\"name\">exists_odd_minimal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42\">Fermat42</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a0</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) (<span class=\"fn\">b0</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) (<span class=\"fn\">c0</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.Minimal\">Minimal</a> <span class=\"fn\">a0</span> <span class=\"fn\">b0</span> <span class=\"fn\">c0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">a0</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L104-L111","name":"Fermat42.neg_of_minimal","line":104,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.neg_of_minimal","doc":"We can assume that a minimal solution to `a ^ 4 + b ^ 4 = c ^ 2` has positive `c`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.neg_of_minimal\"><span class=\"name\">Fermat42</span>.<span class=\"name\">neg_of_minimal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.Minimal\">Minimal</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.Minimal\">Minimal</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">c</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L100-L102","name":"Fermat42.minimal_comm","line":100,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.minimal_comm","doc":"We can swap `a` and `b` in a minimal solution to `a ^ 4 + b ^ 4 = c ^ 2`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.minimal_comm\"><span class=\"name\">Fermat42</span>.<span class=\"name\">minimal_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.Minimal\">Minimal</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.Minimal\">Minimal</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L81-L98","name":"Fermat42.coprime_of_minimal","line":81,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.coprime_of_minimal","doc":"a minimal solution to `a ^ 4 + b ^ 4 = c ^ 2` must have `a` and `b` coprime. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.coprime_of_minimal\"><span class=\"name\">Fermat42</span>.<span class=\"name\">coprime_of_minimal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.Minimal\">Minimal</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L64-L79","name":"Fermat42.exists_minimal","line":64,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.exists_minimal","doc":"if we have a solution to `a ^ 4 + b ^ 4 = c ^ 2` then there must be a minimal one. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.exists_minimal\"><span class=\"name\">Fermat42</span>.<span class=\"name\">exists_minimal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42\">Fermat42</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a0</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) (<span class=\"fn\">b0</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>) (<span class=\"fn\">c0</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>), <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.Minimal\">Minimal</a> <span class=\"fn\">a0</span> <span class=\"fn\">b0</span> <span class=\"fn\">c0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L59-L62","name":"Fermat42.Minimal","line":59,"kind":"def","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.Minimal","doc":"We say a solution to `a ^ 4 + b ^ 4 = c ^ 2` is minimal if there is no other solution with\na smaller `c` (in absolute value). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.Minimal\"><span class=\"name\">Fermat42</span>.<span class=\"name\">Minimal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L53-L57","name":"Fermat42.ne_zero","line":53,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.ne_zero\"><span class=\"name\">Fermat42</span>.<span class=\"name\">ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42\">Fermat42</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L34-L51","name":"Fermat42.mul","line":34,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.mul\"><span class=\"name\">Fermat42</span>.<span class=\"name\">mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk0</span> : <span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42\">Fermat42</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42\">Fermat42</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span>) (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>) (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L29-L32","name":"Fermat42.comm","line":29,"kind":"theorem","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42.comm\"><span class=\"name\">Fermat42</span>.<span class=\"name\">comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42\">Fermat42</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42\">Fermat42</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/NumberTheory/FLT/Four.lean#L21-L25","name":"Fermat42","line":21,"kind":"def","docLink":"./Mathlib/NumberTheory/FLT/Four.html#Fermat42","doc":"Shorthand for three non-zero integers `a`, `b`, and `c` satisfying `a ^ 4 + b ^ 4 = c ^ 2`.\nWe will show that no integers satisfy this equation. Clearly Fermat's Last theorem for n = 4\nfollows. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/NumberTheory/FLT/Four.html#Fermat42\"><span class=\"name\">Fermat42</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}