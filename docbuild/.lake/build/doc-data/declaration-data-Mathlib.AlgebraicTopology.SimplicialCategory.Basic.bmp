{"name":"Mathlib.AlgebraicTopology.SimplicialCategory.Basic","instances":[],"imports":["Init","Mathlib.AlgebraicTopology.SimplicialSet.Monoidal","Mathlib.CategoryTheory.Enriched.Ordinary.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialCategory/Basic.lean#L65-L66","name":"CategoryTheory.SimplicialCategory.sHomFunctor","line":65,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory.sHomFunctor","doc":"The bifunctor `Cᵒᵖ ⥤ C ⥤ SSet.{v}` which sends `K : Cᵒᵖ` and `L : C` to `sHom K.unop L`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory.sHomFunctor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialCategory</span>.<span class=\"name\">sHomFunctor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory\">SimplicialCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialCategory/Basic.lean#L59-L62","name":"CategoryTheory.SimplicialCategory.homEquiv'","line":59,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory.homEquiv'","doc":"The bijection `(K ⟶ L) ≃ sHom K L _⦋0⦌` for all objects `K` and `L`\nin a simplicial category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory.homEquiv'\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialCategory</span>.<span class=\"name\">homEquiv'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory\">SimplicialCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\">K</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">L</span>) <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory.sHom\">sHom</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">0</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialCategory/Basic.lean#L56-L57","name":"CategoryTheory.SimplicialCategory.sHomComp","line":56,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory.sHomComp","doc":"Abbreviation for the enriched composition in a simplicial category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory.sHomComp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialCategory</span>.<span class=\"name\">sHomComp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory\">SimplicialCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L </span><span class=\"fn\">M</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory.sHom\">sHom</a> <span class=\"fn\">K</span> <span class=\"fn\">L</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory.sHom\">sHom</a> <span class=\"fn\">L</span> <span class=\"fn\">M</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory.sHom\">sHom</a> <span class=\"fn\">K</span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialCategory/Basic.lean#L53-L54","name":"CategoryTheory.SimplicialCategory.sHom","line":53,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory.sHom","doc":"Abbreviation for the enriched hom of a simplicial category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory.sHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialCategory</span>.<span class=\"name\">sHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory\">SimplicialCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">K </span><span class=\"fn\">L</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialSet/Basic.html#SSet\">SSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/SimplicialCategory/Basic.lean#L42-L45","name":"CategoryTheory.SimplicialCategory","line":42,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory","doc":"A simplicial category is a category `C` that is enriched over the\ncategory of simplicial sets in such a way that morphisms in\n`C` identify to the `0`-simplices of the enriched hom. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/SimplicialCategory/Basic.html#CategoryTheory.SimplicialCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">SimplicialCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max (max u (v + 1)) v)</div></div>"}]}