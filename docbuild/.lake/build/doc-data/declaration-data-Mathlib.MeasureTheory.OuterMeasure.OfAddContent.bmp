{"name":"Mathlib.MeasureTheory.OuterMeasure.OfAddContent","instances":[],"imports":["Init","Mathlib.MeasureTheory.SetSemiring","Mathlib.MeasureTheory.Measure.AddContent","Mathlib.MeasureTheory.Measure.Trim"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/OuterMeasure/OfAddContent.lean#L167-L176","name":"MeasureTheory.AddContent.measure_eq","line":167,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.measure_eq","doc":"The measure defined through a sigma-subadditive\ncontent on a semiring coincides with the content on the semiring. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.measure_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AddContent</span>.<span class=\"name\">measure_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent\">AddContent</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetSemiring.html#MeasureTheory.IsSetSemiring\">IsSetSemiring</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC_gen</span> : <span class=\"fn\">mα</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace.generateFrom\">MeasurableSpace.generateFrom</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m_sigma_subadd</span> : <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent.IsSigmaSubadditive\">IsSigmaSubadditive</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.measure\">measure</a></span> <span class=\"fn\">hC</span> <span class=\"fn\">⋯</span> <span class=\"fn\">m_sigma_subadd</span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/OuterMeasure/OfAddContent.lean#L159-L165","name":"MeasureTheory.AddContent.measure","line":159,"kind":"def","docLink":"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.measure","doc":"Construct a measure from a sigma-subadditive content on a semiring, assuming the semiring\ngenerates a given measurable structure. The measure is defined on this measurable structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.measure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AddContent</span>.<span class=\"name\">measure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">mα</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent\">AddContent</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetSemiring.html#MeasureTheory.IsSetSemiring\">IsSetSemiring</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC_gen</span> : <span class=\"fn\">mα</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace.generateFrom\">MeasurableSpace.generateFrom</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m_sigma_subadd</span> : <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent.IsSigmaSubadditive\">IsSigmaSubadditive</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/OuterMeasure/OfAddContent.lean#L154-L157","name":"MeasureTheory.AddContent.measureCaratheodory_eq","line":154,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.measureCaratheodory_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.measureCaratheodory_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AddContent</span>.<span class=\"name\">measureCaratheodory_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent\">AddContent</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetSemiring.html#MeasureTheory.IsSetSemiring\">IsSetSemiring</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m_sigma_subadd</span> : <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent.IsSigmaSubadditive\">IsSigmaSubadditive</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.measureCaratheodory\">measureCaratheodory</a></span> <span class=\"fn\">hC</span> <span class=\"fn\">m_sigma_subadd</span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/OuterMeasure/OfAddContent.lean#L147-L152","name":"MeasureTheory.AddContent.measureCaratheodory_eq_inducedOuterMeasure","line":147,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.measureCaratheodory_eq_inducedOuterMeasure","doc":"The measure `MeasureTheory.AddContent.measureCaratheodory` generated from an\n`m : AddContent C` on a `IsSetSemiring C` coincides with the `MeasureTheory.inducedOuterMeasure`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.measureCaratheodory_eq_inducedOuterMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AddContent</span>.<span class=\"name\">measureCaratheodory_eq_inducedOuterMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetSemiring.html#MeasureTheory.IsSetSemiring\">IsSetSemiring</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent\">AddContent</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m_sigma_subadd</span> : <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent.IsSigmaSubadditive\">IsSigmaSubadditive</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.measureCaratheodory\">measureCaratheodory</a></span> <span class=\"fn\">hC</span> <span class=\"fn\">m_sigma_subadd</span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/OuterMeasure/Induced.html#MeasureTheory.inducedOuterMeasure\">inducedOuterMeasure</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">x_1</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">C</span>) =&gt; <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/OuterMeasure/OfAddContent.lean#L130-L145","name":"MeasureTheory.AddContent.measureCaratheodory","line":130,"kind":"def","docLink":"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.measureCaratheodory","doc":"Construct a measure from a sigma-subadditive content on a semiring. This\nmeasure is defined on the associated Carathéodory sigma-algebra. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.measureCaratheodory\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AddContent</span>.<span class=\"name\">measureCaratheodory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent\">AddContent</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetSemiring.html#MeasureTheory.IsSetSemiring\">IsSetSemiring</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m_sigma_subadd</span> : <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent.IsSigmaSubadditive\">IsSigmaSubadditive</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/OuterMeasure/OfAddContent.lean#L121-L128","name":"MeasureTheory.AddContent.isCaratheodory_inducedOuterMeasure","line":121,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.isCaratheodory_inducedOuterMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.isCaratheodory_inducedOuterMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AddContent</span>.<span class=\"name\">isCaratheodory_inducedOuterMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetSemiring.html#MeasureTheory.IsSetSemiring\">IsSetSemiring</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent\">AddContent</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/OuterMeasure/Induced.html#MeasureTheory.inducedOuterMeasure\">inducedOuterMeasure</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">x_1</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">C</span>) =&gt; <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/MeasureTheory/OuterMeasure/Caratheodory.html#MeasureTheory.OuterMeasure.IsCaratheodory\">IsCaratheodory</a></span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/OuterMeasure/OfAddContent.lean#L114-L119","name":"MeasureTheory.AddContent.isCaratheodory_inducedOuterMeasure_of_mem","line":114,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.isCaratheodory_inducedOuterMeasure_of_mem","doc":"Every `s ∈ C` for an `m : AddContent C` with `IsSetSemiring C` is Carathéodory measurable\nwith respect to the `inducedOuterMeasure` from `m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.isCaratheodory_inducedOuterMeasure_of_mem\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AddContent</span>.<span class=\"name\">isCaratheodory_inducedOuterMeasure_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetSemiring.html#MeasureTheory.IsSetSemiring\">IsSetSemiring</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent\">AddContent</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/OuterMeasure/Induced.html#MeasureTheory.inducedOuterMeasure\">inducedOuterMeasure</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">x_1</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">C</span>) =&gt; <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/MeasureTheory/OuterMeasure/Caratheodory.html#MeasureTheory.OuterMeasure.IsCaratheodory\">IsCaratheodory</a></span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/OuterMeasure/OfAddContent.lean#L82-L112","name":"MeasureTheory.AddContent.isCaratheodory_ofFunction_of_mem","line":82,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.isCaratheodory_ofFunction_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.isCaratheodory_ofFunction_of_mem\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AddContent</span>.<span class=\"name\">isCaratheodory_ofFunction_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetSemiring.html#MeasureTheory.IsSetSemiring\">IsSetSemiring</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent\">AddContent</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m_top</span> : <span class=\"fn\">∀ <span class=\"fn\">s</span> ∉ <span class=\"fn\">C</span>, <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/OuterMeasure/OfFunction.html#MeasureTheory.OuterMeasure.ofFunction\">OuterMeasure.ofFunction</a> <span class=\"fn\">⇑<span class=\"fn\">m</span></span> <span class=\"fn\">⋯</span>)</span>.<a href=\"./Mathlib/MeasureTheory/OuterMeasure/Caratheodory.html#MeasureTheory.OuterMeasure.IsCaratheodory\">IsCaratheodory</a></span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/OuterMeasure/OfAddContent.lean#L66-L80","name":"MeasureTheory.AddContent.inducedOuterMeasure_eq","line":66,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.inducedOuterMeasure_eq","doc":"For `m : AddContent C` sigma-sub-additive, finite on `C`, the `inducedOuterMeasure` given by `m`\ncoincides with `m` on `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.inducedOuterMeasure_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AddContent</span>.<span class=\"name\">inducedOuterMeasure_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetSemiring.html#MeasureTheory.IsSetSemiring\">IsSetSemiring</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent\">AddContent</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m_sigma_subadd</span> : <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent.IsSigmaSubadditive\">IsSigmaSubadditive</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/OuterMeasure/Induced.html#MeasureTheory.inducedOuterMeasure\">inducedOuterMeasure</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">x_1</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">C</span>) =&gt; <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/OuterMeasure/OfAddContent.lean#L49-L64","name":"MeasureTheory.AddContent.ofFunction_eq","line":49,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.ofFunction_eq","doc":"For `m : AddContent C` sigma-sub-aditive, finite on `C`, the `OuterMeasure` given by `m`\ncoincides with `m` on `C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/OuterMeasure/OfAddContent.html#MeasureTheory.AddContent.ofFunction_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">AddContent</span>.<span class=\"name\">ofFunction_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hC</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/SetSemiring.html#MeasureTheory.IsSetSemiring\">IsSetSemiring</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent\">AddContent</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m_sigma_subadd</span> : <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Mathlib/MeasureTheory/Measure/AddContent.html#MeasureTheory.AddContent.IsSigmaSubadditive\">IsSigmaSubadditive</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m_top</span> : <span class=\"fn\">∀ <span class=\"fn\">s</span> ∉ <span class=\"fn\">C</span>, <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/OuterMeasure/OfFunction.html#MeasureTheory.OuterMeasure.ofFunction\">OuterMeasure.ofFunction</a> <span class=\"fn\">⇑<span class=\"fn\">m</span></span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span></div></div>"}]}