{"name":"Mathlib.Tactic.Replace","instances":[],"imports":["Init","Mathlib.Tactic.Have"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Replace.lean#L22-L53","name":"Mathlib.Tactic.replace'","line":22,"kind":"def","docLink":"./Mathlib/Tactic/Replace.html#Mathlib.Tactic.replace'","doc":"Acts like `have`, but removes a hypothesis with the same name as\nthis one if possible. For example, if the state is:\n\nThen after `replace h : β` the state will be:\n\n```lean\ncase h\nf : α → β\nh : α\n⊢ β\n\nf : α → β\nh : β\n⊢ goal\n```\n\nwhereas `have h : β` would result in:\n\n```lean\ncase h\nf : α → β\nh : α\n⊢ β\n\nf : α → β\nh✝ : α\nh : β\n⊢ goal\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Replace.html#Mathlib.Tactic.replace'\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">replace'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}