{"name":"Mathlib.GroupTheory.Coxeter.Basic","instances":[{"typeNames":["CoxeterMatrix.Group"],"name":"CoxeterMatrix.instGroupGroup","className":"Group"}],"imports":["Init","Mathlib.Algebra.Group.Subgroup.Pointwise","Mathlib.Algebra.Ring.Int.Parity","Mathlib.GroupTheory.Coxeter.Matrix","Mathlib.GroupTheory.PresentedGroup","Mathlib.Tactic.NormNum.DivMod","Mathlib.Tactic.Ring","Mathlib.Tactic.Use"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L533-L541","name":"CoxeterSystem.wordProd_braidWord_eq","line":533,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_braidWord_eq","doc":"The two words of length `M i i'` that alternate between `i` and `i'` have the same product.\nThis is known as the \"braid relation\" or \"Artin-Tits relation\". "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_braidWord_eq\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">wordProd_braidWord_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">i'</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.braidWord\">braidWord</a> <span class=\"fn\">M</span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.braidWord\">braidWord</a> <span class=\"fn\">M</span> <span class=\"fn\">i'</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L502-L531","name":"CoxeterSystem.prod_alternatingWord_eq_prod_alternatingWord_sub","line":502,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.prod_alternatingWord_eq_prod_alternatingWord_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.prod_alternatingWord_eq_prod_alternatingWord_sub\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">prod_alternatingWord_eq_prod_alternatingWord_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">i'</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix.M\">M</a></span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">2</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">m</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">i'</span> <span class=\"fn\">i</span> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix.M\">M</a></span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">m</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L489-L500","name":"CoxeterSystem.prod_alternatingWord_eq_mul_pow","line":489,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.prod_alternatingWord_eq_mul_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.prod_alternatingWord_eq_mul_pow\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">prod_alternatingWord_eq_mul_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">i'</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">m</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Even.html#Even\">Even</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i'</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i'</span></span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L479-L487","name":"CoxeterSystem.listTake_succ_alternatingWord","line":479,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.listTake_succ_alternatingWord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.listTake_succ_alternatingWord\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">listTake_succ_alternatingWord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">p</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.take\">List.take</a> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>) <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">p</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.take\">List.take</a> <span class=\"fn\">k</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">j</span> <span class=\"fn\">i</span> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">p</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L456-L477","name":"CoxeterSystem.listTake_alternatingWord","line":456,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.listTake_alternatingWord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.listTake_alternatingWord\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">listTake_alternatingWord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">p</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.take\">List.take</a> <span class=\"fn\">k</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">p</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Even.html#Even\">Even</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L445-L454","name":"CoxeterSystem.getElem_alternatingWord_swapIndices","line":445,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.getElem_alternatingWord_swapIndices","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.getElem_alternatingWord_swapIndices\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">getElem_alternatingWord_swapIndices</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">p</span>)</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">j</span> <span class=\"fn\">i</span> <span class=\"fn\">p</span>)</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">k</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L414-L443","name":"CoxeterSystem.getElem_alternatingWord","line":414,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.getElem_alternatingWord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.getElem_alternatingWord\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">getElem_alternatingWord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hk</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">p</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">i</span> <span class=\"fn\">j</span> <span class=\"fn\">p</span>)</span><a href=\"./Init/GetElem.html#GetElem.getElem\">[</a><span class=\"fn\">k</span><a href=\"./Init/GetElem.html#GetElem.getElem\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Even.html#Even\">Even</a> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">j</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L407-L412","name":"CoxeterSystem.length_alternatingWord","line":407,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.length_alternatingWord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.length_alternatingWord\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">length_alternatingWord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">i'</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">m</span>)</span>.<a href=\"./Init/Prelude.html#List.length\">length</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L398-L405","name":"CoxeterSystem.alternatingWord_succ'","line":398,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord_succ'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord_succ'\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">alternatingWord_succ'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">i'</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Even.html#Even\">Even</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">i'</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">i</span>) <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L395-L396","name":"CoxeterSystem.alternatingWord_succ","line":395,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord_succ\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">alternatingWord_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">i'</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">i</span> <span class=\"fn\">i'</span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\">alternatingWord</a> <span class=\"fn\">i'</span> <span class=\"fn\">i</span> <span class=\"fn\">m</span>)</span>.<a href=\"./Init/Prelude.html#List.concat\">concat</a></span> <span class=\"fn\">i'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L392-L393","name":"CoxeterSystem.braidWord","line":392,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.braidWord","doc":"The word of length `M i i'` that alternates between `i` and `i'`, ending with `i'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.braidWord\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">braidWord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">i'</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L386-L390","name":"CoxeterSystem.alternatingWord","line":386,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord","doc":"The word of length `m` that alternates between `i` and `i'`, ending with `i'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.alternatingWord\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">alternatingWord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">i'</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">B</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L377-L384","name":"CoxeterSystem.wordProd_surjective","line":377,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_surjective\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">wordProd_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L372-L375","name":"CoxeterSystem.wordProd_reverse","line":372,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_reverse\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">wordProd_reverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ω</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <span class=\"fn\"><span class=\"fn\">ω</span>.<a href=\"./Init/Data/List/Basic.html#List.reverse\">reverse</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <span class=\"fn\">ω</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L370-L370","name":"CoxeterSystem.wordProd_append","line":370,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_append\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">wordProd_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ω </span><span class=\"fn\">ω'</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> (<span class=\"fn\">ω</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">ω'</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <span class=\"fn\">ω'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L368-L368","name":"CoxeterSystem.wordProd_concat","line":368,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_concat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_concat\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">wordProd_concat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ω</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ω</span>.<a href=\"./Init/Prelude.html#List.concat\">concat</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <span class=\"fn\">ω</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L366-L366","name":"CoxeterSystem.wordProd_singleton","line":366,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_singleton\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">wordProd_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <a href=\"./Init/Prelude.html#List.cons\">[</a><span class=\"fn\">i</span><a href=\"./Init/Prelude.html#List.cons\">]</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L364-L364","name":"CoxeterSystem.wordProd_cons","line":364,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_cons\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">wordProd_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ω</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> (<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">ω</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <span class=\"fn\">ω</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L362-L362","name":"CoxeterSystem.wordProd_nil","line":362,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd_nil\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">wordProd_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\">wordProd</a></span> <a href=\"./Init/Prelude.html#List.nil\">[</a><a href=\"./Init/Prelude.html#List.nil\">]</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L357-L358","name":"CoxeterSystem.wordProd","line":357,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd","doc":"The product of the simple reflections of `W` corresponding to the indices in `ω`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.wordProd\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">wordProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ω</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">W</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L343-L353","name":"CoxeterSystem.simple_determines_coxeterSystem","line":343,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_determines_coxeterSystem","doc":"If two Coxeter systems on the same group `W` have the same Coxeter matrix `M : Matrix B B ℕ`\nand the same simple reflection map `B → W`, then they are identical. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_determines_coxeterSystem\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">simple_determines_coxeterSystem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L339-L341","name":"CoxeterSystem.lift_apply_simple","line":339,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.lift_apply_simple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.lift_apply_simple\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">lift_apply_simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.IsLiftable\">IsLiftable</a></span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.lift\">lift</a></span> <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L317-L337","name":"CoxeterSystem.lift","line":317,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.lift","doc":"The universal mapping property of Coxeter systems. For any monoid `G`,\nfunctions `f : B → G` whose values satisfy the Coxeter relations are equivalent to\nmonoid homomorphisms `f' : W → G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.lift\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.IsLiftable\">IsLiftable</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> (<span class=\"fn\">W</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L290-L293","name":"CoxeterMatrix.IsLiftable","line":290,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.IsLiftable","doc":"The proposition that the values of the function `f : B → G` satisfy the Coxeter relations\ncorresponding to the matrix `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.IsLiftable\"><span class=\"name\">CoxeterMatrix</span>.<span class=\"name\">IsLiftable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L285-L288","name":"CoxeterSystem.ext_simple","line":285,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.ext_simple","doc":"If two homomorphisms with domain `W` agree on all simple reflections, then they are equal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.ext_simple\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">ext_simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ₁ </span><span class=\"fn\">φ₂</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">B</span>), <span class=\"fn\"><span class=\"fn\">φ₁</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ₂</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">φ₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L270-L281","name":"CoxeterSystem.simple_induction_right","line":270,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_induction_right","doc":"If `p : W → Prop` holds for the identity and it is preserved under multiplying on the right\nby a simple reflection, then it holds for all elements of `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_induction_right\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">simple_induction_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">W</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">W</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">one</span> : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mul_simple_right</span> : <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\">W</span>) (<span class=\"fn\">i</span> : <span class=\"fn\">B</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">w</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> (<span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L257-L268","name":"CoxeterSystem.simple_induction_left","line":257,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_induction_left","doc":"If `p : W → Prop` holds for the identity and it is preserved under multiplying on the left\nby a simple reflection, then it holds for all elements of `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_induction_left\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">simple_induction_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">W</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">W</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">one</span> : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mul_simple_left</span> : <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\">W</span>) (<span class=\"fn\">i</span> : <span class=\"fn\">B</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">w</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L249-L255","name":"CoxeterSystem.simple_induction","line":249,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_induction","doc":"If `p : W → Prop` holds for all simple reflections, it holds for the identity, and it is\npreserved under multiplication, then it holds for all elements of `W`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_induction\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">simple_induction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">W</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\">W</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">simple</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">B</span>), <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">one</span> : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mul</span> : <span class=\"fn\">∀ (<span class=\"fn\">w </span><span class=\"fn\">w'</span> : <span class=\"fn\">W</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">w</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">w'</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> (<span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w'</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L241-L245","name":"CoxeterSystem.submonoid_closure_range_simple","line":241,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.submonoid_closure_range_simple","doc":"The simple reflections of `W` generate `W` as a monoid. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.submonoid_closure_range_simple\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">submonoid_closure_range_simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Basic.html#Submonoid.closure\">Submonoid.closure</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L234-L239","name":"CoxeterSystem.subgroup_closure_range_simple","line":234,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.subgroup_closure_range_simple","doc":"The simple reflections of `W` generate `W` as a group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.subgroup_closure_range_simple\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">subgroup_closure_range_simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Lattice.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L231-L232","name":"CoxeterSystem.simple_mul_simple_pow'","line":231,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_mul_simple_pow'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_mul_simple_pow'\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">simple_mul_simple_pow'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">i'</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i'</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix.M\">M</a></span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L222-L229","name":"CoxeterSystem.simple_mul_simple_pow","line":222,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_mul_simple_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_mul_simple_pow\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">simple_mul_simple_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">i'</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i'</span></span>) <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix.M\">M</a></span> <span class=\"fn\">i</span> <span class=\"fn\">i'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L218-L220","name":"CoxeterSystem.inv_simple","line":218,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.inv_simple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.inv_simple\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">inv_simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L216-L216","name":"CoxeterSystem.simple_sq","line":216,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_sq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_sq\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">simple_sq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L212-L214","name":"CoxeterSystem.simple_mul_simple_cancel_left","line":212,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_mul_simple_cancel_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_mul_simple_cancel_left\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">simple_mul_simple_cancel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\">W</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L208-L210","name":"CoxeterSystem.simple_mul_simple_cancel_right","line":208,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_mul_simple_cancel_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_mul_simple_cancel_right\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">simple_mul_simple_cancel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">w</span> : <span class=\"fn\">W</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L199-L206","name":"CoxeterSystem.simple_mul_simple_self","line":199,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_mul_simple_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple_mul_simple_self\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">simple_mul_simple_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L195-L195","name":"CoxeterSystem.map_simple","line":195,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.map_simple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.map_simple\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">map_simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.map\">map</a></span> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L193-L193","name":"CoxeterSystem.reindex_simple","line":193,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.reindex_simple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.reindex_simple\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">reindex_simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">B'</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i'</span> : <span class=\"fn\">B'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.reindex\">reindex</a></span> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">i'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">i'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L189-L191","name":"CoxeterMatrix.toCoxeterSystem_simple","line":189,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.toCoxeterSystem_simple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.toCoxeterSystem_simple\"><span class=\"name\">CoxeterMatrix</span>.<span class=\"name\">toCoxeterSystem_simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.toCoxeterSystem\">toCoxeterSystem</a></span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\">simple</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.simple\">simple</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L186-L187","name":"CoxeterSystem.simple","line":186,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple","doc":"The simple reflection of `W` at the index `i`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.simple\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">W</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L181-L181","name":"CoxeterSystem.map_mulEquiv","line":181,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.map_mulEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.map_mulEquiv\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">map_mulEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.map\">map</a></span> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.mulEquiv\">mulEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv.symm\">symm</a></span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv.trans\">trans</a></span> <span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.mulEquiv\">mulEquiv</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L180-L182","name":"CoxeterSystem.map","line":180,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.map","doc":"Push a Coxeter system through a group isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.map\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">H</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L176-L176","name":"CoxeterSystem.reindex_mulEquiv","line":176,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.reindex_mulEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.reindex_mulEquiv\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">reindex_mulEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">B'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.reindex\">reindex</a></span> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.mulEquiv\">mulEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.mulEquiv\">mulEquiv</a></span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv.trans\">trans</a></span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.reindexGroupEquiv\">reindexGroupEquiv</a></span> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv.symm\">symm</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L175-L178","name":"CoxeterSystem.reindex","line":175,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.reindex","doc":"Reindex a Coxeter system through a bijection of the indexing sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.reindex\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">reindex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cs</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">B'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix.reindex\">CoxeterMatrix.reindex</a> <span class=\"fn\">e</span> <span class=\"fn\">M</span>)</span> <span class=\"fn\">W</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L162-L163","name":"CoxeterMatrix.toCoxeterSystem","line":162,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.toCoxeterSystem","doc":"The canonical Coxeter system on the Coxeter group associated to `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.toCoxeterSystem\"><span class=\"name\">CoxeterMatrix</span>.<span class=\"name\">toCoxeterSystem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.Group\">Group</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L160-L160","name":"IsCoxeterGroup.nonempty_system","line":160,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#IsCoxeterGroup.nonempty_system","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#IsCoxeterGroup.nonempty_system\"><span class=\"name\">IsCoxeterGroup</span>.<span class=\"name\">nonempty_system</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#IsCoxeterGroup\">IsCoxeterGroup</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u) (<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L159-L159","name":"IsCoxeterGroup.mk","line":159,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#IsCoxeterGroup.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#IsCoxeterGroup.mk\"><span class=\"name\">IsCoxeterGroup</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nonempty_system</span> : <span class=\"fn\">∃ (<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u) (<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>), <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#IsCoxeterGroup\">IsCoxeterGroup</a> <span class=\"fn\">W</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L158-L160","name":"IsCoxeterGroup","line":158,"kind":"class","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#IsCoxeterGroup","doc":"A group is a Coxeter group if it admits a Coxeter system for some Coxeter matrix `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#IsCoxeterGroup\"><span class=\"name\">IsCoxeterGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L156-L156","name":"CoxeterSystem.mulEquiv","line":156,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.mulEquiv","doc":"The isomorphism between `W` and the Coxeter group associated to `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.mulEquiv\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">mulEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">W</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.Group\">Group</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L154-L154","name":"CoxeterSystem.mk","line":154,"kind":"ctor","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.mk\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mulEquiv</span> : <span class=\"fn\">W</span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.Group\">Group</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L153-L153","name":"CoxeterSystem.ext_iff","line":153,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.ext_iff\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.mulEquiv\">mulEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.mulEquiv\">mulEquiv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L153-L153","name":"CoxeterSystem.ext","line":153,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.ext\"><span class=\"name\">CoxeterSystem</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\">CoxeterSystem</a> <span class=\"fn\">M</span> <span class=\"fn\">W</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mulEquiv</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.mulEquiv\">mulEquiv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem.mulEquiv\">mulEquiv</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L151-L156","name":"CoxeterSystem","line":151,"kind":"structure","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem","doc":"A Coxeter system `CoxeterSystem M W` is a structure recording the isomorphism between\na group `W` and the Coxeter group associated to a Coxeter matrix `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterSystem\"><span class=\"name\">CoxeterSystem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">W</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L140-L141","name":"CoxeterMatrix.reindexGroupEquiv_symm_apply_simple","line":140,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.reindexGroupEquiv_symm_apply_simple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.reindexGroupEquiv_symm_apply_simple\"><span class=\"name\">CoxeterMatrix</span>.<span class=\"name\">reindexGroupEquiv_symm_apply_simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">B'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.reindexGroupEquiv\">reindexGroupEquiv</a></span> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv.symm\">symm</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.simple\">simple</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix.reindex\">CoxeterMatrix.reindex</a> <span class=\"fn\">e</span> <span class=\"fn\">M</span>)</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.simple\">simple</a></span> <span class=\"fn\">(<span class=\"fn\">e</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L137-L138","name":"CoxeterMatrix.reindexGroupEquiv_apply_simple","line":137,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.reindexGroupEquiv_apply_simple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.reindexGroupEquiv_apply_simple\"><span class=\"name\">CoxeterMatrix</span>.<span class=\"name\">reindexGroupEquiv_apply_simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">B'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.reindexGroupEquiv\">reindexGroupEquiv</a></span> <span class=\"fn\">e</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix.reindex\">CoxeterMatrix.reindex</a> <span class=\"fn\">e</span> <span class=\"fn\">M</span>)</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.simple\">simple</a></span> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.simple\">simple</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L125-L135","name":"CoxeterMatrix.reindexGroupEquiv","line":125,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.reindexGroupEquiv","doc":"The isomorphism between the Coxeter group associated to the reindexed matrix `M.reindex e` and\nthe Coxeter group associated to `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.reindexGroupEquiv\"><span class=\"name\">CoxeterMatrix</span>.<span class=\"name\">reindexGroupEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">B'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix.reindex\">CoxeterMatrix.reindex</a> <span class=\"fn\">e</span> <span class=\"fn\">M</span>)</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.Group\">Group</a></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Defs.html#MulEquiv\">≃*</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.Group\">Group</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L114-L123","name":"CoxeterMatrix.reindex_relationsSet","line":114,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.reindex_relationsSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.reindex_relationsSet\"><span class=\"name\">CoxeterMatrix</span>.<span class=\"name\">reindex_relationsSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B'</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">B'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix.reindex\">CoxeterMatrix.reindex</a> <span class=\"fn\">e</span> <span class=\"fn\">M</span>)</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.relationsSet\">relationsSet</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/FreeGroup/Basic.html#FreeGroup.freeGroupCongr\">FreeGroup.freeGroupCongr</a> <span class=\"fn\">e</span>)</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.relationsSet\">relationsSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L111-L112","name":"CoxeterMatrix.simple","line":111,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.simple","doc":"The simple reflection of the Coxeter group `M.group` at the index `i`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.simple\"><span class=\"name\">CoxeterMatrix</span>.<span class=\"name\">simple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.Group\">Group</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L109-L109","name":"CoxeterMatrix.instGroupGroup","line":109,"kind":"instance","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.instGroupGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.instGroupGroup\"><span class=\"name\">CoxeterMatrix</span>.<span class=\"name\">instGroupGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.Group\">Group</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L105-L107","name":"CoxeterMatrix.Group","line":105,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.Group","doc":"The Coxeter group associated to a Coxeter matrix $M$; that is, the group\n$$\\langle \\{s_i\\}_{i \\in B} \\vert \\{(s_i s_{i'})^{M_{i, i'}}\\}_{i, i' \\in B} \\rangle.$$ "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.Group\"><span class=\"name\">CoxeterMatrix</span>.<span class=\"name\">Group</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L102-L103","name":"CoxeterMatrix.relationsSet","line":102,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.relationsSet","doc":"The set of all Coxeter relations associated to the Coxeter matrix $M$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.relationsSet\"><span class=\"name\">CoxeterMatrix</span>.<span class=\"name\">relationsSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/FreeGroup/Basic.html#FreeGroup\">FreeGroup</a> <span class=\"fn\">B</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/GroupTheory/Coxeter/Basic.lean#L95-L100","name":"CoxeterMatrix.relation","line":95,"kind":"def","docLink":"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.relation","doc":"The Coxeter relation associated to a Coxeter matrix $M$ and two indices $i, i' \\in B$.\nThat is, the relation $(s_i s_{i'})^{M_{i, i'}}$, considered as an element of the free group\non $\\{s_i\\}_{i \\in B}$.\nIf $M_{i, i'} = 0$, then this is the identity, indicating that there is no relation between\n$s_i$ and $s_{i'}$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Coxeter/Basic.html#CoxeterMatrix.relation\"><span class=\"name\">CoxeterMatrix</span>.<span class=\"name\">relation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Coxeter/Matrix.html#CoxeterMatrix\">CoxeterMatrix</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i </span><span class=\"fn\">i'</span> : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/FreeGroup/Basic.html#FreeGroup\">FreeGroup</a> <span class=\"fn\">B</span></span></div></div>"}]}