{"name":"Mathlib.Topology.Algebra.Category.ProfiniteGrp.Basic","instances":[{"typeNames":["ProfiniteGrp","_builtin_typeu"],"name":"instCoeSortProfiniteGrpType","className":"CoeSort"},{"typeNames":["ProfiniteAddGrp","_builtin_typeu"],"name":"instCoeSortProfiniteAddGrpType","className":"CoeSort"},{"typeNames":["ProfiniteGrp"],"name":"instCategoryProfiniteGrp","className":"CategoryTheory.Category"},{"typeNames":["ProfiniteAddGrp"],"name":"instCategoryProfiniteAddGrp","className":"CategoryTheory.Category"},{"typeNames":["ProfiniteGrp"],"name":"instConcreteCategoryProfiniteGrpContinuousMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["ProfiniteAddGrp"],"name":"instConcreteCategoryProfiniteAddGrpContinuousAddMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["Quiver.Hom"],"name":"ProfiniteGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite","className":"CoeFun"},{"typeNames":["Quiver.Hom"],"name":"ProfiniteAddGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite","className":"CoeFun"},{"typeNames":["FiniteGrp","ProfiniteGrp"],"name":"ProfiniteGrp.instHasForget₂FiniteGrp","className":"CategoryTheory.HasForget₂"},{"typeNames":["FiniteAddGrp","ProfiniteAddGrp"],"name":"ProfiniteAddGrp.instHasForget₂FiniteAddGrp","className":"CategoryTheory.HasForget₂"},{"typeNames":["ProfiniteGrp","Grp"],"name":"ProfiniteGrp.instHasForget₂Grp","className":"CategoryTheory.HasForget₂"},{"typeNames":["ProfiniteAddGrp","AddGrp"],"name":"ProfiniteAddGrp.instHasForget₂AddGrp","className":"CategoryTheory.HasForget₂"},{"typeNames":["ProfiniteGrp","Profinite"],"name":"ProfiniteGrp.instHasForget₂Profinite","className":"CategoryTheory.HasForget₂"},{"typeNames":["ProfiniteAddGrp","Profinite"],"name":"ProfiniteAddGrp.instHasForget₂Profinite","className":"CategoryTheory.HasForget₂"},{"typeNames":["CategoryTheory.forget₂"],"name":"ProfiniteGrp.instFaithfulProfiniteForget₂","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["CategoryTheory.forget₂"],"name":"ProfiniteAddGrp.instFaithfulProfiniteForget₂","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["CategoryTheory.forget₂"],"name":"ProfiniteGrp.instReflectsIsomorphismsProfiniteForget₂","className":"CategoryTheory.Functor.ReflectsIsomorphisms"},{"typeNames":["CategoryTheory.forget"],"name":"ProfiniteGrp.instReflectsIsomorphismsForget","className":"CategoryTheory.Functor.ReflectsIsomorphisms"},{"typeNames":["TopCat.carrier"],"name":"ProfiniteGrp.instGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂","className":"Group"},{"typeNames":["TopCat.carrier"],"name":"ProfiniteGrp.instIsTopologicalGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂","className":"IsTopologicalGroup"},{"typeNames":[],"name":"ProfiniteGrp.instHasLimit","className":"CategoryTheory.Limits.HasLimit"},{"typeNames":["CategoryTheory.forget₂"],"name":"ProfiniteGrp.instPreservesLimitsProfiniteForget₂","className":"CategoryTheory.Limits.PreservesLimitsOfSize"},{"typeNames":["Subtype"],"name":"ProfiniteGrp.instCompactSpaceSubtypeForallCarrierToTopTotallyDisconnectedSpaceToProfiniteObjMemSubgroupLimitConePtAux","className":"CompactSpace"}],"imports":["Init","Mathlib.Algebra.Category.Grp.FiniteGrp","Mathlib.Topology.Algebra.ClosedSubgroup","Mathlib.Topology.Algebra.ContinuousMonoidHom","Mathlib.Topology.Category.Profinite.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L372-L374","name":"ProfiniteGrp.limit_mul_val","line":372,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_mul_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_mul_val\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limit_mul_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">limit</a> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span>)</span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L368-L370","name":"ProfiniteGrp.limit_one_val","line":368,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_one_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_one_val\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limit_one_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">J</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">1</span></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L364-L364","name":"ProfiniteGrp.limit_ext_iff","line":364,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_ext_iff\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limit_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">limit</a> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L364-L366","name":"ProfiniteGrp.limit_ext","line":364,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit_ext\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limit_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\">limit</a> <span class=\"fn\">F</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hxy</span> : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\">J</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L361-L362","name":"ProfiniteGrp.limit","line":361,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit","doc":"The abbreviation for the limit of `ProfiniteGrp`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limit\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L358-L359","name":"ProfiniteGrp.instCompactSpaceSubtypeForallCarrierToTopTotallyDisconnectedSpaceToProfiniteObjMemSubgroupLimitConePtAux","line":358,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instCompactSpaceSubtypeForallCarrierToTopTotallyDisconnectedSpaceToProfiniteObjMemSubgroupLimitConePtAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instCompactSpaceSubtypeForallCarrierToTopTotallyDisconnectedSpaceToProfiniteObjMemSubgroupLimitConePtAux\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instCompactSpaceSubtypeForallCarrierToTopTotallyDisconnectedSpaceToProfiniteObjMemSubgroupLimitConePtAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitConePtAux\">limitConePtAux</a> <span class=\"fn\">F</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L353-L356","name":"ProfiniteGrp.instPreservesLimitsProfiniteForget₂","line":353,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instPreservesLimitsProfiniteForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instPreservesLimitsProfiniteForget₂\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instPreservesLimitsProfiniteForget₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimits\">CategoryTheory.Limits.PreservesLimits</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L348-L351","name":"ProfiniteGrp.instHasLimit","line":348,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasLimit\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instHasLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimit\">CategoryTheory.Limits.HasLimit</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L333-L346","name":"ProfiniteGrp.limitConeIsLimit","line":333,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitConeIsLimit","doc":"`ProfiniteGrp.limitCone` is a limit cone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitConeIsLimit\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limitConeIsLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitCone\">limitCone</a> <span class=\"fn\">F</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L317-L331","name":"ProfiniteGrp.limitCone","line":317,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitCone","doc":"The explicit limit cone in `ProfiniteGrp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitCone\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limitCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L314-L315","name":"ProfiniteGrp.instIsTopologicalGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂","line":314,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instIsTopologicalGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instIsTopologicalGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instIsTopologicalGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.limitCone\">Profinite.limitCone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max u v}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L311-L312","name":"ProfiniteGrp.instGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂","line":311,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instGroupCarrierToTopTotallyDisconnectedSpacePtProfiniteLimitConeCompForget₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.limitCone\">Profinite.limitCone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max u v}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.pt\">pt</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L303-L304","name":"ProfiniteAddGrp.limitConePtAux","line":303,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.limitConePtAux","doc":"Auxiliary construction to obtain the additive group structure on the limit of\nprofinite additive groups."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.limitConePtAux\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">limitConePtAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#AddSubgroup\">AddSubgroup</a> <span class=\"fn\">((<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L302-L309","name":"ProfiniteGrp.limitConePtAux","line":302,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitConePtAux","doc":"Auxiliary construction to obtain the group structure on the limit of profinite groups. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.limitConePtAux\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">limitConePtAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">J</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max v u}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">((<span class=\"fn\">j</span> : <span class=\"fn\">J</span>) → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L275-L276","name":"ProfiniteGrp.instReflectsIsomorphismsForget","line":275,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instReflectsIsomorphismsForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instReflectsIsomorphismsForget\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instReflectsIsomorphismsForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/ReflectsIso/Basic.html#CategoryTheory.Functor.ReflectsIsomorphisms\">ReflectsIsomorphisms</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L267-L273","name":"ProfiniteGrp.instReflectsIsomorphismsProfiniteForget₂","line":267,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instReflectsIsomorphismsProfiniteForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instReflectsIsomorphismsProfiniteForget₂\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instReflectsIsomorphismsProfiniteForget₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/ReflectsIso/Basic.html#CategoryTheory.Functor.ReflectsIsomorphisms\">ReflectsIsomorphisms</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L262-L262","name":"ProfiniteAddGrp.instFaithfulProfiniteForget₂","line":262,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instFaithfulProfiniteForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instFaithfulProfiniteForget₂\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">instFaithfulProfiniteForget₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L262-L265","name":"ProfiniteGrp.instFaithfulProfiniteForget₂","line":262,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instFaithfulProfiniteForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instFaithfulProfiniteForget₂\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instFaithfulProfiniteForget₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L256-L256","name":"ProfiniteAddGrp.instHasForget₂Profinite","line":256,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instHasForget₂Profinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instHasForget₂Profinite\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">instHasForget₂Profinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L255-L260","name":"ProfiniteGrp.instHasForget₂Profinite","line":255,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasForget₂Profinite","doc":"The functor mapping a profinite group to its underlying profinite space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasForget₂Profinite\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instHasForget₂Profinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L249-L253","name":"ProfiniteGrp.ContinuousMulEquiv.toProfiniteGrpIso","line":249,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ContinuousMulEquiv.toProfiniteGrpIso","doc":"Build an isomorphism in the category `ProfiniteGrp` from\na `ContinuousMulEquiv` between `ProfiniteGrp`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ContinuousMulEquiv.toProfiniteGrpIso\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ContinuousMulEquiv</span>.<span class=\"name\">toProfiniteGrpIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMulEquiv\">≃ₜ*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L241-L242","name":"ProfiniteAddGrp.ofContinuousAddEquiv","line":241,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofContinuousAddEquiv","doc":"A topological additive group that has a `ContinuousAddEquiv` to a\nprofinite additive group is profinite."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofContinuousAddEquiv\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofContinuousAddEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddEquiv\">≃ₜ+</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{v}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L240-L247","name":"ProfiniteGrp.ofContinuousMulEquiv","line":240,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofContinuousMulEquiv","doc":"A topological group that has a `ContinuousMulEquiv` to a profinite group is profinite. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofContinuousMulEquiv\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofContinuousMulEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">H</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">H</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMulEquiv\">≃ₜ*</a> <span class=\"fn\">H</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{v}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L235-L235","name":"ProfiniteAddGrp.ofClosedAddSubgroup","line":235,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofClosedAddSubgroup","doc":"A closed additive subgroup of a profinite additive group is profinite."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofClosedAddSubgroup\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofClosedAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ClosedSubgroup.html#ClosedAddSubgroup\">ClosedAddSubgroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L234-L238","name":"ProfiniteGrp.ofClosedSubgroup","line":234,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofClosedSubgroup","doc":"A closed subgroup of a profinite group is profinite. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofClosedSubgroup\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofClosedSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">G</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ClosedSubgroup.html#ClosedSubgroup\">ClosedSubgroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L229-L229","name":"ProfiniteAddGrp.instHasForget₂AddGrp","line":229,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instHasForget₂AddGrp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instHasForget₂AddGrp\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">instHasForget₂AddGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#AddGrp\">AddGrp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L229-L232","name":"ProfiniteGrp.instHasForget₂Grp","line":229,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasForget₂Grp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasForget₂Grp\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instHasForget₂Grp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a> <a href=\"./Mathlib/Algebra/Category/Grp/Basic.html#Grp\">Grp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L223-L223","name":"ProfiniteAddGrp.instHasForget₂FiniteAddGrp","line":223,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instHasForget₂FiniteAddGrp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instHasForget₂FiniteAddGrp\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">instHasForget₂FiniteAddGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Algebra/Category/Grp/FiniteGrp.html#FiniteAddGrp\">FiniteAddGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L223-L227","name":"ProfiniteGrp.instHasForget₂FiniteGrp","line":223,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasForget₂FiniteGrp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instHasForget₂FiniteGrp\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instHasForget₂FiniteGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Algebra/Category/Grp/FiniteGrp.html#FiniteGrp\">FiniteGrp.{u_1}</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L215-L216","name":"ProfiniteAddGrp.ofFiniteAddGrp","line":215,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofFiniteAddGrp","doc":"A `FiniteAddGrp` when given the discrete topology can be considered as a\nprofinite additive group."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofFiniteAddGrp\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofFiniteAddGrp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/Algebra/Category/Grp/FiniteGrp.html#FiniteAddGrp\">FiniteAddGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L214-L221","name":"ProfiniteGrp.ofFiniteGrp","line":214,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofFiniteGrp","doc":"A `FiniteGrp` when given the discrete topology can be considered as a profinite group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofFiniteGrp\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofFiniteGrp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/Algebra/Category/Grp/FiniteGrp.html#FiniteGrp\">FiniteGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L205-L206","name":"ProfiniteAddGrp.pi","line":205,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.pi","doc":"The pi-type of profinite additive groups is a\nprofinite additive group."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.pi\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{max u u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L204-L212","name":"ProfiniteGrp.pi","line":204,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.pi","doc":"The pi-type of profinite groups is a profinite group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.pi\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{max u u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L199-L200","name":"ProfiniteAddGrp.ofProfinite","line":199,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofProfinite","doc":"Construct a term of `ProfiniteAddGrp` from a type endowed with the structure of a\nprofinite topological additive group."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofProfinite\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L197-L202","name":"ProfiniteGrp.ofProfinite","line":197,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofProfinite","doc":"Construct a term of `ProfiniteGrp` from a type endowed with the structure of a\nprofinite topological group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofProfinite\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L192-L192","name":"ProfiniteAddGrp.coe_comp","line":192,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.coe_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.coe_comp\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">coe_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L192-L195","name":"ProfiniteGrp.coe_comp","line":192,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.coe_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.coe_comp\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">coe_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L188-L188","name":"ProfiniteAddGrp.coe_id","line":188,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.coe_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.coe_id\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">coe_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L188-L190","name":"ProfiniteGrp.coe_id","line":188,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.coe_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.coe_id\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">coe_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L184-L184","name":"ProfiniteAddGrp.hom_neg_apply","line":184,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_neg_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_neg_apply\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">hom_neg_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L184-L186","name":"ProfiniteGrp.hom_inv_apply","line":184,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_inv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_inv_apply\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">hom_inv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L180-L180","name":"ProfiniteAddGrp.neg_hom_apply","line":180,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.neg_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.neg_hom_apply\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">neg_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L180-L182","name":"ProfiniteGrp.inv_hom_apply","line":180,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.inv_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.inv_hom_apply\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">inv_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L177-L177","name":"ProfiniteAddGrp.ofHom_apply","line":177,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_apply\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofHom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L177-L178","name":"ProfiniteGrp.ofHom_apply","line":177,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_apply\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofHom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L172-L172","name":"ProfiniteAddGrp.ofHom_comp","line":172,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_comp\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofHom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom.comp\">comp</a></span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L172-L175","name":"ProfiniteGrp.ofHom_comp","line":172,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_comp\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofHom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom.comp\">comp</a></span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">g</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L169-L169","name":"ProfiniteAddGrp.ofHom_id","line":169,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_id\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofHom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom.id\">ContinuousAddMonoidHom.id</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.of\">of</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L169-L170","name":"ProfiniteGrp.ofHom_id","line":169,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_id\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofHom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom.id\">ContinuousMonoidHom.id</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.of\">of</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L165-L165","name":"ProfiniteAddGrp.ofHom_hom","line":165,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom_hom\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofHom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L165-L167","name":"ProfiniteGrp.ofHom_hom","line":165,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom_hom\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofHom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L162-L162","name":"ProfiniteAddGrp.hom_ofHom","line":162,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_ofHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_ofHom\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">hom_ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L162-L163","name":"ProfiniteGrp.hom_ofHom","line":162,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_ofHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_ofHom\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">hom_ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\">ofHom</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L153-L153","name":"ProfiniteAddGrp.hom_ext_iff","line":153,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_ext_iff\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L153-L153","name":"ProfiniteGrp.hom_ext_iff","line":153,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_ext_iff\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">hom_ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L153-L153","name":"ProfiniteAddGrp.hom_ext","line":153,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_ext\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L153-L155","name":"ProfiniteGrp.hom_ext","line":153,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_ext\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">hom_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L148-L148","name":"ProfiniteAddGrp.comp_apply","line":148,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.comp_apply\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">C</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L148-L151","name":"ProfiniteGrp.comp_apply","line":148,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.comp_apply\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">C</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L143-L143","name":"ProfiniteAddGrp.hom_comp","line":143,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_comp\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">hom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">C</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L143-L145","name":"ProfiniteGrp.hom_comp","line":143,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_comp\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">hom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B </span><span class=\"fn\">C</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L139-L139","name":"ProfiniteAddGrp.id_apply","line":139,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.id_apply\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">id_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">A</span>)</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L139-L141","name":"ProfiniteGrp.id_apply","line":139,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.id_apply\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">id_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">A</span>)</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L135-L135","name":"ProfiniteAddGrp.hom_id","line":135,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.hom_id\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">hom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom.id\">ContinuousAddMonoidHom.id</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L135-L136","name":"ProfiniteGrp.hom_id","line":135,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.hom_id\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">hom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\">Hom.hom</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">A</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom.id\">ContinuousMonoidHom.id</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L131-L131","name":"ProfiniteAddGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite","line":131,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeFun\">CoeFun</a> (<span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>) <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L131-L133","name":"ProfiniteGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite","line":131,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">instCoeFunHomForallCarrierToTopTotallyDisconnectedSpaceToProfinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeFun\">CoeFun</a> (<span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>) <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> → <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L122-L122","name":"ProfiniteAddGrp.ofHom","line":122,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom","doc":"Typecheck a `ContinuousAddMonoidHom` as a morphism in `ProfiniteAddGrp`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.ofHom\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.of\">of</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.of\">of</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L121-L127","name":"ProfiniteGrp.ofHom","line":121,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom","doc":"Typecheck a `ContinuousMonoidHom` as a morphism in `ProfiniteGrp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.ofHom\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">ofHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.of\">of</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.of\">of</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L116-L116","name":"ProfiniteAddGrp.Hom.hom","line":116,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom","doc":"The underlying `ContinuousAddMonoidHom`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom\">Hom</a></span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L115-L119","name":"ProfiniteGrp.Hom.hom","line":115,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom","doc":"The underlying `ContinuousMonoidHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom\">Hom</a></span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L110-L110","name":"instConcreteCategoryProfiniteAddGrpContinuousAddMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite","line":110,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instConcreteCategoryProfiniteAddGrpContinuousAddMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instConcreteCategoryProfiniteAddGrpContinuousAddMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite\"><span class=\"name\">instConcreteCategoryProfiniteAddGrpContinuousAddMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> <span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>) =&gt;\n  <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L110-L113","name":"instConcreteCategoryProfiniteGrpContinuousMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite","line":110,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instConcreteCategoryProfiniteGrpContinuousMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instConcreteCategoryProfiniteGrpContinuousMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite\"><span class=\"name\">instConcreteCategoryProfiniteGrpContinuousMonoidHomCarrierToTopTotallyDisconnectedSpaceToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> <span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>) =&gt;\n  <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L104-L104","name":"instCategoryProfiniteAddGrp","line":104,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCategoryProfiniteAddGrp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCategoryProfiniteAddGrp\"><span class=\"name\">instCategoryProfiniteAddGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_1, u_1 + 1}</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L104-L108","name":"instCategoryProfiniteGrp","line":104,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCategoryProfiniteGrp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCategoryProfiniteGrp\"><span class=\"name\">instCategoryProfiniteGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_1, u_1 + 1}</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L100-L100","name":"ProfiniteGrp.Hom.hom'","line":100,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom'","doc":"The underlying `ContinuousMonoidHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom'\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom\">Hom</a></span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousMonoidHom\">→ₜ*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L96-L96","name":"ProfiniteGrp.Hom.ext_iff","line":96,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.ext_iff\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom\">Hom</a></span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom'\">hom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom'\">hom'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L96-L96","name":"ProfiniteGrp.Hom.ext","line":96,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.ext\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom\">Hom</a></span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hom'</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom'\">hom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom.hom'\">hom'</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L95-L100","name":"ProfiniteGrp.Hom","line":95,"kind":"structure","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom","doc":"The type of morphisms in `ProfiniteGrp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.Hom\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">Hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L93-L93","name":"ProfiniteAddGrp.Hom.hom'","line":93,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom'","doc":"The underlying `ContinuousAddMonoidHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom'\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom\">Hom</a></span> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Mathlib/Topology/Algebra/ContinuousMonoidHom.html#ContinuousAddMonoidHom\">→ₜ+</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L89-L89","name":"ProfiniteAddGrp.Hom.ext","line":89,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.ext\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom\">Hom</a></span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hom'</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom'\">hom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom'\">hom'</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L89-L89","name":"ProfiniteAddGrp.Hom.ext_iff","line":89,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.ext_iff\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom\">Hom</a></span> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom'\">hom'</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom.hom'\">hom'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L88-L93","name":"ProfiniteAddGrp.Hom","line":88,"kind":"structure","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom","doc":"The type of morphisms in `ProfiniteAddGrp`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.Hom\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">Hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L83-L83","name":"ProfiniteAddGrp.coe_of","line":83,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.coe_of\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.of\">of</a> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">G</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L83-L86","name":"ProfiniteGrp.coe_of","line":83,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.coe_of\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.of\">of</a> <span class=\"fn\">G</span>)</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">G</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L73-L76","name":"ProfiniteAddGrp.of","line":73,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.of","doc":"Construct a term of `ProfiniteAddGrp` from a type endowed with the structure of a\ncompact and totally disconnected topological additive group.\n(The condition of being Hausdorff can be omitted here because totally disconnected implies that {0}\nis a closed set, thus implying Hausdorff in a topological additive group.)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.of\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L69-L81","name":"ProfiniteGrp.of","line":69,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.of","doc":"Construct a term of `ProfiniteGrp` from a type endowed with the structure of a\ncompact and totally disconnected topological group.\n(The condition of being Hausdorff can be omitted here because totally disconnected implies that {1}\nis a closed set, thus implying Hausdorff in a topological group.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.of\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L62-L62","name":"instCoeSortProfiniteAddGrpType","line":62,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCoeSortProfiniteAddGrpType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCoeSortProfiniteAddGrpType\"><span class=\"name\">instCoeSortProfiniteAddGrpType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u}</a> <a href=\"./foundational_types.html\">(Type</a> u)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L62-L64","name":"instCoeSortProfiniteGrpType","line":62,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCoeSortProfiniteGrpType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#instCoeSortProfiniteGrpType\"><span class=\"name\">instCoeSortProfiniteGrpType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u}</a> <a href=\"./foundational_types.html\">(Type</a> u)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L58-L58","name":"ProfiniteAddGrp.topologicalAddGroup","line":58,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.topologicalAddGroup","doc":"The above data together form a topological additive group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.topologicalAddGroup\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">topologicalAddGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L56-L56","name":"ProfiniteAddGrp.addGroup","line":56,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.addGroup","doc":"The additive group structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.addGroup\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">addGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L54-L54","name":"ProfiniteAddGrp.toProfinite","line":54,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite","doc":"The underlying profinite topological space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.toProfinite\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">toProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L52-L52","name":"ProfiniteAddGrp.mk","line":52,"kind":"ctor","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp.mk\"><span class=\"name\">ProfiniteAddGrp</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toProfinite</span> : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">addGroup</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">toProfinite</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">topologicalAddGroup</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalAddGroup\">IsTopologicalAddGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">toProfinite</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\">ProfiniteAddGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L47-L58","name":"ProfiniteAddGrp","line":47,"kind":"structure","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp","doc":"The category of profinite additive groups. A term of this type consists of a profinite\nset with a topological additive group structure.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteAddGrp\"><span class=\"name\">ProfiniteAddGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L45-L45","name":"ProfiniteGrp.topologicalGroup","line":45,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.topologicalGroup","doc":"The above data together form a topological group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.topologicalGroup\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">topologicalGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L43-L43","name":"ProfiniteGrp.group","line":43,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.group","doc":"The group structure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.group\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">group</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\">toProfinite</a></span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L41-L41","name":"ProfiniteGrp.toProfinite","line":41,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite","doc":"The underlying profinite topological space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.toProfinite\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">toProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L39-L39","name":"ProfiniteGrp.mk","line":39,"kind":"ctor","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp.mk\"><span class=\"name\">ProfiniteGrp</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toProfinite</span> : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">group</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">toProfinite</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">topologicalGroup</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Defs.html#IsTopologicalGroup\">IsTopologicalGroup</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">toProfinite</span>.<a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.toTop\">toTop</a></span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\">ProfiniteGrp.{u_1}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.lean#L34-L45","name":"ProfiniteGrp","line":34,"kind":"structure","docLink":"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp","doc":"The category of profinite groups. A term of this type consists of a profinite\nset with a topological group structure.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Category/ProfiniteGrp/Basic.html#ProfiniteGrp\"><span class=\"name\">ProfiniteGrp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}