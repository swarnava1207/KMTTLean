{"name":"Mathlib.CategoryTheory.Limits.Shapes.Preorder.Fin","instances":[],"imports":["Init","Mathlib.CategoryTheory.Limits.Shapes.IsTerminal","Mathlib.Order.Fin.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Preorder/Fin.lean#L31-L32","name":"Fin.isTerminalLast","line":31,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/Fin.html#Fin.isTerminalLast","doc":"`Fin.last n` is a terminal object in `Fin (n + 1)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/Fin.html#Fin.isTerminalLast\"><span class=\"name\">Fin</span>.<span class=\"name\">isTerminalLast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/IsTerminal.html#CategoryTheory.Limits.IsTerminal\">CategoryTheory.Limits.IsTerminal</a> <span class=\"fn\">(<a href=\"./Init/Data/Fin/Basic.html#Fin.last\">last</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Limits/Shapes/Preorder/Fin.lean#L28-L29","name":"Fin.isInitialZero","line":28,"kind":"def","docLink":"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/Fin.html#Fin.isInitialZero","doc":"`0` is an initial object in `Fin n` when `n ≠ 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Limits/Shapes/Preorder/Fin.html#Fin.isInitialZero\"><span class=\"name\">Fin</span>.<span class=\"name\">isInitialZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/IsTerminal.html#CategoryTheory.Limits.IsInitial\">CategoryTheory.Limits.IsInitial</a> <span class=\"fn\">0</span></span></div></div>"}]}