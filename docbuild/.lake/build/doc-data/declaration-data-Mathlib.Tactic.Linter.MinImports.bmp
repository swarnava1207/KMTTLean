{"name":"Mathlib.Tactic.Linter.MinImports","instances":[{"typeNames":["Mathlib.Linter.ImportState"],"name":"Mathlib.Linter.instInhabitedImportState","className":"Inhabited"}],"imports":["Init","ImportGraph.Imports","Mathlib.Tactic.MinImports"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/MinImports.lean#L101-L165","name":"Mathlib.Linter.MinImports.minImportsLinter","line":101,"kind":"def","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.MinImports.minImportsLinter","doc":"The `minImports` linter incrementally computes the minimal imports needed for each file to build.\nWhenever it detects that a new command requires an increase in the (transitive) imports that it\ncomputed so far, it emits a warning mentioning the bigger minimal imports.\n\nUnlike the related `#min_imports` command, the linter takes into account notation and tactic\ninformation.\nIt also works incrementally, providing information that is better suited, for instance, to split\nfiles.\n\nAnother important difference is that the `minImports` *linter* starts counting imports from\nwhere the option is set to `true` *downwards*, whereas the `#min_imports` *command* looks at the\nimports needed from the command *upwards*.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.MinImports.minImportsLinter\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">MinImports</span>.<span class=\"name\">minImportsLinter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter\">Lean.Linter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/MinImports.lean#L95-L99","name":"Mathlib.Linter.MinImports.«command#import_bumps»","line":95,"kind":"def","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.MinImports.«command#import_bumps»","doc":"The `minImports` linter incrementally computes the minimal imports needed for each file to build.\nWhenever it detects that a new command requires an increase in the (transitive) imports that it\ncomputed so far, it emits a warning mentioning the bigger minimal imports.\n\nUnlike the related `#min_imports` command, the linter takes into account notation and tactic\ninformation.\nIt also works incrementally, providing information that is better suited, for instance, to split\nfiles.\n\nAnother important difference is that the `minImports` *linter* starts counting imports from\nwhere the option is set to `true` *downwards*, whereas the `#min_imports` *command* looks at the\nimports needed from the command *upwards*.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.MinImports.«command#import_bumps»\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">MinImports</span>.<span class=\"name\">«command#import_bumps»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/MinImports.lean#L87-L92","name":"Mathlib.Linter.MinImports.importsBelow","line":87,"kind":"def","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.MinImports.importsBelow","doc":"`importsBelow tc ms` takes as input a `NameMap NameSet` `tc`, representing the\n`transitiveClosure` of the imports of the current module, and a `NameSet` of module names `ms`.\nIt returns the modules that are transitively imported by `ms`, using the data in `tc`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.MinImports.importsBelow\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">MinImports</span>.<span class=\"name\">importsBelow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tc</span> : <span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lean.NameMap</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ms</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/MinImports.lean#L74-L81","name":"Mathlib.Linter.linter.minImports.increases","line":74,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.linter.minImports.increases","doc":"The `linter.minImports.increases` regulates whether the `minImports` linter reports the\nchange in number of imports, when it reports import changes.\nSetting this option to `false` helps with test stability.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.linter.minImports.increases\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">linter</span>.<span class=\"name\">minImports</span>.<span class=\"name\">increases</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/MinImports.lean#L55-L72","name":"Mathlib.Linter.linter.minImports","line":55,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.linter.minImports","doc":"The `minImports` linter incrementally computes the minimal imports needed for each file to build.\nWhenever it detects that a new command requires an increase in the (transitive) imports that it\ncomputed so far, it emits a warning mentioning the bigger minimal imports.\n\nUnlike the related `#min_imports` command, the linter takes into account notation and tactic\ninformation.\nIt also works incrementally, providing information that is better suited, for instance, to split\nfiles.\n\nAnother important difference is that the `minImports` *linter* starts counting imports from\nwhere the option is set to `true` *downwards*, whereas the `#min_imports` *command* looks at the\nimports needed from the command *upwards*.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.linter.minImports\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">linter</span>.<span class=\"name\">minImports</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/MinImports.lean#L52-L53","name":"Mathlib.Linter.«command#reset_min_imports»","line":52,"kind":"def","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.«command#reset_min_imports»","doc":"`#reset_min_imports` sets to empty the current list of cumulative imports. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.«command#reset_min_imports»\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">«command#reset_min_imports»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/MinImports.lean#L47-L50","name":"Mathlib.Linter.minImportsRef","line":47,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.minImportsRef","doc":"`minImportsRef` keeps track of cumulative imports across multiple commands, using `ImportState`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.minImportsRef\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">minImportsRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState\">ImportState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/MinImports.lean#L45-L45","name":"Mathlib.Linter.instInhabitedImportState","line":45,"kind":"instance","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.instInhabitedImportState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.instInhabitedImportState\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">instInhabitedImportState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState\">ImportState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/MinImports.lean#L44-L44","name":"Mathlib.Linter.ImportState.importSize","line":44,"kind":"def","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState.importSize","doc":"The number of transitive imports needed to build the file up to the current command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState.importSize\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">importSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState\">ImportState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/MinImports.lean#L42-L42","name":"Mathlib.Linter.ImportState.minImports","line":42,"kind":"def","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState.minImports","doc":"The minimal imports needed to build the file up to the current command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState.minImports\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">minImports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState\">ImportState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/MinImports.lean#L40-L40","name":"Mathlib.Linter.ImportState.transClosure","line":40,"kind":"def","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState.transClosure","doc":"The transitive closure of the import graph of the current file.  The value is `none` only at\ninitialization time, as the linter immediately sets it to its value for the current file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState.transClosure\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">transClosure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState\">ImportState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lean.NameMap</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/MinImports.lean#L37-L37","name":"Mathlib.Linter.ImportState.mk","line":37,"kind":"ctor","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">transClosure</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lean.NameMap</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">minImports</span> : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">importSize</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState\">ImportState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Tactic/Linter/MinImports.lean#L31-L45","name":"Mathlib.Linter.ImportState","line":31,"kind":"structure","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState","doc":"`ImportState` is the structure keeping track of the data that the `minImports` linter uses.\n* `transClosure` is the import graph of the current file.\n* `minImports` is the `NameSet` of minimal imports to build the file up to the current command.\n* `importSize` is the number of transitive imports to build the file up to the current command.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.ImportState\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">ImportState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}