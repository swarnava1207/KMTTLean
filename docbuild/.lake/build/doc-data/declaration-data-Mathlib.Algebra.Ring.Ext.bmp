{"name":"Mathlib.Algebra.Ring.Ext","instances":[],"imports":["Init","Mathlib.Algebra.Ring.Defs","Mathlib.Algebra.Group.Ext"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L438-L438","name":"CommRing.ext_iff","line":438,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#CommRing.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#CommRing.ext_iff\"><span class=\"name\">CommRing</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L438-L442","name":"CommRing.ext","line":438,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#CommRing.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#CommRing.ext\"><span class=\"name\">CommRing</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L435-L436","name":"CommRing.toRing_injective","line":435,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#CommRing.toRing_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#CommRing.toRing_injective\"><span class=\"name\">CommRing</span>.<span class=\"name\">toRing_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing.toRing\">toRing</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L423-L423","name":"CommSemiring.ext_iff","line":423,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#CommSemiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#CommSemiring.ext_iff\"><span class=\"name\">CommSemiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L423-L428","name":"CommSemiring.ext","line":423,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#CommSemiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#CommSemiring.ext\"><span class=\"name\">CommSemiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L419-L421","name":"CommSemiring.toSemiring_injective","line":419,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#CommSemiring.toSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#CommSemiring.toSemiring_injective\"><span class=\"name\">CommSemiring</span>.<span class=\"name\">toSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring.toSemiring\">toSemiring</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L405-L405","name":"NonUnitalCommRing.ext_iff","line":405,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommRing.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommRing.ext_iff\"><span class=\"name\">NonUnitalCommRing</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommRing\">NonUnitalCommRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L405-L410","name":"NonUnitalCommRing.ext","line":405,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommRing.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommRing.ext\"><span class=\"name\">NonUnitalCommRing</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommRing\">NonUnitalCommRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L401-L403","name":"NonUnitalCommRing.toNonUnitalRing_injective","line":401,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommRing.toNonUnitalRing_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommRing.toNonUnitalRing_injective\"><span class=\"name\">NonUnitalCommRing</span>.<span class=\"name\">toNonUnitalRing_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommRing.toNonUnitalRing\">toNonUnitalRing</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L389-L389","name":"NonUnitalNonAssocCommRing.ext_iff","line":389,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommRing.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommRing.ext_iff\"><span class=\"name\">NonUnitalNonAssocCommRing</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommRing\">NonUnitalNonAssocCommRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L389-L394","name":"NonUnitalNonAssocCommRing.ext","line":389,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommRing.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommRing.ext\"><span class=\"name\">NonUnitalNonAssocCommRing</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommRing\">NonUnitalNonAssocCommRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L385-L387","name":"NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing_injective","line":385,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing_injective\"><span class=\"name\">NonUnitalNonAssocCommRing</span>.<span class=\"name\">toNonUnitalNonAssocRing_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing\">toNonUnitalNonAssocRing</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L371-L371","name":"NonUnitalCommSemiring.ext_iff","line":371,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommSemiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommSemiring.ext_iff\"><span class=\"name\">NonUnitalCommSemiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommSemiring\">NonUnitalCommSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L371-L376","name":"NonUnitalCommSemiring.ext","line":371,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommSemiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommSemiring.ext\"><span class=\"name\">NonUnitalCommSemiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommSemiring\">NonUnitalCommSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L367-L369","name":"NonUnitalCommSemiring.toNonUnitalSemiring_injective","line":367,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommSemiring.toNonUnitalSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalCommSemiring.toNonUnitalSemiring_injective\"><span class=\"name\">NonUnitalCommSemiring</span>.<span class=\"name\">toNonUnitalSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalCommSemiring.toNonUnitalSemiring\">toNonUnitalSemiring</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L355-L355","name":"NonUnitalNonAssocCommSemiring.ext_iff","line":355,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommSemiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommSemiring.ext_iff\"><span class=\"name\">NonUnitalNonAssocCommSemiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommSemiring\">NonUnitalNonAssocCommSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L355-L360","name":"NonUnitalNonAssocCommSemiring.ext","line":355,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommSemiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommSemiring.ext\"><span class=\"name\">NonUnitalNonAssocCommSemiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommSemiring\">NonUnitalNonAssocCommSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L351-L353","name":"NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring_injective","line":351,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring_injective\"><span class=\"name\">NonUnitalNonAssocCommSemiring</span>.<span class=\"name\">toNonUnitalNonAssocSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring\">toNonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L339-L344","name":"Ring.toSemiring_injective","line":339,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Ring.toSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Ring.toSemiring_injective\"><span class=\"name\">Ring</span>.<span class=\"name\">toSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring.toSemiring\">toSemiring</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L334-L337","name":"Ring.toNonAssocRing_injective","line":334,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Ring.toNonAssocRing_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Ring.toNonAssocRing_injective\"><span class=\"name\">Ring</span>.<span class=\"name\">toNonAssocRing_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring.toNonAssocRing\">toNonAssocRing</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L327-L332","name":"Ring.toNonUnitalRing_injective","line":327,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Ring.toNonUnitalRing_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Ring.toNonUnitalRing_injective\"><span class=\"name\">Ring</span>.<span class=\"name\">toNonUnitalRing_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring.toNonUnitalRing\">toNonUnitalRing</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L309-L309","name":"Ring.ext_iff","line":309,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Ring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Ring.ext_iff\"><span class=\"name\">Ring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L309-L325","name":"Ring.ext","line":309,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Ring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Ring.ext\"><span class=\"name\">Ring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L297-L302","name":"Semiring.toNonAssocSemiring_injective","line":297,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Semiring.toNonAssocSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Semiring.toNonAssocSemiring_injective\"><span class=\"name\">Semiring</span>.<span class=\"name\">toNonAssocSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring.toNonAssocSemiring\">toNonAssocSemiring</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L290-L295","name":"Semiring.toNonUnitalSemiring_injective","line":290,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Semiring.toNonUnitalSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Semiring.toNonUnitalSemiring_injective\"><span class=\"name\">Semiring</span>.<span class=\"name\">toNonUnitalSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring.toNonUnitalSemiring\">toNonUnitalSemiring</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L275-L275","name":"Semiring.ext_iff","line":275,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Semiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Semiring.ext_iff\"><span class=\"name\">Semiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L275-L288","name":"Semiring.ext","line":275,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Semiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Semiring.ext\"><span class=\"name\">Semiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L265-L268","name":"NonAssocRing.toNonUnitalNonAssocring_injective","line":265,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.toNonUnitalNonAssocring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.toNonUnitalNonAssocring_injective\"><span class=\"name\">NonAssocRing</span>.<span class=\"name\">toNonUnitalNonAssocring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocRing.toNonUnitalNonAssocRing\">toNonUnitalNonAssocRing</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L258-L263","name":"NonAssocRing.toNonAssocSemiring_injective","line":258,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.toNonAssocSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.toNonAssocSemiring_injective\"><span class=\"name\">NonAssocRing</span>.<span class=\"name\">toNonAssocSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocRing.toNonAssocSemiring\">toNonAssocSemiring</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L244-L244","name":"NonAssocRing.ext_iff","line":244,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.ext_iff\"><span class=\"name\">NonAssocRing</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocRing\">NonAssocRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L244-L256","name":"NonAssocRing.ext","line":244,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocRing.ext\"><span class=\"name\">NonAssocRing</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocRing\">NonAssocRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L230-L230","name":"AddCommGroupWithOne.ext_iff","line":230,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddCommGroupWithOne.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddCommGroupWithOne.ext_iff\"><span class=\"name\">AddCommGroupWithOne</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddCommGroupWithOne\">AddCommGroupWithOne</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L230-L240","name":"AddCommGroupWithOne.ext","line":230,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddCommGroupWithOne.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddCommGroupWithOne.ext\"><span class=\"name\">AddCommGroupWithOne</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddCommGroupWithOne\">AddCommGroupWithOne</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_one</span> : <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L213-L213","name":"AddGroupWithOne.ext_iff","line":213,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddGroupWithOne.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddGroupWithOne.ext_iff\"><span class=\"name\">AddGroupWithOne</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L213-L228","name":"AddGroupWithOne.ext","line":213,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddGroupWithOne.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddGroupWithOne.ext\"><span class=\"name\">AddGroupWithOne</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_one</span> : <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L201-L204","name":"NonUnitalRing.toNonUnitalNonAssocring_injective","line":201,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.toNonUnitalNonAssocring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.toNonUnitalNonAssocring_injective\"><span class=\"name\">NonUnitalRing</span>.<span class=\"name\">toNonUnitalNonAssocring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalRing.toNonUnitalNonAssocRing\">toNonUnitalNonAssocRing</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L194-L199","name":"NonUnitalRing.toNonUnitalSemiring_injective","line":194,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.toNonUnitalSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.toNonUnitalSemiring_injective\"><span class=\"name\">NonUnitalRing</span>.<span class=\"name\">toNonUnitalSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalRing.toNonUnitalSemiring\">toNonUnitalSemiring</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L184-L184","name":"NonUnitalRing.ext_iff","line":184,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.ext_iff\"><span class=\"name\">NonUnitalRing</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalRing\">NonUnitalRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L184-L192","name":"NonUnitalRing.ext","line":184,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalRing.ext\"><span class=\"name\">NonUnitalRing</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalRing\">NonUnitalRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L171-L177","name":"NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring_injective","line":171,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring_injective\"><span class=\"name\">NonUnitalNonAssocRing</span>.<span class=\"name\">toNonUnitalNonAssocSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring\">toNonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L163-L163","name":"NonUnitalNonAssocRing.ext_iff","line":163,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocRing.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocRing.ext_iff\"><span class=\"name\">NonUnitalNonAssocRing</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocRing\">NonUnitalNonAssocRing</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L163-L169","name":"NonUnitalNonAssocRing.ext","line":163,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocRing.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocRing.ext\"><span class=\"name\">NonUnitalNonAssocRing</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocRing\">NonUnitalNonAssocRing</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L153-L156","name":"NonAssocSemiring.toNonUnitalNonAssocSemiring_injective","line":153,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocSemiring.toNonUnitalNonAssocSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocSemiring.toNonUnitalNonAssocSemiring_injective\"><span class=\"name\">NonAssocSemiring</span>.<span class=\"name\">toNonUnitalNonAssocSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocSemiring.toNonUnitalNonAssocSemiring\">toNonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L131-L131","name":"NonAssocSemiring.ext_iff","line":131,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocSemiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocSemiring.ext_iff\"><span class=\"name\">NonAssocSemiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocSemiring\">NonAssocSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L131-L151","name":"NonAssocSemiring.ext","line":131,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonAssocSemiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonAssocSemiring.ext\"><span class=\"name\">NonAssocSemiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonAssocSemiring\">NonAssocSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L119-L119","name":"AddCommMonoidWithOne.ext_iff","line":119,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddCommMonoidWithOne.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddCommMonoidWithOne.ext_iff\"><span class=\"name\">AddCommMonoidWithOne</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddCommMonoidWithOne\">AddCommMonoidWithOne</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L119-L124","name":"AddCommMonoidWithOne.ext","line":119,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddCommMonoidWithOne.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddCommMonoidWithOne.ext\"><span class=\"name\">AddCommMonoidWithOne</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddCommMonoidWithOne\">AddCommMonoidWithOne</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_one</span> : <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L115-L117","name":"AddCommMonoidWithOne.toAddMonoidWithOne_injective","line":115,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddCommMonoidWithOne.toAddMonoidWithOne_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddCommMonoidWithOne.toAddMonoidWithOne_injective\"><span class=\"name\">AddCommMonoidWithOne</span>.<span class=\"name\">toAddMonoidWithOne_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddCommMonoidWithOne.toAddMonoidWithOne\">toAddMonoidWithOne</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L98-L98","name":"AddMonoidWithOne.ext_iff","line":98,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddMonoidWithOne.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddMonoidWithOne.ext_iff\"><span class=\"name\">AddMonoidWithOne</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L98-L113","name":"AddMonoidWithOne.ext","line":98,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#AddMonoidWithOne.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#AddMonoidWithOne.ext\"><span class=\"name\">AddMonoidWithOne</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_one</span> : <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#One.one\">One.one</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L82-L82","name":"NonUnitalSemiring.ext_iff","line":82,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalSemiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalSemiring.ext_iff\"><span class=\"name\">NonUnitalSemiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalSemiring\">NonUnitalSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L82-L87","name":"NonUnitalSemiring.ext","line":82,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalSemiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalSemiring.ext\"><span class=\"name\">NonUnitalSemiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalSemiring\">NonUnitalSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L78-L80","name":"NonUnitalSemiring.toNonUnitalNonAssocSemiring_injective","line":78,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalSemiring.toNonUnitalNonAssocSemiring_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalSemiring.toNonUnitalNonAssocSemiring_injective\"><span class=\"name\">NonUnitalSemiring</span>.<span class=\"name\">toNonUnitalNonAssocSemiring_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalSemiring.toNonUnitalNonAssocSemiring\">toNonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L67-L71","name":"NonUnitalNonAssocSemiring.toDistrib_injective","line":67,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocSemiring.toDistrib_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocSemiring.toDistrib_injective\"><span class=\"name\">NonUnitalNonAssocSemiring</span>.<span class=\"name\">toDistrib_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(@<a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocSemiring.toDistrib\">toDistrib</a> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L57-L57","name":"NonUnitalNonAssocSemiring.ext_iff","line":57,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocSemiring.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocSemiring.ext_iff\"><span class=\"name\">NonUnitalNonAssocSemiring</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocSemiring\">NonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L57-L65","name":"NonUnitalNonAssocSemiring.ext","line":57,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocSemiring.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#NonUnitalNonAssocSemiring.ext\"><span class=\"name\">NonUnitalNonAssocSemiring</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#NonUnitalNonAssocSemiring\">NonUnitalNonAssocSemiring</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L42-L42","name":"Distrib.ext_iff","line":42,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Distrib.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Distrib.ext_iff\"><span class=\"name\">Distrib</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Distrib\">Distrib</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#And\">∧</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Algebra/Ring/Ext.lean#L42-L50","name":"Distrib.ext","line":42,"kind":"theorem","docLink":"./Mathlib/Algebra/Ring/Ext.html#Distrib.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Ring/Ext.html#Distrib.ext\"><span class=\"name\">Distrib</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃<span class=\"fn\">inst₁ </span><span class=\"fn\">inst₂</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Distrib\">Distrib</a> <span class=\"fn\">R</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_add</span> : <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">HAdd.hAdd</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_mul</span> : <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#HMul.hMul\">HMul.hMul</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">inst₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">inst₂</span></div></div>"}]}