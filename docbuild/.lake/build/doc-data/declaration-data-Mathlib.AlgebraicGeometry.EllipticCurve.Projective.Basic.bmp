{"name":"Mathlib.AlgebraicGeometry.EllipticCurve.Projective.Basic","instances":[],"imports":["Init","Mathlib.Algebra.MvPolynomial.PDeriv","Mathlib.AlgebraicGeometry.EllipticCurve.Affine","Mathlib.Data.Fin.Tuple.Reflection"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L545-L548","name":"WeierstrassCurve.Projective.baseChange_nonsingular","line":545,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.baseChange_nonsingular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.baseChange_nonsingular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">baseChange_nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> (<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">P</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L540-L542","name":"WeierstrassCurve.Projective.baseChange_polynomialZ","line":540,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.baseChange_polynomialZ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.baseChange_polynomialZ\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">baseChange_polynomialZ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialZ\">polynomialZ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialZ\">polynomialZ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L536-L538","name":"WeierstrassCurve.Projective.baseChange_polynomialY","line":536,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.baseChange_polynomialY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.baseChange_polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">baseChange_polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialY\">polynomialY</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialY\">polynomialY</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L532-L534","name":"WeierstrassCurve.Projective.baseChange_polynomialX","line":532,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.baseChange_polynomialX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.baseChange_polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">baseChange_polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialX\">polynomialX</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialX\">polynomialX</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L527-L530","name":"WeierstrassCurve.Projective.baseChange_equation","line":527,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.baseChange_equation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.baseChange_equation\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">baseChange_equation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> (<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">P</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L521-L524","name":"WeierstrassCurve.Projective.Equation.baseChange","line":521,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation.baseChange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation.baseChange\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Equation</span>.<span class=\"name\">baseChange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">A</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">WeierstrassCurve.baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> (<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">P</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L516-L518","name":"WeierstrassCurve.Projective.baseChange_polynomial","line":516,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.baseChange_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.baseChange_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">baseChange_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">→ₐ[</a><span class=\"fn\">S</span><a href=\"./Mathlib/Algebra/Algebra/Hom.html#AlgHom\">]</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomial\">polynomial</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.baseChange\">baseChange</a> <span class=\"fn\">W'</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomial\">polynomial</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L507-L511","name":"WeierstrassCurve.Projective.map_nonsingular","line":507,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.map_nonsingular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.map_nonsingular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">map_nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> (<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">P</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L501-L504","name":"WeierstrassCurve.Projective.map_polynomialZ","line":501,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.map_polynomialZ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.map_polynomialZ\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">map_polynomialZ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialZ\">polynomialZ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialZ\">polynomialZ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L496-L499","name":"WeierstrassCurve.Projective.map_polynomialY","line":496,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.map_polynomialY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.map_polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">map_polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialY\">polynomialY</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialY\">polynomialY</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L491-L494","name":"WeierstrassCurve.Projective.map_polynomialX","line":491,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.map_polynomialX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.map_polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">map_polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialX\">polynomialX</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialX\">polynomialX</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L486-L489","name":"WeierstrassCurve.Projective.map_equation","line":486,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.map_equation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.map_equation\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">map_equation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> (<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">P</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L482-L483","name":"WeierstrassCurve.Projective.Equation.map","line":482,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation.map\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Equation</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">WeierstrassCurve.map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> (<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">P</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L476-L479","name":"WeierstrassCurve.Projective.map_polynomial","line":476,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.map_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.map_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">map_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.map\">map</a> <span class=\"fn\">W'</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\">toProjective</a></span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomial\">polynomial</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.map\">MvPolynomial.map</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomial\">polynomial</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L468-L470","name":"WeierstrassCurve.Projective.nonsingularLift_some","line":468,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingularLift_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingularLift_some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingularLift_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W'</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L465-L466","name":"WeierstrassCurve.Projective.nonsingularLift_zero","line":465,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingularLift_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingularLift_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingularLift_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L462-L463","name":"WeierstrassCurve.Projective.nonsingularLift_iff","line":462,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingularLift_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingularLift_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingularLift_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\">NonsingularLift</a></span> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L453-L460","name":"WeierstrassCurve.Projective.NonsingularLift","line":453,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift","doc":"The proposition that a projective point class on a Weierstrass curve `W` is nonsingular.\n\nIf `P` is a projective point representative on `W`, then `W.NonsingularLift ⟦P⟧` is definitionally\nequivalent to `W.Nonsingular P`.\n\nNote that this definition is only mathematically accurate for fields. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.NonsingularLift\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">NonsingularLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass\">PointClass</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L439-L450","name":"WeierstrassCurve.Projective.comp_equiv_comp","line":439,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.comp_equiv_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.comp_equiv_comp\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">comp_equiv_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">K</span> : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">Q</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L435-L437","name":"WeierstrassCurve.Projective.equiv_zero_of_Z_eq_zero","line":435,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equiv_zero_of_Z_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equiv_zero_of_Z_eq_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">equiv_zero_of_Z_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L428-L433","name":"WeierstrassCurve.Projective.equiv_of_Z_eq_zero","line":428,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equiv_of_Z_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equiv_of_Z_eq_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">equiv_of_Z_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQ</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">Q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L425-L426","name":"WeierstrassCurve.Projective.isUnit_Y_of_Z_eq_zero","line":425,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.isUnit_Y_of_Z_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.isUnit_Y_of_Z_eq_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">isUnit_Y_of_Z_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">(<span class=\"fn\">P</span> <span class=\"fn\">1</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L419-L423","name":"WeierstrassCurve.Projective.Y_ne_zero_of_Z_eq_zero","line":419,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Y_ne_zero_of_Z_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Y_ne_zero_of_Z_eq_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Y_ne_zero_of_Z_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#NoZeroDivisors\">NoZeroDivisors</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L413-L417","name":"WeierstrassCurve.Projective.nonsingular_iff_of_Z_ne_zero","line":413,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_iff_of_Z_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_iff_of_Z_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingular_iff_of_Z_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> (<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.eval\">MvPolynomial.eval</a> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialX\">polynomialX</a></span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.eval\">MvPolynomial.eval</a> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialY\">polynomialY</a></span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L409-L411","name":"WeierstrassCurve.Projective.nonsingular_of_Z_ne_zero","line":409,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_of_Z_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_of_Z_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingular_of_Z_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L402-L407","name":"WeierstrassCurve.Projective.nonsingular_some","line":402,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingular_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W'</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L398-L400","name":"WeierstrassCurve.Projective.nonsingular_zero","line":398,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingular_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L392-L396","name":"WeierstrassCurve.Projective.nonsingular_of_Z_eq_zero","line":392,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_of_Z_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_of_Z_eq_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingular_of_Z_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> (<span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L388-L390","name":"WeierstrassCurve.Projective.nonsingular_of_equiv","line":388,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_of_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_of_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingular_of_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L375-L386","name":"WeierstrassCurve.Projective.nonsingular_smul","line":375,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_smul\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingular_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> (<span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L368-L373","name":"WeierstrassCurve.Projective.nonsingular_iff","line":368,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.nonsingular_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">nonsingular_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\">Nonsingular</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     (<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>) <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a>       <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a>         <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>             (<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₆\">a₆</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>) <a href=\"./Init/Core.html#Ne\">≠</a>           <span class=\"fn\">0</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L357-L366","name":"WeierstrassCurve.Projective.Nonsingular","line":357,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular","doc":"The proposition that a projective point representative `(x, y, z)` on a Weierstrass curve `W` is\nnonsingular.\n\nIn other words, either `W_X(x, y, z) ≠ 0`, `W_Y(x, y, z) ≠ 0`, or `W_Z(x, y, z) ≠ 0`.\n\nNote that this definition is only mathematically accurate for fields. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Nonsingular\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Nonsingular</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L350-L354","name":"WeierstrassCurve.Projective.polynomial_relation","line":350,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomial_relation","doc":"Euler's homogeneous function theorem in projective coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomial_relation\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">polynomial_relation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.eval\">MvPolynomial.eval</a> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomial\">polynomial</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.eval\">MvPolynomial.eval</a> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialX\">polynomialX</a></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.eval\">MvPolynomial.eval</a> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialY\">polynomialY</a></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.eval\">MvPolynomial.eval</a> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialZ\">polynomialZ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L344-L348","name":"WeierstrassCurve.Projective.eval_polynomialZ","line":344,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomialZ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomialZ\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">eval_polynomialZ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.eval\">MvPolynomial.eval</a> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialZ\">polynomialZ</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₆\">a₆</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L337-L342","name":"WeierstrassCurve.Projective.polynomialZ_eq","line":337,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialZ_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialZ_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">polynomialZ_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialZ\">polynomialZ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.C\">MvPolynomial.C</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>       <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.C\">MvPolynomial.C</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>     (<span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.C\">MvPolynomial.C</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.C\">MvPolynomial.C</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>       <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.C\">MvPolynomial.C</a> (<span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₆\">a₆</a></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L332-L335","name":"WeierstrassCurve.Projective.polynomialZ","line":332,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialZ","doc":"The partial derivative `W_Z(X, Y, Z)` with respect to `Z` of the polynomial `W(X, Y, Z)`\nassociated to a Weierstrass curve `W` in projective coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialZ\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">polynomialZ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span>)</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L325-L329","name":"WeierstrassCurve.Projective.eval_polynomialY_of_Z_ne_zero","line":325,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomialY_of_Z_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomialY_of_Z_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">eval_polynomialY_of_Z_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.eval\">MvPolynomial.eval</a> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialY\">polynomialY</a></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialY\">polynomialY</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L320-L323","name":"WeierstrassCurve.Projective.eval_polynomialY","line":320,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomialY","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">eval_polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.eval\">MvPolynomial.eval</a> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialY\">polynomialY</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L314-L318","name":"WeierstrassCurve.Projective.polynomialY_eq","line":314,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialY_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialY_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">polynomialY_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialY\">polynomialY</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.C\">MvPolynomial.C</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.C\">MvPolynomial.C</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.C\">MvPolynomial.C</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L309-L312","name":"WeierstrassCurve.Projective.polynomialY","line":309,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialY","doc":"The partial derivative `W_Y(X, Y, Z)` with respect to `Y` of the polynomial `W(X, Y, Z)`\nassociated to a Weierstrass curve `W` in projective coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialY\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">polynomialY</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span>)</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L302-L306","name":"WeierstrassCurve.Projective.eval_polynomialX_of_Z_ne_zero","line":302,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomialX_of_Z_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomialX_of_Z_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">eval_polynomialX_of_Z_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.eval\">MvPolynomial.eval</a> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialX\">polynomialX</a></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomialX\">polynomialX</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L297-L300","name":"WeierstrassCurve.Projective.eval_polynomialX","line":297,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomialX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">eval_polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.eval\">MvPolynomial.eval</a> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialX\">polynomialX</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L291-L295","name":"WeierstrassCurve.Projective.polynomialX_eq","line":291,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialX_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialX_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">polynomialX_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialX\">polynomialX</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.C\">MvPolynomial.C</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>     (<span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.C\">MvPolynomial.C</a> <span class=\"fn\">3</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.C\">MvPolynomial.C</a> (<span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span>)</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>       <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.C\">MvPolynomial.C</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial.X\">MvPolynomial.X</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L286-L289","name":"WeierstrassCurve.Projective.polynomialX","line":286,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialX","doc":"The partial derivative `W_X(X, Y, Z)` with respect to `X` of the polynomial `W(X, Y, Z)`\nassociated to a Weierstrass curve `W` in projective coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomialX\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">polynomialX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span>)</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L279-L281","name":"WeierstrassCurve.Projective.X_eq_zero_of_Z_eq_zero","line":279,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.X_eq_zero_of_Z_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.X_eq_zero_of_Z_eq_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">X_eq_zero_of_Z_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#NoZeroDivisors\">NoZeroDivisors</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hP</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L275-L277","name":"WeierstrassCurve.Projective.equation_of_Z_ne_zero","line":275,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_of_Z_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_of_Z_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">equation_of_Z_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L272-L273","name":"WeierstrassCurve.Projective.equation_some","line":272,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_some\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">equation_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W'</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.Equation\">Equation</a></span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L269-L270","name":"WeierstrassCurve.Projective.equation_zero","line":269,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">equation_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">0</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L265-L267","name":"WeierstrassCurve.Projective.equation_of_Z_eq_zero","line":265,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_of_Z_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_of_Z_eq_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">equation_of_Z_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L261-L263","name":"WeierstrassCurve.Projective.equation_of_equiv","line":261,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_of_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_of_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">equation_of_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">Q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L255-L259","name":"WeierstrassCurve.Projective.equation_smul","line":255,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_smul\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">equation_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> (<span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L250-L253","name":"WeierstrassCurve.Projective.equation_iff","line":250,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equation_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">equation_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\">Equation</a></span> <span class=\"fn\">P</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>       (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₆\">a₆</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span>) <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L243-L248","name":"WeierstrassCurve.Projective.Equation","line":243,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation","doc":"The proposition that a projective point representative `(x, y, z)` lies in a Weierstrass curve\n`W`.\n\nIn other words, it satisfies the homogeneous Weierstrass equation `W(X, Y, Z) = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Equation\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Equation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L235-L240","name":"WeierstrassCurve.Projective.eval_polynomial_of_Z_ne_zero","line":235,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomial_of_Z_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomial_of_Z_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">eval_polynomial_of_Z_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.eval\">MvPolynomial.eval</a> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">W</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomial\">polynomial</a></span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Bivariate.html#Polynomial.evalEval\">Polynomial.evalEval</a> (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>) <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\">toAffine</a> <span class=\"fn\">W</span>)</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine.polynomial\">polynomial</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L229-L233","name":"WeierstrassCurve.Projective.eval_polynomial","line":229,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.eval_polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">eval_polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/MvPolynomial/Eval.html#MvPolynomial.eval\">MvPolynomial.eval</a> <span class=\"fn\">P</span>)</span> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomial\">polynomial</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₁\">a₁</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₃\">a₃</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>     (<span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₂\">a₂</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₄\">a₄</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">W'</span>.<a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve.a₆\">a₆</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">3</span>)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L220-L227","name":"WeierstrassCurve.Projective.polynomial","line":220,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomial","doc":"The polynomial `W(X, Y, Z) := Y²Z + a₁XYZ + a₃YZ² - (X³ + a₂X²Z + a₄XZ² + a₆Z³)` associated to a\nWeierstrass curve `W` over a ring `R` in projective coordinates.\n\nThis is represented as a term of type `MvPolynomial (Fin 3) R`, where `X 0`, `X 1`, and `X 2`\nrepresent `X`, `Y`, and `Z` respectively. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.polynomial\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">polynomial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/MvPolynomial/Basic.html#MvPolynomial\">MvPolynomial</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span>)</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L213-L215","name":"WeierstrassCurve.Projective.Y_eq_iff","line":213,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Y_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Y_eq_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Y_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L209-L211","name":"WeierstrassCurve.Projective.X_eq_iff","line":209,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.X_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.X_eq_iff\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">X_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L204-L207","name":"WeierstrassCurve.Projective.equiv_some_of_Z_ne_zero","line":204,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equiv_some_of_Z_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equiv_some_of_Z_ne_zero\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">equiv_some_of_Z_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L198-L202","name":"WeierstrassCurve.Projective.equiv_of_X_eq_of_Y_eq","line":198,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equiv_of_X_eq_of_Y_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equiv_of_X_eq_of_Y_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">equiv_of_X_eq_of_Y_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L195-L196","name":"WeierstrassCurve.Projective.not_equiv_of_Y_ne","line":195,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.not_equiv_of_Y_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.not_equiv_of_Y_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">not_equiv_of_Y_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L192-L193","name":"WeierstrassCurve.Projective.not_equiv_of_X_ne","line":192,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.not_equiv_of_X_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.not_equiv_of_X_ne\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">not_equiv_of_X_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L189-L190","name":"WeierstrassCurve.Projective.not_equiv_of_Z_eq_zero_right","line":189,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.not_equiv_of_Z_eq_zero_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.not_equiv_of_Z_eq_zero_right\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">not_equiv_of_Z_eq_zero_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L186-L187","name":"WeierstrassCurve.Projective.not_equiv_of_Z_eq_zero_left","line":186,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.not_equiv_of_Z_eq_zero_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.not_equiv_of_Z_eq_zero_left\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">not_equiv_of_Z_eq_zero_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hPz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L181-L184","name":"WeierstrassCurve.Projective.Y_eq_of_equiv","line":181,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Y_eq_of_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Y_eq_of_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Y_eq_of_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L176-L179","name":"WeierstrassCurve.Projective.X_eq_of_equiv","line":176,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.X_eq_of_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.X_eq_of_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">X_eq_of_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L172-L174","name":"WeierstrassCurve.Projective.Z_eq_zero_of_equiv","line":172,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Z_eq_zero_of_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.Z_eq_zero_of_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">Z_eq_zero_of_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L168-L170","name":"WeierstrassCurve.Projective.equiv_iff_eq_of_Z_eq","line":168,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equiv_iff_eq_of_Z_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equiv_iff_eq_of_Z_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">equiv_iff_eq_of_Z_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#NoZeroDivisors\">NoZeroDivisors</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L161-L166","name":"WeierstrassCurve.Projective.equiv_iff_eq_of_Z_eq'","line":161,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equiv_iff_eq_of_Z_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.equiv_iff_eq_of_Z_eq'\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">equiv_iff_eq_of_Z_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hz</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hQz</span> : <span class=\"fn\"><span class=\"fn\">Q</span> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/NonZeroDivisors.html#nonZeroDivisors\">nonZeroDivisors</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L157-L159","name":"WeierstrassCurve.Projective.smul_equiv_smul","line":157,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.smul_equiv_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.smul_equiv_smul\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">smul_equiv_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P </span><span class=\"fn\">Q</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hv</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">v</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">Q</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">Q</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L153-L155","name":"WeierstrassCurve.Projective.smul_eq","line":153,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.smul_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.smul_eq\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">smul_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Quotient.mk\">⟦</a><span class=\"fn\">P</span><a href=\"./Init/Core.html#Quotient.mk\">⟧</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L150-L151","name":"WeierstrassCurve.Projective.smul_equiv","line":150,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.smul_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.smul_equiv\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">smul_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hu</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L146-L148","name":"WeierstrassCurve.Projective.PointClass","line":146,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass","doc":"The equivalence class of a projective point representative on a Weierstrass curve. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.PointClass\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">PointClass</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> r</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L140-L143","name":"WeierstrassCurve.Projective.instSetoidForallFinOfNatNat","line":140,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.instSetoidForallFinOfNatNat","doc":"The equivalence setoid for a projective point representative on a Weierstrass curve. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.instSetoidForallFinOfNatNat\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">instSetoidForallFinOfNatNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid\">Setoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L137-L138","name":"WeierstrassCurve.Projective.comp_smul","line":137,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.comp_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.comp_smul\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">comp_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> (<span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">u</span></span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L133-L135","name":"WeierstrassCurve.Projective.smul_fin3_ext","line":133,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.smul_fin3_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.smul_fin3_ext\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">smul_fin3_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span>) <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span>) <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">(<span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span>) <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L130-L131","name":"WeierstrassCurve.Projective.smul_fin3","line":130,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.smul_fin3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.smul_fin3\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">smul_fin3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">u</span> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">P</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L124-L125","name":"WeierstrassCurve.Projective.comp_fin3","line":124,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.comp_fin3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.comp_fin3\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">comp_fin3</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">R</span> → <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">X</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">Y</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">Z</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L121-L122","name":"WeierstrassCurve.Projective.fin3_def_ext","line":121,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.fin3_def_ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.fin3_def_ext\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">fin3_def_ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\">X</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Z</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L118-L119","name":"WeierstrassCurve.Projective.fin3_def","line":118,"kind":"theorem","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.fin3_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.fin3_def\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">fin3_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">3</span></span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">![</a><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">1</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">,</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">2</span></span><a href=\"./Mathlib/Data/Fin/VecNotation.html#Matrix.vecCons\">]</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">P</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L114-L116","name":"WeierstrassCurve.Projective.toAffine","line":114,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine","doc":"The conversion from a Weierstrass curve in projective coordinates to affine coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective.toAffine\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span>.<span class=\"name\">toAffine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W'</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Affine.html#WeierstrassCurve.Affine\">Affine</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L107-L109","name":"WeierstrassCurve.toProjective","line":107,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective","doc":"The conversion from a Weierstrass curve to projective coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.toProjective\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">toProjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Weierstrass.html#WeierstrassCurve\">WeierstrassCurve</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\">Projective</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.lean#L103-L105","name":"WeierstrassCurve.Projective","line":103,"kind":"def","docLink":"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective","doc":"An abbreviation for a Weierstrass curve in projective coordinates. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicGeometry/EllipticCurve/Projective/Basic.html#WeierstrassCurve.Projective\"><span class=\"name\">WeierstrassCurve</span>.<span class=\"name\">Projective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a> r)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> r</div></div>"}]}