{"name":"Mathlib.Order.Category.CompleteLat","instances":[{"typeNames":["CompleteLat","_builtin_typeu"],"name":"CompleteLat.instCoeSortType","className":"CoeSort"},{"typeNames":["CompleteLat"],"name":"CompleteLat.instInhabited","className":"Inhabited"},{"typeNames":["CompleteLat"],"name":"CompleteLat.instLargeCategory","className":"CategoryTheory.Category"},{"typeNames":["CompleteLat"],"name":"CompleteLat.instConcreteCategoryCompleteLatticeHomCarrier","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["CompleteLat","BddLat"],"name":"CompleteLat.hasForgetToBddLat","className":"CategoryTheory.HasForget₂"}],"imports":["Init","Mathlib.Order.Category.BddLat","Mathlib.Order.Hom.CompleteLattice"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L83-L86","name":"completeLat_dual_comp_forget_to_bddLat","line":83,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#completeLat_dual_comp_forget_to_bddLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#completeLat_dual_comp_forget_to_bddLat\"><span class=\"name\">completeLat_dual_comp_forget_to_bddLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual\">CompleteLat.dual</a>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget₂\">CategoryTheory.forget₂</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat.dual\">BddLat.dual</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L74-L74","name":"CompleteLat.dualEquiv_functor","line":74,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv_functor\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">dualEquiv_functor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv\">dualEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual\">dual</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L74-L74","name":"CompleteLat.dualEquiv_inverse","line":74,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv_inverse\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">dualEquiv_inverse</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv\">dualEquiv</a>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual\">dual</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L73-L79","name":"CompleteLat.dualEquiv","line":73,"kind":"def","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv","doc":"The equivalence between `CompleteLat` and itself induced by `OrderDual` both ways. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dualEquiv\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">dualEquiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L68-L68","name":"CompleteLat.dual_map","line":68,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual_map\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">dual_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom\">CompleteLatticeHom</a> <span class=\"fn\">↑<span class=\"fn\">x✝</span></span> <span class=\"fn\">↑<span class=\"fn\">x✝¹</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual\">dual</a>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom.dual\">CompleteLatticeHom.dual</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L67-L71","name":"CompleteLat.dual","line":67,"kind":"def","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual","doc":"`OrderDual` as a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.dual\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">dual</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L60-L60","name":"CompleteLat.Iso.mk_hom","line":60,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk_hom\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk\">mk</a> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.ofHom\">CategoryTheory.ConcreteCategory.ofHom</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">e</span></span>, <span class=\"fn\">map_sInf'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_sSup'</span> := <span class=\"fn\">⋯</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L60-L60","name":"CompleteLat.Iso.mk_inv","line":60,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk_inv\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk\">mk</a> <span class=\"fn\">e</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory.ofHom\">CategoryTheory.ConcreteCategory.ofHom</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">symm</a></span></span>, <span class=\"fn\">map_sInf'</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map_sSup'</span> := <span class=\"fn\">⋯</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L59-L65","name":"CompleteLat.Iso.mk","line":59,"kind":"def","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk","doc":"Constructs an isomorphism of complete lattices from an order isomorphism between them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.Iso.mk\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">Iso</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α </span><span class=\"fn\">β</span> : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">↑<span class=\"fn\">α</span></span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <span class=\"fn\">↑<span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L55-L57","name":"CompleteLat.hasForgetToBddLat","line":55,"kind":"instance","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.hasForgetToBddLat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.hasForgetToBddLat\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">hasForgetToBddLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a> <a href=\"./Mathlib/Order/Category/BddLat.html#BddLat\">BddLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L51-L53","name":"CompleteLat.instConcreteCategoryCompleteLatticeHomCarrier","line":51,"kind":"instance","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instConcreteCategoryCompleteLatticeHomCarrier","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instConcreteCategoryCompleteLatticeHomCarrier\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">instConcreteCategoryCompleteLatticeHomCarrier</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Order/Hom/CompleteLattice.html#CompleteLatticeHom\">CompleteLatticeHom</a> <span class=\"fn\">↑<span class=\"fn\">x1</span></span> <span class=\"fn\">↑<span class=\"fn\">x2</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L46-L49","name":"CompleteLat.instLargeCategory","line":46,"kind":"instance","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instLargeCategory\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">instLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L43-L44","name":"CompleteLat.instInhabited","line":43,"kind":"instance","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instInhabited\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L40-L41","name":"CompleteLat.coe_of","line":40,"kind":"theorem","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.coe_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.coe_of\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">coe_of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.of\">of</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L37-L38","name":"CompleteLat.of","line":37,"kind":"def","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.of","doc":"Construct a bundled `CompleteLat` from the underlying type and typeclass. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.of\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L32-L33","name":"CompleteLat.instCoeSortType","line":32,"kind":"instance","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.instCoeSortType\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a> <a href=\"./foundational_types.html\">(Type</a> u_1)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L24-L24","name":"CompleteLat.str","line":24,"kind":"def","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.str","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.str\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">↑<span class=\"fn\">self</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L23-L23","name":"CompleteLat.carrier","line":23,"kind":"def","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.carrier","doc":"The underlying lattice. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.carrier\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">carrier</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L21-L21","name":"CompleteLat.mk","line":21,"kind":"ctor","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat.mk\"><span class=\"name\">CompleteLat</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">carrier</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">str</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice/Defs.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">carrier</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\">CompleteLat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Order/Category/CompleteLat.lean#L20-L24","name":"CompleteLat","line":20,"kind":"structure","docLink":"./Mathlib/Order/Category/CompleteLat.html#CompleteLat","doc":"The category of complete lattices. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/Category/CompleteLat.html#CompleteLat\"><span class=\"name\">CompleteLat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}