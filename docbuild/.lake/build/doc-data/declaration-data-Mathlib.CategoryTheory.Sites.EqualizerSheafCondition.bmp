{"name":"Mathlib.CategoryTheory.Sites.EqualizerSheafCondition","instances":[{"typeNames":["CategoryTheory.Equalizer.FirstObj"],"name":"CategoryTheory.Equalizer.instInhabitedFirstObjBotPresieve","className":"Inhabited"},{"typeNames":["CategoryTheory.Equalizer.FirstObj"],"name":"CategoryTheory.Equalizer.instInhabitedFirstObjArrowsBotSieve","className":"Inhabited"},{"typeNames":["CategoryTheory.Equalizer.Sieve.SecondObj"],"name":"CategoryTheory.Equalizer.Sieve.instInhabitedSecondObjBotSieve","className":"Inhabited"},{"typeNames":["CategoryTheory.Equalizer.Presieve.SecondObj"],"name":"CategoryTheory.Equalizer.Presieve.instInhabitedSecondObjBotPresieve","className":"Inhabited"}],"imports":["Init","Mathlib.CategoryTheory.Sites.IsSheafFor","Mathlib.CategoryTheory.Limits.Types.Shapes","Mathlib.Tactic.ApplyFun"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L331-L349","name":"CategoryTheory.Equalizer.Presieve.Arrows.sheaf_condition","line":331,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.sheaf_condition","doc":"`P` is a sheaf for `Presieve.ofArrows X π`, iff the fork given by `w` is an equalizer. \n\n[Stacks Tag 00VM](https://stacks.math.columbia.edu/tag/00VM)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.sheaf_condition\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">sheaf_condition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> w)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.ofArrows\">Presieve.ofArrows</a> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.IsSheafFor\">Presieve.IsSheafFor</a> <span class=\"fn\">P</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.ofArrows\">Presieve.ofArrows</a> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork.ofι\">Limits.Fork.ofι</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.forkMap\">forkMap</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">⋯</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L316-L329","name":"CategoryTheory.Equalizer.Presieve.Arrows.compatible_iff","line":316,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.compatible_iff","doc":"The family of elements given by `x : FirstObj P S` is compatible iff `firstMap` and `secondMap`\nmap it to the same point.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.compatible_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">compatible_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> w)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.ofArrows\">Presieve.ofArrows</a> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.Arrows.Compatible\">Presieve.Arrows.Compatible</a> <span class=\"fn\">P</span> <span class=\"fn\">π</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Types/Shapes.html#CategoryTheory.Limits.Types.productIso\">Limits.Types.productIso</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span>)</span></span></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.firstMap\">firstMap</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span> <span class=\"fn\">π</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.secondMap\">secondMap</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span> <span class=\"fn\">π</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L311-L314","name":"CategoryTheory.Equalizer.Presieve.Arrows.w","line":311,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.w","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.w\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">w</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> w)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.ofArrows\">Presieve.ofArrows</a> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.forkMap\">forkMap</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.firstMap\">firstMap</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.forkMap\">forkMap</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.secondMap\">secondMap</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L304-L309","name":"CategoryTheory.Equalizer.Presieve.Arrows.secondMap","line":304,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.secondMap","doc":"The second of the two parallel morphisms of the fork diagram, induced by the second projection in\neach pullback.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.secondMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">secondMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> w)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.ofArrows\">Presieve.ofArrows</a> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.SecondObj\">SecondObj</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span> <span class=\"fn\">π</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L297-L302","name":"CategoryTheory.Equalizer.Presieve.Arrows.firstMap","line":297,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.firstMap","doc":"The first of the two parallel morphisms of the fork diagram, induced by the first projection in\neach pullback.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.firstMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">firstMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> w)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.ofArrows\">Presieve.ofArrows</a> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.SecondObj\">SecondObj</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span> <span class=\"fn\">π</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L292-L295","name":"CategoryTheory.Equalizer.Presieve.Arrows.forkMap","line":292,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.forkMap","doc":"The left morphism of the fork diagram.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.forkMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">forkMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> w)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">B</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L285-L285","name":"CategoryTheory.Equalizer.Presieve.Arrows.SecondObj.ext_iff","line":285,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.SecondObj.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.SecondObj.ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">SecondObj</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> w)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.ofArrows\">Presieve.ofArrows</a> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z₁ </span><span class=\"fn\">z₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.SecondObj\">SecondObj</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span> <span class=\"fn\">π</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z₂</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">ij</span> : <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">(fun (<span class=\"fn\">ij</span> : <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\"><span class=\"fn\">ij</span>.1</span>)</span> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\"><span class=\"fn\">ij</span>.2</span>)</span>)</span>)</span></span>)</span> <span class=\"fn\">ij</span> <span class=\"fn\">z₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">(fun (<span class=\"fn\">ij</span> : <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\"><span class=\"fn\">ij</span>.1</span>)</span> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\"><span class=\"fn\">ij</span>.2</span>)</span>)</span>)</span></span>)</span> <span class=\"fn\">ij</span> <span class=\"fn\">z₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L285-L290","name":"CategoryTheory.Equalizer.Presieve.Arrows.SecondObj.ext","line":285,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.SecondObj.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.SecondObj.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">SecondObj</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> w)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.ofArrows\">Presieve.ofArrows</a> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z₁ </span><span class=\"fn\">z₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.SecondObj\">SecondObj</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span> <span class=\"fn\">π</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">ij</span> : <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">(fun (<span class=\"fn\">ij</span> : <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\"><span class=\"fn\">ij</span>.1</span>)</span> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\"><span class=\"fn\">ij</span>.2</span>)</span>)</span>)</span></span>)</span> <span class=\"fn\">ij</span> <span class=\"fn\">z₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">(fun (<span class=\"fn\">ij</span> : <span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">I</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.pullback\">Limits.pullback</a> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\"><span class=\"fn\">ij</span>.1</span>)</span> <span class=\"fn\">(<span class=\"fn\">π</span> <span class=\"fn\"><span class=\"fn\">ij</span>.2</span>)</span>)</span>)</span></span>)</span> <span class=\"fn\">ij</span> <span class=\"fn\">z₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L276-L283","name":"CategoryTheory.Equalizer.Presieve.Arrows.SecondObj","line":276,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.SecondObj","doc":"The rightmost object of the fork diagram of the Stacks entry.\nThe difference between this and `Equalizer.Presieve.SecondObj P (ofArrows X π)` arises if the\nfamily of arrows `π` contains duplicates. The `Presieve.ofArrows` doesn't see those.\n\n\n[Stacks Tag 00VM](https://stacks.math.columbia.edu/tag/00VM) (The rightmost object of the fork diagram there.)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.SecondObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">SecondObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> w)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">B</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">π</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.ofArrows\">Presieve.ofArrows</a> <span class=\"fn\">X</span> <span class=\"fn\">π</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L269-L269","name":"CategoryTheory.Equalizer.Presieve.Arrows.FirstObj.ext_iff","line":269,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.FirstObj.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.FirstObj.ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">FirstObj</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> w)</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z₁ </span><span class=\"fn\">z₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z₂</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span>)</span></span>)</span> <span class=\"fn\">i</span> <span class=\"fn\">z₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span>)</span></span>)</span> <span class=\"fn\">i</span> <span class=\"fn\">z₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L269-L274","name":"CategoryTheory.Equalizer.Presieve.Arrows.FirstObj.ext","line":269,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.FirstObj.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.FirstObj.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">FirstObj</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> w)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z₁ </span><span class=\"fn\">z₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span>)</span></span>)</span> <span class=\"fn\">i</span> <span class=\"fn\">z₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span>)</span></span>)</span> <span class=\"fn\">i</span> <span class=\"fn\">z₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L261-L267","name":"CategoryTheory.Equalizer.Presieve.Arrows.FirstObj","line":261,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.FirstObj","doc":"The middle object of the fork diagram of the Stacks entry.\nThe difference between this and `Equalizer.FirstObj P (ofArrows X π)` arises if the family of\narrows `π` contains duplicates. The `Presieve.ofArrows` doesn't see those.\n\n\n[Stacks Tag 00VM](https://stacks.math.columbia.edu/tag/00VM) (The middle object of the fork diagram there.)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.Arrows.FirstObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">Arrows</span>.<span class=\"name\">FirstObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> w)</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L232-L249","name":"CategoryTheory.Equalizer.Presieve.sheaf_condition","line":232,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.sheaf_condition","doc":"`P` is a sheaf for `R`, iff the fork given by `w` is an equalizer. \n\n[Stacks Tag 00VM](https://stacks.math.columbia.edu/tag/00VM)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.sheaf_condition\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">sheaf_condition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.IsSheafFor\">Presieve.IsSheafFor</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork.ofι\">Limits.Fork.ofι</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.forkMap\">forkMap</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span>)</span> <span class=\"fn\">⋯</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L216-L230","name":"CategoryTheory.Equalizer.Presieve.compatible_iff","line":216,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.compatible_iff","doc":"The family of elements given by `x : FirstObj P S` is compatible iff `firstMap` and `secondMap`\nmap it to the same point.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.compatible_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">compatible_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.firstObjEqFamily\">firstObjEqFamily</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.FamilyOfElements.Compatible\">Compatible</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.firstMap\">firstMap</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.secondMap\">secondMap</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L207-L214","name":"CategoryTheory.Equalizer.Presieve.w","line":207,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.w","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.w\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">w</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.forkMap\">forkMap</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.firstMap\">firstMap</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.forkMap\">forkMap</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.secondMap\">secondMap</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L200-L205","name":"CategoryTheory.Equalizer.Presieve.secondMap","line":200,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.secondMap","doc":"The map `pr₁*` of the Stacks entry. \n\n[Stacks Tag 00VM](https://stacks.math.columbia.edu/tag/00VM) (This is the map `pr₁*` there.)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.secondMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">secondMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.SecondObj\">SecondObj</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L197-L198","name":"CategoryTheory.Equalizer.Presieve.instInhabitedSecondObjBotPresieve","line":197,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.instInhabitedSecondObjBotPresieve","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.instInhabitedSecondObjBotPresieve\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">instInhabitedSecondObjBotPresieve</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Pullback/HasPullback.html#CategoryTheory.Limits.HasPullbacks\">Limits.HasPullbacks</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.SecondObj\">SecondObj</a> <span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L190-L195","name":"CategoryTheory.Equalizer.Presieve.firstMap","line":190,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.firstMap","doc":"The map `pr₀*` of the Stacks entry. \n\n[Stacks Tag 00VM](https://stacks.math.columbia.edu/tag/00VM) (This is the map `pr₀*` there.)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.firstMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">firstMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.SecondObj\">SecondObj</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L180-L188","name":"CategoryTheory.Equalizer.Presieve.SecondObj","line":180,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.SecondObj","doc":"The rightmost object of the fork diagram of the Stacks entry, which\ncontains the data used to check a family of elements for a presieve is compatible.\n\n\n[Stacks Tag 00VM](https://stacks.math.columbia.edu/tag/00VM) (This is the rightmost object of the fork diagram there.)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Presieve.SecondObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Presieve</span>.<span class=\"name\">SecondObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">R</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve.hasPullbacks\">hasPullbacks</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max v u)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L147-L166","name":"CategoryTheory.Equalizer.Sieve.equalizer_sheaf_condition","line":147,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.equalizer_sheaf_condition","doc":"`P` is a sheaf for `S`, iff the fork given by `w` is an equalizer. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.equalizer_sheaf_condition\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Sieve</span>.<span class=\"name\">equalizer_sheaf_condition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.IsSheafFor\">Presieve.IsSheafFor</a> <span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">Limits.IsLimit</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Equalizers.html#CategoryTheory.Limits.Fork.ofι\">Limits.Fork.ofι</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.forkMap\">forkMap</a> <span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span>)</span> <span class=\"fn\">⋯</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L131-L145","name":"CategoryTheory.Equalizer.Sieve.compatible_iff","line":131,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.compatible_iff","doc":"The family of elements given by `x : FirstObj P S` is compatible iff `firstMap` and `secondMap`\nmap it to the same point.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.compatible_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Sieve</span>.<span class=\"name\">compatible_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.firstObjEqFamily\">firstObjEqFamily</a> <span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">x</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.FamilyOfElements.Compatible\">Compatible</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.firstMap\">firstMap</a> <span class=\"fn\">P</span> <span class=\"fn\">S</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.secondMap\">secondMap</a> <span class=\"fn\">P</span> <span class=\"fn\">S</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L127-L129","name":"CategoryTheory.Equalizer.Sieve.w","line":127,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.w","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.w\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Sieve</span>.<span class=\"name\">w</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.forkMap\">forkMap</a> <span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.firstMap\">firstMap</a> <span class=\"fn\">P</span> <span class=\"fn\">S</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.forkMap\">forkMap</a> <span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.secondMap\">secondMap</a> <span class=\"fn\">P</span> <span class=\"fn\">S</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L123-L125","name":"CategoryTheory.Equalizer.Sieve.secondMap","line":123,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.secondMap","doc":"The map `a` of Equations (3,4) [MM92]. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.secondMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Sieve</span>.<span class=\"name\">secondMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.SecondObj\">SecondObj</a> <span class=\"fn\">P</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L120-L121","name":"CategoryTheory.Equalizer.Sieve.instInhabitedSecondObjBotSieve","line":120,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.instInhabitedSecondObjBotSieve","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.instInhabitedSecondObjBotSieve\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Sieve</span>.<span class=\"name\">instInhabitedSecondObjBotSieve</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.SecondObj\">SecondObj</a> <span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L115-L118","name":"CategoryTheory.Equalizer.Sieve.firstMap","line":115,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.firstMap","doc":"The map `p` of Equations (3,4) [MM92]. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.firstMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Sieve</span>.<span class=\"name\">firstMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.SecondObj\">SecondObj</a> <span class=\"fn\">P</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L105-L105","name":"CategoryTheory.Equalizer.Sieve.SecondObj.ext_iff","line":105,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.SecondObj.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.SecondObj.ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Sieve</span>.<span class=\"name\">SecondObj</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z₁ </span><span class=\"fn\">z₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.SecondObj\">SecondObj</a> <span class=\"fn\">P</span> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z₂</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">g</span> : <span class=\"fn\">Z</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>) (<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>) (<span class=\"fn\">hf</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span> <span class=\"fn\">f</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a>\n        <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) × <span class=\"fn\">(<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>) × <span class=\"fn\">(_ : <span class=\"fn\">Z</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f'</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span> <span class=\"fn\">f'</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span></span>)</span>\n        <span class=\"fn\">⟨<span class=\"fn\">Y</span>, <span class=\"fn\">⟨<span class=\"fn\">Z</span>, <span class=\"fn\">⟨<span class=\"fn\">g</span>, <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span>⟩</span>⟩</span>⟩</span> <span class=\"fn\">z₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a>\n        <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) × <span class=\"fn\">(<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>) × <span class=\"fn\">(_ : <span class=\"fn\">Z</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f'</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span> <span class=\"fn\">f'</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span></span>)</span>\n        <span class=\"fn\">⟨<span class=\"fn\">Y</span>, <span class=\"fn\">⟨<span class=\"fn\">Z</span>, <span class=\"fn\">⟨<span class=\"fn\">g</span>, <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span>⟩</span>⟩</span>⟩</span> <span class=\"fn\">z₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L105-L111","name":"CategoryTheory.Equalizer.Sieve.SecondObj.ext","line":105,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.SecondObj.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.SecondObj.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Sieve</span>.<span class=\"name\">SecondObj</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z₁ </span><span class=\"fn\">z₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.SecondObj\">SecondObj</a> <span class=\"fn\">P</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">g</span> : <span class=\"fn\">Z</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>) (<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>) (<span class=\"fn\">hf</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span> <span class=\"fn\">f</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a>\n        <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) × <span class=\"fn\">(<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>) × <span class=\"fn\">(_ : <span class=\"fn\">Z</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f'</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span> <span class=\"fn\">f'</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span></span>)</span>\n        <span class=\"fn\">⟨<span class=\"fn\">Y</span>, <span class=\"fn\">⟨<span class=\"fn\">Z</span>, <span class=\"fn\">⟨<span class=\"fn\">g</span>, <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span>⟩</span>⟩</span>⟩</span> <span class=\"fn\">z₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a>\n        <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) × <span class=\"fn\">(<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>) × <span class=\"fn\">(_ : <span class=\"fn\">Z</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f'</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span> <span class=\"fn\">f'</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span></span>)</span>\n        <span class=\"fn\">⟨<span class=\"fn\">Y</span>, <span class=\"fn\">⟨<span class=\"fn\">Z</span>, <span class=\"fn\">⟨<span class=\"fn\">g</span>, <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span>⟩</span>⟩</span>⟩</span> <span class=\"fn\">z₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L96-L100","name":"CategoryTheory.Equalizer.Sieve.SecondObj","line":96,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.SecondObj","doc":"The rightmost object of the fork diagram of Equation (3) [MM92], which contains the data used\nto check a family is compatible.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.Sieve.SecondObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">Sieve</span>.<span class=\"name\">SecondObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve\">Sieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max v u)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L80-L86","name":"CategoryTheory.Equalizer.forkMap","line":80,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.forkMap","doc":"The left morphism of the fork diagram given in Equation (3) of [MM92], as well as the fork diagram\nof the Stacks entry.\n\n\n[Stacks Tag 00VM](https://stacks.math.columbia.edu/tag/00VM) (This is the left morphism of the fork diagram there.)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.forkMap\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">forkMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L77-L78","name":"CategoryTheory.Equalizer.instInhabitedFirstObjArrowsBotSieve","line":77,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.instInhabitedFirstObjArrowsBotSieve","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.instInhabitedFirstObjArrowsBotSieve\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">instInhabitedFirstObjArrowsBotSieve</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\"><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>.<a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.arrows\">arrows</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L73-L74","name":"CategoryTheory.Equalizer.instInhabitedFirstObjBotPresieve","line":73,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.instInhabitedFirstObjBotPresieve","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.instInhabitedFirstObjBotPresieve\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">instInhabitedFirstObjBotPresieve</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L68-L68","name":"CategoryTheory.Equalizer.firstObjEqFamily_hom","line":68,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.firstObjEqFamily_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.firstObjEqFamily_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">firstObjEqFamily_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝¹</span> : <span class=\"fn\">x✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><span class=\"fn\">R</span> <span class=\"fn\">x✝¹</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.firstObjEqFamily\">firstObjEqFamily</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">t</span> <span class=\"fn\">x✝¹</span> <span class=\"fn\">hf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">R</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span></span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x✝</span>, <span class=\"fn\">⟨<span class=\"fn\">x✝¹</span>, <span class=\"fn\">hf</span>⟩</span>⟩</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L68-L68","name":"CategoryTheory.Equalizer.firstObjEqFamily_inv","line":68,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.firstObjEqFamily_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.firstObjEqFamily_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">firstObjEqFamily_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.FamilyOfElements\">Presieve.FamilyOfElements</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.firstObjEqFamily\">firstObjEqFamily</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.lift\">Limits.Pi.lift</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">R</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.FamilyOfElements\">Presieve.FamilyOfElements</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span></span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L67-L71","name":"CategoryTheory.Equalizer.firstObjEqFamily","line":67,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.firstObjEqFamily","doc":"Show that `FirstObj` is isomorphic to `FamilyOfElements`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.firstObjEqFamily\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">firstObjEqFamily</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/IsSheafFor.html#CategoryTheory.Presieve.FamilyOfElements\">Presieve.FamilyOfElements</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L57-L57","name":"CategoryTheory.Equalizer.FirstObj.ext_iff","line":57,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj.ext_iff\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">FirstObj</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">z₁ </span><span class=\"fn\">z₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z₂</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>) (<span class=\"fn\">hf</span> : <span class=\"fn\"><span class=\"fn\">R</span> <span class=\"fn\">f</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">R</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span></span>)</span> <span class=\"fn\">⟨<span class=\"fn\">Y</span>, <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span>⟩</span> <span class=\"fn\">z₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">R</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span></span>)</span> <span class=\"fn\">⟨<span class=\"fn\">Y</span>, <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span>⟩</span> <span class=\"fn\">z₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L57-L63","name":"CategoryTheory.Equalizer.FirstObj.ext","line":57,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj.ext\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">FirstObj</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">z₁ </span><span class=\"fn\">z₂</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\">FirstObj</a> <span class=\"fn\">P</span> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) (<span class=\"fn\">f</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span>) (<span class=\"fn\">hf</span> : <span class=\"fn\"><span class=\"fn\">R</span> <span class=\"fn\">f</span></span>),\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">R</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span></span>)</span> <span class=\"fn\">⟨<span class=\"fn\">Y</span>, <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span>⟩</span> <span class=\"fn\">z₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>       <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Pi.π\">Limits.Pi.π</a> <span class=\"fn\">(fun (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>) × <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><span class=\"fn\">R</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span></span>)</span> <span class=\"fn\">⟨<span class=\"fn\">Y</span>, <span class=\"fn\">⟨<span class=\"fn\">f</span>, <span class=\"fn\">hf</span>⟩</span>⟩</span> <span class=\"fn\">z₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">z₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.lean#L46-L52","name":"CategoryTheory.Equalizer.FirstObj","line":46,"kind":"def","docLink":"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj","doc":"The middle object of the fork diagram given in Equation (3) of [MM92], as well as the fork diagram\nof the Stacks entry.\n\n\n[Stacks Tag 00VM](https://stacks.math.columbia.edu/tag/00VM) (This is the middle object of the fork diagram there.)"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Sites/EqualizerSheafCondition.html#CategoryTheory.Equalizer.FirstObj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Equalizer</span>.<span class=\"name\">FirstObj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v, u}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">P</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <a href=\"./foundational_types.html\">(Type</a> (max v u))</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">Presieve</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max v u)</div></div>"}]}