{"name":"Aesop.Forward.State.ApplyGoalDiff","instances":[],"imports":["Init","Aesop.Forward.State","Aesop.RuleSet"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Forward/State/ApplyGoalDiff.lean#L49-L57","name":"Aesop.ForwardState.applyGoalDiff.updateHypTypes","line":49,"kind":"def","docLink":"./Aesop/Forward/State/ApplyGoalDiff.html#Aesop.ForwardState.applyGoalDiff.updateHypTypes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/State/ApplyGoalDiff.html#Aesop.ForwardState.applyGoalDiff.updateHypTypes\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardState</span>.<span class=\"name\">applyGoalDiff</span>.<span class=\"name\">updateHypTypes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diff</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hypTypes</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINF\">RPINF</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <span class=\"fn\">(<a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/RPINF/Basic.html#Aesop.RPINF\">RPINF</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Forward/State/ApplyGoalDiff.lean#L43-L47","name":"Aesop.ForwardState.applyGoalDiff.updateTarget","line":43,"kind":"def","docLink":"./Aesop/Forward/State/ApplyGoalDiff.html#Aesop.ForwardState.applyGoalDiff.updateTarget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/State/ApplyGoalDiff.html#Aesop.ForwardState.applyGoalDiff.updateTarget\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardState</span>.<span class=\"name\">applyGoalDiff</span>.<span class=\"name\">updateTarget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rs</span> : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diff</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fs</span> : <a href=\"./Aesop/Forward/State.html#Aesop.ForwardState\">ForwardState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ruleMatches</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> (<a href=\"./Aesop/Forward/State.html#Aesop.ForwardState\">ForwardState</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Forward/State/ApplyGoalDiff.lean#L36-L41","name":"Aesop.ForwardState.applyGoalDiff.addHyp","line":36,"kind":"def","docLink":"./Aesop/Forward/State/ApplyGoalDiff.html#Aesop.ForwardState.applyGoalDiff.addHyp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/State/ApplyGoalDiff.html#Aesop.ForwardState.applyGoalDiff.addHyp\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardState</span>.<span class=\"name\">applyGoalDiff</span>.<span class=\"name\">addHyp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rs</span> : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diff</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fs</span> : <a href=\"./Aesop/Forward/State.html#Aesop.ForwardState\">ForwardState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ruleMatches</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> (<a href=\"./Aesop/Forward/State.html#Aesop.ForwardState\">ForwardState</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Forward/State/ApplyGoalDiff.lean#L33-L34","name":"Aesop.ForwardState.applyGoalDiff.eraseHyp","line":33,"kind":"def","docLink":"./Aesop/Forward/State/ApplyGoalDiff.html#Aesop.ForwardState.applyGoalDiff.eraseHyp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/State/ApplyGoalDiff.html#Aesop.ForwardState.applyGoalDiff.eraseHyp\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardState</span>.<span class=\"name\">applyGoalDiff</span>.<span class=\"name\">eraseHyp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fs</span> : <a href=\"./Aesop/Forward/State.html#Aesop.ForwardState\">ForwardState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> <a href=\"./Aesop/Forward/State.html#Aesop.ForwardState\">ForwardState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/57185dfad68d78356f9462af984882d6f262aa5d/Aesop/Forward/State/ApplyGoalDiff.lean#L14-L57","name":"Aesop.ForwardState.applyGoalDiff","line":14,"kind":"def","docLink":"./Aesop/Forward/State/ApplyGoalDiff.html#Aesop.ForwardState.applyGoalDiff","doc":"Apply a goal diff to the state, adding and removing hypotheses as indicated\nby the diff. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Forward/State/ApplyGoalDiff.html#Aesop.ForwardState.applyGoalDiff\"><span class=\"name\">Aesop</span>.<span class=\"name\">ForwardState</span>.<span class=\"name\">applyGoalDiff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rs</span> : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">diff</span> : <a href=\"./Aesop/RuleTac/GoalDiff.html#Aesop.GoalDiff\">GoalDiff</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fs</span> : <a href=\"./Aesop/Forward/State.html#Aesop.ForwardState\">ForwardState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/BaseM.html#Aesop.BaseM\">BaseM</a> (<a href=\"./Aesop/Forward/State.html#Aesop.ForwardState\">ForwardState</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Forward/Match/Types.html#Aesop.ForwardRuleMatch\">ForwardRuleMatch</a></span>)</span></div></div>"}]}