{"name":"Mathlib.SetTheory.Surreal.Basic","instances":[{"typeNames":["Surreal"],"name":"Surreal.instZero","className":"Zero"},{"typeNames":["Surreal"],"name":"Surreal.instOne","className":"One"},{"typeNames":["Surreal"],"name":"Surreal.instInhabited","className":"Inhabited"},{"typeNames":["Surreal"],"name":"Surreal.instLE","className":"LE"},{"typeNames":["Surreal"],"name":"Surreal.instLT","className":"LT"},{"typeNames":["Surreal"],"name":"Surreal.instAdd","className":"Add"},{"typeNames":["Surreal"],"name":"Surreal.instNeg","className":"Neg"},{"typeNames":["Surreal"],"name":"Surreal.orderedAddCommGroup","className":"OrderedAddCommGroup"},{"typeNames":["Surreal"],"name":"Surreal.instLinearOrderedAddCommGroup","className":"LinearOrderedAddCommGroup"},{"typeNames":["Surreal"],"name":"Surreal.instAddMonoidWithOne","className":"AddMonoidWithOne"}],"imports":["Init","Mathlib.Algebra.Order.Hom.Monoid","Mathlib.SetTheory.Game.Ordinal"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L441-L445","name":"Ordinal.toSurreal","line":441,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Ordinal.toSurreal","doc":"Converts an ordinal into the corresponding surreal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Ordinal.toSurreal\"><span class=\"name\">Ordinal</span>.<span class=\"name\">toSurreal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderEmbedding\">↪o</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L431-L433","name":"Surreal.bddBelow_of_small","line":431,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.bddBelow_of_small","doc":"A small set of surreals is bounded below. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.bddBelow_of_small\"><span class=\"name\">Surreal</span>.<span class=\"name\">bddBelow_of_small</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{u, u + 1}</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#BddBelow\">BddBelow</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L414-L429","name":"Surreal.bddBelow_range_of_small","line":414,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.bddBelow_range_of_small","doc":"A small family of surreals is bounded below. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.bddBelow_range_of_small\"><span class=\"name\">Surreal</span>.<span class=\"name\">bddBelow_range_of_small</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{u, u_1}</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#BddBelow\">BddBelow</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L410-L412","name":"Surreal.bddAbove_of_small","line":410,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.bddAbove_of_small","doc":"A small set of surreals is bounded above. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.bddAbove_of_small\"><span class=\"name\">Surreal</span>.<span class=\"name\">bddAbove_of_small</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{u, u + 1}</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#BddAbove\">BddAbove</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L393-L408","name":"Surreal.bddAbove_range_of_small","line":393,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.bddAbove_range_of_small","doc":"A small family of surreals is bounded above. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.bddAbove_range_of_small\"><span class=\"name\">Surreal</span>.<span class=\"name\">bddAbove_range_of_small</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Small/Defs.html#Small\">Small.{u, u_1}</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#BddAbove\">BddAbove</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L389-L391","name":"Surreal.nat_toGame","line":389,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.nat_toGame","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.nat_toGame\"><span class=\"name\">Surreal</span>.<span class=\"name\">nat_toGame</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.toGame\">toGame</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L385-L387","name":"Surreal.one_toGame","line":385,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.one_toGame","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.one_toGame\"><span class=\"name\">Surreal</span>.<span class=\"name\">one_toGame</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.toGame\">toGame</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L381-L383","name":"Surreal.zero_toGame","line":381,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.zero_toGame","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.zero_toGame\"><span class=\"name\">Surreal</span>.<span class=\"name\">zero_toGame</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.toGame\">toGame</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L374-L379","name":"Surreal.toGame","line":374,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.toGame","doc":"Casts a `Surreal` number into a `Game`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.toGame\"><span class=\"name\">Surreal</span>.<span class=\"name\">toGame</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a> <a href=\"./Mathlib/Algebra/Order/Hom/Monoid.html#OrderAddMonoidHom\">→+o</a> <a href=\"./Mathlib/SetTheory/Game/Basic.html#SetTheory.Game\">SetTheory.Game</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L371-L372","name":"Surreal.instAddMonoidWithOne","line":371,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instAddMonoidWithOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instAddMonoidWithOne\"><span class=\"name\">Surreal</span>.<span class=\"name\">instAddMonoidWithOne</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#AddMonoidWithOne\">AddMonoidWithOne</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L364-L369","name":"Surreal.instLinearOrderedAddCommGroup","line":364,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instLinearOrderedAddCommGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instLinearOrderedAddCommGroup\"><span class=\"name\">Surreal</span>.<span class=\"name\">instLinearOrderedAddCommGroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#LinearOrderedAddCommGroup\">LinearOrderedAddCommGroup</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L362-L362","name":"Surreal.zero_def","line":362,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.zero_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.zero_def\"><span class=\"name\">Surreal</span>.<span class=\"name\">zero_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">0</span> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_zero\">SetTheory.PGame.numeric_zero</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L359-L360","name":"Surreal.mk_sub","line":359,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_sub\"><span class=\"name\">Surreal</span>.<span class=\"name\">mk_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L356-L357","name":"Surreal.mk_add","line":356,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_add\"><span class=\"name\">Surreal</span>.<span class=\"name\">mk_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> (<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span>) <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L337-L354","name":"Surreal.orderedAddCommGroup","line":337,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.orderedAddCommGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.orderedAddCommGroup\"><span class=\"name\">Surreal</span>.<span class=\"name\">orderedAddCommGroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Group/Defs.html#OrderedAddCommGroup\">OrderedAddCommGroup</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L332-L335","name":"Surreal.instNeg","line":332,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instNeg","doc":"Negation for surreal numbers is inherited from pre-game negation:\nthe negation of `{L | R}` is `{-R | -L}`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instNeg\"><span class=\"name\">Surreal</span>.<span class=\"name\">instNeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L326-L330","name":"Surreal.instAdd","line":326,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instAdd","doc":"Addition on surreals is inherited from pre-game addition:\nthe sum of `x = {xL | xR}` and `y = {yL | yR}` is `{xL + y, x + yL | xR + y, x + yR}`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instAdd\"><span class=\"name\">Surreal</span>.<span class=\"name\">instAdd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L322-L324","name":"Surreal.mk_lt_mk_moveRight","line":322,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_lt_mk_moveRight","doc":"Same as `lt_moveRight`, but for `Surreal` instead of `PGame` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_lt_mk_moveRight\"><span class=\"name\">Surreal</span>.<span class=\"name\">mk_lt_mk_moveRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">x</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L318-L320","name":"Surreal.mk_moveLeft_lt_mk","line":318,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_moveLeft_lt_mk","doc":"Same as `moveLeft_lt`, but for `Surreal` instead of `PGame` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_moveLeft_lt_mk\"><span class=\"name\">Surreal</span>.<span class=\"name\">mk_moveLeft_lt_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">x</span> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L316-L316","name":"Surreal.zero_lt_mk","line":316,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.zero_lt_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.zero_lt_mk\"><span class=\"name\">Surreal</span>.<span class=\"name\">zero_lt_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L314-L314","name":"Surreal.mk_lt_mk","line":314,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_lt_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_lt_mk\"><span class=\"name\">Surreal</span>.<span class=\"name\">mk_lt_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L311-L312","name":"Surreal.instLT","line":311,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instLT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instLT\"><span class=\"name\">Surreal</span>.<span class=\"name\">instLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L309-L309","name":"Surreal.zero_le_mk","line":309,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.zero_le_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.zero_le_mk\"><span class=\"name\">Surreal</span>.<span class=\"name\">zero_le_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L306-L307","name":"Surreal.mk_le_mk","line":306,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_le_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_le_mk\"><span class=\"name\">Surreal</span>.<span class=\"name\">mk_le_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L303-L304","name":"Surreal.instLE","line":303,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instLE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instLE\"><span class=\"name\">Surreal</span>.<span class=\"name\">instLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LE\">LE</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L294-L301","name":"Surreal.lift₂","line":294,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.lift₂","doc":"Lift a binary equivalence-respecting function on pre-games to surreals. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.lift₂\"><span class=\"name\">Surreal</span>.<span class=\"name\">lift₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>) → <span class=\"fn\">(<span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span> → <span class=\"fn\">α</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> :\n  <span class=\"fn\">∀ {<span class=\"fn\">x₁</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>} {<span class=\"fn\">y₁</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>} {<span class=\"fn\">x₂</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>} {<span class=\"fn\">y₂</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>} (<span class=\"fn\">ox₁</span> : <span class=\"fn\"><span class=\"fn\">x₁</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)\n    (<span class=\"fn\">oy₁</span> : <span class=\"fn\"><span class=\"fn\">y₁</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>) (<span class=\"fn\">ox₂</span> : <span class=\"fn\"><span class=\"fn\">x₂</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>) (<span class=\"fn\">oy₂</span> : <span class=\"fn\"><span class=\"fn\">y₂</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x₁</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Equiv\">Equiv</a></span> <span class=\"fn\">x₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y₁</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Equiv\">Equiv</a></span> <span class=\"fn\">y₂</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span> <span class=\"fn\">y₁</span> <span class=\"fn\">ox₁</span> <span class=\"fn\">oy₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₂</span> <span class=\"fn\">y₂</span> <span class=\"fn\">ox₂</span> <span class=\"fn\">oy₂</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a> → <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a> → <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L289-L292","name":"Surreal.lift","line":289,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.lift","doc":"Lift an equivalence-respecting function on pre-games to surreals. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.lift\"><span class=\"name\">Surreal</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span> → <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>} (<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>) (<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Equiv\">Equiv</a></span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L287-L287","name":"Surreal.mk_eq_zero","line":287,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_eq_zero\"><span class=\"name\">Surreal</span>.<span class=\"name\">mk_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L285-L285","name":"Surreal.mk_eq_mk","line":285,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_eq_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk_eq_mk\"><span class=\"name\">Surreal</span>.<span class=\"name\">mk_eq_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">x</span> <span class=\"fn\">hx</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\">mk</a> <span class=\"fn\">y</span> <span class=\"fn\">hy</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L282-L283","name":"Surreal.instInhabited","line":282,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instInhabited\"><span class=\"name\">Surreal</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L279-L280","name":"Surreal.instOne","line":279,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instOne\"><span class=\"name\">Surreal</span>.<span class=\"name\">instOne</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#One\">One</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L276-L277","name":"Surreal.instZero","line":276,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.instZero\"><span class=\"name\">Surreal</span>.<span class=\"name\">instZero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Zero\">Zero</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L272-L274","name":"Surreal.mk","line":272,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk","doc":"Construct a surreal number from a numeric pre-game. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal.mk\"><span class=\"name\">Surreal</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">SetTheory.PGame</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L264-L268","name":"Surreal","line":264,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#Surreal","doc":"The type of surreal numbers. These are the numeric pre-games quotiented\nby the equivalence relation `x ≈ y ↔ x ≤ y ∧ y ≤ x`. In the quotient,\nthe order becomes a total order. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\"><span class=\"name\">Surreal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L252-L256","name":"SetTheory.PGame.numeric_toPGame","line":252,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_toPGame","doc":"Ordinal games are numeric. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_toPGame\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">numeric_toPGame</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.<a href=\"./Mathlib/SetTheory/Game/Ordinal.html#Ordinal.toPGame\">toPGame</a></span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L247-L250","name":"SetTheory.PGame.numeric_nat","line":247,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_nat","doc":"Pre-games defined by natural numbers are numeric. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_nat\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">numeric_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L242-L243","name":"SetTheory.PGame.Numeric.sub","line":242,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.sub\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Numeric</span>.<span class=\"name\">sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y</span>).<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L223-L240","name":"SetTheory.PGame.Numeric.add","line":223,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.add\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Numeric</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span> → <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span>).<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L220-L221","name":"SetTheory.PGame.Numeric.le_moveRight","line":220,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.le_moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.le_moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Numeric</span>.<span class=\"name\">le_moveRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L217-L218","name":"SetTheory.PGame.Numeric.lt_moveRight","line":217,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.lt_moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.lt_moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Numeric</span>.<span class=\"name\">lt_moveRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L214-L215","name":"SetTheory.PGame.Numeric.moveLeft_le","line":214,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.moveLeft_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.moveLeft_le\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Numeric</span>.<span class=\"name\">moveLeft_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L211-L212","name":"SetTheory.PGame.Numeric.moveLeft_lt","line":211,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.moveLeft_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.moveLeft_lt\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Numeric</span>.<span class=\"name\">moveLeft_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L202-L207","name":"SetTheory.PGame.insertRight_numeric","line":202,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.insertRight_numeric","doc":"Inserting a larger numeric right option into a numeric game results in a numeric game. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.insertRight_numeric\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">insertRight_numeric</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">x'</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x_num</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x'_num</span> : <span class=\"fn\"><span class=\"fn\">x'</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.insertRight\">insertRight</a></span> <span class=\"fn\">x'</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L189-L200","name":"SetTheory.PGame.insertLeft_numeric","line":189,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.insertLeft_numeric","doc":"Inserting a smaller numeric left option into a numeric game results in a numeric game. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.insertLeft_numeric\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">insertLeft_numeric</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">x'</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x_num</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x'_num</span> : <span class=\"fn\"><span class=\"fn\">x'</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.insertLeft\">insertLeft</a></span> <span class=\"fn\">x'</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L185-L187","name":"SetTheory.PGame.Numeric.neg","line":185,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.neg\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Numeric</span>.<span class=\"name\">neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span> → <span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span>).<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L182-L183","name":"SetTheory.PGame.numeric_one","line":182,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_one\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">numeric_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L179-L180","name":"SetTheory.PGame.numeric_zero","line":179,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">numeric_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L175-L177","name":"SetTheory.PGame.numeric_of_isEmpty_rightMoves","line":175,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_of_isEmpty_rightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_of_isEmpty_rightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">numeric_of_isEmpty_rightMoves</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L171-L173","name":"SetTheory.PGame.numeric_of_isEmpty_leftMoves","line":171,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_of_isEmpty_leftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_of_isEmpty_leftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">numeric_of_isEmpty_leftMoves</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span> → <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L168-L169","name":"SetTheory.PGame.numeric_of_isEmpty","line":168,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_of_isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_of_isEmpty\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">numeric_of_isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L164-L166","name":"SetTheory.PGame.lt_or_equiv_or_gt","line":164,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lt_or_equiv_or_gt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lt_or_equiv_or_gt\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">lt_or_equiv_or_gt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">x</span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L161-L162","name":"SetTheory.PGame.not_fuzzy","line":161,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.not_fuzzy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.not_fuzzy\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">not_fuzzy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.Fuzzy\">Fuzzy</a></span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L151-L159","name":"SetTheory.PGame.lt_def","line":151,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lt_def","doc":"The definition of `x < y` on numeric pre-games, in terms of `<` two moves later. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lt_def\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">lt_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">(∃ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>),\n      <span class=\"fn\">(∀ (<span class=\"fn\">i'</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i'</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a>     <span class=\"fn\">∃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>),\n      <span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>         <span class=\"fn\">∀ (<span class=\"fn\">j'</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L147-L149","name":"SetTheory.PGame.lt_of_exists_le","line":147,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lt_of_exists_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lt_of_exists_le\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">lt_of_exists_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">(∃ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span>) → <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L142-L145","name":"SetTheory.PGame.lt_iff_exists_le","line":142,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lt_iff_exists_le","doc":"Definition of `x < y` on numeric pre-games, in terms of `≤` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lt_iff_exists_le\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">lt_iff_exists_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">(∃ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L135-L140","name":"SetTheory.PGame.le_iff_forall_lt","line":135,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.le_iff_forall_lt","doc":"Definition of `x ≤ y` on numeric pre-games, in terms of `<` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.le_iff_forall_lt\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">le_iff_forall_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L132-L133","name":"SetTheory.PGame.lf_iff_lt","line":132,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lf_iff_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lf_iff_lt\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">lf_iff_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.LF\">LF</a></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L130-L130","name":"SetTheory.PGame.LF.lt","line":130,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.LF.lt","doc":"**Alias** of `SetTheory.PGame.lt_of_lf`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.LF.lt\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">LF</span>.<span class=\"name\">lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.LF\">LF</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L127-L128","name":"SetTheory.PGame.lt_of_lf","line":127,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lt_of_lf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lt_of_lf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">lt_of_lf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.LF\">LF</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L125-L125","name":"SetTheory.PGame.LF.le","line":125,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.LF.le","doc":"**Alias** of `SetTheory.PGame.le_of_lf`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.LF.le\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">LF</span>.<span class=\"name\">le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.LF\">LF</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L122-L123","name":"SetTheory.PGame.le_of_lf","line":122,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.le_of_lf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.le_of_lf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">le_of_lf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.LF\">LF</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L112-L120","name":"SetTheory.PGame.lf_asymm","line":112,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lf_asymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.lf_asymm\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">lf_asymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">oy</span> : <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.LF\">LF</a></span> <span class=\"fn\">y</span></span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/PGame/Order.html#SetTheory.PGame.LF\">LF</a></span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L108-L110","name":"SetTheory.PGame.Relabelling.numeric_congr","line":108,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Relabelling.numeric_congr","doc":"Relabellings preserve being numeric. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Relabelling.numeric_congr\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">numeric_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L100-L106","name":"SetTheory.PGame.Relabelling.numeric_imp","line":100,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Relabelling.numeric_imp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Relabelling.numeric_imp\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Relabelling</span>.<span class=\"name\">numeric_imp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.Relabelling\">Relabelling</a></span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ox</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L91-L98","name":"SetTheory.PGame.numeric_rec","line":91,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_rec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_rec\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">numeric_rec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">H</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">l </span><span class=\"fn\">r</span> : <a href=\"./foundational_types.html\">Type</a> u_1) (<span class=\"fn\">L</span> : <span class=\"fn\"><span class=\"fn\">l</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>) (<span class=\"fn\">R</span> : <span class=\"fn\"><span class=\"fn\">r</span> → <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a></span>),\n    <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\">l</span>) (<span class=\"fn\">j</span> : <span class=\"fn\">r</span>), <span class=\"fn\"><span class=\"fn\">L</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">R</span> <span class=\"fn\">j</span></span>)</span> →\n      <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\">l</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">L</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span> →\n        <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\">r</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">R</span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span> → <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\">l</span>), <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\">L</span> <span class=\"fn\">i</span>)</span></span>)</span> → <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\">r</span>), <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<span class=\"fn\">R</span> <span class=\"fn\">i</span>)</span></span>)</span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.mk\">mk</a> <span class=\"fn\">l</span> <span class=\"fn\">r</span> <span class=\"fn\">L</span> <span class=\"fn\">R</span>)</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span> → <span class=\"fn\"><span class=\"fn\">C</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L84-L87","name":"SetTheory.PGame.Numeric.isOption","line":84,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.isOption","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.isOption\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Numeric</span>.<span class=\"name\">isOption</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x' </span><span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x'</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.IsOption\">IsOption</a></span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x'</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L81-L82","name":"SetTheory.PGame.Numeric.moveRight","line":81,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Numeric</span>.<span class=\"name\">moveRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L78-L79","name":"SetTheory.PGame.Numeric.moveLeft","line":78,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Numeric</span>.<span class=\"name\">moveLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L75-L76","name":"SetTheory.PGame.Numeric.left_lt_right","line":75,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.left_lt_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.left_lt_right\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Numeric</span>.<span class=\"name\">left_lt_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">o</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L71-L73","name":"SetTheory.PGame.Numeric.mk","line":71,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric.mk\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Numeric</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₃</span> : <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L63-L67","name":"SetTheory.PGame.numeric_def","line":63,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.numeric_def\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">numeric_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>) (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">(∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.LeftMoves\">LeftMoves</a></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveLeft\">moveLeft</a></span> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">j</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.RightMoves\">RightMoves</a></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame.moveRight\">moveRight</a></span> <span class=\"fn\">j</span>)</span>.<a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">Numeric</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/SetTheory/Surreal/Basic.lean#L58-L61","name":"SetTheory.PGame.Numeric","line":58,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric","doc":"A pre-game is numeric if everything in the L set is less than everything in the R set,\nand all the elements of L and R are also numeric. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">Numeric</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/PGame/Basic.html#SetTheory.PGame\">PGame</a> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"}]}