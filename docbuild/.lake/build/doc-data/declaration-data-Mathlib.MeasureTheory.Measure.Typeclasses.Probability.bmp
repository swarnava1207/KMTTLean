{"name":"Mathlib.MeasureTheory.Measure.Typeclasses.Probability","instances":[{"typeNames":[],"name":"MeasureTheory.IsZeroOrProbabilityMeasure.toIsFiniteMeasure","className":"MeasureTheory.IsFiniteMeasure"},{"typeNames":["OfNat.ofNat"],"name":"MeasureTheory.instIsZeroOrProbabilityMeasureOfNatMeasure","className":"MeasureTheory.IsZeroOrProbabilityMeasure"},{"typeNames":[],"name":"MeasureTheory.instIsZeroOrProbabilityMeasureOfIsProbabilityMeasure","className":"MeasureTheory.IsZeroOrProbabilityMeasure"},{"typeNames":[],"name":"MeasureTheory.IsProbabilityMeasure.neZero","className":"NeZero"},{"typeNames":["HSMul.hSMul"],"name":"MeasureTheory.isProbabilityMeasureSMul","className":"MeasureTheory.IsProbabilityMeasure"},{"typeNames":["MeasureTheory.Measure.comap"],"name":"MeasureTheory.IsProbabilityMeasure_comap_equiv","className":"MeasureTheory.IsProbabilityMeasure"},{"typeNames":["MeasureTheory.Measure.map"],"name":"MeasureTheory.isProbabilityMeasure_map_up","className":"MeasureTheory.IsProbabilityMeasure"},{"typeNames":["MeasureTheory.Measure.comap"],"name":"MeasureTheory.isProbabilityMeasure_comap_down","className":"MeasureTheory.IsProbabilityMeasure"},{"typeNames":["HSMul.hSMul"],"name":"MeasureTheory.isZeroOrProbabilityMeasureSMul","className":"MeasureTheory.IsZeroOrProbabilityMeasure"},{"typeNames":["MeasureTheory.Measure.map"],"name":"MeasureTheory.instIsZeroOrProbabilityMeasureMap","className":"MeasureTheory.IsZeroOrProbabilityMeasure"}],"imports":["Init","Mathlib.MeasureTheory.Measure.Typeclasses.Finite"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L189-L191","name":"MeasureTheory.inv_measure_univ_smul_eq_self","line":189,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.inv_measure_univ_smul_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.inv_measure_univ_smul_eq_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">inv_measure_univ_smul_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">μ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L183-L187","name":"MeasureTheory.prob_compl_le_one_sub_of_le_prob","line":183,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_le_one_sub_of_le_prob","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_le_one_sub_of_le_prob\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">prob_compl_le_one_sub_of_le_prob</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμs</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s_mble</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">p</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L174-L181","name":"MeasureTheory.prob_compl_lt_one_sub_of_lt_prob","line":174,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_lt_one_sub_of_lt_prob","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_lt_one_sub_of_lt_prob\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">prob_compl_lt_one_sub_of_lt_prob</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hμs</span> : <span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s_mble</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">p</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L169-L172","name":"MeasureTheory.instIsZeroOrProbabilityMeasureMap","line":169,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.instIsZeroOrProbabilityMeasureMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.instIsZeroOrProbabilityMeasureMap\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">instIsZeroOrProbabilityMeasureMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">Measure.map</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L164-L167","name":"MeasureTheory.eq_zero_or_isProbabilityMeasure","line":164,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.eq_zero_or_isProbabilityMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.eq_zero_or_isProbabilityMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">eq_zero_or_isProbabilityMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L152-L159","name":"MeasureTheory.isZeroOrProbabilityMeasureSMul","line":152,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isZeroOrProbabilityMeasureSMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isZeroOrProbabilityMeasureSMul\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">isZeroOrProbabilityMeasureSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> (<span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">μ</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L144-L146","name":"MeasureTheory.isProbabilityMeasure_comap_down","line":144,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isProbabilityMeasure_comap_down","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isProbabilityMeasure_comap_down\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">isProbabilityMeasure_comap_down</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/Comap.html#MeasureTheory.Measure.comap\">Measure.comap</a> <a href=\"./Init/Prelude.html#ULift.down\">ULift.down</a> <span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L141-L142","name":"MeasureTheory.isProbabilityMeasure_map_up","line":141,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isProbabilityMeasure_map_up","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isProbabilityMeasure_map_up\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">isProbabilityMeasure_map_up</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">Measure.map</a> <a href=\"./Init/Prelude.html#ULift.up\">ULift.up</a> <span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L137-L139","name":"MeasurableEmbedding.isProbabilityMeasure_comap","line":137,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasurableEmbedding.isProbabilityMeasure_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasurableEmbedding.isProbabilityMeasure_comap\"><span class=\"name\">MeasurableEmbedding</span>.<span class=\"name\">isProbabilityMeasure_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">MeasureTheory.Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Embedding.html#MeasurableEmbedding\">MeasurableEmbedding</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf'</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">MeasureTheory.IsProbabilityMeasure</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/Comap.html#MeasureTheory.Measure.comap\">MeasureTheory.Measure.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L129-L135","name":"MeasureTheory.isProbabilityMeasure_comap","line":129,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isProbabilityMeasure_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isProbabilityMeasure_comap\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">isProbabilityMeasure_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf'</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf''</span> : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> (<span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.image\">''</a> <span class=\"fn\">s</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/Comap.html#MeasureTheory.Measure.comap\">Measure.comap</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L126-L127","name":"MeasureTheory.ae_iff_prob_eq_one","line":126,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.ae_iff_prob_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.ae_iff_prob_eq_one\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">ae_iff_prob_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hp</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#Measurable\">Measurable</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∀ᵐ</a> (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) <a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">∂</a><span class=\"fn\">μ</span><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Eventually\">,</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">{</a><span class=\"fn\">a</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">:</a> <span class=\"fn\">α</span> <a href=\"./Mathlib/Data/Set/Defs.html#setOf\">|</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span><a href=\"./Mathlib/Data/Set/Defs.html#setOf\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L123-L124","name":"MeasureTheory.mem_ae_iff_prob_eq_one","line":123,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.mem_ae_iff_prob_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.mem_ae_iff_prob_eq_one\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">mem_ae_iff_prob_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/OuterMeasure/AE.html#MeasureTheory.ae\">ae</a> <span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L120-L121","name":"MeasureTheory.mem_ae_iff_prob_eq_one₀","line":120,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.mem_ae_iff_prob_eq_one₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.mem_ae_iff_prob_eq_one₀\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">mem_ae_iff_prob_eq_one₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/OuterMeasure/AE.html#MeasureTheory.ae\">ae</a> <span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L117-L118","name":"MeasureTheory.prob_compl_eq_one_iff","line":117,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_eq_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_eq_one_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">prob_compl_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L114-L115","name":"MeasureTheory.prob_compl_eq_one_iff₀","line":114,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_eq_one_iff₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_eq_one_iff₀\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">prob_compl_eq_one_iff₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L111-L112","name":"MeasureTheory.prob_compl_eq_zero_iff","line":111,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_eq_zero_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">prob_compl_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L108-L109","name":"MeasureTheory.prob_compl_eq_zero_iff₀","line":108,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_eq_zero_iff₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_eq_zero_iff₀\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">prob_compl_eq_zero_iff₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L102-L106","name":"MeasureTheory.prob_compl_eq_one_sub","line":102,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_eq_one_sub","doc":"Note that this is not quite as useful as it looks because the measure takes values in `ℝ≥0∞`.\nThus the subtraction appearing is the truncated subtraction of `ℝ≥0∞`, rather than the\nbetter-behaved subtraction of `ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_eq_one_sub\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">prob_compl_eq_one_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L96-L100","name":"MeasureTheory.prob_compl_eq_one_sub₀","line":96,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_eq_one_sub₀","doc":"Note that this is not quite as useful as it looks because the measure takes values in `ℝ≥0∞`.\nThus the subtraction appearing is the truncated subtraction of `ℝ≥0∞`, rather than the\nbetter-behaved subtraction of `ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_compl_eq_one_sub₀\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">prob_compl_eq_one_sub₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/NullMeasurable.html#MeasureTheory.NullMeasurableSet\">NullMeasurableSet</a> <span class=\"fn\">s</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L93-L94","name":"MeasureTheory.IsProbabilityMeasure_comap_equiv","line":93,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure_comap_equiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure_comap_equiv\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsProbabilityMeasure_comap_equiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">β</span> <a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Embedding.html#MeasurableEquiv\">≃ᵐ</a> <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/Comap.html#MeasureTheory.Measure.comap\">Measure.comap</a> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span> <span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L89-L91","name":"MeasureTheory.isProbabilityMeasure_map","line":89,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isProbabilityMeasure_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isProbabilityMeasure_map\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">isProbabilityMeasure_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#AEMeasurable\">AEMeasurable</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/Measure/Map.html#MeasureTheory.Measure.map\">Measure.map</a> <span class=\"fn\">f</span> <span class=\"fn\">μ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L83-L85","name":"MeasureTheory.isProbabilityMeasureSMul","line":83,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isProbabilityMeasureSMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isProbabilityMeasureSMul\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">isProbabilityMeasureSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> (<span class=\"fn\">(<span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a>)</span><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv.inv\">⁻¹</a> <a href=\"./Mathlib/Algebra/Notation/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">μ</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L80-L81","name":"MeasureTheory.prob_add_prob_compl","line":80,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_add_prob_compl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_add_prob_compl\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">prob_add_prob_compl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L78-L78","name":"MeasureTheory.IsProbabilityMeasure.ae_neBot","line":78,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure.ae_neBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure.ae_neBot\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsProbabilityMeasure</span>.<span class=\"name\">ae_neBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/MeasureTheory/OuterMeasure/AE.html#MeasureTheory.ae\">ae</a> <span class=\"fn\">μ</span>)</span>.<a href=\"./Mathlib/Order/Filter/Defs.html#Filter.NeBot\">NeBot</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L75-L76","name":"MeasureTheory.IsProbabilityMeasure.neZero","line":75,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure.neZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure.neZero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsProbabilityMeasure</span>.<span class=\"name\">neZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L72-L73","name":"MeasureTheory.IsProbabilityMeasure.ne_zero","line":72,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure.ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure.ne_zero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsProbabilityMeasure</span>.<span class=\"name\">ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">μ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L68-L70","name":"MeasureTheory.instIsZeroOrProbabilityMeasureOfIsProbabilityMeasure","line":68,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.instIsZeroOrProbabilityMeasureOfIsProbabilityMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.instIsZeroOrProbabilityMeasureOfIsProbabilityMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">instIsZeroOrProbabilityMeasureOfIsProbabilityMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L65-L66","name":"MeasureTheory.isProbabilityMeasure_iff","line":65,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isProbabilityMeasure_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isProbabilityMeasure_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">isProbabilityMeasure_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L59-L59","name":"MeasureTheory.IsProbabilityMeasure.measure_univ","line":59,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure.measure_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure.measure_univ\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsProbabilityMeasure</span>.<span class=\"name\">measure_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L58-L58","name":"MeasureTheory.IsProbabilityMeasure.mk","line":58,"kind":"ctor","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure.mk\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsProbabilityMeasure</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">measure_univ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\">IsProbabilityMeasure</a> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L57-L59","name":"MeasureTheory.IsProbabilityMeasure","line":57,"kind":"class","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure","doc":"A measure `μ` is called a probability measure if `μ univ = 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsProbabilityMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsProbabilityMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L50-L51","name":"MeasureTheory.instIsZeroOrProbabilityMeasureOfNatMeasure","line":50,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.instIsZeroOrProbabilityMeasureOfNatMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.instIsZeroOrProbabilityMeasureOfNatMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">instIsZeroOrProbabilityMeasureOfNatMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L46-L48","name":"MeasureTheory.IsZeroOrProbabilityMeasure.toIsFiniteMeasure","line":46,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure.toIsFiniteMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure.toIsFiniteMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsZeroOrProbabilityMeasure</span>.<span class=\"name\">toIsFiniteMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Finite.html#MeasureTheory.IsFiniteMeasure\">IsFiniteMeasure</a> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L42-L44","name":"MeasureTheory.one_le_prob_iff","line":42,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.one_le_prob_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.one_le_prob_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">one_le_prob_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L38-L40","name":"MeasureTheory.toReal_prob_le_one","line":38,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.toReal_prob_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.toReal_prob_le_one\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">toReal_prob_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">μ</span> <span class=\"fn\">s</span>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L34-L36","name":"MeasureTheory.prob_le_one","line":34,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.prob_le_one\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">prob_le_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L31-L32","name":"MeasureTheory.isZeroOrProbabilityMeasure_iff","line":31,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isZeroOrProbabilityMeasure_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.isZeroOrProbabilityMeasure_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">isZeroOrProbabilityMeasure_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L29-L29","name":"MeasureTheory.IsZeroOrProbabilityMeasure.measure_univ","line":29,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure.measure_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure.measure_univ\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsZeroOrProbabilityMeasure</span>.<span class=\"name\">measure_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L28-L28","name":"MeasureTheory.IsZeroOrProbabilityMeasure.mk","line":28,"kind":"ctor","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure.mk\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsZeroOrProbabilityMeasure</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">measure_univ</span> : <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.univ\">Set.univ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\">IsZeroOrProbabilityMeasure</a> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/MeasureTheory/Measure/Typeclasses/Probability.lean#L25-L29","name":"MeasureTheory.IsZeroOrProbabilityMeasure","line":25,"kind":"class","docLink":"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure","doc":"A measure `μ` is zero or a probability measure if `μ univ = 0` or `μ univ = 1`. This class\nof measures appears naturally when conditioning on events, and many results which are true for\nprobability measures hold more generally over this class. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/Typeclasses/Probability.html#MeasureTheory.IsZeroOrProbabilityMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">IsZeroOrProbabilityMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m0</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/MeasureSpaceDef.html#MeasureTheory.Measure\">Measure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}