{"name":"ProofWidgets.Component.Panel.Basic","instances":[{"typeNames":["ProofWidgets.PanelWidgetProps"],"name":"ProofWidgets.instRpcEncodablePanelWidgetProps","className":"Lean.Server.RpcEncodable"}],"imports":["Init","ProofWidgets.Compat","ProofWidgets.Component.Basic","Lean.Elab.Tactic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/ProofWidgets4/blob/ea953247aac573c9b5adea60bacd3e085f58aca4/ProofWidgets/Component/Panel/Basic.lean#L43-L51","name":"ProofWidgets.withPanelWidgets","line":43,"kind":"def","docLink":"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.withPanelWidgets","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.withPanelWidgets\"><span class=\"name\">ProofWidgets</span>.<span class=\"name\">withPanelWidgets</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Lean.Elab.Tactic.Tactic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/ProofWidgets4/blob/ea953247aac573c9b5adea60bacd3e085f58aca4/ProofWidgets/Component/Panel/Basic.lean#L31-L41","name":"ProofWidgets.withPanelWidgetsTacticStx","line":31,"kind":"def","docLink":"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.withPanelWidgetsTacticStx","doc":"Display the selected panel widgets in the nested tactic script. For example,\nassuming we have written a `GeometryDisplay` component,\n```lean\nby with_panel_widgets [GeometryDisplay]\n  simp\n  rfl\n```\nwill show the geometry display alongside the usual tactic state throughout the proof.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.withPanelWidgetsTacticStx\"><span class=\"name\">ProofWidgets</span>.<span class=\"name\">withPanelWidgetsTacticStx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/ProofWidgets4/blob/ea953247aac573c9b5adea60bacd3e085f58aca4/ProofWidgets/Component/Panel/Basic.lean#L29-L29","name":"ProofWidgets.instRpcEncodablePanelWidgetProps","line":29,"kind":"instance","docLink":"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.instRpcEncodablePanelWidgetProps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.instRpcEncodablePanelWidgetProps\"><span class=\"name\">ProofWidgets</span>.<span class=\"name\">instRpcEncodablePanelWidgetProps</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Server/Rpc/Basic.html#Lean.Server.RpcEncodable\">Lean.Server.RpcEncodable</a> <a href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps\">PanelWidgetProps</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/ProofWidgets4/blob/ea953247aac573c9b5adea60bacd3e085f58aca4/ProofWidgets/Component/Panel/Basic.lean#L28-L28","name":"ProofWidgets.PanelWidgetProps.selectedLocations","line":28,"kind":"def","docLink":"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps.selectedLocations","doc":"Locations currently selected in the goal state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps.selectedLocations\"><span class=\"name\">ProofWidgets</span>.<span class=\"name\">PanelWidgetProps</span>.<span class=\"name\">selectedLocations</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps\">PanelWidgetProps</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">Lean.SubExpr.GoalsLocation</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/ProofWidgets4/blob/ea953247aac573c9b5adea60bacd3e085f58aca4/ProofWidgets/Component/Panel/Basic.lean#L26-L26","name":"ProofWidgets.PanelWidgetProps.termGoal?","line":26,"kind":"def","docLink":"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps.termGoal?","doc":"The current term-mode goal, if any. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps.termGoal?\"><span class=\"name\">ProofWidgets</span>.<span class=\"name\">PanelWidgetProps</span>.<span class=\"name\">termGoal?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps\">PanelWidgetProps</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Widget/InteractiveGoal.html#Lean.Widget.InteractiveTermGoal\">Lean.Widget.InteractiveTermGoal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/ProofWidgets4/blob/ea953247aac573c9b5adea60bacd3e085f58aca4/ProofWidgets/Component/Panel/Basic.lean#L24-L24","name":"ProofWidgets.PanelWidgetProps.goals","line":24,"kind":"def","docLink":"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps.goals","doc":"The current tactic-mode goals. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps.goals\"><span class=\"name\">ProofWidgets</span>.<span class=\"name\">PanelWidgetProps</span>.<span class=\"name\">goals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps\">PanelWidgetProps</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Widget/InteractiveGoal.html#Lean.Widget.InteractiveGoal\">Lean.Widget.InteractiveGoal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/ProofWidgets4/blob/ea953247aac573c9b5adea60bacd3e085f58aca4/ProofWidgets/Component/Panel/Basic.lean#L22-L22","name":"ProofWidgets.PanelWidgetProps.pos","line":22,"kind":"def","docLink":"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps.pos","doc":"Cursor position in the file at which the widget is being displayed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps.pos\"><span class=\"name\">ProofWidgets</span>.<span class=\"name\">PanelWidgetProps</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps\">PanelWidgetProps</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Lean.Lsp.Position</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/ProofWidgets4/blob/ea953247aac573c9b5adea60bacd3e085f58aca4/ProofWidgets/Component/Panel/Basic.lean#L20-L20","name":"ProofWidgets.PanelWidgetProps.mk","line":20,"kind":"ctor","docLink":"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps.mk\"><span class=\"name\">ProofWidgets</span>.<span class=\"name\">PanelWidgetProps</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pos</span> : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Lean.Lsp.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">goals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Widget/InteractiveGoal.html#Lean.Widget.InteractiveGoal\">Lean.Widget.InteractiveGoal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">termGoal?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Widget/InteractiveGoal.html#Lean.Widget.InteractiveTermGoal\">Lean.Widget.InteractiveTermGoal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">selectedLocations</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/SubExpr.html#Lean.SubExpr.GoalsLocation\">Lean.SubExpr.GoalsLocation</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps\">PanelWidgetProps</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/ProofWidgets4/blob/ea953247aac573c9b5adea60bacd3e085f58aca4/ProofWidgets/Component/Panel/Basic.lean#L8-L29","name":"ProofWidgets.PanelWidgetProps","line":8,"kind":"structure","docLink":"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps","doc":"In the infoview, an **info block** is a top-level collapsible block corresponding to a given\nlocation in a Lean file (e.g. with the header `▼ Basic.lean:12:34`).\n\nA **panel widget** is a component which can appear as a panel inside an info block in the infoview.\nFor example, a tactic state display.\nThe type `PanelWidgetProps` represents the props passed to a panel widget.\nThe TypeScript version is exported as `PanelWidgetProps` from `@leanprover/infoview`.\n\nNote that to be a good citizen which doesn't mess up the infoview layout,\na panel widget should be a block element,\nand should provide some way to collapse it,\nfor example by using `<details>` as the top-level tag. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./ProofWidgets/Component/Panel/Basic.html#ProofWidgets.PanelWidgetProps\"><span class=\"name\">ProofWidgets</span>.<span class=\"name\">PanelWidgetProps</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}