{"name":"Mathlib.Topology.ContinuousMap.Basic","instances":[{"typeNames":["ContinuousMap"],"name":"ContinuousMap.instInhabited","className":"Inhabited"},{"typeNames":["ContinuousMap"],"name":"ContinuousMap.instNontrivialOfNonempty","className":"Nontrivial"},{"typeNames":["Homeomorph"],"name":"Homeomorph.instContinuousMapClass","className":"ContinuousMapClass"}],"imports":["Init","Mathlib.Data.Set.UnionLift","Mathlib.Topology.ContinuousMap.Defs","Mathlib.Topology.Homeomorph.Defs","Mathlib.Topology.Separation.Hausdorff"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L456-L460","name":"Homeomorph.toContinuousMap_comp_symm","line":456,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.toContinuousMap_comp_symm","doc":"Right inverse to a continuous map from a homeomorphism, mirroring `Equiv.self_comp_symm`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.toContinuousMap_comp_symm\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">toContinuousMap_comp_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L450-L454","name":"Homeomorph.symm_comp_toContinuousMap","line":450,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.symm_comp_toContinuousMap","doc":"Left inverse to a continuous map from a homeomorphism, mirroring `Equiv.symm_comp_self`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.symm_comp_toContinuousMap\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">symm_comp_toContinuousMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span>)</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L446-L448","name":"Homeomorph.coe_trans","line":446,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.coe_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.coe_trans\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">coe_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">β</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">γ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.trans\">trans</a></span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L442-L444","name":"Homeomorph.coe_refl","line":442,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.coe_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.coe_refl\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">coe_refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.refl\">Homeomorph.refl</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L436-L436","name":"Homeomorph.toContinuousMap_apply","line":436,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.toContinuousMap_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.toContinuousMap_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">toContinuousMap_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.toContinuousMap\">toContinuousMap</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">e</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L435-L438","name":"Homeomorph.toContinuousMap","line":435,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.toContinuousMap","doc":"The forward direction of a homeomorphism, as a bundled continuous map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.toContinuousMap\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">toContinuousMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\">α</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L432-L433","name":"Homeomorph.instContinuousMapClass","line":432,"kind":"instance","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.instContinuousMapClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Homeomorph.instContinuousMapClass\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">instContinuousMapClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMapClass\">ContinuousMapClass</a> (<span class=\"fn\">α</span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">β</span>) <span class=\"fn\">α</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L414-L414","name":"Topology.IsQuotientMap.liftEquiv_apply","line":414,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.liftEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.liftEquiv_apply\"><span class=\"name\">Topology</span>.<span class=\"name\">IsQuotientMap</span>.<span class=\"name\">liftEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsQuotientMap\">IsQuotientMap</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.FactorsThrough\">Function.FactorsThrough</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.liftEquiv\">liftEquiv</a></span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.lift\">lift</a></span> <span class=\"fn\">↑<span class=\"fn\">g</span></span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L414-L414","name":"Topology.IsQuotientMap.liftEquiv_symm_apply_coe","line":414,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.liftEquiv_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.liftEquiv_symm_apply_coe\"><span class=\"name\">Topology</span>.<span class=\"name\">IsQuotientMap</span>.<span class=\"name\">liftEquiv_symm_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsQuotientMap\">IsQuotientMap</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.liftEquiv\">liftEquiv</a></span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L413-L422","name":"Topology.IsQuotientMap.liftEquiv","line":413,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.liftEquiv","doc":"`IsQuotientMap.lift` as an equivalence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.liftEquiv\"><span class=\"name\">Topology</span>.<span class=\"name\">IsQuotientMap</span>.<span class=\"name\">liftEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsQuotientMap\">IsQuotientMap</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.FactorsThrough\">Function.FactorsThrough</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L397-L411","name":"Topology.IsQuotientMap.lift_comp","line":397,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.lift_comp","doc":"The obvious triangle induced by `IsQuotientMap.lift` commutes:\n```\n     g\n  X --→ Z\n  |   ↗\nf |  / hf.lift g h\n  v /\n  Y\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.lift_comp\"><span class=\"name\">Topology</span>.<span class=\"name\">IsQuotientMap</span>.<span class=\"name\">lift_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsQuotientMap\">IsQuotientMap</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.FactorsThrough\">Function.FactorsThrough</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.lift\">lift</a></span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L391-L391","name":"Topology.IsQuotientMap.lift_apply","line":391,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.lift_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.lift_apply\"><span class=\"name\">Topology</span>.<span class=\"name\">IsQuotientMap</span>.<span class=\"name\">lift_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsQuotientMap\">IsQuotientMap</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.FactorsThrough\">Function.FactorsThrough</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.lift\">lift</a></span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">(fun (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Core.html#Quotient\">Quotient</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Setoid/Basic.html#Setoid.ker\">Setoid.ker</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Mathlib/Data/Quot.html#Quotient.liftOn'\">liftOn'</a></span> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⋯</span></span>)</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.homeomorph\">homeomorph</a></span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span></span>) <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L390-L395","name":"Topology.IsQuotientMap.lift","line":390,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.lift","doc":"Descend a continuous map, which is constant on the fibres, along a quotient map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.lift\"><span class=\"name\">Topology</span>.<span class=\"name\">IsQuotientMap</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsQuotientMap\">IsQuotientMap</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.FactorsThrough\">Function.FactorsThrough</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L376-L376","name":"Topology.IsQuotientMap.homeomorph_apply","line":376,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.homeomorph_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.homeomorph_apply\"><span class=\"name\">Topology</span>.<span class=\"name\">IsQuotientMap</span>.<span class=\"name\">homeomorph_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsQuotientMap\">IsQuotientMap</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Core.html#Quotient\">Quotient</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Setoid/Basic.html#Setoid.ker\">Setoid.ker</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.homeomorph\">homeomorph</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Data/Quot.html#Quotient.liftOn'\">liftOn'</a></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L376-L376","name":"Topology.IsQuotientMap.homeomorph_symm_apply","line":376,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.homeomorph_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.homeomorph_symm_apply\"><span class=\"name\">Topology</span>.<span class=\"name\">IsQuotientMap</span>.<span class=\"name\">homeomorph_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsQuotientMap\">IsQuotientMap</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.homeomorph\">homeomorph</a></span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.mk''\">Quotient.mk''</a> <span class=\"fn\">(<a href=\"./Mathlib/Logic/Function/Basic.html#Function.surjInv\">Function.surjInv</a> <span class=\"fn\">⋯</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L372-L386","name":"Topology.IsQuotientMap.homeomorph","line":372,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.homeomorph","doc":"The homeomorphism from the quotient of a quotient map to its codomain. This is\n`Setoid.quotientKerEquivOfSurjective` as a homeomorphism.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Topology.IsQuotientMap.homeomorph\"><span class=\"name\">Topology</span>.<span class=\"name\">IsQuotientMap</span>.<span class=\"name\">homeomorph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Topology.IsQuotientMap\">IsQuotientMap</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Quotient\">Quotient</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Setoid/Basic.html#Setoid.ker\">Setoid.ker</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L363-L363","name":"Function.RightInverse.homeomorph_apply","line":363,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Function.RightInverse.homeomorph_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Function.RightInverse.homeomorph_apply\"><span class=\"name\">Function</span>.<span class=\"name\">RightInverse</span>.<span class=\"name\">homeomorph_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f'</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.RightInverse\">RightInverse</a> <span class=\"fn\">⇑<span class=\"fn\">f'</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Init/Core.html#Quotient\">Quotient</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Setoid/Basic.html#Setoid.ker\">Setoid.ker</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Function.RightInverse.homeomorph\">homeomorph</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Mathlib/Data/Quot.html#Quotient.liftOn'\">liftOn'</a></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L363-L363","name":"Function.RightInverse.homeomorph_symm_apply","line":363,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Function.RightInverse.homeomorph_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Function.RightInverse.homeomorph_symm_apply\"><span class=\"name\">Function</span>.<span class=\"name\">RightInverse</span>.<span class=\"name\">homeomorph_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f'</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.RightInverse\">RightInverse</a> <span class=\"fn\">⇑<span class=\"fn\">f'</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hf</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Function.RightInverse.homeomorph\">homeomorph</a></span>.<a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph.symm\">symm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Quot.html#Quotient.mk''\">Quotient.mk''</a> <span class=\"fn\">(<span class=\"fn\">f'</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L362-L368","name":"Function.RightInverse.homeomorph","line":362,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#Function.RightInverse.homeomorph","doc":"`Setoid.quotientKerEquivOfRightInverse` as a homeomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#Function.RightInverse.homeomorph\"><span class=\"name\">Function</span>.<span class=\"name\">RightInverse</span>.<span class=\"name\">homeomorph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f'</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.RightInverse\">RightInverse</a> <span class=\"fn\">⇑<span class=\"fn\">f'</span></span> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Quotient\">Quotient</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Setoid/Basic.html#Setoid.ker\">Setoid.ker</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span></span> <a href=\"./Mathlib/Topology/Homeomorph/Defs.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">Y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L350-L353","name":"ContinuousMap.inclusion","line":350,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.inclusion","doc":"`Set.inclusion` as a bundled continuous map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.inclusion\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">inclusion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s </span><span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">s</span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">s</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L344-L346","name":"ContinuousMap.liftCover_restrict'","line":344,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover_restrict'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover_restrict'\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">liftCover_restrict'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">A</span> → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">s</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hF</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">A</span>) (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">ht</span> : <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">A</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">hxi</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>) (<span class=\"fn\">hxj</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span>),\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">s</span> <span class=\"fn\">hs</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hxi</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">t</span> <span class=\"fn\">ht</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hxj</span>⟩</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hA</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\">∃ <span class=\"fn\">i</span> ∈ <span class=\"fn\">A</span>, <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">A</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrict\">restrict</a> <span class=\"fn\">s</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover'\">liftCover'</a> <span class=\"fn\">A</span> <span class=\"fn\">F</span> <span class=\"fn\">hF</span> <span class=\"fn\">hA</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">s</span> <span class=\"fn\">hs</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L339-L342","name":"ContinuousMap.liftCover_coe'","line":339,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover_coe'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover_coe'\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">liftCover_coe'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">A</span> → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">s</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hF</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">A</span>) (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">ht</span> : <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">A</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">hxi</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>) (<span class=\"fn\">hxj</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span>),\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">s</span> <span class=\"fn\">hs</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hxi</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">t</span> <span class=\"fn\">ht</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hxj</span>⟩</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hA</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\">∃ <span class=\"fn\">i</span> ∈ <span class=\"fn\">A</span>, <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">A</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover'\">liftCover'</a> <span class=\"fn\">A</span> <span class=\"fn\">F</span> <span class=\"fn\">hF</span> <span class=\"fn\">hA</span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">s</span> <span class=\"fn\">hs</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L326-L332","name":"ContinuousMap.liftCover'","line":326,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover'","doc":"A family `F s` of continuous maps `C(s, β)`, where (1) the domains `s` are taken from a set `A`\nof sets in `α` which contain a neighbourhood of each point in `α` and (2) the functions `F s` agree\npairwise on intersections, can be glued to construct a continuous map in `C(α, β)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover'\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">liftCover'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">A</span> → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">s</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hF</span> :\n  <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">A</span>) (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">ht</span> : <span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">A</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">hxi</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>) (<span class=\"fn\">hxj</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span>),\n    <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">s</span> <span class=\"fn\">hs</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hxi</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">F</span> <span class=\"fn\">t</span> <span class=\"fn\">ht</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hxj</span>⟩</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hA</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\">∃ <span class=\"fn\">i</span> ∈ <span class=\"fn\">A</span>, <span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L316-L319","name":"ContinuousMap.liftCover_restrict","line":316,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover_restrict\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">liftCover_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">S</span> <span class=\"fn\">i</span>)</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hφ</span> : <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">hxi</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span>) (<span class=\"fn\">hxj</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">j</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hxi</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hxj</span>⟩</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hS</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrict\">restrict</a> <span class=\"fn\">(<span class=\"fn\">S</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover\">liftCover</a> <span class=\"fn\">S</span> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">hS</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L312-L314","name":"ContinuousMap.liftCover_coe","line":312,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover_coe\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">liftCover_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">S</span> <span class=\"fn\">i</span>)</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hφ</span> : <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">hxi</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span>) (<span class=\"fn\">hxj</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">j</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hxi</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hxj</span>⟩</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">hS</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">S</span> <span class=\"fn\">i</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover\">liftCover</a> <span class=\"fn\">S</span> <span class=\"fn\">φ</span> <span class=\"fn\">hφ</span> <span class=\"fn\">hS</span>)</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L299-L308","name":"ContinuousMap.liftCover","line":299,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover","doc":"A family `φ i` of continuous maps `C(S i, β)`, where the domains `S i` contain a neighbourhood\nof each point in `α` and the functions `φ i` agree pairwise on intersections, can be glued to\nconstruct a continuous map in `C(α, β)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.liftCover\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">liftCover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">S</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">S</span> <span class=\"fn\">i</span>)</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hφ</span> : <span class=\"fn\">∀ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">ι</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">hxi</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span>) (<span class=\"fn\">hxj</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">j</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hxi</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">j</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hxj</span>⟩</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hS</span> : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>), <span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">S</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L286-L286","name":"ContinuousMap.restrictPreimage_apply","line":286,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrictPreimage_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrictPreimage_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">restrictPreimage_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrictPreimage\">restrictPreimage</a></span> <span class=\"fn\">s</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./Mathlib/Data/Set/Operations.html#Set.restrictPreimage\">restrictPreimage</a></span> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L285-L289","name":"ContinuousMap.restrictPreimage","line":285,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrictPreimage","doc":"The restriction of a continuous map to the preimage of a set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrictPreimage\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">restrictPreimage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">↑(<span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Operations.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span>)</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L280-L283","name":"ContinuousMap.injective_restrict","line":280,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.injective_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.injective_restrict\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">injective_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation/Hausdorff.html#T2Space\">T2Space</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Dense\">Dense</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrict\">restrict</a> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L275-L278","name":"ContinuousMap.restrict_apply_mk","line":275,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrict_apply_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrict_apply_mk\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">restrict_apply_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hx</span> : <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrict\">restrict</a> <span class=\"fn\">s</span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">hx</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L271-L273","name":"ContinuousMap.restrict_apply","line":271,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrict_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrict_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">restrict_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrict\">restrict</a> <span class=\"fn\">s</span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L267-L269","name":"ContinuousMap.coe_restrict","line":267,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.coe_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.coe_restrict\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">coe_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrict\">restrict</a> <span class=\"fn\">s</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Init/Prelude.html#Subtype.val\">Subtype.val</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L263-L265","name":"ContinuousMap.restrict","line":263,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrict","doc":"The restriction of a continuous function `α → β` to a subset `s` of `α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.restrict\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">s</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L253-L255","name":"ContinuousMap.precomp","line":253,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.precomp","doc":"\"Precomposition\" as a continuous map between dependent types. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.precomp\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">precomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ι</span> : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">(<span class=\"fn\">φ</span> <span class=\"fn\">i</span>)</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L249-L249","name":"ContinuousMap.piMap_apply","line":249,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.piMap_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.piMap_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">piMap_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.piMap\">piMap</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(<span class=\"fn\">a</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L247-L251","name":"ContinuousMap.piMap","line":247,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.piMap","doc":"Combine a collection of bundled continuous maps `C(X i, Y i)` into a bundled continuous map\n`C(∀ i, X i, ∀ i, Y i)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.piMap\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">piMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_8</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">Y</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">Y</span> <span class=\"fn\">i</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L240-L240","name":"ContinuousMap.piEquiv_apply","line":240,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.piEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.piEquiv_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">piEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.piEquiv\">piEquiv</a> <span class=\"fn\">A</span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.pi\">pi</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L240-L240","name":"ContinuousMap.piEquiv_symm_apply","line":240,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.piEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.piEquiv_symm_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">piEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.piEquiv\">piEquiv</a> <span class=\"fn\">A</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.eval\">eval</a> <span class=\"fn\">i</span>)</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L236-L245","name":"ContinuousMap.piEquiv","line":236,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.piEquiv","doc":"Giving a continuous map out of a disjoint union is the same as giving a continuous map out of\neach term\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.piEquiv\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">piEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L231-L231","name":"ContinuousMap.eval_apply","line":231,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.eval_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.eval_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">eval_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.eval\">eval</a> <span class=\"fn\">i</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.eval\">Function.eval</a> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L230-L233","name":"ContinuousMap.eval","line":230,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.eval","doc":"Evaluation at point as a bundled continuous map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.eval\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">j</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L226-L228","name":"ContinuousMap.pi_eval","line":226,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.pi_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.pi_eval\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">pi_eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">A</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.pi\">pi</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L222-L224","name":"ContinuousMap.pi","line":222,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.pi","doc":"Abbreviation for product of continuous maps, which is continuous "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.pi\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L208-L208","name":"ContinuousMap.sigmaEquiv_symm_apply","line":208,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaEquiv_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaEquiv_symm_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">sigmaEquiv_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) × <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaEquiv\">sigmaEquiv</a> <span class=\"fn\">A</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">f</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaMk\">sigmaMk</a> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L208-L208","name":"ContinuousMap.sigmaEquiv_apply","line":208,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaEquiv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaEquiv_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">sigmaEquiv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaEquiv\">sigmaEquiv</a> <span class=\"fn\">A</span> <span class=\"fn\">X</span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigma\">sigma</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L204-L213","name":"ContinuousMap.sigmaEquiv","line":204,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaEquiv","doc":"Giving a continuous map out of a disjoint union is the same as giving a continuous map out of\neach term. This is a version of `Equiv.piCurry` for continuous maps.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaEquiv\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">sigmaEquiv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_6)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) × <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L199-L199","name":"ContinuousMap.sigma_apply","line":199,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigma_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigma_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">sigma_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ig</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) × <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigma\">sigma</a> <span class=\"fn\">f</span>)</span> <span class=\"fn\">ig</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">ig</span>.<a href=\"./Init/Core.html#Sigma.fst\">fst</a></span>)</span> <span class=\"fn\"><span class=\"fn\">ig</span>.<a href=\"./Init/Core.html#Sigma.snd\">snd</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L195-L201","name":"ContinuousMap.sigma","line":195,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigma","doc":"To give a continuous map out of a disjoint union, it suffices to give a continuous map out of\neach term. This is `Sigma.uncurry` for continuous maps.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigma\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">sigma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) × <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">A</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L191-L191","name":"ContinuousMap.sigmaMk_apply","line":191,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaMk_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaMk_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">sigmaMk_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">snd</span> : <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaMk\">sigmaMk</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">snd</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⟨<span class=\"fn\">i</span>, <span class=\"fn\">snd</span>⟩</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L190-L193","name":"ContinuousMap.sigmaMk","line":190,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaMk","doc":"`Sigma.mk i` as a bundled continuous map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.sigmaMk\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">sigmaMk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">I</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <a href=\"./foundational_types.html\">Type</a> u_7</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\">X</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">I</span>) × <span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">i</span></span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L181-L181","name":"ContinuousMap.prodSwap_apply","line":181,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodSwap_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodSwap_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">prodSwap_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodSwap\">prodSwap</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">x</span>.2</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L180-L182","name":"ContinuousMap.prodSwap","line":180,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodSwap","doc":"`Prod.swap` bundled as a `ContinuousMap`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodSwap\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">prodSwap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L176-L178","name":"ContinuousMap.prod_eval","line":176,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prod_eval","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prod_eval\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">prod_eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β₁</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β₂</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodMk\">prodMk</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">a</span></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L172-L172","name":"ContinuousMap.prodMap_apply","line":172,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodMap_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodMap_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">prodMap_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α₁</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">α₂</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">β₁</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β₂</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">α₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β₁</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodMap\">prodMap</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span> <span class=\"fn\">(⇑<span class=\"fn\">g</span>)</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L171-L174","name":"ContinuousMap.prodMap","line":171,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodMap","doc":"Given two continuous maps `f` and `g`, this is the continuous map `(x, y) ↦ (f x, g y)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodMap\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">prodMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₁</span> : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α₂</span> : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α₂</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α₁</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">α₂</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">β₁</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β₂</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β₁</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">α₂</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β₂</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L167-L169","name":"ContinuousMap.prodMk","line":167,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodMk","doc":"Given two continuous maps `f` and `g`, this is the continuous map `x ↦ (f x, g x)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.prodMk\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">prodMk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₁</span> : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β₂</span> : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β₁</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β₂</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β₁</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β₂</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β₁</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β₂</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L163-L163","name":"ContinuousMap.snd_apply","line":163,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.snd_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.snd_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">snd_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.snd\">snd</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.snd\">Prod.snd</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L162-L165","name":"ContinuousMap.snd","line":162,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.snd","doc":"`Prod.snd : (x, y) ↦ y` as a bundled continuous map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.snd\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">snd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L158-L158","name":"ContinuousMap.fst_apply","line":158,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.fst_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.fst_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">fst_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.fst\">fst</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.fst\">Prod.fst</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L157-L160","name":"ContinuousMap.fst","line":157,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.fst","doc":"`Prod.fst : (x, y) ↦ x` as a bundled continuous map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.fst\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">fst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L148-L150","name":"ContinuousMap.instNontrivialOfNonempty","line":148,"kind":"instance","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.instNontrivialOfNonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.instNontrivialOfNonempty\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">instNontrivialOfNonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L143-L146","name":"ContinuousMap.cancel_left","line":143,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.cancel_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.cancel_left\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">cancel_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">γ</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g₁ </span><span class=\"fn\">g₂</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">g₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">g₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L138-L141","name":"ContinuousMap.cancel_right","line":138,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.cancel_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.cancel_right\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">cancel_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f₁ </span><span class=\"fn\">f₂</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">γ</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hg</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f₁</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f₂</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">f₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f₂</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L134-L136","name":"ContinuousMap.comp_const","line":134,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp_const\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">comp_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">γ</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">const</a> <span class=\"fn\">α</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">const</a> <span class=\"fn\">α</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L130-L132","name":"ContinuousMap.const_comp","line":130,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const_comp\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">const_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">γ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">const</a> <span class=\"fn\">β</span> <span class=\"fn\">c</span>)</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">const</a> <span class=\"fn\">α</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L126-L128","name":"ContinuousMap.comp_id","line":126,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp_id\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">comp_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L122-L124","name":"ContinuousMap.id_comp","line":122,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id_comp\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">id_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">β</span>)</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L117-L120","name":"ContinuousMap.comp_assoc","line":117,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp_assoc\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">comp_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">δ</span> : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">δ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">γ</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">δ</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">γ</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L113-L115","name":"ContinuousMap.comp_apply","line":113,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">comp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">γ</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">g</span> <span class=\"fn\">a</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L109-L111","name":"ContinuousMap.coe_comp","line":109,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.coe_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.coe_comp\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">coe_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">γ</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\">comp</a></span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L105-L107","name":"ContinuousMap.comp","line":105,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp","doc":"The composition of continuous maps, as a continuous map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.comp\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">γ</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">γ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">γ</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">γ</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L101-L103","name":"ContinuousMap.const_apply","line":101,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">const_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">const</a> <span class=\"fn\">α</span> <span class=\"fn\">b</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L97-L99","name":"ContinuousMap.id_apply","line":97,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">id_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">α</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L92-L93","name":"ContinuousMap.instInhabited","line":92,"kind":"instance","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.instInhabited\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L88-L88","name":"ContinuousMap.constPi_apply","line":88,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.constPi_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.constPi_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">constPi_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.constPi\">constPi</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">b</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Function.const\">Function.const</a> <span class=\"fn\">α</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L87-L90","name":"ContinuousMap.constPi","line":87,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.constPi","doc":"`Function.const α b` as a bundled continuous function of `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.constPi\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">constPi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L83-L85","name":"ContinuousMap.coe_const","line":83,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.coe_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.coe_const\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">coe_const</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\">const</a> <span class=\"fn\">α</span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Function.const\">Function.const</a> <span class=\"fn\">α</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L79-L81","name":"ContinuousMap.const","line":79,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const","doc":"The constant map as a continuous map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.const\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L75-L77","name":"ContinuousMap.coe_id","line":75,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.coe_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.coe_id\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">coe_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#id\">id</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L71-L73","name":"ContinuousMap.id","line":71,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id","doc":"The identity as a continuous map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.id\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L60-L60","name":"ContinuousMap.equivFnOfDiscrete_symm_apply_apply","line":60,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.equivFnOfDiscrete_symm_apply_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.equivFnOfDiscrete_symm_apply_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">equivFnOfDiscrete_symm_apply_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order.html#DiscreteTopology\">DiscreteTopology</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a✝</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.equivFnOfDiscrete\">equivFnOfDiscrete</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span>.<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">symm</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a✝</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L60-L60","name":"ContinuousMap.equivFnOfDiscrete_apply","line":60,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.equivFnOfDiscrete_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.equivFnOfDiscrete_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">equivFnOfDiscrete_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order.html#DiscreteTopology\">DiscreteTopology</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.equivFnOfDiscrete\">equivFnOfDiscrete</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L57-L65","name":"ContinuousMap.equivFnOfDiscrete","line":57,"kind":"def","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.equivFnOfDiscrete","doc":"The continuous functions from `α` to `β` are the same as the plain functions when `α` is discrete.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.equivFnOfDiscrete\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">equivFnOfDiscrete</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order.html#DiscreteTopology\">DiscreteTopology</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\">α</span> → <span class=\"fn\">β</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L50-L51","name":"ContinuousMap.map_specializes","line":50,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.map_specializes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.map_specializes\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">map_specializes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">x</span> <a href=\"./Mathlib/Topology/Defs/Filter.html#Specializes\">⤳</a> <span class=\"fn\">y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/Topology/Defs/Filter.html#Specializes\">⤳</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L46-L48","name":"ContinuousMap.continuousAt","line":46,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.continuousAt","doc":"Deprecated. Use `map_continuousAt` instead. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#ContinuousMap.continuousAt\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuousAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">C(</a><span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">,</a> <span class=\"fn\">β</span><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMap\">)</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L31-L32","name":"map_continuousWithinAt","line":31,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#map_continuousWithinAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#map_continuousWithinAt\"><span class=\"name\">map_continuousWithinAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMapClass\">ContinuousMapClass</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span> <span class=\"fn\">s</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/Topology/ContinuousMap/Basic.lean#L28-L29","name":"map_continuousAt","line":28,"kind":"theorem","docLink":"./Mathlib/Topology/ContinuousMap/Basic.html#map_continuousAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/ContinuousMap/Basic.html#map_continuousAt\"><span class=\"name\">map_continuousAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">F</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">β</span> : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousMap/Defs.html#ContinuousMapClass\">ContinuousMapClass</a> <span class=\"fn\">F</span> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(⇑<span class=\"fn\">f</span>)</span> <span class=\"fn\">a</span></span></div></div>"}]}