{"name":"Mathlib.CategoryTheory.Monoidal.Comon_","instances":[{"typeNames":["Comon_.X"],"name":"Comon_.instComon_ClassX","className":"Comon_Class"},{"typeNames":["Comon_"],"name":"Comon_.instInhabited","className":"Inhabited"},{"typeNames":["Comon_.Hom"],"name":"Comon_.homInhabited","className":"Inhabited"},{"typeNames":["Comon_"],"name":"Comon_.instCategory","className":"CategoryTheory.Category"},{"typeNames":["Comon_.forget"],"name":"Comon_.forget_faithful","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["Comon_.Hom.hom"],"name":"Comon_.instIsIsoHomOfMapForget","className":"CategoryTheory.IsIso"},{"typeNames":["Comon_.forget"],"name":"Comon_.instReflectsIsomorphismsForget","className":"CategoryTheory.Functor.ReflectsIsomorphisms"},{"typeNames":["Quiver.Hom"],"name":"Comon_.uniqueHomToTrivial","className":"Unique"},{"typeNames":["Comon_"],"name":"Comon_.instHasTerminal","className":"CategoryTheory.Limits.HasLimitsOfShape"},{"typeNames":["Comon_"],"name":"Comon_.monoidal","className":"CategoryTheory.MonoidalCategory"},{"typeNames":["CategoryTheory.MonoidalCategoryStruct.tensorObj"],"name":"Comon_.instComon_ClassTensorObj","className":"Comon_Class"},{"typeNames":["Comon_.forget"],"name":"Comon_.instMonoidalForget","className":"CategoryTheory.Functor.Monoidal"}],"imports":["Init","Mathlib.CategoryTheory.Monoidal.Mon_","Mathlib.CategoryTheory.Monoidal.Braided.Opposite","Mathlib.CategoryTheory.Monoidal.Transport","Mathlib.CategoryTheory.Monoidal.CoherenceLemmas","Mathlib.CategoryTheory.Limits.Shapes.Terminal"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L378-L378","name":"CategoryTheory.Functor.mapComon_obj_counit","line":378,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon_obj_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon_obj_counit\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">mapComon_obj_counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal\">OplaxMonoidal</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon\">mapComon</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal.η\">OplaxMonoidal.η</a> <span class=\"fn\">F</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L378-L378","name":"CategoryTheory.Functor.mapComon_obj_X","line":378,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon_obj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon_obj_X\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">mapComon_obj_X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal\">OplaxMonoidal</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon\">mapComon</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L378-L378","name":"CategoryTheory.Functor.mapComon_map_hom","line":378,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon_map_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon_map_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">mapComon_map_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal\">OplaxMonoidal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon\">mapComon</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L378-L378","name":"CategoryTheory.Functor.mapComon_obj_comul","line":378,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon_obj_comul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon_obj_comul\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">mapComon_obj_comul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal\">OplaxMonoidal</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon\">mapComon</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal.δ\">OplaxMonoidal.δ</a> <span class=\"fn\">F</span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L374-L401","name":"CategoryTheory.Functor.mapComon","line":374,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon","doc":"A oplax monoidal functor takes comonoid objects to comonoid objects.\n\nThat is, a oplax monoidal functor `F : C ⥤ D` induces a functor `Comon_ C ⥤ Comon_ D`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#CategoryTheory.Functor.mapComon\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">Functor</span>.<span class=\"name\">mapComon</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">Category.{v₂, u₂}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">MonoidalCategory</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">F</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal\">OplaxMonoidal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">D</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L364-L364","name":"Comon_.forget_δ","line":364,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_δ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_δ\"><span class=\"name\">Comon_</span>.<span class=\"name\">forget_δ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal.δ\">CategoryTheory.Functor.OplaxMonoidal.δ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget\">forget</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L363-L363","name":"Comon_.forget_μ","line":363,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_μ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_μ\"><span class=\"name\">Comon_</span>.<span class=\"name\">forget_μ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal.μ\">CategoryTheory.Functor.LaxMonoidal.μ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget\">forget</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L362-L362","name":"Comon_.forget_η","line":362,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_η","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_η\"><span class=\"name\">Comon_</span>.<span class=\"name\">forget_η</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.OplaxMonoidal.η\">CategoryTheory.Functor.OplaxMonoidal.η</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget\">forget</a> <span class=\"fn\">C</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L361-L361","name":"Comon_.forget_ε","line":361,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_ε","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_ε\"><span class=\"name\">Comon_</span>.<span class=\"name\">forget_ε</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.LaxMonoidal.ε\">CategoryTheory.Functor.LaxMonoidal.ε</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget\">forget</a> <span class=\"fn\">C</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L353-L357","name":"Comon_.instMonoidalForget","line":353,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instMonoidalForget","doc":"The forgetful functor from `Comon_ C` to `C` is monoidal when `C` is monoidal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instMonoidalForget\"><span class=\"name\">Comon_</span>.<span class=\"name\">instMonoidalForget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget\">forget</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Functor.html#CategoryTheory.Functor.Monoidal\">Monoidal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L339-L351","name":"Comon_.tensorObj_comul","line":339,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.tensorObj_comul","doc":"The comultiplication on the tensor product of two comonoids is\nthe tensor product of the comultiplications followed by the tensor strength\n(to shuffle the factors back into order).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.tensorObj_comul\"><span class=\"name\">Comon_</span>.<span class=\"name\">tensorObj_comul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.MonoidalCategory.tensorμ\">CategoryTheory.MonoidalCategory.tensorμ</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L329-L337","name":"Comon_.tensorObj_comul'","line":329,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.tensorObj_comul'","doc":"Preliminary statement of the comultiplication for a tensor product of comonoids.\nThis version is the definitional equality provided by transport, and not quite as good as\nthe version provided in `tensorObj_comul` below.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.tensorObj_comul'\"><span class=\"name\">Comon_</span>.<span class=\"name\">tensorObj_comul'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>)</span>\n    <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.MonoidalCategory.tensorμ\">CategoryTheory.MonoidalCategory.tensorμ</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>\n        <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L326-L327","name":"Comon_.tensorObj_counit","line":326,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.tensorObj_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.tensorObj_counit\"><span class=\"name\">Comon_</span>.<span class=\"name\">tensorObj_counit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span>)</span>\n    <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L323-L324","name":"Comon_.instComon_ClassTensorObj","line":323,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instComon_ClassTensorObj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instComon_ClassTensorObj\"><span class=\"name\">Comon_</span>.<span class=\"name\">instComon_ClassTensorObj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L321-L321","name":"Comon_.tensorObj_X","line":321,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.tensorObj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.tensorObj_X\"><span class=\"name\">Comon_</span>.<span class=\"name\">tensorObj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">B</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_tensorObj_comul","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorObj_comul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorObj_comul\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_tensorObj_comul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.MonoidalCategory.tensorμ\">CategoryTheory.MonoidalCategory.tensorμ</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_tensorUnit_comul","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorUnit_comul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorUnit_comul\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_tensorUnit_comul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(𝟙_ <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_rightUnitor_hom_hom","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_rightUnitor_hom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_rightUnitor_hom_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_rightUnitor_hom_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_tensorUnit_counit","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorUnit_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorUnit_counit\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_tensorUnit_counit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(𝟙_ <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_tensorUnit_X","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorUnit_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorUnit_X\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_tensorUnit_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(𝟙_ <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">𝟙_ <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_associator_hom_hom","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_associator_hom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_associator_hom_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_associator_hom_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Z</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_associator_inv_hom","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_associator_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_associator_inv_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_associator_inv_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Z</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_rightUnitor_inv_hom","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_rightUnitor_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_rightUnitor_inv_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_rightUnitor_inv_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_leftUnitor_inv_hom","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_leftUnitor_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_leftUnitor_inv_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_leftUnitor_inv_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_whiskerLeft_hom","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_whiskerLeft_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_whiskerLeft_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_whiskerLeft_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">x✝ </span><span class=\"fn\">x✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">x✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x✝¹</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_whiskerRight_hom","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_whiskerRight_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_whiskerRight_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_whiskerRight_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁✝ </span><span class=\"fn\">X₂✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X₁✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">X₂✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\">f</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_tensorObj_X","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorObj_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorObj_X\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_tensorObj_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_leftUnitor_hom_hom","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_leftUnitor_hom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_leftUnitor_hom_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_leftUnitor_hom_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_tensorObj_counit","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorObj_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorObj_counit\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_tensorObj_counit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <span class=\"fn\"><span class=\"fn\">Y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span>)</span>\n    <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L315-L315","name":"Comon_.monoidal_tensorHom_hom","line":315,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorHom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal_tensorHom_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal_tensorHom_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X₁✝ </span><span class=\"fn\">Y₁✝ </span><span class=\"fn\">X₂✝ </span><span class=\"fn\">Y₂✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X₁✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₁✝</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">X₂✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y₂✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L310-L317","name":"Comon_.monoidal","line":310,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal","doc":"Comonoid objects in a braided category form a monoidal category.\n\nThis definition is via transporting back and forth to monoids in the opposite category.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.monoidal\"><span class=\"name\">Comon_</span>.<span class=\"name\">monoidal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Braided/Basic.html#CategoryTheory.BraidedCategory\">CategoryTheory.BraidedCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L303-L303","name":"Comon_.Comon_EquivMon_OpOp_functor","line":303,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp_functor\"><span class=\"name\">Comon_</span>.<span class=\"name\">Comon_EquivMon_OpOp_functor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp\">Comon_EquivMon_OpOp</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.functor\">functor</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp\">Comon_ToMon_OpOp</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L303-L303","name":"Comon_.Comon_EquivMon_OpOp_inverse","line":303,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp_inverse\"><span class=\"name\">Comon_</span>.<span class=\"name\">Comon_EquivMon_OpOp_inverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp\">Comon_EquivMon_OpOp</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.inverse\">inverse</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_\">Mon_OpOpToComon_</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L303-L303","name":"Comon_.Comon_EquivMon_OpOp_unitIso","line":303,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp_unitIso\"><span class=\"name\">Comon_</span>.<span class=\"name\">Comon_EquivMon_OpOp_unitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp\">Comon_EquivMon_OpOp</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.unitIso\">unitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatIso.html#CategoryTheory.NatIso.ofComponents\">CategoryTheory.NatIso.ofComponents</a>\n    <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">CategoryTheory.Iso.refl</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.id\">CategoryTheory.Functor.id</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L303-L303","name":"Comon_.Comon_EquivMon_OpOp_counitIso","line":303,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp_counitIso\"><span class=\"name\">Comon_</span>.<span class=\"name\">Comon_EquivMon_OpOp_counitIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp\">Comon_EquivMon_OpOp</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence.counitIso\">counitIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/NatIso.html#CategoryTheory.NatIso.ofComponents\">CategoryTheory.NatIso.ofComponents</a>\n    <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_\">Mon_</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">CategoryTheory.Iso.refl</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_\">Mon_OpOpToComon_</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor.comp\">comp</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp\">Comon_ToMon_OpOp</a> <span class=\"fn\">C</span>)</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">x</span>)</span></span>)</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L300-L308","name":"Comon_.Comon_EquivMon_OpOp","line":300,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp","doc":"Comonoid objects are contravariantly equivalent to monoid objects in the opposite category.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_EquivMon_OpOp\"><span class=\"name\">Comon_</span>.<span class=\"name\">Comon_EquivMon_OpOp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_\">Mon_</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L292-L292","name":"Comon_.Mon_OpOpToComon__obj","line":292,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon__obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon__obj\"><span class=\"name\">Comon_</span>.<span class=\"name\">Mon_OpOpToComon__obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_\">Mon_</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_\">Mon_OpOpToComon_</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_obj'\">Mon_OpOpToComon_obj'</a> <span class=\"fn\">C</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">A</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L292-L292","name":"Comon_.Mon_OpOpToComon__map_hom","line":292,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon__map_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon__map_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">Mon_OpOpToComon__map_hom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_\">Mon_</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_\">Mon_OpOpToComon_</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_.Hom.hom\">hom</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L289-L298","name":"Comon_.Mon_OpOpToComon_","line":289,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_","doc":"The contravariant functor turning monoid objects in the opposite category into comonoid objects.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_\"><span class=\"name\">Comon_</span>.<span class=\"name\">Mon_OpOpToComon_</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_\">Mon_</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L278-L278","name":"Comon_.Mon_OpOpToComon_obj'_comul","line":278,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_obj'_comul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_obj'_comul\"><span class=\"name\">Comon_</span>.<span class=\"name\">Mon_OpOpToComon_obj'_comul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_\">Mon_</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_obj'\">Mon_OpOpToComon_obj'</a> <span class=\"fn\">C</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_.mul\">mul</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L278-L278","name":"Comon_.Mon_OpOpToComon_obj'_X","line":278,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_obj'_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_obj'_X\"><span class=\"name\">Comon_</span>.<span class=\"name\">Mon_OpOpToComon_obj'_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_\">Mon_</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_obj'\">Mon_OpOpToComon_obj'</a> <span class=\"fn\">C</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L278-L278","name":"Comon_.Mon_OpOpToComon_obj'_counit","line":278,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_obj'_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_obj'_counit\"><span class=\"name\">Comon_</span>.<span class=\"name\">Mon_OpOpToComon_obj'_counit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_\">Mon_</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_obj'\">Mon_OpOpToComon_obj'</a> <span class=\"fn\">C</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_.one\">one</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.unop\">unop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L275-L287","name":"Comon_.Mon_OpOpToComon_obj'","line":275,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_obj'","doc":"Turn a monoid object in the opposite category into a comonoid object.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Mon_OpOpToComon_obj'\"><span class=\"name\">Comon_</span>.<span class=\"name\">Mon_OpOpToComon_obj'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_\">Mon_</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L268-L268","name":"Comon_.Comon_ToMon_OpOp_map","line":268,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_map\"><span class=\"name\">Comon_</span>.<span class=\"name\">Comon_ToMon_OpOp_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp\">Comon_ToMon_OpOp</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">{ <span class=\"fn\">hom</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span>, <span class=\"fn\">one_hom</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">mul_hom</span> := <span class=\"fn\">⋯</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L268-L268","name":"Comon_.Comon_ToMon_OpOp_obj","line":268,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj\"><span class=\"name\">Comon_</span>.<span class=\"name\">Comon_ToMon_OpOp_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp\">Comon_ToMon_OpOp</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj'\">Comon_ToMon_OpOp_obj'</a> <span class=\"fn\">C</span> <span class=\"fn\">A</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L265-L273","name":"Comon_.Comon_ToMon_OpOp","line":265,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp","doc":"The contravariant functor turning comonoid objects into monoid objects in the opposite category.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp\"><span class=\"name\">Comon_</span>.<span class=\"name\">Comon_ToMon_OpOp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_\">Mon_</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L250-L250","name":"Comon_.Comon_ToMon_OpOp_obj'_X","line":250,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj'_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj'_X\"><span class=\"name\">Comon_</span>.<span class=\"name\">Comon_ToMon_OpOp_obj'_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj'\">Comon_ToMon_OpOp_obj'</a> <span class=\"fn\">C</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L250-L250","name":"Comon_.Comon_ToMon_OpOp_obj'_mul","line":250,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj'_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj'_mul\"><span class=\"name\">Comon_</span>.<span class=\"name\">Comon_ToMon_OpOp_obj'_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj'\">Comon_ToMon_OpOp_obj'</a> <span class=\"fn\">C</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_.mul\">mul</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L250-L250","name":"Comon_.Comon_ToMon_OpOp_obj'_one","line":250,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj'_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj'_one\"><span class=\"name\">Comon_</span>.<span class=\"name\">Comon_ToMon_OpOp_obj'_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj'\">Comon_ToMon_OpOp_obj'</a> <span class=\"fn\">C</span> <span class=\"fn\">A</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_.one\">one</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span>.<a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom.op\">op</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L247-L263","name":"Comon_.Comon_ToMon_OpOp_obj'","line":247,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj'","doc":"Turn a comonoid object into a monoid object in the opposite category.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Comon_ToMon_OpOp_obj'\"><span class=\"name\">Comon_</span>.<span class=\"name\">Comon_ToMon_OpOp_obj'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Mon_.html#Mon_\">Mon_</a> <span class=\"fn\">C</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L240-L241","name":"Comon_.instHasTerminal","line":240,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instHasTerminal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instHasTerminal\"><span class=\"name\">Comon_</span>.<span class=\"name\">instHasTerminal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Terminal.html#CategoryTheory.Limits.HasTerminal\">CategoryTheory.Limits.HasTerminal</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L228-L228","name":"Comon_.uniqueHomToTrivial_default_hom","line":228,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.uniqueHomToTrivial_default_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.uniqueHomToTrivial_default_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">uniqueHomToTrivial_default_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited.default\">default</a>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L228-L236","name":"Comon_.uniqueHomToTrivial","line":228,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.uniqueHomToTrivial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.uniqueHomToTrivial\"><span class=\"name\">Comon_</span>.<span class=\"name\">uniqueHomToTrivial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> (<span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.trivial\">trivial</a> <span class=\"fn\">C</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L213-L213","name":"Comon_.mkIso_hom_hom","line":213,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mkIso_hom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mkIso_hom_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">mkIso_hom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_counit</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_comul</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mkIso\">mkIso</a> <span class=\"fn\">f</span> <span class=\"fn\">f_counit</span> <span class=\"fn\">f_comul</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L213-L213","name":"Comon_.mkIso_inv_hom","line":213,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mkIso_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mkIso_inv_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">mkIso_inv_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_counit</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_comul</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mkIso\">mkIso</a> <span class=\"fn\">f</span> <span class=\"fn\">f_counit</span> <span class=\"fn\">f_comul</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L210-L226","name":"Comon_.mkIso","line":210,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mkIso","doc":"Construct an isomorphism of comonoids by giving an isomorphism between the underlying objects\nand checking compatibility with counit and comultiplication only in the forward direction.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mkIso\"><span class=\"name\">Comon_</span>.<span class=\"name\">mkIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_counit</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f_comul</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">M</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">N</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L205-L208","name":"Comon_.instReflectsIsomorphismsForget","line":205,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instReflectsIsomorphismsForget","doc":"The forgetful functor from comonoid objects to the ambient category reflects isomorphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instReflectsIsomorphismsForget\"><span class=\"name\">Comon_</span>.<span class=\"name\">instReflectsIsomorphismsForget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget\">forget</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/ReflectsIso/Basic.html#CategoryTheory.Functor.ReflectsIsomorphisms\">ReflectsIsomorphisms</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L203-L203","name":"Comon_.instIsIsoHomOfMapForget","line":203,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instIsIsoHomOfMapForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instIsIsoHomOfMapForget\"><span class=\"name\">Comon_</span>.<span class=\"name\">instIsIsoHomOfMapForget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">A </span><span class=\"fn\">B</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">A</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget\">forget</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L201-L201","name":"Comon_.forget_faithful","line":201,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_faithful","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_faithful\"><span class=\"name\">Comon_</span>.<span class=\"name\">forget_faithful</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget\">forget</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Functor/FullyFaithful.html#CategoryTheory.Functor.Faithful\">Faithful</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L194-L194","name":"Comon_.forget_obj","line":194,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_obj\"><span class=\"name\">Comon_</span>.<span class=\"name\">forget_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">A</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget\">forget</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L194-L194","name":"Comon_.forget_map","line":194,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget_map\"><span class=\"name\">Comon_</span>.<span class=\"name\">forget_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X✝ </span><span class=\"fn\">Y✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget\">forget</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L193-L197","name":"Comon_.forget","line":193,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget","doc":"The forgetful functor from comonoid objects to the ambient category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.forget\"><span class=\"name\">Comon_</span>.<span class=\"name\">forget</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L185-L187","name":"Comon_.comp_hom'","line":185,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comp_hom'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comp_hom'\"><span class=\"name\">Comon_</span>.<span class=\"name\">comp_hom'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N </span><span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\">N</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">K</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L183-L183","name":"Comon_.id_hom'","line":183,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.id_hom'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.id_hom'\"><span class=\"name\">Comon_</span>.<span class=\"name\">id_hom'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">M</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L181-L181","name":"Comon_.ext_iff","line":181,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.ext_iff\"><span class=\"name\">Comon_</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L181-L181","name":"Comon_.ext","line":181,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.ext\"><span class=\"name\">Comon_</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L176-L179","name":"Comon_.instCategory","line":176,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instCategory\"><span class=\"name\">Comon_</span>.<span class=\"name\">instCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, max u₁ v₁}</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L172-L172","name":"Comon_.comp_hom","line":172,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comp_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comp_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">comp_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N </span><span class=\"fn\">O</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">O</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comp\">comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">g</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L171-L174","name":"Comon_.comp","line":171,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comp","doc":"Composition of morphisms of monoid objects. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comp\"><span class=\"name\">Comon_</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N </span><span class=\"fn\">O</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">O</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">O</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L168-L169","name":"Comon_.homInhabited","line":168,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.homInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.homInhabited\"><span class=\"name\">Comon_</span>.<span class=\"name\">homInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L164-L164","name":"Comon_.id_hom","line":164,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.id_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.id_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">id_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.id\">id</a></span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L163-L166","name":"Comon_.id","line":163,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.id","doc":"The identity morphism on a comonoid object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.id\"><span class=\"name\">Comon_</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L161-L161","name":"Comon_.Hom.hom_comul_assoc","line":161,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom_comul_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom_comul_assoc\"><span class=\"name\">Comon_</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom_comul_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L161-L161","name":"Comon_.Hom.hom_counit_assoc","line":161,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom_counit_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom_counit_assoc\"><span class=\"name\">Comon_</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom_counit_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">𝟙_ <span class=\"fn\">C</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L159-L159","name":"Comon_.Hom.hom_comul","line":159,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom_comul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom_comul\"><span class=\"name\">Comon_</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom_comul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L158-L158","name":"Comon_.Hom.hom_counit","line":158,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom_counit\"><span class=\"name\">Comon_</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom_counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L157-L157","name":"Comon_.Hom.hom","line":157,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom","doc":"The underlying morphism of a morphism of comonoid objects. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">Hom</span>.<span class=\"name\">hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">N</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L155-L155","name":"Comon_.Hom.mk","line":155,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.mk\"><span class=\"name\">Comon_</span>.<span class=\"name\">Hom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hom</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hom_counit</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">hom</span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> := by aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hom_comul</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">hom</span> <span class=\"fn\"><span class=\"fn\">N</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\">hom</span> <span class=\"fn\">hom</span>)</span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">N</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L154-L154","name":"Comon_.Hom.ext","line":154,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.ext\"><span class=\"name\">Comon_</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hom</span> : <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L154-L154","name":"Comon_.Hom.ext_iff","line":154,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.ext_iff\"><span class=\"name\">Comon_</span>.<span class=\"name\">Hom</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\">Hom</a></span> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom.hom\">hom</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L153-L159","name":"Comon_.Hom","line":153,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom","doc":"A morphism of comonoid objects. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.Hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v₁</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L149-L149","name":"Comon_.comul_assoc_flip_assoc","line":149,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_assoc_flip_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_assoc_flip_assoc\"><span class=\"name\">Comon_</span>.<span class=\"name\">comul_assoc_flip_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">h</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L149-L151","name":"Comon_.comul_assoc_flip","line":149,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_assoc_flip","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_assoc_flip\"><span class=\"name\">Comon_</span>.<span class=\"name\">comul_assoc_flip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>)</span>\n      <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L145-L145","name":"Comon_.comul_counit_hom_assoc","line":145,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_counit_hom_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_counit_hom_assoc\"><span class=\"name\">Comon_</span>.<span class=\"name\">comul_counit_hom_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z✝</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">Z</span> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">Z</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L145-L147","name":"Comon_.comul_counit_hom","line":145,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_counit_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_counit_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">comul_counit_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">Z</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L141-L141","name":"Comon_.counit_comul_hom_assoc","line":141,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit_comul_hom_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit_comul_hom_assoc\"><span class=\"name\">Comon_</span>.<span class=\"name\">counit_comul_hom_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z✝</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span> <span class=\"fn\">Z</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z✝</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">Z</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L141-L143","name":"Comon_.counit_comul_hom","line":141,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit_comul_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit_comul_hom\"><span class=\"name\">Comon_</span>.<span class=\"name\">counit_comul_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">Z</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L135-L136","name":"Comon_.instInhabited","line":135,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instInhabited\"><span class=\"name\">Comon_</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L126-L126","name":"Comon_.trivial_X","line":126,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.trivial_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.trivial_X\"><span class=\"name\">Comon_</span>.<span class=\"name\">trivial_X</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.trivial\">trivial</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">𝟙_ <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L126-L126","name":"Comon_.trivial_counit","line":126,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.trivial_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.trivial_counit\"><span class=\"name\">Comon_</span>.<span class=\"name\">trivial_counit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.trivial\">trivial</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L126-L126","name":"Comon_.trivial_comul","line":126,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.trivial_comul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.trivial_comul\"><span class=\"name\">Comon_</span>.<span class=\"name\">trivial_comul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.trivial\">trivial</a> <span class=\"fn\">C</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L124-L133","name":"Comon_.trivial","line":124,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.trivial","doc":"The trivial comonoid object. We later show this is terminal in `Comon_ C`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.trivial\"><span class=\"name\">Comon_</span>.<span class=\"name\">trivial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L115-L120","name":"Comon_.instComon_ClassX","line":115,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instComon_ClassX","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.instComon_ClassX\"><span class=\"name\">Comon_</span>.<span class=\"name\">instComon_ClassX</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\"><span class=\"fn\">M</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L109-L109","name":"Comon_.mk'_X","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mk'_X","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mk'_X\"><span class=\"name\">Comon_</span>.<span class=\"name\">mk'_X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mk'\">mk'</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L109-L109","name":"Comon_.mk'_comul","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mk'_comul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mk'_comul\"><span class=\"name\">Comon_</span>.<span class=\"name\">mk'_comul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mk'\">mk'</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">Comon_Class.comul</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L109-L109","name":"Comon_.mk'_counit","line":109,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mk'_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mk'_counit\"><span class=\"name\">Comon_</span>.<span class=\"name\">mk'_counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mk'\">mk'</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">Comon_Class.counit</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L108-L113","name":"Comon_.mk'","line":108,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mk'","doc":"Construct an object of `Comon_ C` from an object `X : C` and `Comon_Class X` instance. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mk'\"><span class=\"name\">Comon_</span>.<span class=\"name\">mk'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L102-L102","name":"Comon_.comul_assoc_assoc","line":102,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_assoc_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_assoc_assoc\"><span class=\"name\">Comon_</span>.<span class=\"name\">comul_assoc_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a>     <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>\n        <span class=\"fn\">h</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L100-L100","name":"Comon_.comul_counit_assoc","line":100,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_counit_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_counit_assoc\"><span class=\"name\">Comon_</span>.<span class=\"name\">comul_counit_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L100-L100","name":"Comon_.counit_comul_assoc","line":100,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit_comul_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit_comul_assoc\"><span class=\"name\">Comon_</span>.<span class=\"name\">counit_comul_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L98-L98","name":"Comon_.comul_assoc","line":98,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_assoc\"><span class=\"name\">Comon_</span>.<span class=\"name\">comul_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>\n      <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L97-L97","name":"Comon_.comul_counit","line":97,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul_counit\"><span class=\"name\">Comon_</span>.<span class=\"name\">comul_counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L96-L96","name":"Comon_.counit_comul","line":96,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit_comul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit_comul\"><span class=\"name\">Comon_</span>.<span class=\"name\">counit_comul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\">comul</a></span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\">counit</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L95-L95","name":"Comon_.comul","line":95,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul","doc":"The comultiplication morphism of a comonoid object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.comul\"><span class=\"name\">Comon_</span>.<span class=\"name\">comul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L93-L93","name":"Comon_.counit","line":93,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit","doc":"The counit of a comonoid object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.counit\"><span class=\"name\">Comon_</span>.<span class=\"name\">counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">self</span>.<a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\">X</a></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">𝟙_ <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L91-L91","name":"Comon_.X","line":91,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X","doc":"The underlying object of a comonoid object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.X\"><span class=\"name\">Comon_</span>.<span class=\"name\">X</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">C</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L89-L89","name":"Comon_.mk","line":89,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_.mk\"><span class=\"name\">Comon_</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">counit</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">𝟙_ <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">comul</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">counit_comul</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">comul</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\">counit</span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">comul_counit</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">comul</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <span class=\"fn\">counit</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">comul_assoc</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">comul</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <span class=\"fn\">comul</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">comul</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\">comul</span> <span class=\"fn\">X</span>)</span>\n        <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\">Comon_</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L85-L98","name":"Comon_","line":85,"kind":"structure","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_","doc":"A comonoid object internal to a monoidal category.\n\nWhen the monoidal category is preadditive, this is also sometimes called a \"coalgebra object\".\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_\"><span class=\"name\">Comon_</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u₁ v₁)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L81-L81","name":"IsComon_Hom.hom_comul_assoc","line":81,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom.hom_comul_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom.hom_comul_assoc\"><span class=\"name\">IsComon_Hom</span>.<span class=\"name\">hom_comul_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝²</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝³</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom\">IsComon_Hom</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">N</span> <span class=\"fn\">N</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">Comon_Class.comul</a> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">Comon_Class.comul</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\">f</span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L81-L81","name":"IsComon_Hom.hom_counit_assoc","line":81,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom.hom_counit_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom.hom_counit_assoc\"><span class=\"name\">IsComon_Hom</span>.<span class=\"name\">hom_counit_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝²</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝³</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom\">IsComon_Hom</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">𝟙_ <span class=\"fn\">C</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">Comon_Class.counit</a> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">Comon_Class.counit</a> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L79-L79","name":"IsComon_Hom.hom_comul","line":79,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom.hom_comul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom.hom_comul\"><span class=\"name\">IsComon_Hom</span>.<span class=\"name\">hom_comul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝²</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝³</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom\">IsComon_Hom</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">Comon_Class.comul</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">Comon_Class.comul</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\">f</span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L78-L78","name":"IsComon_Hom.hom_counit","line":78,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom.hom_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom.hom_counit\"><span class=\"name\">IsComon_Hom</span>.<span class=\"name\">hom_counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝²</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝³</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom\">IsComon_Hom</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">Comon_Class.counit</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">Comon_Class.counit</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L77-L77","name":"IsComon_Hom.mk","line":77,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom.mk\"><span class=\"name\">IsComon_Hom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hom_counit</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">Comon_Class.counit</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">Comon_Class.counit</a> := by aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hom_comul</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">Comon_Class.comul</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">Comon_Class.comul</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorHom\">CategoryTheory.MonoidalCategoryStruct.tensorHom</a> <span class=\"fn\">f</span> <span class=\"fn\">f</span>)</span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom\">IsComon_Hom</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L76-L79","name":"IsComon_Hom","line":76,"kind":"class","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom","doc":"The property that a morphism between comonoid objects is a comonoid morphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#IsComon_Hom\"><span class=\"name\">IsComon_Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">M </span><span class=\"fn\">N</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">M</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">N</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L65-L65","name":"Comon_Class.comul_assoc_assoc","line":65,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_assoc_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_assoc_assoc\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">comul_assoc_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a> <span class=\"fn\">X</span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L65-L68","name":"Comon_Class.comul_assoc","line":65,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_assoc\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">comul_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a> <span class=\"fn\">X</span>)</span>\n      <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L62-L62","name":"Comon_Class.comul_counit_assoc","line":62,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_counit_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_counit_assoc\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">comul_counit_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">counit</a>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L62-L63","name":"Comon_Class.comul_counit","line":62,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_counit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_counit\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">comul_counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">counit</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L59-L59","name":"Comon_Class.counit_comul_assoc","line":59,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit_comul_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit_comul_assoc\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">counit_comul_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">counit</a> <span class=\"fn\">X</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L59-L60","name":"Comon_Class.counit_comul","line":59,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit_comul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit_comul\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">counit_comul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">counit</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L57-L57","name":"Comon_Class.comul_counit'_assoc","line":57,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_counit'_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_counit'_assoc\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">comul_counit'_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">counit</a>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L57-L57","name":"Comon_Class.comul_assoc'_assoc","line":57,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_assoc'_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_assoc'_assoc\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">comul_assoc'_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a> <span class=\"fn\">X</span>)</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span> <span class=\"fn\">h</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L57-L57","name":"Comon_Class.counit_comul'_assoc","line":57,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit_comul'_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit_comul'_assoc\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">counit_comul'_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">(𝟙_ <span class=\"fn\">C</span>)</span> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">counit</a> <span class=\"fn\">X</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L54-L54","name":"Comon_Class.«termε[_]»","line":54,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.«termε[_]»","doc":"The counit morphism of a comonoid object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.«termε[_]»\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">«termε[_]»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L53-L53","name":"Comon_Class.termε","line":53,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.termε","doc":"The counit morphism of a comonoid object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.termε\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">termε</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L52-L52","name":"Comon_Class.«termΔ[_]»","line":52,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.«termΔ[_]»","doc":"The comultiplication morphism of a comonoid object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.«termΔ[_]»\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">«termΔ[_]»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L51-L51","name":"Comon_Class.termΔ","line":51,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.termΔ","doc":"The comultiplication morphism of a comonoid object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.termΔ\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">termΔ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L47-L47","name":"Comon_Class.comul_assoc'","line":47,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_assoc'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_assoc'\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">comul_assoc'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a> <span class=\"fn\">X</span>)</span>\n      <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L46-L46","name":"Comon_Class.comul_counit'","line":46,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_counit'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul_counit'\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">comul_counit'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">counit</a>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L45-L45","name":"Comon_Class.counit_comul'","line":45,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit_comul'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit_comul'\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">counit_comul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\">comul</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\">counit</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L42-L42","name":"Comon_Class.comul","line":42,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul","doc":"The comultiplication morphism of a comonoid object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.comul\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">comul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L40-L40","name":"Comon_Class.counit","line":40,"kind":"def","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit","doc":"The counit morphism of a comonoid object. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.counit\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">counit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">inst✝¹</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">𝟙_ <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L38-L38","name":"Comon_Class.mk","line":38,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class.mk\"><span class=\"name\">Comon_Class</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">counit</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">𝟙_ <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">comul</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.tensorObj\">CategoryTheory.MonoidalCategoryStruct.tensorObj</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">counit_comul'</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">comul</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\">counit</span> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.leftUnitor\">CategoryTheory.MonoidalCategoryStruct.leftUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">comul_counit'</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">comul</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <span class=\"fn\">counit</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.rightUnitor\">CategoryTheory.MonoidalCategoryStruct.rightUnitor</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.inv\">inv</a></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">comul_assoc'</span> :\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">comul</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerLeft\">CategoryTheory.MonoidalCategoryStruct.whiskerLeft</a> <span class=\"fn\">X</span> <span class=\"fn\">comul</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">comul</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.whiskerRight\">CategoryTheory.MonoidalCategoryStruct.whiskerRight</a> <span class=\"fn\">comul</span> <span class=\"fn\">X</span>)</span>\n        <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategoryStruct.associator\">CategoryTheory.MonoidalCategoryStruct.associator</a> <span class=\"fn\">X</span> <span class=\"fn\">X</span> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.hom\">hom</a></span>)</span></span> := by\n  aesop_cat)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\">Comon_Class</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/CategoryTheory/Monoidal/Comon_.lean#L34-L47","name":"Comon_Class","line":34,"kind":"class","docLink":"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class","doc":"A comonoid object internal to a monoidal category.\n\nWhen the monoidal category is preadditive, this is also sometimes called a \"coalgebra object\".\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Monoidal/Comon_.html#Comon_Class\"><span class=\"name\">Comon_Class</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v₁, u₁}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Monoidal/Category.html#CategoryTheory.MonoidalCategory\">CategoryTheory.MonoidalCategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\">C</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v₁</div></div>"}]}