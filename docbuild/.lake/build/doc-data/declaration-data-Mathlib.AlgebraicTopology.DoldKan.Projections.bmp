{"name":"Mathlib.AlgebraicTopology.DoldKan.Projections","instances":[],"imports":["Init","Mathlib.AlgebraicTopology.DoldKan.Faces","Mathlib.CategoryTheory.Idempotents.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L185-L190","name":"AlgebraicTopology.DoldKan.map_Q","line":185,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.map_Q","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.map_Q\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">map_Q</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">Additive</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L176-L183","name":"AlgebraicTopology.DoldKan.map_P","line":176,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.map_P","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.map_P\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">map_P</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_4, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">D</span> : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_3, u_2}</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">D</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">G</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">C</span> <span class=\"fn\">D</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/CategoryTheory/Preadditive/AdditiveFunctor.html#CategoryTheory.Functor.Additive\">Additive</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.map\">map</a></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L172-L172","name":"AlgebraicTopology.DoldKan.natTransQ_app","line":172,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.natTransQ_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.natTransQ_app\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">natTransQ_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.natTransQ\">natTransQ</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L171-L174","name":"AlgebraicTopology.DoldKan.natTransQ","line":171,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.natTransQ","doc":"For each `q`, `Q q` is a natural transformation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.natTransQ\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">natTransQ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.alternatingFaceMapComplex\">alternatingFaceMapComplex</a> <span class=\"fn\">C</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.alternatingFaceMapComplex\">alternatingFaceMapComplex</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L163-L163","name":"AlgebraicTopology.DoldKan.Q_f_naturality_assoc","line":163,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_f_naturality_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_f_naturality_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Q_f_naturality_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L163-L169","name":"AlgebraicTopology.DoldKan.Q_f_naturality","line":163,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_f_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_f_naturality\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Q_f_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L158-L158","name":"AlgebraicTopology.DoldKan.P_f_naturality_assoc","line":158,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_f_naturality_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_f_naturality_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">P_f_naturality_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">Y</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L158-L161","name":"AlgebraicTopology.DoldKan.P_f_naturality","line":158,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_f_naturality","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_f_naturality\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">P_f_naturality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">f</span> : <span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L146-L146","name":"AlgebraicTopology.DoldKan.natTransP_app","line":146,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.natTransP_app","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.natTransP_app\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">natTransP_app</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x✝</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.natTransP\">natTransP</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/CategoryTheory/NatTrans.html#CategoryTheory.NatTrans.app\">app</a></span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L145-L156","name":"AlgebraicTopology.DoldKan.natTransP","line":145,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.natTransP","doc":"For each `q`, `P q` is a natural transformation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.natTransP\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">natTransP</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.alternatingFaceMapComplex\">alternatingFaceMapComplex</a> <span class=\"fn\">C</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.alternatingFaceMapComplex\">alternatingFaceMapComplex</a> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L140-L140","name":"AlgebraicTopology.DoldKan.Q_idem_assoc","line":140,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_idem_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_idem_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Q_idem_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L140-L143","name":"AlgebraicTopology.DoldKan.Q_idem","line":140,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_idem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_idem\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Q_idem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L135-L135","name":"AlgebraicTopology.DoldKan.P_idem_assoc","line":135,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_idem_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_idem_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">P_idem_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#ChainComplex\">ChainComplex</a> <span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L135-L138","name":"AlgebraicTopology.DoldKan.P_idem","line":135,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_idem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_idem\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">P_idem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L131-L131","name":"AlgebraicTopology.DoldKan.Q_f_idem_assoc","line":131,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_f_idem_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_f_idem_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Q_f_idem_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L131-L133","name":"AlgebraicTopology.DoldKan.Q_f_idem","line":131,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_f_idem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_f_idem\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Q_f_idem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L125-L125","name":"AlgebraicTopology.DoldKan.P_f_idem_assoc","line":125,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_f_idem_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_f_idem_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">P_f_idem_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L125-L129","name":"AlgebraicTopology.DoldKan.P_f_idem","line":125,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_f_idem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_f_idem\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">P_f_idem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L116-L123","name":"AlgebraicTopology.DoldKan.comp_P_eq_self_iff","line":116,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.comp_P_eq_self_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.comp_P_eq_self_iff\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">comp_P_eq_self_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Faces.html#AlgebraicTopology.DoldKan.HigherFacesVanish\">HigherFacesVanish</a> <span class=\"fn\">q</span> <span class=\"fn\">φ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L95-L95","name":"AlgebraicTopology.DoldKan.HigherFacesVanish.comp_P_eq_self_assoc","line":95,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.HigherFacesVanish.comp_P_eq_self_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.HigherFacesVanish.comp_P_eq_self_assoc\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">HigherFacesVanish</span>.<span class=\"name\">comp_P_eq_self_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Faces.html#AlgebraicTopology.DoldKan.HigherFacesVanish\">HigherFacesVanish</a> <span class=\"fn\">q</span> <span class=\"fn\">φ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Z</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L95-L112","name":"AlgebraicTopology.DoldKan.HigherFacesVanish.comp_P_eq_self","line":95,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.HigherFacesVanish.comp_P_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.HigherFacesVanish.comp_P_eq_self\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">HigherFacesVanish</span>.<span class=\"name\">comp_P_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Y</span> : <span class=\"fn\">C</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">φ</span> : <span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Faces.html#AlgebraicTopology.DoldKan.HigherFacesVanish\">HigherFacesVanish</a> <span class=\"fn\">q</span> <span class=\"fn\">φ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">φ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L87-L93","name":"AlgebraicTopology.DoldKan.HigherFacesVanish.of_P","line":87,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.HigherFacesVanish.of_P","doc":"This lemma expresses the vanishing of\n`(P q).f (n+1) ≫ X.δ k : X _⦋n+1⦌ ⟶ X _⦋n⦌` when `k≠0` and `k≥n-q+2` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.HigherFacesVanish.of_P\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">HigherFacesVanish</span>.<span class=\"name\">of_P</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Faces.html#AlgebraicTopology.DoldKan.HigherFacesVanish\">HigherFacesVanish</a> <span class=\"fn\">q</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L80-L83","name":"AlgebraicTopology.DoldKan.Q_f_0_eq","line":80,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_f_0_eq","doc":"All the `Q q` coincide with `0` in degree 0. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_f_0_eq\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Q_f_0_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L76-L78","name":"AlgebraicTopology.DoldKan.Q_succ","line":76,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_succ\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Q_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> (<span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.Hσ\">Hσ</a> <span class=\"fn\">q</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L72-L74","name":"AlgebraicTopology.DoldKan.Q_zero","line":72,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q_zero\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Q_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L69-L70","name":"AlgebraicTopology.DoldKan.P_add_Q_f","line":69,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_add_Q_f","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_add_Q_f\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">P_add_Q_f</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span>.<a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor.obj\">obj</a></span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/SimplexCategory/Defs.html#SimplexCategory.mk\">SimplexCategory.mk</a> <span class=\"fn\">n</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L65-L67","name":"AlgebraicTopology.DoldKan.P_add_Q","line":65,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_add_Q","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_add_Q\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">P_add_Q</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\">Q</a> <span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L61-L63","name":"AlgebraicTopology.DoldKan.Q","line":61,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q","doc":"`Q q` is the complement projection associated to `P q` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.Q\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">Q</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L53-L59","name":"AlgebraicTopology.DoldKan.P_f_0_eq","line":53,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_f_0_eq","doc":"All the `P q` coincide with `𝟙 _` in degree 0. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_f_0_eq\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">P_f_0_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.Hom.f\">f</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span>)</span>.<a href=\"./Mathlib/Algebra/Homology/HomologicalComplex.html#HomologicalComplex.X\">X</a></span> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L51-L51","name":"AlgebraicTopology.DoldKan.P_succ","line":51,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_succ\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">P_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">q</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> (<span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">q</span>)</span> (<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Homotopies.html#AlgebraicTopology.DoldKan.Hσ\">Hσ</a> <span class=\"fn\">q</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L50-L50","name":"AlgebraicTopology.DoldKan.P_zero","line":50,"kind":"theorem","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P_zero\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">P_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\">P</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/0cc1f970691e01afdf9d8bb9f8307cd7b6aca12a/Mathlib/AlgebraicTopology/DoldKan/Projections.lean#L44-L48","name":"AlgebraicTopology.DoldKan.P","line":44,"kind":"def","docLink":"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P","doc":"This is the inductive definition of the projections `P q : K[X] ⟶ K[X]`,\nwith `P 0 := 𝟙 _` and `P (q+1) := P q ≫ (𝟙 _ + Hσ q)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/AlgebraicTopology/DoldKan/Projections.html#AlgebraicTopology.DoldKan.P\"><span class=\"name\">AlgebraicTopology</span>.<span class=\"name\">DoldKan</span>.<span class=\"name\">P</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">C</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_2, u_1}</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Basic.html#CategoryTheory.Preadditive\">CategoryTheory.Preadditive</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/SimplicialObject/Basic.html#CategoryTheory.SimplicialObject\">CategoryTheory.SimplicialObject</a> <span class=\"fn\">C</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → (<span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/AlgebraicTopology/AlternatingFaceMapComplex.html#AlgebraicTopology.AlternatingFaceMapComplex.obj\">AlternatingFaceMapComplex.obj</a> <span class=\"fn\">X</span></span>)</span></div></div>"}]}